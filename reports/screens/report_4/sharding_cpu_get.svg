<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (4,415 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="10.0" y="995.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 0.45%)</title><rect x="10.3" y="995.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="10.3" y="979.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.3" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (19 samples, 0.43%)</title><rect x="10.5" y="979.0" width="5.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.5" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (17 samples, 0.39%)</title><rect x="11.1" y="963.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.1" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (11 samples, 0.25%)</title><rect x="11.6" y="947.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.6" y="958.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="14.5" y="947.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.5" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="14.8" y="947.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="17.8" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="15.1" y="947.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="18.1" y="958.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.14%)</title><rect x="15.6" y="995.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="18.6" y="1006.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.11%)</title><rect x="17.2" y="995.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="20.2" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="17.2" y="979.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.2" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.07%)</title><rect x="17.2" y="963.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.2" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="17.2" y="947.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.2" y="958.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.02%)</title><rect x="17.2" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.2" y="942.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.02%)</title><rect x="17.5" y="931.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.5" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="17.8" y="931.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="20.8" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="18.0" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.0" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="18.3" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.32%)</title><rect x="18.6" y="995.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="21.6" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="18.6" y="979.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="21.6" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="18.8" y="979.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="21.8" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="18.8" y="963.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="21.8" y="974.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="19.1" y="979.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.1" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="19.4" y="979.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="22.4" y="990.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="19.6" y="979.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="22.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="19.6" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="22.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="19.6" y="947.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="22.6" y="958.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="19.6" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.6" y="942.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.02%)</title><rect x="19.6" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="22.6" y="926.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="19.6" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.6" y="910.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="19.6" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.6" y="894.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="19.6" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.6" y="878.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (9 samples, 0.20%)</title><rect x="19.9" y="979.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="22.9" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.16%)</title><rect x="20.4" y="963.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.16%)</title><rect x="20.4" y="947.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="23.4" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.14%)</title><rect x="20.7" y="931.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.7" y="942.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.14%)</title><rect x="20.7" y="915.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.7" y="926.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.09%)</title><rect x="21.2" y="899.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.2" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="21.2" y="883.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="24.2" y="894.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.02%)</title><rect x="21.2" y="867.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.2" y="878.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="21.2" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="24.2" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="21.2" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.2" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="21.5" y="867.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="24.5" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="21.5" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.5" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="21.5" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.5" y="846.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="21.8" y="883.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="24.8" y="894.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="22.0" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.0" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (23 samples, 0.52%)</title><rect x="22.3" y="995.0" width="6.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="25.3" y="1006.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="22.3" y="979.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="25.3" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="22.6" y="979.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.6" y="990.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="22.6" y="963.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="25.6" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.48%)</title><rect x="22.8" y="979.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="25.8" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.41%)</title><rect x="23.4" y="963.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="26.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.41%)</title><rect x="23.4" y="947.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="26.4" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.36%)</title><rect x="23.6" y="931.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.6" y="942.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.36%)</title><rect x="23.6" y="915.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.6" y="926.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.32%)</title><rect x="23.9" y="899.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="26.9" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="24.7" y="883.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.7" y="894.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.18%)</title><rect x="25.5" y="883.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="28.5" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.18%)</title><rect x="25.5" y="867.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="28.5" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.18%)</title><rect x="25.5" y="851.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="28.5" y="862.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="27.6" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.6" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="27.9" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.9" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="27.9" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.9" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="27.9" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="30.9" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="27.9" y="883.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.9" y="894.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="28.2" y="963.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="31.2" y="974.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="28.2" y="947.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="31.2" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="28.2" y="931.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.2" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="28.2" y="915.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,742 samples, 62.11%)</title><rect x="28.4" y="995.0" width="732.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.4" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (1 samples, 0.02%)</title><rect x="28.4" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,741 samples, 62.08%)</title><rect x="28.7" y="979.0" width="732.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.7" y="990.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,740 samples, 62.06%)</title><rect x="28.7" y="963.0" width="732.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.7" y="974.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2,351 samples, 53.25%)</title><rect x="29.2" y="947.0" width="628.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.2" y="958.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2,332 samples, 52.82%)</title><rect x="34.3" y="931.0" width="623.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.3" y="942.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>itable stub (7 samples, 0.16%)</title><rect x="35.7" y="915.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="38.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$67/253098529.run (1,367 samples, 30.96%)</title><rect x="37.5" y="915.0" width="365.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.5" y="926.0">ru/mail/polis/service/manikhin/AsyncServiceImpl$$L..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$forwardRequest$1 (1,366 samples, 30.94%)</title><rect x="37.8" y="899.0" width="365.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.8" y="910.0">ru/mail/polis/service/manikhin/AsyncServiceImpl.la..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="37.8" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="37.8" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.02%)</title><rect x="38.1" y="851.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (857 samples, 19.41%)</title><rect x="38.3" y="883.0" width="229.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.3" y="894.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (857 samples, 19.41%)</title><rect x="38.3" y="867.0" width="229.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.3" y="878.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (265 samples, 6.00%)</title><rect x="40.2" y="851.0" width="70.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.2" y="862.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.20%)</title><rect x="53.8" y="835.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="56.8" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.20%)</title><rect x="53.8" y="819.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="56.8" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.20%)</title><rect x="53.8" y="803.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="56.8" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.18%)</title><rect x="53.8" y="787.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="56.8" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="53.8" y="771.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="56.8" y="782.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="54.6" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="57.6" y="782.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="54.6" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="57.6" y="766.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (4 samples, 0.09%)</title><rect x="54.9" y="771.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="57.9" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.02%)</title><rect x="54.9" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="57.9" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="54.9" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="57.9" y="750.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="54.9" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="57.9" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="54.9" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="55.2" y="755.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="58.2" y="766.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="55.2" y="739.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="58.2" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="55.4" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="58.4" y="750.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="55.7" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="58.7" y="750.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="55.7" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="58.7" y="734.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="56.0" y="787.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="59.0" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="56.2" y="835.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="59.2" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="56.2" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="56.2" y="803.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="59.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="56.2" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.2" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="56.2" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.2" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="56.2" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.2" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="56.2" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.2" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="56.2" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="59.2" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="56.2" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (203 samples, 4.60%)</title><rect x="56.5" y="835.0" width="54.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.5" y="846.0">one/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="59.2" y="819.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="62.2" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.50%)</title><rect x="59.4" y="819.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="62.4" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.14%)</title><rect x="60.2" y="803.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="63.2" y="814.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="61.6" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="64.6" y="798.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="61.6" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.6" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="61.6" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="64.6" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="61.6" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.6" y="750.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="61.6" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="64.6" y="734.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="61.6" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.6" y="718.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="61.6" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="64.6" y="702.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="61.6" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.6" y="686.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="61.6" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.6" y="670.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="61.6" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.6" y="654.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="61.6" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="64.6" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.09%)</title><rect x="61.9" y="803.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="64.9" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="62.9" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="65.9" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.16%)</title><rect x="63.2" y="803.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="66.2" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="63.5" y="787.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="66.5" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.07%)</title><rect x="64.3" y="787.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="67.3" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="65.1" y="803.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="65.1" y="787.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="68.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="65.1" y="771.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="68.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="65.3" y="819.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="68.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="65.3" y="803.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="68.3" y="814.0"></text>
</g>
<g>
<title>__recv (168 samples, 3.81%)</title><rect x="65.6" y="819.0" width="44.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="68.6" y="830.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (156 samples, 3.53%)</title><rect x="68.8" y="803.0" width="41.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="71.8" y="814.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (156 samples, 3.53%)</title><rect x="68.8" y="787.0" width="41.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="71.8" y="798.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="71.7" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="74.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (144 samples, 3.26%)</title><rect x="72.0" y="771.0" width="38.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="75.0" y="782.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (144 samples, 3.26%)</title><rect x="72.0" y="755.0" width="38.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.0" y="766.0">__s..</text>
</g>
<g>
<title>fput_many (3 samples, 0.07%)</title><rect x="72.8" y="739.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="75.8" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (130 samples, 2.94%)</title><rect x="73.6" y="739.0" width="34.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="76.6" y="750.0">so..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="74.4" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.4" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (118 samples, 2.67%)</title><rect x="74.7" y="723.0" width="31.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.7" y="734.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (118 samples, 2.67%)</title><rect x="74.7" y="707.0" width="31.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="77.7" y="718.0">tc..</text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.34%)</title><rect x="75.7" y="691.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="78.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.34%)</title><rect x="75.7" y="675.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.7" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="76.0" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.0" y="670.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="76.6" y="659.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.6" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.16%)</title><rect x="77.4" y="659.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="80.4" y="670.0"></text>
</g>
<g>
<title>dst_release (7 samples, 0.16%)</title><rect x="77.4" y="643.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="80.4" y="654.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.05%)</title><rect x="79.2" y="659.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.2" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="79.8" y="691.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="82.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.16%)</title><rect x="80.0" y="691.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.0" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="81.9" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="84.9" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="81.9" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="82.2" y="675.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.2" y="686.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="82.2" y="659.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="85.2" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="82.4" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="85.4" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="82.4" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="85.4" y="686.0"></text>
</g>
<g>
<title>sk_wait_data (26 samples, 0.59%)</title><rect x="82.7" y="691.0" width="6.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="85.7" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="83.0" y="675.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="86.0" y="686.0"></text>
</g>
<g>
<title>add_wait_queue (3 samples, 0.07%)</title><rect x="83.2" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="86.2" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="83.2" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="86.2" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="83.5" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="86.5" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="84.0" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.0" y="686.0"></text>
</g>
<g>
<title>wait_woken (20 samples, 0.45%)</title><rect x="84.3" y="675.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.3" y="686.0"></text>
</g>
<g>
<title>schedule_timeout (20 samples, 0.45%)</title><rect x="84.3" y="659.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.3" y="670.0"></text>
</g>
<g>
<title>__mod_timer (8 samples, 0.18%)</title><rect x="84.6" y="643.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.14%)</title><rect x="84.6" y="627.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.6" y="638.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.05%)</title><rect x="86.2" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="89.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="86.2" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.2" y="622.0"></text>
</g>
<g>
<title>del_timer_sync (2 samples, 0.05%)</title><rect x="86.7" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="89.7" y="654.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.05%)</title><rect x="86.7" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.7" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="86.7" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.7" y="622.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="87.0" y="611.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="87.0" y="595.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.0" y="606.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.20%)</title><rect x="87.2" y="643.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.2" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.18%)</title><rect x="87.5" y="627.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.5" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.16%)</title><rect x="87.8" y="611.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="90.8" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.18%)</title><rect x="89.6" y="691.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="92.6" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.18%)</title><rect x="89.6" y="675.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="92.6" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.14%)</title><rect x="90.2" y="659.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="93.2" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.11%)</title><rect x="90.2" y="643.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="93.2" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.11%)</title><rect x="90.2" y="627.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="93.2" y="638.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="91.5" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="94.5" y="654.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="91.8" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.8" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (47 samples, 1.06%)</title><rect x="92.1" y="691.0" width="12.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="95.1" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="94.2" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="97.2" y="686.0"></text>
</g>
<g>
<title>tcp_send_ack (37 samples, 0.84%)</title><rect x="94.7" y="675.0" width="9.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="97.7" y="686.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (37 samples, 0.84%)</title><rect x="94.7" y="659.0" width="9.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="97.7" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.07%)</title><rect x="94.7" y="643.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="97.7" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="94.7" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="97.7" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="94.7" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="97.7" y="622.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="94.7" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="97.7" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="95.0" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="98.0" y="638.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="95.3" y="627.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.3" y="638.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.02%)</title><rect x="95.3" y="611.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="98.3" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 0.77%)</title><rect x="95.5" y="643.0" width="9.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.5" y="654.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="95.5" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="98.5" y="638.0"></text>
</g>
<g>
<title>ip_queue_xmit (33 samples, 0.75%)</title><rect x="95.8" y="627.0" width="8.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="98.8" y="638.0"></text>
</g>
<g>
<title>__ip_queue_xmit (33 samples, 0.75%)</title><rect x="95.8" y="611.0" width="8.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.8" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="95.8" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="98.8" y="606.0"></text>
</g>
<g>
<title>ip_local_out (32 samples, 0.72%)</title><rect x="96.1" y="595.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.1" y="606.0"></text>
</g>
<g>
<title>ip_output (32 samples, 0.72%)</title><rect x="96.1" y="579.0" width="8.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.1" y="590.0"></text>
</g>
<g>
<title>ip_finish_output (32 samples, 0.72%)</title><rect x="96.1" y="563.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.1" y="574.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="96.1" y="547.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.1" y="558.0"></text>
</g>
<g>
<title>__ip_finish_output (31 samples, 0.70%)</title><rect x="96.3" y="547.0" width="8.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.3" y="558.0"></text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 0.68%)</title><rect x="96.3" y="531.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.3" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 0.57%)</title><rect x="96.9" y="515.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="99.9" y="526.0"></text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 0.57%)</title><rect x="96.9" y="499.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.9" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (23 samples, 0.52%)</title><rect x="97.4" y="483.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.4" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 0.52%)</title><rect x="97.4" y="467.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="100.4" y="478.0"></text>
</g>
<g>
<title>net_rx_action (23 samples, 0.52%)</title><rect x="97.4" y="451.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="100.4" y="462.0"></text>
</g>
<g>
<title>process_backlog (23 samples, 0.52%)</title><rect x="97.4" y="435.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="100.4" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb (23 samples, 0.52%)</title><rect x="97.4" y="419.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="100.4" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 0.52%)</title><rect x="97.4" y="403.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="100.4" y="414.0"></text>
</g>
<g>
<title>ip_rcv (23 samples, 0.52%)</title><rect x="97.4" y="387.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.4" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 0.52%)</title><rect x="97.4" y="371.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="100.4" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 0.52%)</title><rect x="97.4" y="355.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.4" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 0.52%)</title><rect x="97.4" y="339.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="100.4" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 0.52%)</title><rect x="97.4" y="323.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.4" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 0.52%)</title><rect x="97.4" y="307.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.4" y="318.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="97.4" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="100.4" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="97.7" y="291.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="100.7" y="302.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="97.7" y="275.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.7" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 0.48%)</title><rect x="97.9" y="291.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.9" y="302.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="97.9" y="275.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.9" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 0.45%)</title><rect x="98.2" y="275.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="101.2" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.09%)</title><rect x="98.5" y="259.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.5" y="270.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.05%)</title><rect x="98.5" y="243.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.5" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="98.5" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.5" y="238.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="99.0" y="243.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="102.0" y="254.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="99.3" y="227.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="102.3" y="238.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="99.3" y="211.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="102.3" y="222.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.32%)</title><rect x="99.5" y="259.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.5" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="100.3" y="243.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="103.3" y="254.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="100.6" y="243.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="103.6" y="254.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.18%)</title><rect x="100.9" y="243.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.9" y="254.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="101.4" y="227.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="104.4" y="238.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="101.4" y="211.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="104.4" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="101.7" y="195.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.7" y="206.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="102.2" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.2" y="222.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="102.5" y="211.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="105.5" y="222.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="102.5" y="195.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.5" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="102.7" y="227.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="105.7" y="238.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="103.0" y="243.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.0" y="254.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="103.3" y="259.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="106.3" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="103.3" y="243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.3" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.07%)</title><rect x="103.5" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.5" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="103.5" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.5" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="103.8" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.8" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="104.1" y="499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="107.1" y="510.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="104.3" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="107.3" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.11%)</title><rect x="104.6" y="691.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.6" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.11%)</title><rect x="104.6" y="675.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="107.6" y="686.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="104.6" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.6" y="670.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.07%)</title><rect x="105.1" y="659.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="108.1" y="670.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.02%)</title><rect x="106.0" y="691.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.0" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.18%)</title><rect x="106.2" y="723.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="109.2" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="106.5" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="109.5" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.14%)</title><rect x="106.8" y="707.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="109.8" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.14%)</title><rect x="106.8" y="691.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.8" y="702.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="107.3" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.3" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.07%)</title><rect x="107.6" y="675.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.6" y="686.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="108.1" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.18%)</title><rect x="108.4" y="739.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="111.4" y="750.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.16%)</title><rect x="108.4" y="723.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.16%)</title><rect x="108.4" y="707.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="111.4" y="718.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.16%)</title><rect x="108.4" y="691.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="111.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="110.2" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.2" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="110.5" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.5" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="110.5" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.5" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="110.5" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.02%)</title><rect x="110.8" y="835.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (58 samples, 1.31%)</title><rect x="111.0" y="851.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="111.8" y="835.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="111.8" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="111.8" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.05%)</title><rect x="112.1" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.05%)</title><rect x="112.1" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.1" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.05%)</title><rect x="112.1" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="112.6" y="835.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="113.4" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="113.7" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="113.7" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (22 samples, 0.50%)</title><rect x="114.2" y="835.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.2" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.11%)</title><rect x="114.8" y="819.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="117.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="115.8" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.8" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="115.8" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="118.8" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="115.8" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.34%)</title><rect x="116.1" y="819.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.34%)</title><rect x="116.1" y="803.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.1" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="119.6" y="787.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="122.6" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="119.6" y="771.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="122.6" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="119.8" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="119.8" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="122.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="119.8" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.8" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="119.8" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.8" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="119.8" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.8" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="119.8" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.05%)</title><rect x="120.1" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (7 samples, 0.16%)</title><rect x="120.7" y="835.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.7" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.09%)</title><rect x="121.5" y="819.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="124.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (15 samples, 0.34%)</title><rect x="122.5" y="835.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.18%)</title><rect x="124.4" y="819.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.18%)</title><rect x="124.4" y="803.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.4" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="124.9" y="787.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="127.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.11%)</title><rect x="125.2" y="787.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="128.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (28 samples, 0.63%)</title><rect x="126.5" y="851.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.5" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="127.9" y="835.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="130.9" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="127.9" y="819.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="130.9" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="127.9" y="803.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.9" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="127.9" y="787.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="130.9" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="128.1" y="835.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="131.1" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.14%)</title><rect x="128.4" y="835.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="131.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12 samples, 0.27%)</title><rect x="130.0" y="835.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.11%)</title><rect x="130.0" y="819.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.16%)</title><rect x="131.3" y="819.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.16%)</title><rect x="131.3" y="803.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.16%)</title><rect x="131.3" y="787.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.07%)</title><rect x="133.2" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.18%)</title><rect x="134.0" y="851.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.16%)</title><rect x="134.3" y="835.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.16%)</title><rect x="134.3" y="819.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.3" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="135.9" y="803.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="138.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (90 samples, 2.04%)</title><rect x="136.2" y="851.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.2" y="862.0">o..</text>
</g>
<g>
<title>setsockopt (84 samples, 1.90%)</title><rect x="137.8" y="835.0" width="22.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="140.8" y="846.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.61%)</title><rect x="141.2" y="819.0" width="19.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 1.61%)</title><rect x="141.2" y="803.0" width="19.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (55 samples, 1.25%)</title><rect x="145.5" y="787.0" width="14.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="148.5" y="798.0"></text>
</g>
<g>
<title>__sys_setsockopt (55 samples, 1.25%)</title><rect x="145.5" y="771.0" width="14.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.5" y="782.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (2 samples, 0.05%)</title><rect x="146.0" y="755.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="149.0" y="766.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="146.6" y="755.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.6" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.18%)</title><rect x="146.8" y="755.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.8" y="766.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (1 samples, 0.02%)</title><rect x="149.0" y="755.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.0" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="149.2" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="152.2" y="766.0"></text>
</g>
<g>
<title>security_socket_setsockopt (14 samples, 0.32%)</title><rect x="149.5" y="755.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="152.5" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (14 samples, 0.32%)</title><rect x="149.5" y="739.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.5" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="149.5" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="152.5" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (13 samples, 0.29%)</title><rect x="149.8" y="723.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="152.8" y="734.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="150.3" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="153.3" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (10 samples, 0.23%)</title><rect x="150.6" y="707.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="153.6" y="718.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.02%)</title><rect x="151.7" y="691.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="154.7" y="702.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="151.7" y="675.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="154.7" y="686.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="151.7" y="659.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="154.7" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="151.7" y="643.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.7" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="151.7" y="627.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.7" y="638.0"></text>
</g>
<g>
<title>net_tx_action (1 samples, 0.02%)</title><rect x="151.7" y="611.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.7" y="622.0"></text>
</g>
<g>
<title>__kfree_skb_defer (1 samples, 0.02%)</title><rect x="151.7" y="595.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="154.7" y="606.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="151.7" y="579.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.7" y="590.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="151.7" y="563.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.7" y="574.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.05%)</title><rect x="151.9" y="691.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="154.9" y="702.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.07%)</title><rect x="152.5" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.5" y="702.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.02%)</title><rect x="153.0" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="156.0" y="686.0"></text>
</g>
<g>
<title>sock_setsockopt (17 samples, 0.39%)</title><rect x="153.3" y="755.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="156.3" y="766.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="153.3" y="739.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.3" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.09%)</title><rect x="153.5" y="739.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="156.5" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.07%)</title><rect x="154.6" y="739.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="157.6" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="154.9" y="723.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.9" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="155.1" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="158.1" y="734.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="155.4" y="739.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="158.4" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="155.7" y="723.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.7" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="155.9" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="158.9" y="734.0"></text>
</g>
<g>
<title>sock_set_timeout (5 samples, 0.11%)</title><rect x="156.2" y="739.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="159.2" y="750.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.09%)</title><rect x="156.5" y="723.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="159.5" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="157.5" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="160.5" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.20%)</title><rect x="157.8" y="755.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="160.8" y="766.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.14%)</title><rect x="158.3" y="739.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.14%)</title><rect x="158.3" y="723.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="161.3" y="734.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.14%)</title><rect x="158.3" y="707.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.3" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="159.9" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="162.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (389 samples, 8.81%)</title><rect x="160.2" y="851.0" width="104.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.2" y="862.0">one/nio/net/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="161.3" y="835.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="164.3" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (24 samples, 0.54%)</title><rect x="161.5" y="835.0" width="6.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="164.5" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="163.4" y="819.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="166.4" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="164.2" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="167.2" y="830.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.29%)</title><rect x="164.5" y="819.0" width="3.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="167.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (7 samples, 0.16%)</title><rect x="165.0" y="803.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="168.0" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.09%)</title><rect x="166.9" y="803.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="169.9" y="814.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="168.0" y="835.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="171.0" y="846.0"></text>
</g>
<g>
<title>send (358 samples, 8.11%)</title><rect x="168.5" y="835.0" width="95.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="171.5" y="846.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (354 samples, 8.02%)</title><rect x="169.6" y="819.0" width="94.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.6" y="830.0">entry_SYSCA..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="169.6" y="803.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="172.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (353 samples, 8.00%)</title><rect x="169.8" y="803.0" width="94.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.8" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (347 samples, 7.86%)</title><rect x="170.9" y="787.0" width="92.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="173.9" y="798.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (347 samples, 7.86%)</title><rect x="170.9" y="771.0" width="92.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="173.9" y="782.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="171.2" y="755.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.2" y="766.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="171.4" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.4" y="766.0"></text>
</g>
<g>
<title>sock_sendmsg (343 samples, 7.77%)</title><rect x="171.7" y="755.0" width="91.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="174.7" y="766.0">sock_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="172.2" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.2" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.05%)</title><rect x="172.5" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="175.5" y="750.0"></text>
</g>
<g>
<title>inet6_sendmsg (330 samples, 7.47%)</title><rect x="173.0" y="739.0" width="88.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="176.0" y="750.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (330 samples, 7.47%)</title><rect x="173.0" y="723.0" width="88.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="176.0" y="734.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="173.0" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="176.0" y="718.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="173.3" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="176.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="173.6" y="707.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="176.6" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="173.8" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="176.8" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="173.8" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="176.8" y="702.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.16%)</title><rect x="174.1" y="707.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="177.1" y="718.0"></text>
</g>
<g>
<title>__release_sock (5 samples, 0.11%)</title><rect x="174.4" y="691.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="177.4" y="702.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.11%)</title><rect x="174.4" y="675.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="177.4" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.11%)</title><rect x="174.4" y="659.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.4" y="670.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="174.4" y="643.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="177.4" y="654.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="174.4" y="627.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="177.4" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="174.4" y="611.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="177.4" y="622.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="174.4" y="595.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="177.4" y="606.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="174.6" y="643.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="177.6" y="654.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.05%)</title><rect x="174.6" y="627.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.6" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="174.9" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="177.9" y="622.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="174.9" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.9" y="606.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="174.9" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="177.9" y="590.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="175.2" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="178.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="175.7" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="178.7" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="175.7" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="178.7" y="686.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.07%)</title><rect x="176.0" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="179.0" y="718.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="176.8" y="707.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="179.8" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="177.0" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.0" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (312 samples, 7.07%)</title><rect x="177.3" y="707.0" width="83.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="180.3" y="718.0">tcp_sendm..</text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.09%)</title><rect x="178.9" y="691.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="181.9" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.05%)</title><rect x="179.2" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.2" y="686.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="179.7" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.7" y="686.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="180.0" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.0" y="702.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="180.0" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.0" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (29 samples, 0.66%)</title><rect x="180.3" y="691.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="183.3" y="702.0"></text>
</g>
<g>
<title>__alloc_skb (27 samples, 0.61%)</title><rect x="180.8" y="675.0" width="7.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.8" y="686.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (18 samples, 0.41%)</title><rect x="181.1" y="659.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.1" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.23%)</title><rect x="181.3" y="643.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.3" y="654.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.07%)</title><rect x="183.2" y="627.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="186.2" y="638.0"></text>
</g>
<g>
<title>memset (7 samples, 0.16%)</title><rect x="184.0" y="643.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.0" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.14%)</title><rect x="185.9" y="659.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.9" y="670.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="186.9" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="189.9" y="654.0"></text>
</g>
<g>
<title>memset (2 samples, 0.05%)</title><rect x="187.5" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.5" y="670.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.09%)</title><rect x="188.0" y="691.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.0" y="702.0"></text>
</g>
<g>
<title>tcp_push (261 samples, 5.91%)</title><rect x="189.1" y="691.0" width="69.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.1" y="702.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (261 samples, 5.91%)</title><rect x="189.1" y="675.0" width="69.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.1" y="686.0">__tcp_p..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="189.1" y="659.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.1" y="670.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="189.3" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.3" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (259 samples, 5.87%)</title><rect x="189.6" y="659.0" width="69.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="192.6" y="670.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (242 samples, 5.48%)</title><rect x="190.1" y="643.0" width="64.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.1" y="654.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (229 samples, 5.19%)</title><rect x="192.3" y="627.0" width="61.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.3" y="638.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (229 samples, 5.19%)</title><rect x="192.3" y="611.0" width="61.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="195.3" y="622.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (225 samples, 5.10%)</title><rect x="193.1" y="595.0" width="60.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.1" y="606.0">ip_loc..</text>
</g>
<g>
<title>ip_output (222 samples, 5.03%)</title><rect x="193.9" y="579.0" width="59.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="196.9" y="590.0">ip_out..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="194.1" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.1" y="574.0"></text>
</g>
<g>
<title>ip_finish_output (220 samples, 4.98%)</title><rect x="194.4" y="563.0" width="58.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.4" y="574.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="194.4" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="197.4" y="558.0"></text>
</g>
<g>
<title>__ip_finish_output (219 samples, 4.96%)</title><rect x="194.7" y="547.0" width="58.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="197.7" y="558.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (217 samples, 4.92%)</title><rect x="195.2" y="531.0" width="58.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.2" y="542.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (186 samples, 4.21%)</title><rect x="196.6" y="515.0" width="49.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.6" y="526.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (186 samples, 4.21%)</title><rect x="196.6" y="499.0" width="49.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="199.6" y="510.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (183 samples, 4.14%)</title><rect x="197.4" y="483.0" width="48.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.4" y="494.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (183 samples, 4.14%)</title><rect x="197.4" y="467.0" width="48.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="200.4" y="478.0">__so..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="198.2" y="451.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="201.2" y="462.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="198.4" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="201.4" y="462.0"></text>
</g>
<g>
<title>net_rx_action (178 samples, 4.03%)</title><rect x="198.7" y="451.0" width="47.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="201.7" y="462.0">net_..</text>
</g>
<g>
<title>process_backlog (174 samples, 3.94%)</title><rect x="199.8" y="435.0" width="46.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="202.8" y="446.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (173 samples, 3.92%)</title><rect x="200.0" y="419.0" width="46.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.0" y="430.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (173 samples, 3.92%)</title><rect x="200.0" y="403.0" width="46.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="203.0" y="414.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="200.3" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="203.3" y="398.0"></text>
</g>
<g>
<title>ip_rcv (170 samples, 3.85%)</title><rect x="200.6" y="387.0" width="45.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="203.6" y="398.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="200.8" y="371.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="203.8" y="382.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="201.4" y="371.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="204.4" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (166 samples, 3.76%)</title><rect x="201.6" y="371.0" width="44.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.6" y="382.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (165 samples, 3.74%)</title><rect x="201.9" y="355.0" width="44.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.9" y="366.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (164 samples, 3.71%)</title><rect x="202.2" y="339.0" width="43.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="205.2" y="350.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (164 samples, 3.71%)</title><rect x="202.2" y="323.0" width="43.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="205.2" y="334.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="202.4" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="205.4" y="318.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="202.7" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="205.7" y="318.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="203.0" y="307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="206.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (160 samples, 3.62%)</title><rect x="203.2" y="307.0" width="42.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.2" y="318.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.14%)</title><rect x="204.6" y="291.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.6" y="302.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="205.9" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="208.9" y="286.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="206.2" y="291.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="209.2" y="302.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="206.4" y="291.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="209.4" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.09%)</title><rect x="207.0" y="291.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="210.0" y="302.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="207.2" y="275.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.2" y="286.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="207.8" y="275.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="210.8" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (142 samples, 3.22%)</title><rect x="208.0" y="291.0" width="38.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="211.0" y="302.0">tcp..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="208.3" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="211.3" y="286.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.07%)</title><rect x="208.6" y="275.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="211.6" y="286.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="209.4" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.4" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (136 samples, 3.08%)</title><rect x="209.7" y="275.0" width="36.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="212.7" y="286.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.07%)</title><rect x="210.7" y="259.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.7" y="270.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.07%)</title><rect x="210.7" y="243.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="213.7" y="254.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="210.7" y="227.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="213.7" y="238.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="211.0" y="211.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.0" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="211.3" y="195.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.3" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="211.5" y="259.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="214.5" y="270.0"></text>
</g>
<g>
<title>tcp_ack (27 samples, 0.61%)</title><rect x="211.8" y="259.0" width="7.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="214.8" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="213.7" y="243.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="216.7" y="254.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="214.2" y="243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.2" y="254.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="214.5" y="243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="217.5" y="254.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (15 samples, 0.34%)</title><rect x="214.7" y="243.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.7" y="254.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.27%)</title><rect x="215.0" y="227.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="218.0" y="238.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="215.0" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="218.0" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="215.0" y="195.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.0" y="206.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.25%)</title><rect x="215.3" y="211.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="218.3" y="222.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.25%)</title><rect x="215.3" y="195.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="218.3" y="206.0"></text>
</g>
<g>
<title>skb_free_head (7 samples, 0.16%)</title><rect x="216.3" y="179.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.3" y="190.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.16%)</title><rect x="216.3" y="163.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.3" y="174.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.16%)</title><rect x="216.3" y="147.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="219.3" y="158.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.05%)</title><rect x="217.7" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="220.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="218.2" y="227.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.2" y="238.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="218.5" y="227.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.5" y="238.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="218.7" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="221.7" y="254.0"></text>
</g>
<g>
<title>tcp_data_ready (96 samples, 2.17%)</title><rect x="219.0" y="259.0" width="25.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="222.0" y="270.0">t..</text>
</g>
<g>
<title>sock_def_readable (96 samples, 2.17%)</title><rect x="219.0" y="243.0" width="25.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="222.0" y="254.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (96 samples, 2.17%)</title><rect x="219.0" y="227.0" width="25.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="222.0" y="238.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (96 samples, 2.17%)</title><rect x="219.0" y="211.0" width="25.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.0" y="222.0">_..</text>
</g>
<g>
<title>__lock_text_start (96 samples, 2.17%)</title><rect x="219.0" y="195.0" width="25.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="222.0" y="206.0">_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="244.7" y="259.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="247.7" y="270.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="244.7" y="243.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="247.7" y="254.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="245.2" y="243.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="248.2" y="254.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="245.5" y="259.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="248.5" y="270.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="245.7" y="259.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="248.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="246.0" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="249.0" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (26 samples, 0.59%)</title><rect x="246.3" y="515.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="249.3" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (23 samples, 0.52%)</title><rect x="246.3" y="499.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="249.3" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="247.9" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.9" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.25%)</title><rect x="248.4" y="483.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.4" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.23%)</title><rect x="248.7" y="467.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.7" y="478.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.11%)</title><rect x="248.7" y="451.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="251.7" y="462.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.11%)</title><rect x="248.7" y="435.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.7" y="446.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.11%)</title><rect x="248.7" y="419.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.7" y="430.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="250.0" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.0" y="462.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="250.5" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="253.5" y="462.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.09%)</title><rect x="251.3" y="483.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="254.3" y="494.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="252.1" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="255.1" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="252.4" y="499.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="255.4" y="510.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="253.2" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="256.2" y="606.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.07%)</title><rect x="253.5" y="627.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.5" y="638.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="253.8" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="256.8" y="622.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="254.3" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="257.3" y="638.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.16%)</title><rect x="254.8" y="643.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="257.8" y="654.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="256.7" y="643.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.7" y="654.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.11%)</title><rect x="257.2" y="643.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.2" y="654.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.11%)</title><rect x="257.2" y="627.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="260.2" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.11%)</title><rect x="257.2" y="611.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.2" y="622.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.11%)</title><rect x="257.2" y="595.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="260.2" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.09%)</title><rect x="257.2" y="579.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="260.2" y="590.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="258.3" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="261.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="258.3" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.3" y="574.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="258.6" y="643.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.6" y="654.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="258.8" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="261.8" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.11%)</title><rect x="259.4" y="691.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="262.4" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="259.4" y="675.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="262.4" y="686.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.09%)</title><rect x="259.6" y="675.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="262.6" y="686.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="260.2" y="659.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="263.2" y="670.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="260.4" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.4" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="260.7" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.7" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.18%)</title><rect x="261.2" y="739.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.2" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.16%)</title><rect x="261.5" y="723.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="264.5" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="261.5" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="264.5" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.14%)</title><rect x="261.8" y="707.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="264.8" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (6 samples, 0.14%)</title><rect x="261.8" y="691.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="264.8" y="702.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="262.8" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.8" y="686.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.02%)</title><rect x="263.1" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="266.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="263.4" y="755.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="266.4" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="263.4" y="739.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="263.4" y="723.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="266.4" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="263.4" y="707.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="266.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="263.6" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="266.6" y="798.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="263.6" y="771.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="266.6" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="263.6" y="755.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="266.6" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="263.6" y="739.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="266.6" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="263.9" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="266.9" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="263.9" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="266.9" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="263.9" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="266.9" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="263.9" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="266.9" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="263.9" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="266.9" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="263.9" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="266.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="263.9" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="266.9" y="638.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (7 samples, 0.16%)</title><rect x="264.2" y="851.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.2" y="862.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (2 samples, 0.05%)</title><rect x="265.5" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.5" y="846.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (5 samples, 0.11%)</title><rect x="266.0" y="851.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.0" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.02%)</title><rect x="267.1" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.1" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.02%)</title><rect x="267.1" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="267.1" y="803.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="270.1" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="267.1" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="270.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.sendResponse (507 samples, 11.48%)</title><rect x="267.4" y="883.0" width="135.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.4" y="894.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (496 samples, 11.23%)</title><rect x="269.5" y="867.0" width="132.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.5" y="878.0">one/nio/http/Htt..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.16%)</title><rect x="270.9" y="851.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="273.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.14%)</title><rect x="270.9" y="835.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="273.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.14%)</title><rect x="270.9" y="819.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="273.9" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="272.5" y="835.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="275.5" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="272.5" y="819.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="275.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (466 samples, 10.55%)</title><rect x="272.7" y="851.0" width="124.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.7" y="862.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (37 samples, 0.84%)</title><rect x="273.0" y="835.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (36 samples, 0.82%)</title><rect x="273.3" y="819.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (23 samples, 0.52%)</title><rect x="273.3" y="803.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.3" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.1" y="787.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.1" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.1" y="771.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="281.1" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="278.1" y="755.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="281.1" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="278.1" y="739.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="281.1" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="278.1" y="723.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="281.1" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="278.1" y="707.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.1" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="278.1" y="691.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.09%)</title><rect x="278.3" y="787.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="281.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.29%)</title><rect x="279.4" y="803.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.29%)</title><rect x="279.4" y="787.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.29%)</title><rect x="279.4" y="771.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (428 samples, 9.69%)</title><rect x="282.9" y="835.0" width="114.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.9" y="846.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (428 samples, 9.69%)</title><rect x="282.9" y="819.0" width="114.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.9" y="830.0">one/nio/net/Se..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.09%)</title><rect x="283.4" y="803.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="286.4" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.02%)</title><rect x="283.7" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="286.7" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="283.7" y="771.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="286.7" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="284.0" y="787.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="287.0" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="284.2" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="287.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (422 samples, 9.56%)</title><rect x="284.5" y="803.0" width="112.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.5" y="814.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (419 samples, 9.49%)</title><rect x="285.3" y="787.0" width="112.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.3" y="798.0">one/nio/net/N..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="288.0" y="771.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="291.0" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.27%)</title><rect x="288.5" y="771.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="291.5" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="289.3" y="755.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="292.3" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="290.1" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="293.1" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.11%)</title><rect x="290.4" y="755.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="293.4" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="290.6" y="739.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="293.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="290.9" y="739.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="293.9" y="750.0"></text>
</g>
<g>
<title>send (395 samples, 8.95%)</title><rect x="291.7" y="771.0" width="105.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="294.7" y="782.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (382 samples, 8.65%)</title><rect x="294.6" y="755.0" width="102.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="297.6" y="766.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="294.6" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="297.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (381 samples, 8.63%)</title><rect x="294.9" y="739.0" width="101.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="297.9" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (378 samples, 8.56%)</title><rect x="295.7" y="723.0" width="101.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="298.7" y="734.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (377 samples, 8.54%)</title><rect x="295.7" y="707.0" width="100.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="298.7" y="718.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="296.8" y="691.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="299.8" y="702.0"></text>
</g>
<g>
<title>sock_sendmsg (367 samples, 8.31%)</title><rect x="297.0" y="691.0" width="98.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.0" y="702.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.07%)</title><rect x="297.0" y="675.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="300.0" y="686.0"></text>
</g>
<g>
<title>inet6_sendmsg (353 samples, 8.00%)</title><rect x="297.9" y="675.0" width="94.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.9" y="686.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (353 samples, 8.00%)</title><rect x="297.9" y="659.0" width="94.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="300.9" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>__release_sock (1 samples, 0.02%)</title><rect x="298.1" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="301.1" y="654.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="298.4" y="643.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="299.2" y="643.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.2" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="300.0" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.0" y="654.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="300.0" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.0" y="638.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.09%)</title><rect x="300.3" y="643.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="303.3" y="654.0"></text>
</g>
<g>
<title>__release_sock (4 samples, 0.09%)</title><rect x="300.3" y="627.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="303.3" y="638.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.07%)</title><rect x="300.5" y="611.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="303.5" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.07%)</title><rect x="300.5" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="303.5" y="606.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="300.5" y="579.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.5" y="590.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="300.8" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="303.8" y="574.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.02%)</title><rect x="301.1" y="579.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="304.1" y="590.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="301.1" y="563.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.1" y="574.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="301.1" y="547.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.1" y="558.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="301.1" y="531.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.1" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="301.1" y="515.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="304.1" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="301.3" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="304.3" y="654.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.05%)</title><rect x="301.6" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.6" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (334 samples, 7.57%)</title><rect x="302.1" y="643.0" width="89.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.1" y="654.0">tcp_sendms..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.07%)</title><rect x="303.5" y="627.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.5" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.07%)</title><rect x="303.5" y="611.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="306.5" y="622.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="304.3" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="307.3" y="638.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="304.8" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="307.8" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="305.1" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="308.1" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="305.1" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="308.1" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (24 samples, 0.54%)</title><rect x="305.6" y="627.0" width="6.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="308.6" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (24 samples, 0.54%)</title><rect x="305.6" y="611.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.6" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (12 samples, 0.27%)</title><rect x="305.9" y="595.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.9" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.23%)</title><rect x="305.9" y="579.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="308.9" y="590.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.07%)</title><rect x="307.5" y="563.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="310.5" y="574.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="308.3" y="563.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="311.3" y="574.0"></text>
</g>
<g>
<title>memset (2 samples, 0.05%)</title><rect x="308.5" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.5" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="309.1" y="595.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="312.1" y="606.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="309.6" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="312.6" y="590.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.07%)</title><rect x="309.9" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="312.9" y="606.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.07%)</title><rect x="309.9" y="579.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="312.9" y="590.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="310.7" y="595.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.7" y="606.0"></text>
</g>
<g>
<title>memset (3 samples, 0.07%)</title><rect x="310.9" y="595.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.9" y="606.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="311.7" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.7" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="312.0" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.0" y="638.0"></text>
</g>
<g>
<title>tcp_push (294 samples, 6.66%)</title><rect x="312.3" y="627.0" width="78.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.3" y="638.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (294 samples, 6.66%)</title><rect x="312.3" y="611.0" width="78.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="315.3" y="622.0">__tcp_pus..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="312.3" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.3" y="606.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="312.6" y="595.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="315.6" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="312.8" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="315.8" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (291 samples, 6.59%)</title><rect x="313.1" y="595.0" width="77.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="316.1" y="606.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (257 samples, 5.82%)</title><rect x="314.2" y="579.0" width="68.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="317.2" y="590.0">__tcp_t..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="316.8" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="319.8" y="574.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.05%)</title><rect x="317.1" y="563.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="320.1" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (241 samples, 5.46%)</title><rect x="317.6" y="563.0" width="64.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.6" y="574.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (238 samples, 5.39%)</title><rect x="317.6" y="547.0" width="63.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.6" y="558.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="318.2" y="531.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="321.2" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="318.2" y="515.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.2" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="318.4" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.4" y="542.0"></text>
</g>
<g>
<title>ip_local_out (230 samples, 5.21%)</title><rect x="319.2" y="531.0" width="61.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.2" y="542.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="319.2" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="322.2" y="526.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="319.2" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="322.2" y="510.0"></text>
</g>
<g>
<title>ip_output (228 samples, 5.16%)</title><rect x="319.5" y="515.0" width="60.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.5" y="526.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (224 samples, 5.07%)</title><rect x="320.6" y="499.0" width="59.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="323.6" y="510.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="321.1" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.1" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (218 samples, 4.94%)</title><rect x="321.4" y="483.0" width="58.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.4" y="494.0">__ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="321.6" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (216 samples, 4.89%)</title><rect x="321.9" y="467.0" width="57.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="324.9" y="478.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (185 samples, 4.19%)</title><rect x="323.8" y="451.0" width="49.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="326.8" y="462.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (184 samples, 4.17%)</title><rect x="323.8" y="435.0" width="49.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.8" y="446.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (180 samples, 4.08%)</title><rect x="324.8" y="419.0" width="48.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="327.8" y="430.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (180 samples, 4.08%)</title><rect x="324.8" y="403.0" width="48.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="327.8" y="414.0">__so..</text>
</g>
<g>
<title>net_rx_action (177 samples, 4.01%)</title><rect x="325.4" y="387.0" width="47.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="328.4" y="398.0">net_..</text>
</g>
<g>
<title>process_backlog (173 samples, 3.92%)</title><rect x="326.4" y="371.0" width="46.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="329.4" y="382.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (172 samples, 3.90%)</title><rect x="326.7" y="355.0" width="46.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="329.7" y="366.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (169 samples, 3.83%)</title><rect x="327.5" y="339.0" width="45.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="330.5" y="350.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="327.5" y="323.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="330.5" y="334.0"></text>
</g>
<g>
<title>ip_rcv (166 samples, 3.76%)</title><rect x="328.1" y="323.0" width="44.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.1" y="334.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (166 samples, 3.76%)</title><rect x="328.1" y="307.0" width="44.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.1" y="318.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (163 samples, 3.69%)</title><rect x="328.6" y="291.0" width="43.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.6" y="302.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (161 samples, 3.65%)</title><rect x="328.9" y="275.0" width="43.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="331.9" y="286.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (161 samples, 3.65%)</title><rect x="328.9" y="259.0" width="43.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="331.9" y="270.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="329.1" y="243.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.1" y="254.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="329.7" y="243.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.7" y="254.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="329.9" y="243.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="332.9" y="254.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="330.2" y="243.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.2" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (155 samples, 3.51%)</title><rect x="330.5" y="243.0" width="41.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="333.5" y="254.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.16%)</title><rect x="331.0" y="227.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.0" y="238.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="332.9" y="227.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.9" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="333.4" y="227.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="336.4" y="238.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="333.4" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="336.4" y="222.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="333.7" y="211.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="336.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (142 samples, 3.22%)</title><rect x="333.9" y="227.0" width="38.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="336.9" y="238.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.14%)</title><rect x="333.9" y="211.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.9" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (136 samples, 3.08%)</title><rect x="335.5" y="211.0" width="36.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.5" y="222.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.14%)</title><rect x="336.9" y="195.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="339.9" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.14%)</title><rect x="336.9" y="179.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="339.9" y="190.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="336.9" y="163.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.9" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.11%)</title><rect x="337.1" y="163.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="340.1" y="174.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.11%)</title><rect x="337.1" y="147.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.1" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.11%)</title><rect x="337.1" y="131.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="340.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack (36 samples, 0.82%)</title><rect x="338.5" y="195.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="341.5" y="206.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="339.8" y="179.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="342.8" y="190.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="340.1" y="179.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.1" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (28 samples, 0.63%)</title><rect x="340.3" y="179.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="343.3" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.43%)</title><rect x="342.5" y="163.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="345.5" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.09%)</title><rect x="342.5" y="147.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="345.5" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.09%)</title><rect x="342.5" y="131.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="345.5" y="142.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="342.8" y="115.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="345.8" y="126.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="343.3" y="99.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.3" y="110.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.34%)</title><rect x="343.6" y="147.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="346.6" y="158.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.32%)</title><rect x="343.6" y="131.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="346.6" y="142.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.11%)</title><rect x="346.0" y="115.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="349.0" y="126.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.11%)</title><rect x="346.0" y="99.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="349.0" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.09%)</title><rect x="346.2" y="83.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.2" y="94.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="347.3" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="350.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="347.6" y="163.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="350.6" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="347.8" y="179.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="350.8" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="348.1" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="351.1" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (82 samples, 1.86%)</title><rect x="348.4" y="195.0" width="21.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="351.4" y="206.0">t..</text>
</g>
<g>
<title>sock_def_readable (82 samples, 1.86%)</title><rect x="348.4" y="179.0" width="21.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="351.4" y="190.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (80 samples, 1.81%)</title><rect x="348.9" y="163.0" width="21.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="351.9" y="174.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (80 samples, 1.81%)</title><rect x="348.9" y="147.0" width="21.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="351.9" y="158.0">_..</text>
</g>
<g>
<title>__lock_text_start (80 samples, 1.81%)</title><rect x="348.9" y="131.0" width="21.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="351.9" y="142.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="370.3" y="195.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.3" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="370.8" y="195.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="373.8" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="370.8" y="179.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="373.8" y="190.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="371.1" y="179.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="374.1" y="190.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="371.3" y="179.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.3" y="190.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="371.6" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="374.6" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="371.9" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="372.2" y="291.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="375.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="372.4" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="375.4" y="334.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="372.7" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="375.7" y="398.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="372.7" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="375.7" y="382.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="372.7" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="375.7" y="366.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="372.7" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.7" y="350.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="372.7" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="375.7" y="334.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="372.7" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="375.7" y="318.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="372.7" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.7" y="302.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="373.0" y="435.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="376.0" y="446.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="373.0" y="419.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="376.0" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="373.0" y="403.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="376.0" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="373.0" y="387.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="376.0" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="373.0" y="371.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="376.0" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="373.0" y="355.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.0" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="373.0" y="339.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="376.0" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="373.0" y="323.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="376.0" y="334.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="373.0" y="307.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="376.0" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="373.0" y="291.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="376.0" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="373.0" y="275.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="376.0" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="373.0" y="259.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="376.0" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="373.0" y="243.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="376.0" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="373.0" y="227.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="376.0" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="373.0" y="211.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="376.0" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="373.0" y="195.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="376.0" y="206.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="373.0" y="179.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="376.0" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="373.0" y="163.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="376.0" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="373.0" y="147.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="376.0" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="373.0" y="131.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.0" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="373.0" y="115.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="376.0" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (22 samples, 0.50%)</title><rect x="373.2" y="451.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="376.2" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.48%)</title><rect x="373.2" y="435.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="376.2" y="446.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="375.6" y="419.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.6" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.18%)</title><rect x="375.9" y="419.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="378.9" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="376.2" y="403.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="379.2" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.14%)</title><rect x="376.4" y="403.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.4" y="414.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="376.4" y="387.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="379.4" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="376.4" y="371.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.4" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="376.4" y="355.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="379.4" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="377.2" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.2" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="378.0" y="419.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.0" y="430.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="378.6" y="403.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.6" y="414.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="378.6" y="387.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="378.8" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.8" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="379.1" y="451.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="382.1" y="462.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="379.4" y="435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.4" y="446.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="379.4" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.4" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="379.4" y="403.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="382.4" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="379.4" y="387.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.4" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="379.4" y="371.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.4" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="379.4" y="355.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="382.4" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="379.4" y="339.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.4" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="379.4" y="323.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="382.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="379.4" y="307.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="379.4" y="291.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.4" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="379.4" y="275.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.4" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="379.4" y="259.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.4" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="379.4" y="243.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.4" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="379.4" y="227.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="382.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="379.4" y="211.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.4" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="379.4" y="195.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.4" y="206.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="379.4" y="179.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.4" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="379.4" y="163.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="382.4" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="379.4" y="147.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="382.4" y="158.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="379.4" y="131.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.4" y="142.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="379.4" y="115.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.4" y="126.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="379.4" y="99.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="382.4" y="110.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="379.4" y="83.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.4" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="379.4" y="67.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="382.4" y="78.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="379.6" y="483.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.6" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="380.2" y="483.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="383.2" y="494.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="380.4" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="383.4" y="526.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="380.7" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="383.7" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="381.0" y="531.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="384.0" y="542.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.07%)</title><rect x="381.2" y="547.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.2" y="558.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="382.0" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.0" y="574.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="382.3" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="385.3" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="382.6" y="563.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.6" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.18%)</title><rect x="382.8" y="579.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.8" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="385.0" y="579.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.0" y="590.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="385.2" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.2" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.27%)</title><rect x="385.8" y="579.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.8" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="386.3" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.3" y="574.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.20%)</title><rect x="386.6" y="563.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.6" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.16%)</title><rect x="387.1" y="547.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="390.1" y="558.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.16%)</title><rect x="387.1" y="531.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="390.1" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.09%)</title><rect x="387.4" y="515.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="390.4" y="526.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.05%)</title><rect x="388.5" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="391.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="388.5" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="391.5" y="510.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.02%)</title><rect x="389.0" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.0" y="590.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="389.3" y="579.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="392.3" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="389.5" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="392.5" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="389.8" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="392.8" y="590.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="390.1" y="579.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="393.1" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="390.3" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="393.3" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="390.9" y="627.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.9" y="638.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="391.1" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.1" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="391.1" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.1" y="622.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.07%)</title><rect x="391.4" y="643.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.4" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.25%)</title><rect x="392.2" y="675.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.2" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (10 samples, 0.23%)</title><rect x="392.5" y="659.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="395.5" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.23%)</title><rect x="392.5" y="643.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.5" y="654.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="393.3" y="627.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.3" y="638.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (5 samples, 0.11%)</title><rect x="393.5" y="627.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="396.5" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="394.3" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.3" y="622.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.02%)</title><rect x="394.6" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="397.6" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="394.9" y="627.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="397.9" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.11%)</title><rect x="395.1" y="691.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="398.1" y="702.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="395.1" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="398.1" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="395.1" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.1" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="395.1" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="395.4" y="675.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="398.4" y="686.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="396.5" y="707.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="399.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="396.7" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="399.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="396.7" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="399.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="396.7" y="723.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="399.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.41%)</title><rect x="397.3" y="851.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.29%)</title><rect x="398.6" y="835.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.29%)</title><rect x="398.6" y="819.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.6" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="401.3" y="803.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="404.3" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="401.6" y="803.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="404.6" y="814.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="401.6" y="787.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="404.6" y="798.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="401.6" y="771.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="404.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.07%)</title><rect x="402.1" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$69/1679533751.run (953 samples, 21.59%)</title><rect x="402.9" y="915.0" width="254.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.9" y="926.0">ru/mail/polis/service/manikhin/Asy..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$2 (948 samples, 21.47%)</title><rect x="404.2" y="899.0" width="253.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.2" y="910.0">ru/mail/polis/service/manikhin/Asy..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.handleRequest (948 samples, 21.47%)</title><rect x="404.2" y="883.0" width="253.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.2" y="894.0">ru/mail/polis/service/manikhin/Asy..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (947 samples, 21.45%)</title><rect x="404.5" y="867.0" width="253.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.5" y="878.0">ru/mail/polis/service/manikhin/Asy..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (4 samples, 0.09%)</title><rect x="404.5" y="851.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.5" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (4 samples, 0.09%)</title><rect x="404.5" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.5" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.09%)</title><rect x="404.5" y="819.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.5" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.02%)</title><rect x="404.5" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.5" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.02%)</title><rect x="404.5" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.5" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.02%)</title><rect x="404.5" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.5" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.02%)</title><rect x="404.5" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.5" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.02%)</title><rect x="404.5" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.5" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.02%)</title><rect x="404.5" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.5" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.02%)</title><rect x="404.5" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.5" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.02%)</title><rect x="404.5" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.02%)</title><rect x="404.5" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.5" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (1 samples, 0.02%)</title><rect x="404.5" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.5" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (1 samples, 0.02%)</title><rect x="404.5" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.5" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (1 samples, 0.02%)</title><rect x="404.5" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="407.5" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (1 samples, 0.02%)</title><rect x="404.5" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.5" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (1 samples, 0.02%)</title><rect x="404.5" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.5" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (1 samples, 0.02%)</title><rect x="404.5" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="404.5" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="404.5" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.5" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.02%)</title><rect x="404.5" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.5" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="404.5" y="515.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="407.5" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (3 samples, 0.07%)</title><rect x="404.8" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.8" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (3 samples, 0.07%)</title><rect x="404.8" y="787.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.8" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxyUtil.steArrayToStepArray (3 samples, 0.07%)</title><rect x="404.8" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.8" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.&lt;init&gt; (3 samples, 0.07%)</title><rect x="404.8" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="405.0" y="739.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="408.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="405.3" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="408.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="405.3" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="408.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="405.3" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="408.3" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="405.3" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="408.3" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="405.3" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="408.3" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="405.3" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="408.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.05%)</title><rect x="405.6" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.6" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="405.6" y="835.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="405.8" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="405.8" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="408.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (7 samples, 0.16%)</title><rect x="406.1" y="851.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.1" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.16%)</title><rect x="406.1" y="835.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.1" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="406.1" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="409.1" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="406.4" y="819.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="409.4" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="406.6" y="819.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="406.6" y="803.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.6" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="406.6" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="406.6" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="406.6" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.6" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="407.2" y="739.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="407.4" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="407.4" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="407.4" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="407.7" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="410.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (442 samples, 10.01%)</title><rect x="408.0" y="851.0" width="118.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.0" y="862.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.format (8 samples, 0.18%)</title><rect x="408.0" y="835.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.0" y="846.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.18%)</title><rect x="408.0" y="819.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.0" y="830.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 0.18%)</title><rect x="408.0" y="803.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.0" y="814.0"></text>
</g>
<g>
<title>java/util/Formatter$FixedString.print (8 samples, 0.18%)</title><rect x="408.0" y="787.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.18%)</title><rect x="408.0" y="771.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.18%)</title><rect x="408.0" y="755.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="408.8" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.8" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="409.3" y="739.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="412.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="410.1" y="835.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="410.1" y="819.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="410.1" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="410.1" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.1" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="410.1" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="410.1" y="755.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="410.6" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.6" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="410.6" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.6" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (411 samples, 9.31%)</title><rect x="410.9" y="835.0" width="109.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.9" y="846.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (411 samples, 9.31%)</title><rect x="410.9" y="819.0" width="109.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.9" y="830.0">org/rocksdb/R..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.05%)</title><rect x="412.0" y="803.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="415.0" y="814.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (380 samples, 8.61%)</title><rect x="412.5" y="803.0" width="101.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="415.5" y="814.0">Java_org_roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (1 samples, 0.02%)</title><rect x="413.0" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="416.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.05%)</title><rect x="413.3" y="787.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="416.3" y="798.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="413.8" y="787.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="416.8" y="798.0"></text>
</g>
<g>
<title>cfree (3 samples, 0.07%)</title><rect x="414.4" y="787.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="417.4" y="798.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="415.2" y="787.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="418.2" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="415.4" y="787.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="418.4" y="798.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="416.5" y="787.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="419.5" y="798.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="416.8" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="419.8" y="798.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.05%)</title><rect x="417.1" y="787.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="420.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (4 samples, 0.09%)</title><rect x="417.6" y="787.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="420.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="418.7" y="787.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="421.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.05%)</title><rect x="418.9" y="787.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="421.9" y="798.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (351 samples, 7.95%)</title><rect x="419.5" y="787.0" width="93.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="422.5" y="798.0">rocksdb_get..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="419.5" y="771.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="422.5" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="419.7" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="422.7" y="782.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.05%)</title><rect x="420.0" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="423.0" y="782.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.11%)</title><rect x="420.5" y="771.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="423.5" y="782.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.09%)</title><rect x="420.8" y="755.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="423.8" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.18%)</title><rect x="421.9" y="771.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="424.9" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="421.9" y="755.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="424.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="422.1" y="755.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="425.1" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.09%)</title><rect x="422.9" y="755.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="425.9" y="766.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.07%)</title><rect x="424.0" y="771.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="427.0" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="424.8" y="771.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="427.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="425.1" y="771.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="428.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (299 samples, 6.77%)</title><rect x="425.3" y="771.0" width="80.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="428.3" y="782.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.05%)</title><rect x="425.3" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="428.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() [clone .plt] (1 samples, 0.02%)</title><rect x="425.9" y="755.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="428.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (296 samples, 6.70%)</title><rect x="426.1" y="755.0" width="79.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="429.1" y="766.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (287 samples, 6.50%)</title><rect x="428.3" y="739.0" width="76.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="431.3" y="750.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (284 samples, 6.43%)</title><rect x="428.3" y="723.0" width="75.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="431.3" y="734.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="428.3" y="707.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="431.3" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="428.8" y="707.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="431.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.05%)</title><rect x="429.1" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="432.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (3 samples, 0.07%)</title><rect x="429.6" y="707.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="432.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (5 samples, 0.11%)</title><rect x="430.4" y="707.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="433.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (267 samples, 6.05%)</title><rect x="431.8" y="707.0" width="71.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="434.8" y="718.0">rocksdb:..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="433.1" y="691.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="436.1" y="702.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (7 samples, 0.16%)</title><rect x="433.4" y="691.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="436.4" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.11%)</title><rect x="435.2" y="691.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="438.2" y="702.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.07%)</title><rect x="436.6" y="691.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="439.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (15 samples, 0.34%)</title><rect x="437.4" y="691.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="440.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (3 samples, 0.07%)</title><rect x="438.4" y="675.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="441.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.05%)</title><rect x="439.2" y="675.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="442.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (6 samples, 0.14%)</title><rect x="439.8" y="675.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="442.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (4 samples, 0.09%)</title><rect x="440.3" y="659.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="443.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (7 samples, 0.16%)</title><rect x="441.4" y="691.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="444.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (4 samples, 0.09%)</title><rect x="441.4" y="675.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="444.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.09%)</title><rect x="441.4" y="659.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="444.4" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="442.2" y="643.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="445.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.05%)</title><rect x="442.4" y="675.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="445.4" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="442.7" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="445.7" y="670.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="442.7" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="445.7" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="442.7" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="445.7" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="442.7" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="445.7" y="622.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="442.7" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="445.7" y="606.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="442.7" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="445.7" y="590.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="442.7" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="445.7" y="574.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="442.7" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="445.7" y="558.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="442.7" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="445.7" y="542.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="442.7" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.7" y="526.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="442.7" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.7" y="510.0"></text>
</g>
<g>
<title>ieee80211_queue_work?[mac80211] (1 samples, 0.02%)</title><rect x="442.7" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="445.7" y="494.0"></text>
</g>
<g>
<title>queue_work_on (1 samples, 0.02%)</title><rect x="442.7" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="443.0" y="675.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="446.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.05%)</title><rect x="443.2" y="691.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="446.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.02%)</title><rect x="443.8" y="691.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="446.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (217 samples, 4.92%)</title><rect x="444.0" y="691.0" width="58.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="447.0" y="702.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (2 samples, 0.05%)</title><rect x="444.8" y="675.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="447.8" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="445.4" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="448.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (210 samples, 4.76%)</title><rect x="445.7" y="675.0" width="56.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="448.7" y="686.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (202 samples, 4.58%)</title><rect x="446.7" y="659.0" width="54.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="449.7" y="670.0">/tmp/..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (6 samples, 0.14%)</title><rect x="447.0" y="643.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="450.0" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (1 samples, 0.02%)</title><rect x="448.3" y="627.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="451.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (158 samples, 3.58%)</title><rect x="448.6" y="643.0" width="42.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="451.6" y="654.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (16 samples, 0.36%)</title><rect x="475.1" y="627.0" width="4.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="478.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="479.3" y="627.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="482.3" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="480.4" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.4" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="480.4" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="483.4" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="480.4" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="483.4" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="480.4" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.4" y="590.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="480.4" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.4" y="574.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="480.4" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.4" y="558.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="480.4" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.4" y="542.0"></text>
</g>
<g>
<title>io_watchdog_func (1 samples, 0.02%)</title><rect x="480.4" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="483.4" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="480.4" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.4" y="510.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="480.7" y="627.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.7" y="638.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="480.7" y="611.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="483.7" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="480.7" y="595.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.7" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="480.7" y="579.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.7" y="590.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="480.7" y="563.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="483.7" y="574.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="480.7" y="547.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="483.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (37 samples, 0.84%)</title><rect x="480.9" y="627.0" width="9.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="483.9" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (4 samples, 0.09%)</title><rect x="483.1" y="611.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="486.1" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (24 samples, 0.54%)</title><rect x="484.1" y="611.0" width="6.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="487.1" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="490.3" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.3" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="490.3" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="493.3" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="490.3" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.3" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="490.3" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="493.3" y="558.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="490.3" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="493.3" y="542.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="490.3" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="490.6" y="611.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="493.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (32 samples, 0.72%)</title><rect x="490.8" y="643.0" width="8.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="493.8" y="654.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="498.8" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.8" y="638.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="498.8" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.8" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="498.8" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.8" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="498.8" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="501.8" y="590.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="498.8" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="501.8" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="499.1" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="502.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="499.1" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="502.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="499.1" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="502.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.02%)</title><rect x="499.4" y="643.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="502.4" y="654.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="499.6" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="502.6" y="654.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.07%)</title><rect x="499.9" y="643.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="502.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.09%)</title><rect x="500.7" y="659.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="503.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="501.8" y="675.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="504.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.02%)</title><rect x="502.0" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="505.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="502.3" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="505.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="502.6" y="691.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="505.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="502.8" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="505.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.02%)</title><rect x="503.1" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="506.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.02%)</title><rect x="503.4" y="707.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="506.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.02%)</title><rect x="503.6" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="506.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="503.9" y="707.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="506.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (3 samples, 0.07%)</title><rect x="504.2" y="723.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="507.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.02%)</title><rect x="505.0" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="508.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.02%)</title><rect x="505.3" y="771.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="508.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (28 samples, 0.63%)</title><rect x="505.5" y="771.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="508.5" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="505.8" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="508.8" y="766.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="506.1" y="755.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="509.1" y="766.0"></text>
</g>
<g>
<title>jni_NewByteArray (25 samples, 0.57%)</title><rect x="506.3" y="755.0" width="6.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="509.3" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="507.4" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="510.4" y="750.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.02%)</title><rect x="507.7" y="739.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="510.7" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="507.9" y="739.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="510.9" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.36%)</title><rect x="508.7" y="739.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="511.7" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (13 samples, 0.29%)</title><rect x="509.3" y="723.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="512.3" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.11%)</title><rect x="509.5" y="707.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="512.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="509.8" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="512.8" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="510.1" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="513.1" y="702.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="510.6" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="513.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="510.9" y="707.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="513.9" y="718.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.07%)</title><rect x="511.7" y="707.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="514.7" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="512.5" y="707.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="515.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="512.7" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="515.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="513.0" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="516.0" y="782.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.05%)</title><rect x="513.3" y="787.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="516.3" y="798.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.02%)</title><rect x="513.8" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="516.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="514.1" y="803.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="517.1" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="514.1" y="787.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="517.1" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (4 samples, 0.09%)</title><rect x="514.9" y="787.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="517.9" y="798.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="515.9" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="518.9" y="798.0"></text>
</g>
<g>
<title>__libc_malloc (11 samples, 0.25%)</title><rect x="516.2" y="803.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="519.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.09%)</title><rect x="519.2" y="803.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="522.2" y="814.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.02%)</title><rect x="520.2" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="523.2" y="814.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="520.5" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="523.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (20 samples, 0.45%)</title><rect x="520.8" y="835.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.8" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.23%)</title><rect x="521.6" y="819.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.6" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.23%)</title><rect x="521.6" y="803.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.23%)</title><rect x="521.6" y="787.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.23%)</title><rect x="521.6" y="771.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.18%)</title><rect x="521.6" y="755.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="523.4" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="523.4" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="523.7" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.7" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="524.2" y="819.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="527.2" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.11%)</title><rect x="524.8" y="819.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="527.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.sendResponse (492 samples, 11.14%)</title><rect x="526.1" y="851.0" width="131.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.1" y="862.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (490 samples, 11.10%)</title><rect x="526.6" y="835.0" width="131.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.6" y="846.0">one/nio/http/Htt..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (24 samples, 0.54%)</title><rect x="529.6" y="819.0" width="6.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="532.6" y="830.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="529.6" y="803.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="532.6" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (23 samples, 0.52%)</title><rect x="529.8" y="803.0" width="6.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="532.8" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (23 samples, 0.52%)</title><rect x="529.8" y="787.0" width="6.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="532.8" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="535.5" y="771.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="538.5" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="535.5" y="755.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.5" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="535.5" y="739.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="538.5" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="535.5" y="723.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="538.5" y="734.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="535.5" y="707.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="538.5" y="718.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="535.5" y="691.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="538.5" y="702.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.02%)</title><rect x="535.5" y="675.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="538.5" y="686.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="535.5" y="659.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="538.5" y="670.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.02%)</title><rect x="535.5" y="643.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="538.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="535.7" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.7" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="535.7" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="538.7" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="535.7" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="538.7" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="535.7" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.7" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="535.7" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="538.7" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="535.7" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="538.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (438 samples, 9.92%)</title><rect x="536.0" y="819.0" width="117.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.0" y="830.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.48%)</title><rect x="536.0" y="803.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.39%)</title><rect x="536.8" y="787.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (16 samples, 0.36%)</title><rect x="536.8" y="771.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.8" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="539.5" y="755.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.5" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="539.5" y="739.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="542.5" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="539.5" y="723.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="542.5" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="539.5" y="707.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.5" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="539.5" y="691.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="542.5" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="539.5" y="675.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="542.5" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="539.5" y="659.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="542.5" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.11%)</title><rect x="539.7" y="755.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="542.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="541.1" y="771.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="541.1" y="755.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="541.1" y="739.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.1" y="750.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="541.3" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="544.3" y="798.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="541.3" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.3" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="541.3" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.3" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="541.3" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.3" y="750.0"></text>
</g>
<g>
<title>net_tx_action (1 samples, 0.02%)</title><rect x="541.3" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="544.3" y="734.0"></text>
</g>
<g>
<title>__kfree_skb_defer (1 samples, 0.02%)</title><rect x="541.3" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="544.3" y="718.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="541.3" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="544.3" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="541.3" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (417 samples, 9.45%)</title><rect x="541.6" y="803.0" width="111.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.6" y="814.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (417 samples, 9.45%)</title><rect x="541.6" y="787.0" width="111.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.6" y="798.0">one/nio/net/S..</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="542.9" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="545.9" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="543.2" y="771.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="546.2" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.05%)</title><rect x="543.2" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="546.2" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="543.5" y="739.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="546.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (409 samples, 9.26%)</title><rect x="543.7" y="771.0" width="109.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.7" y="782.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (408 samples, 9.24%)</title><rect x="544.0" y="755.0" width="109.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="766.0">one/nio/net/N..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.09%)</title><rect x="546.9" y="739.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="549.9" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.16%)</title><rect x="548.0" y="739.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="551.0" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="548.8" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="551.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="549.4" y="723.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="552.4" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="549.4" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="552.4" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="549.9" y="739.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="552.9" y="750.0"></text>
</g>
<g>
<title>send (384 samples, 8.70%)</title><rect x="550.4" y="739.0" width="102.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="553.4" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (377 samples, 8.54%)</title><rect x="552.3" y="723.0" width="100.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="555.3" y="734.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="552.3" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="555.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (376 samples, 8.52%)</title><rect x="552.6" y="707.0" width="100.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.6" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (371 samples, 8.40%)</title><rect x="553.6" y="691.0" width="99.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="556.6" y="702.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (371 samples, 8.40%)</title><rect x="553.6" y="675.0" width="99.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.6" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (365 samples, 8.27%)</title><rect x="553.6" y="659.0" width="97.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.6" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (360 samples, 8.15%)</title><rect x="553.6" y="643.0" width="96.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.6" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (360 samples, 8.15%)</title><rect x="553.6" y="627.0" width="96.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="556.6" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="553.6" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.11%)</title><rect x="553.9" y="611.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.9" y="622.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.18%)</title><rect x="555.2" y="611.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.2" y="622.0"></text>
</g>
<g>
<title>__release_sock (6 samples, 0.14%)</title><rect x="555.5" y="595.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="558.5" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="555.5" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.5" y="590.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="555.8" y="579.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="558.8" y="590.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.02%)</title><rect x="555.8" y="563.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="558.8" y="574.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="555.8" y="547.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.8" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="555.8" y="531.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.8" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.09%)</title><rect x="556.0" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="559.0" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.09%)</title><rect x="556.0" y="563.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="559.0" y="574.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.07%)</title><rect x="556.3" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="559.3" y="558.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.07%)</title><rect x="556.3" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="559.3" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="556.3" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="559.3" y="526.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="556.3" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="559.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="556.3" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="559.3" y="494.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="556.6" y="499.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="559.6" y="510.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="556.6" y="483.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="559.6" y="494.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="556.6" y="467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="559.6" y="478.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="556.6" y="451.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="559.6" y="462.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="556.8" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="559.8" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="556.8" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="559.8" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="557.1" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="560.1" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="557.4" y="611.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="560.4" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="557.6" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.6" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (342 samples, 7.75%)</title><rect x="557.9" y="611.0" width="91.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.9" y="622.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="559.5" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="562.5" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="559.8" y="579.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="562.8" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.11%)</title><rect x="560.0" y="595.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.0" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.09%)</title><rect x="560.3" y="579.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="563.3" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.07%)</title><rect x="561.4" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="564.4" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.07%)</title><rect x="561.4" y="579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.4" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (40 samples, 0.91%)</title><rect x="562.2" y="595.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="565.2" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (38 samples, 0.86%)</title><rect x="562.4" y="579.0" width="10.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.4" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (20 samples, 0.45%)</title><rect x="563.0" y="563.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (14 samples, 0.32%)</title><rect x="563.0" y="547.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="566.0" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.09%)</title><rect x="564.6" y="531.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="567.6" y="542.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="565.7" y="531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="568.7" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.07%)</title><rect x="565.9" y="531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="568.9" y="542.0"></text>
</g>
<g>
<title>memset (6 samples, 0.14%)</title><rect x="566.7" y="547.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="569.7" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.02%)</title><rect x="568.3" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="571.3" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.14%)</title><rect x="568.6" y="563.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.6" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="569.7" y="547.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="572.7" y="558.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.11%)</title><rect x="570.2" y="563.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.2" y="574.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.11%)</title><rect x="570.2" y="547.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="573.2" y="558.0"></text>
</g>
<g>
<title>memset (4 samples, 0.09%)</title><rect x="571.5" y="563.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.5" y="574.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="572.6" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="575.6" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.07%)</title><rect x="572.9" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="575.9" y="606.0"></text>
</g>
<g>
<title>tcp_push (274 samples, 6.21%)</title><rect x="573.7" y="595.0" width="73.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="576.7" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (274 samples, 6.21%)</title><rect x="573.7" y="579.0" width="73.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.7" y="590.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (274 samples, 6.21%)</title><rect x="573.7" y="563.0" width="73.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="576.7" y="574.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="574.5" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.5" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (238 samples, 5.39%)</title><rect x="575.0" y="547.0" width="63.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.0" y="558.0">__tcp_t..</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="575.5" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="578.5" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (230 samples, 5.21%)</title><rect x="576.1" y="531.0" width="61.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.1" y="542.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (229 samples, 5.19%)</title><rect x="576.1" y="515.0" width="61.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.1" y="526.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="576.9" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="576.9" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="579.9" y="494.0"></text>
</g>
<g>
<title>ip_local_out (224 samples, 5.07%)</title><rect x="577.4" y="499.0" width="59.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.4" y="510.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="578.0" y="483.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="581.0" y="494.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="578.0" y="467.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="581.0" y="478.0"></text>
</g>
<g>
<title>ip_output (221 samples, 5.01%)</title><rect x="578.2" y="483.0" width="59.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="581.2" y="494.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (221 samples, 5.01%)</title><rect x="578.2" y="467.0" width="59.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="581.2" y="478.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="579.0" y="451.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="582.0" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (216 samples, 4.89%)</title><rect x="579.6" y="451.0" width="57.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.6" y="462.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (214 samples, 4.85%)</title><rect x="580.1" y="435.0" width="57.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="583.1" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (187 samples, 4.24%)</title><rect x="582.0" y="419.0" width="49.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="585.0" y="430.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (187 samples, 4.24%)</title><rect x="582.0" y="403.0" width="49.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="585.0" y="414.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (185 samples, 4.19%)</title><rect x="582.5" y="387.0" width="49.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="585.5" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (185 samples, 4.19%)</title><rect x="582.5" y="371.0" width="49.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.5" y="382.0">__sof..</text>
</g>
<g>
<title>net_rx_action (175 samples, 3.96%)</title><rect x="584.6" y="355.0" width="46.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="587.6" y="366.0">net_..</text>
</g>
<g>
<title>process_backlog (173 samples, 3.92%)</title><rect x="585.2" y="339.0" width="46.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="588.2" y="350.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (169 samples, 3.83%)</title><rect x="586.2" y="323.0" width="45.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="589.2" y="334.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (169 samples, 3.83%)</title><rect x="586.2" y="307.0" width="45.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.2" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.09%)</title><rect x="586.2" y="291.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="589.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv (164 samples, 3.71%)</title><rect x="587.3" y="291.0" width="43.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="590.3" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="587.6" y="275.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.05%)</title><rect x="587.8" y="275.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (160 samples, 3.62%)</title><rect x="588.4" y="275.0" width="42.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="591.4" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (159 samples, 3.60%)</title><rect x="588.4" y="259.0" width="42.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.4" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (159 samples, 3.60%)</title><rect x="588.4" y="243.0" width="42.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.4" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (159 samples, 3.60%)</title><rect x="588.4" y="227.0" width="42.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="591.4" y="238.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="588.6" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.6" y="222.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.05%)</title><rect x="588.9" y="211.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="591.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (155 samples, 3.51%)</title><rect x="589.4" y="211.0" width="41.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="592.4" y="222.0">tcp..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="590.2" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.2" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="590.5" y="195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.09%)</title><rect x="591.0" y="195.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.0" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="591.3" y="179.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="594.3" y="190.0"></text>
</g>
<g>
<title>tcp_add_backlog (1 samples, 0.02%)</title><rect x="592.1" y="195.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.1" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="592.4" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="595.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (143 samples, 3.24%)</title><rect x="592.7" y="195.0" width="38.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="595.7" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="592.7" y="179.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="595.7" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.14%)</title><rect x="592.9" y="179.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="595.9" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (136 samples, 3.08%)</title><rect x="594.5" y="179.0" width="36.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="597.5" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.18%)</title><rect x="595.6" y="163.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="598.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.18%)</title><rect x="595.6" y="147.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="598.6" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.18%)</title><rect x="595.6" y="131.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.18%)</title><rect x="595.6" y="115.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="598.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.14%)</title><rect x="596.1" y="99.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="599.1" y="110.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="597.7" y="163.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.7" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="598.3" y="163.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (44 samples, 1.00%)</title><rect x="598.5" y="163.0" width="11.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.5" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="600.7" y="147.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.7" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="601.5" y="147.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="604.5" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="601.7" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="604.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (30 samples, 0.68%)</title><rect x="602.0" y="147.0" width="8.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="605.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.50%)</title><rect x="603.1" y="131.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.1" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.09%)</title><rect x="603.1" y="115.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.09%)</title><rect x="603.1" y="99.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="606.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.09%)</title><rect x="603.1" y="83.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="606.1" y="94.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.05%)</title><rect x="603.6" y="67.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="606.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.41%)</title><rect x="604.1" y="115.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="607.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.41%)</title><rect x="604.1" y="99.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.23%)</title><rect x="606.3" y="83.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.3" y="94.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.23%)</title><rect x="606.3" y="67.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.11%)</title><rect x="607.6" y="51.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.6" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (3 samples, 0.07%)</title><rect x="608.2" y="35.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="611.2" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.07%)</title><rect x="609.0" y="131.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.0" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="609.8" y="131.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.8" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="610.0" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="613.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (71 samples, 1.61%)</title><rect x="610.3" y="163.0" width="19.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (71 samples, 1.61%)</title><rect x="610.3" y="147.0" width="19.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="613.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (68 samples, 1.54%)</title><rect x="611.1" y="131.0" width="18.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (68 samples, 1.54%)</title><rect x="611.1" y="115.0" width="18.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="614.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (68 samples, 1.54%)</title><rect x="611.1" y="99.0" width="18.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="614.1" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="629.3" y="163.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="632.3" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="629.8" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="632.8" y="174.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="629.8" y="147.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="632.8" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="630.3" y="163.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.3" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="630.9" y="259.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="633.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="631.1" y="291.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="634.1" y="302.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="631.4" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="634.4" y="366.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="631.4" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="634.4" y="350.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="631.4" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="634.4" y="334.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="631.7" y="355.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="634.7" y="366.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="631.7" y="339.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="634.7" y="350.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="631.7" y="323.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="634.7" y="334.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="631.7" y="307.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="634.7" y="318.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="631.7" y="291.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="634.7" y="302.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="631.7" y="275.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="634.7" y="286.0"></text>
</g>
<g>
<title>ieee80211_rx_h_action?[mac80211] (1 samples, 0.02%)</title><rect x="631.7" y="259.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="634.7" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.41%)</title><rect x="631.9" y="419.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="634.9" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.39%)</title><rect x="631.9" y="403.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="634.9" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="634.1" y="387.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.14%)</title><rect x="634.3" y="387.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="637.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.14%)</title><rect x="634.3" y="371.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="637.3" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="634.9" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="637.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="635.4" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.4" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="635.4" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="638.4" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="635.4" y="323.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.4" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="635.9" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="638.9" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="635.9" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="638.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="636.2" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="639.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="636.5" y="403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="639.5" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="636.7" y="419.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="637.0" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.0" y="414.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="637.0" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.0" y="398.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="637.0" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.0" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="637.0" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="640.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="637.0" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="637.0" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="640.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="637.0" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="640.0" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="637.0" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="640.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="637.0" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="637.0" y="259.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="640.0" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="637.0" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="640.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="637.0" y="227.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="640.0" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="637.0" y="211.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="637.0" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="640.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="637.0" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="640.0" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="637.0" y="163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="640.0" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="637.0" y="147.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="640.0" y="158.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="637.3" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.3" y="526.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="637.6" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.6" y="542.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="637.6" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.6" y="526.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="638.1" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="641.1" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="638.4" y="531.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="641.4" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="638.6" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.6" y="558.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.09%)</title><rect x="638.9" y="547.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="641.9" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="640.0" y="547.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="643.0" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="640.2" y="547.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="643.2" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.39%)</title><rect x="640.8" y="547.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.8" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="641.6" y="531.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="644.6" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (13 samples, 0.29%)</title><rect x="641.8" y="531.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="644.8" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.25%)</title><rect x="642.4" y="515.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="645.4" y="526.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.23%)</title><rect x="642.6" y="499.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="645.6" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.20%)</title><rect x="642.9" y="483.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="645.9" y="494.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.02%)</title><rect x="645.3" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="648.3" y="558.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="645.6" y="547.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="648.6" y="558.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="645.8" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="648.8" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.07%)</title><rect x="646.1" y="547.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.1" y="558.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="646.4" y="531.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.4" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="646.6" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="649.6" y="542.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="646.6" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="649.6" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="646.9" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="649.9" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.16%)</title><rect x="647.4" y="595.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="650.4" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="647.4" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="650.4" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.14%)</title><rect x="647.7" y="579.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="650.7" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="648.8" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="651.8" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="649.3" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="652.3" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.11%)</title><rect x="649.8" y="643.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.8" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.11%)</title><rect x="649.8" y="627.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.8" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.11%)</title><rect x="649.8" y="611.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.8" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.07%)</title><rect x="650.4" y="595.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="653.4" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="650.9" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="653.9" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.14%)</title><rect x="651.2" y="659.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="654.2" y="670.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.09%)</title><rect x="651.2" y="643.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="651.2" y="627.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="654.2" y="638.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="651.2" y="611.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="652.3" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.3" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="652.8" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.8" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="652.8" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="655.8" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="652.8" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="655.8" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="652.8" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.39%)</title><rect x="653.1" y="819.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.23%)</title><rect x="654.9" y="803.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.23%)</title><rect x="654.9" y="787.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.9" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.11%)</title><rect x="656.3" y="771.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="659.3" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="656.3" y="755.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="659.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.09%)</title><rect x="656.5" y="755.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="659.5" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.09%)</title><rect x="656.5" y="739.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="659.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.09%)</title><rect x="657.6" y="947.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.09%)</title><rect x="657.6" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.09%)</title><rect x="657.6" y="915.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="657.6" y="899.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (344 samples, 7.79%)</title><rect x="658.7" y="947.0" width="91.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.7" y="958.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (329 samples, 7.45%)</title><rect x="659.2" y="931.0" width="87.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.2" y="942.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (218 samples, 4.94%)</title><rect x="659.2" y="915.0" width="58.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.2" y="926.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (16 samples, 0.36%)</title><rect x="660.5" y="899.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="660.5" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="660.5" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="660.5" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.5" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="660.5" y="835.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="663.5" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="660.5" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="663.5" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="660.8" y="819.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="663.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="660.8" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="660.8" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="660.8" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="663.8" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="660.8" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="663.8" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="660.8" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="663.8" y="750.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="660.8" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.8" y="734.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="660.8" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="663.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (14 samples, 0.32%)</title><rect x="661.1" y="883.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (14 samples, 0.32%)</title><rect x="664.8" y="899.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.32%)</title><rect x="664.8" y="883.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.18%)</title><rect x="666.4" y="867.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.18%)</title><rect x="666.4" y="851.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="666.4" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.16%)</title><rect x="666.7" y="835.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.7" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.16%)</title><rect x="666.7" y="819.0" width="1.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="669.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.14%)</title><rect x="667.0" y="803.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="670.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.14%)</title><rect x="667.0" y="787.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="670.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.14%)</title><rect x="667.0" y="771.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="670.0" y="782.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.14%)</title><rect x="667.0" y="755.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="670.0" y="766.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.14%)</title><rect x="667.0" y="739.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="670.0" y="750.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.14%)</title><rect x="667.0" y="723.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="670.0" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.14%)</title><rect x="667.0" y="707.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="670.0" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.14%)</title><rect x="667.0" y="691.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.05%)</title><rect x="668.6" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.05%)</title><rect x="668.6" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (181 samples, 4.10%)</title><rect x="669.1" y="899.0" width="48.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.1" y="910.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (180 samples, 4.08%)</title><rect x="669.4" y="883.0" width="48.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.4" y="894.0">jdk/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="671.0" y="867.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="674.0" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="671.2" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="674.2" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (77 samples, 1.74%)</title><rect x="671.5" y="867.0" width="20.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="674.5" y="878.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.09%)</title><rect x="671.8" y="851.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="674.8" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.29%)</title><rect x="672.8" y="851.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="675.8" y="862.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.07%)</title><rect x="674.2" y="835.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="677.2" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.11%)</title><rect x="675.0" y="835.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="678.0" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="676.3" y="851.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="679.3" y="862.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="677.1" y="851.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="680.1" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="677.4" y="851.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="680.4" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (41 samples, 0.93%)</title><rect x="677.6" y="851.0" width="11.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="680.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.63%)</title><rect x="681.1" y="835.0" width="7.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="684.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="681.1" y="819.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.1" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="681.9" y="819.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.52%)</title><rect x="682.5" y="819.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="685.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.34%)</title><rect x="684.3" y="803.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="687.3" y="814.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.34%)</title><rect x="684.3" y="787.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="687.3" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.09%)</title><rect x="684.3" y="771.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="687.3" y="782.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.23%)</title><rect x="685.4" y="771.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="688.4" y="782.0"></text>
</g>
<g>
<title>get_futex_key (7 samples, 0.16%)</title><rect x="686.2" y="755.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.2" y="766.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (4 samples, 0.09%)</title><rect x="687.0" y="739.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.0" y="750.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="688.1" y="771.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="688.3" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="691.3" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="688.3" y="787.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="691.3" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="688.3" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="691.3" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="688.6" y="851.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="691.6" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="689.4" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="692.4" y="862.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="689.7" y="851.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="692.7" y="862.0"></text>
</g>
<g>
<title>pthread_cond_wait (1 samples, 0.02%)</title><rect x="690.2" y="851.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="693.2" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.14%)</title><rect x="690.5" y="851.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="693.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 2.11%)</title><rect x="692.1" y="867.0" width="24.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="695.1" y="878.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="692.1" y="851.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="695.1" y="862.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="692.6" y="851.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="695.6" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (73 samples, 1.65%)</title><rect x="692.9" y="851.0" width="19.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="695.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.86%)</title><rect x="702.2" y="835.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="705.2" y="846.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="702.2" y="819.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="705.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.82%)</title><rect x="702.8" y="819.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.8" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.75%)</title><rect x="703.6" y="803.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.6" y="814.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.68%)</title><rect x="704.1" y="787.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="707.1" y="798.0"></text>
</g>
<g>
<title>futex_wait (30 samples, 0.68%)</title><rect x="704.1" y="771.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="707.1" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="704.6" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="707.6" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 0.43%)</title><rect x="704.9" y="755.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="707.9" y="766.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.36%)</title><rect x="705.7" y="739.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="708.7" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (16 samples, 0.36%)</title><rect x="705.7" y="723.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="708.7" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.36%)</title><rect x="705.7" y="707.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.7" y="718.0"></text>
</g>
<g>
<title>__mmdrop (1 samples, 0.02%)</title><rect x="709.4" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.4" y="702.0"></text>
</g>
<g>
<title>pgd_free (1 samples, 0.02%)</title><rect x="709.4" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="712.4" y="686.0"></text>
</g>
<g>
<title>free_pages (1 samples, 0.02%)</title><rect x="709.4" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.4" y="670.0"></text>
</g>
<g>
<title>free_pages.part.0 (1 samples, 0.02%)</title><rect x="709.4" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.4" y="654.0"></text>
</g>
<g>
<title>__free_pages (1 samples, 0.02%)</title><rect x="709.4" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.4" y="638.0"></text>
</g>
<g>
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="709.4" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.4" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="709.7" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.7" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="709.7" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="712.7" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="709.7" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="712.7" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="709.7" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.7" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="709.7" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="712.7" y="638.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="709.7" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="712.7" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="709.7" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="712.7" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.11%)</title><rect x="710.0" y="755.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.0" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="711.1" y="739.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="714.1" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="711.1" y="723.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="714.1" y="734.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="711.3" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.3" y="766.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="711.6" y="755.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="714.6" y="766.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="712.1" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="715.1" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (12 samples, 0.27%)</title><rect x="712.4" y="851.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="715.4" y="862.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.09%)</title><rect x="715.6" y="851.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="718.6" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="716.7" y="851.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="719.7" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="716.9" y="867.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="719.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="717.5" y="915.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (19 samples, 0.43%)</title><rect x="717.7" y="915.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (19 samples, 0.43%)</title><rect x="717.7" y="899.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.09%)</title><rect x="720.7" y="883.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.09%)</title><rect x="721.7" y="883.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.09%)</title><rect x="721.7" y="867.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.09%)</title><rect x="721.7" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.09%)</title><rect x="721.7" y="835.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.7" y="846.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="721.7" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="724.7" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="722.0" y="819.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="725.0" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="722.0" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="725.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="722.3" y="819.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="725.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="722.3" y="803.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="725.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (91 samples, 2.06%)</title><rect x="722.8" y="915.0" width="24.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.8" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (91 samples, 2.06%)</title><rect x="722.8" y="899.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.8" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (91 samples, 2.06%)</title><rect x="722.8" y="883.0" width="24.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.8" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (80 samples, 1.81%)</title><rect x="725.8" y="867.0" width="21.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.8" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (80 samples, 1.81%)</title><rect x="725.8" y="851.0" width="21.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.8" y="862.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.23%)</title><rect x="726.6" y="835.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="729.6" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="726.8" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="729.8" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="727.1" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="730.1" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="727.6" y="819.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="730.6" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.09%)</title><rect x="728.2" y="819.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="731.2" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (67 samples, 1.52%)</title><rect x="729.2" y="835.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="732.2" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 1.34%)</title><rect x="731.4" y="819.0" width="15.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="734.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 1.34%)</title><rect x="731.4" y="803.0" width="15.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="734.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (57 samples, 1.29%)</title><rect x="731.9" y="787.0" width="15.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="734.9" y="798.0"></text>
</g>
<g>
<title>do_futex (57 samples, 1.29%)</title><rect x="731.9" y="771.0" width="15.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.9" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="731.9" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="734.9" y="766.0"></text>
</g>
<g>
<title>futex_wake (56 samples, 1.27%)</title><rect x="732.2" y="755.0" width="14.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="735.2" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="732.4" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="735.4" y="750.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.05%)</title><rect x="732.7" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="735.7" y="750.0"></text>
</g>
<g>
<title>wake_up_q (52 samples, 1.18%)</title><rect x="733.2" y="739.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.2" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (50 samples, 1.13%)</title><rect x="733.8" y="723.0" width="13.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="736.8" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (49 samples, 1.11%)</title><rect x="733.8" y="707.0" width="13.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="736.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="746.9" y="707.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="749.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (13 samples, 0.29%)</title><rect x="747.1" y="931.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.1" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (39 samples, 0.88%)</title><rect x="750.6" y="947.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.6" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 0.88%)</title><rect x="750.6" y="931.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.6" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$103/2116484703.run (39 samples, 0.88%)</title><rect x="750.6" y="915.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.6" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (39 samples, 0.88%)</title><rect x="750.6" y="899.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.6" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (39 samples, 0.88%)</title><rect x="750.6" y="883.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.6" y="894.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (39 samples, 0.88%)</title><rect x="750.6" y="867.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.6" y="878.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (5 samples, 0.11%)</title><rect x="750.6" y="851.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.6" y="862.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (5 samples, 0.11%)</title><rect x="750.6" y="835.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.6" y="846.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (5 samples, 0.11%)</title><rect x="750.6" y="819.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.6" y="830.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (5 samples, 0.11%)</title><rect x="750.6" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.6" y="814.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (5 samples, 0.11%)</title><rect x="750.6" y="787.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.6" y="798.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (5 samples, 0.11%)</title><rect x="750.6" y="771.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.6" y="782.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (5 samples, 0.11%)</title><rect x="750.6" y="755.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.6" y="766.0"></text>
</g>
<g>
<title>Java_java_net_SocketInputStream_socketRead0 (3 samples, 0.07%)</title><rect x="750.6" y="739.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="753.6" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="750.6" y="723.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="753.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="750.6" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="753.6" y="718.0"></text>
</g>
<g>
<title>poll (2 samples, 0.05%)</title><rect x="750.9" y="723.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="753.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="750.9" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="750.9" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_poll (2 samples, 0.05%)</title><rect x="750.9" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="753.9" y="686.0"></text>
</g>
<g>
<title>do_sys_poll (2 samples, 0.05%)</title><rect x="750.9" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.9" y="670.0"></text>
</g>
<g>
<title>poll_schedule_timeout.constprop.0 (1 samples, 0.02%)</title><rect x="750.9" y="643.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.9" y="654.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="750.9" y="627.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.9" y="638.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="750.9" y="611.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="753.9" y="622.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="750.9" y="595.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="753.9" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="750.9" y="579.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.9" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="750.9" y="563.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="753.9" y="574.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="751.1" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="754.1" y="654.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="751.1" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="754.1" y="638.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.05%)</title><rect x="751.4" y="739.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="754.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="751.4" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="754.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="751.4" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="754.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.05%)</title><rect x="751.4" y="691.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="754.4" y="702.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.05%)</title><rect x="751.4" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="754.4" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.05%)</title><rect x="751.4" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="754.4" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.05%)</title><rect x="751.4" y="643.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="754.4" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.05%)</title><rect x="751.4" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="754.4" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="751.7" y="611.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.7" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="751.7" y="595.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="754.7" y="606.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="751.7" y="579.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="754.7" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="751.7" y="563.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="754.7" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="751.7" y="547.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="754.7" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (34 samples, 0.77%)</title><rect x="751.9" y="851.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.9" y="862.0"></text>
</g>
<g>
<title>java/rmi/server/ObjID.read (1 samples, 0.02%)</title><rect x="751.9" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.9" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readLong (1 samples, 0.02%)</title><rect x="751.9" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.9" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readLong (1 samples, 0.02%)</title><rect x="751.9" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.9" y="814.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readLong (1 samples, 0.02%)</title><rect x="751.9" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.9" y="798.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readFully (1 samples, 0.02%)</title><rect x="751.9" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.read (1 samples, 0.02%)</title><rect x="751.9" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.9" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 0.75%)</title><rect x="752.2" y="835.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.2" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (33 samples, 0.75%)</title><rect x="752.2" y="819.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.2" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (33 samples, 0.75%)</title><rect x="752.2" y="803.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.2" y="814.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (33 samples, 0.75%)</title><rect x="752.2" y="787.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.2" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (17 samples, 0.39%)</title><rect x="752.2" y="771.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (17 samples, 0.39%)</title><rect x="752.2" y="755.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor42.invoke (17 samples, 0.39%)</title><rect x="752.2" y="739.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.2" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (17 samples, 0.39%)</title><rect x="752.2" y="723.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.2" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (15 samples, 0.34%)</title><rect x="752.2" y="707.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.2" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (15 samples, 0.34%)</title><rect x="752.2" y="691.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.2" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (15 samples, 0.34%)</title><rect x="752.2" y="675.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.2" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (15 samples, 0.34%)</title><rect x="752.2" y="659.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.2" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (15 samples, 0.34%)</title><rect x="752.2" y="643.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.2" y="654.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (15 samples, 0.34%)</title><rect x="752.2" y="627.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.2" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (15 samples, 0.34%)</title><rect x="752.2" y="611.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (15 samples, 0.34%)</title><rect x="752.2" y="595.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.2" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (14 samples, 0.32%)</title><rect x="752.2" y="579.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.2" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (14 samples, 0.32%)</title><rect x="752.2" y="563.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.2" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (14 samples, 0.32%)</title><rect x="752.2" y="547.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.2" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (14 samples, 0.32%)</title><rect x="752.2" y="531.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.2" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (14 samples, 0.32%)</title><rect x="752.2" y="515.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.2" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (13 samples, 0.29%)</title><rect x="752.2" y="499.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.2" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (13 samples, 0.29%)</title><rect x="752.2" y="483.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.2" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (13 samples, 0.29%)</title><rect x="752.2" y="467.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.2" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (13 samples, 0.29%)</title><rect x="752.2" y="451.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.2" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.09%)</title><rect x="752.2" y="435.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.2" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (4 samples, 0.09%)</title><rect x="752.2" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.2" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.09%)</title><rect x="752.2" y="403.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.2" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.09%)</title><rect x="752.2" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.2" y="398.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.09%)</title><rect x="752.2" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.2" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.05%)</title><rect x="752.2" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.2" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.next (1 samples, 0.02%)</title><rect x="752.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (1 samples, 0.02%)</title><rect x="752.2" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.02%)</title><rect x="752.5" y="339.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.02%)</title><rect x="752.5" y="323.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.02%)</title><rect x="752.5" y="307.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.contains (1 samples, 0.02%)</title><rect x="752.5" y="291.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="752.5" y="275.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.5" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.05%)</title><rect x="752.7" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="752.7" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="752.7" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="752.7" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="753.0" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.0" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.07%)</title><rect x="753.3" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.3" y="446.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (3 samples, 0.07%)</title><rect x="753.3" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="753.3" y="403.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="753.3" y="387.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="753.5" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="753.5" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="753.8" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.8" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (6 samples, 0.14%)</title><rect x="754.1" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.14%)</title><rect x="754.1" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.14%)</title><rect x="754.1" y="403.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (4 samples, 0.09%)</title><rect x="754.6" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.6" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (4 samples, 0.09%)</title><rect x="754.6" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="754.6" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="754.6" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor14.invoke (1 samples, 0.02%)</title><rect x="754.6" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.6" y="334.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (1 samples, 0.02%)</title><rect x="754.6" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.6" y="318.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="754.6" y="291.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="757.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (1 samples, 0.02%)</title><rect x="754.9" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.9" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.ensureInvocableMethod (2 samples, 0.05%)</title><rect x="755.2" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.02%)</title><rect x="755.4" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.4" y="350.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="755.4" y="323.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="758.4" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.02%)</title><rect x="755.7" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="755.7" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="755.7" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.02%)</title><rect x="755.7" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.7" y="462.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.02%)</title><rect x="755.7" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.7" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="755.7" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="755.7" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor46.invoke (1 samples, 0.02%)</title><rect x="755.7" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.7" y="398.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (1 samples, 0.02%)</title><rect x="755.7" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.7" y="382.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (1 samples, 0.02%)</title><rect x="755.7" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.7" y="366.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (1 samples, 0.02%)</title><rect x="755.7" y="339.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="758.7" y="350.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (1 samples, 0.02%)</title><rect x="755.7" y="323.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="758.7" y="334.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="756.0" y="579.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="759.0" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.05%)</title><rect x="756.2" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="756.2" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.2" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.02%)</title><rect x="756.2" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.2" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.02%)</title><rect x="756.2" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.2" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="756.2" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="756.2" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.02%)</title><rect x="756.2" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (1 samples, 0.02%)</title><rect x="756.2" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.2" y="606.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.02%)</title><rect x="756.2" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.2" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.02%)</title><rect x="756.2" y="563.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="759.2" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="756.2" y="547.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="759.2" y="558.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="756.2" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="759.2" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.02%)</title><rect x="756.5" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.5" y="702.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.02%)</title><rect x="756.5" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="759.5" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.02%)</title><rect x="756.5" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.02%)</title><rect x="756.5" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.02%)</title><rect x="756.5" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.02%)</title><rect x="756.5" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.02%)</title><rect x="756.5" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.5" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.02%)</title><rect x="756.5" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.5" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.02%)</title><rect x="756.5" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.5" y="574.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.02%)</title><rect x="756.5" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.5" y="558.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.02%)</title><rect x="756.5" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.5" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.02%)</title><rect x="756.5" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.5" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClassForName (1 samples, 0.02%)</title><rect x="756.5" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.02%)</title><rect x="756.5" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.02%)</title><rect x="756.5" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="759.5" y="478.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.02%)</title><rect x="756.5" y="451.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="759.5" y="462.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="756.5" y="435.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="759.5" y="446.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (11 samples, 0.25%)</title><rect x="756.8" y="771.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (11 samples, 0.25%)</title><rect x="756.8" y="755.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.8" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.25%)</title><rect x="756.8" y="739.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.8" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (10 samples, 0.23%)</title><rect x="756.8" y="723.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.23%)</title><rect x="756.8" y="707.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.23%)</title><rect x="756.8" y="691.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.23%)</title><rect x="756.8" y="675.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (10 samples, 0.23%)</title><rect x="756.8" y="659.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.8" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.23%)</title><rect x="756.8" y="643.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.23%)</title><rect x="756.8" y="627.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.23%)</title><rect x="756.8" y="611.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (10 samples, 0.23%)</title><rect x="756.8" y="595.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.8" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.23%)</title><rect x="756.8" y="579.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.23%)</title><rect x="756.8" y="563.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (10 samples, 0.23%)</title><rect x="756.8" y="547.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (10 samples, 0.23%)</title><rect x="756.8" y="531.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (10 samples, 0.23%)</title><rect x="756.8" y="515.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.8" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.23%)</title><rect x="756.8" y="499.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.8" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (3 samples, 0.07%)</title><rect x="757.0" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (3 samples, 0.07%)</title><rect x="757.0" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.0" y="478.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.02%)</title><rect x="757.0" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.0" y="462.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.02%)</title><rect x="757.0" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (2 samples, 0.05%)</title><rect x="757.3" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.3" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="757.6" y="435.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="760.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (2 samples, 0.05%)</title><rect x="757.8" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.8" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (2 samples, 0.05%)</title><rect x="757.8" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.8" y="478.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.05%)</title><rect x="757.8" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.8" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2 samples, 0.05%)</title><rect x="758.4" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="761.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.05%)</title><rect x="758.4" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="758.4" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="758.4" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.05%)</title><rect x="758.4" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.05%)</title><rect x="758.4" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="758.4" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="758.4" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.05%)</title><rect x="758.4" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.4" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="758.4" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="758.4" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (2 samples, 0.05%)</title><rect x="758.4" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.05%)</title><rect x="758.4" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.4" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="758.4" y="275.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.02%)</title><rect x="758.4" y="259.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="761.4" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.02%)</title><rect x="758.4" y="243.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="761.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.02%)</title><rect x="758.4" y="227.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.4" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="758.4" y="211.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="761.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="758.6" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="758.6" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.02%)</title><rect x="758.6" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="758.9" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeClassDesc (1 samples, 0.02%)</title><rect x="758.9" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.02%)</title><rect x="758.9" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="759.2" y="467.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="759.2" y="451.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="759.2" y="435.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="759.2" y="419.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="759.2" y="403.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="759.2" y="387.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="759.2" y="371.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="759.2" y="355.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.02%)</title><rect x="759.2" y="339.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.02%)</title><rect x="759.2" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.2" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="759.2" y="307.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.2" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="759.2" y="291.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.2" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.02%)</title><rect x="759.2" y="275.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.getUTFLength (1 samples, 0.02%)</title><rect x="759.2" y="259.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.2" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="759.4" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="759.4" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="759.4" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.4" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="759.4" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="759.4" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor41.invoke (1 samples, 0.02%)</title><rect x="759.4" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (1 samples, 0.02%)</title><rect x="759.4" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="759.4" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="759.4" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="759.4" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeClassDesc (1 samples, 0.02%)</title><rect x="759.4" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeNonProxyDesc (1 samples, 0.02%)</title><rect x="759.4" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.writeNonProxy (1 samples, 0.02%)</title><rect x="759.4" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeUTF (1 samples, 0.02%)</title><rect x="759.4" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeUTF (1 samples, 0.02%)</title><rect x="759.4" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.4" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.getUTFLength (1 samples, 0.02%)</title><rect x="759.4" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (3 samples, 0.07%)</title><rect x="759.7" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.7" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$108/1854244321.readString (1 samples, 0.02%)</title><rect x="759.7" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.02%)</title><rect x="759.7" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.7" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.02%)</title><rect x="759.7" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.7" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.02%)</title><rect x="759.7" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.02%)</title><rect x="759.7" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.finish (1 samples, 0.02%)</title><rect x="759.7" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.05%)</title><rect x="760.0" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.0" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.05%)</title><rect x="760.0" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.05%)</title><rect x="760.0" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.0" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.05%)</title><rect x="760.0" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.0" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.05%)</title><rect x="760.0" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.0" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (2 samples, 0.05%)</title><rect x="760.0" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.0" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="760.0" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="760.0" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 0.05%)</title><rect x="760.0" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.0" y="638.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (2 samples, 0.05%)</title><rect x="760.0" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (2 samples, 0.05%)</title><rect x="760.0" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (2 samples, 0.05%)</title><rect x="760.0" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.05%)</title><rect x="760.0" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.05%)</title><rect x="760.0" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.05%)</title><rect x="760.0" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.05%)</title><rect x="760.0" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.0" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (2 samples, 0.05%)</title><rect x="760.0" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.0" y="510.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (2 samples, 0.05%)</title><rect x="760.0" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.0" y="494.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (2 samples, 0.05%)</title><rect x="760.0" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.0" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (2 samples, 0.05%)</title><rect x="760.0" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.0" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (2 samples, 0.05%)</title><rect x="760.0" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.forName (2 samples, 0.05%)</title><rect x="760.0" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (2 samples, 0.05%)</title><rect x="760.0" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.0" y="414.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.02%)</title><rect x="760.0" y="387.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="763.0" y="398.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.02%)</title><rect x="760.0" y="371.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="763.0" y="382.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="760.0" y="355.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="763.0" y="366.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_array_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.02%)</title><rect x="760.0" y="339.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="763.0" y="350.0"></text>
</g>
<g>
<title>FieldType::get_array_info(Symbol*, FieldArrayInfo&amp;, Thread*) (1 samples, 0.02%)</title><rect x="760.0" y="323.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="763.0" y="334.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.02%)</title><rect x="760.0" y="307.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="763.0" y="318.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="760.0" y="291.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="763.0" y="302.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (1 samples, 0.02%)</title><rect x="760.2" y="387.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="763.2" y="398.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (1 samples, 0.02%)</title><rect x="760.5" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.5" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (1 samples, 0.02%)</title><rect x="760.5" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.5" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.5" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.5" y="750.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.5" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.5" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.5" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.5" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="760.5" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.5" y="702.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.02%)</title><rect x="760.5" y="675.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="763.5" y="686.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.02%)</title><rect x="760.5" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="763.5" y="670.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="760.5" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="763.5" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (1 samples, 0.02%)</title><rect x="760.8" y="771.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (1 samples, 0.02%)</title><rect x="760.8" y="755.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.8" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.flush (1 samples, 0.02%)</title><rect x="760.8" y="739.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.8" y="750.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.02%)</title><rect x="760.8" y="723.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.8" y="734.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.02%)</title><rect x="760.8" y="707.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.8" y="718.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (1 samples, 0.02%)</title><rect x="760.8" y="691.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.8" y="702.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (1 samples, 0.02%)</title><rect x="760.8" y="675.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.8" y="686.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (1 samples, 0.02%)</title><rect x="760.8" y="659.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.8" y="670.0"></text>
</g>
<g>
<title>send (1 samples, 0.02%)</title><rect x="760.8" y="643.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="763.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="760.8" y="627.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="760.8" y="611.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="760.8" y="595.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="763.8" y="606.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.02%)</title><rect x="760.8" y="579.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="763.8" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="760.8" y="563.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="763.8" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="760.8" y="547.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="763.8" y="558.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="760.8" y="531.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="763.8" y="542.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="760.8" y="515.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="763.8" y="526.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="760.8" y="499.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.8" y="510.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="760.8" y="483.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="763.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$67/253098529.run (1 samples, 0.02%)</title><rect x="761.0" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$forwardRequest$1 (1 samples, 0.02%)</title><rect x="761.0" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="761.0" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="761.0" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.0" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,581 samples, 35.81%)</title><rect x="761.3" y="995.0" width="422.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.3" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.11%)</title><rect x="762.4" y="979.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="765.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.07%)</title><rect x="763.7" y="979.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.07%)</title><rect x="763.7" y="963.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.07%)</title><rect x="763.7" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (352 samples, 7.97%)</title><rect x="764.5" y="979.0" width="94.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.5" y="990.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (350 samples, 7.93%)</title><rect x="765.0" y="963.0" width="93.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.0" y="974.0">one/nio/net..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (18 samples, 0.41%)</title><rect x="770.9" y="947.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="773.9" y="958.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="775.7" y="947.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="778.7" y="958.0"></text>
</g>
<g>
<title>clock_gettime (24 samples, 0.54%)</title><rect x="776.3" y="947.0" width="6.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="779.3" y="958.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.23%)</title><rect x="780.0" y="931.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="783.0" y="942.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.20%)</title><rect x="780.3" y="915.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="783.3" y="926.0"></text>
</g>
<g>
<title>epoll_wait (284 samples, 6.43%)</title><rect x="782.7" y="947.0" width="75.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="785.7" y="958.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (221 samples, 5.01%)</title><rect x="799.5" y="931.0" width="59.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="802.5" y="942.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (221 samples, 5.01%)</title><rect x="799.5" y="915.0" width="59.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="802.5" y="926.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (210 samples, 4.76%)</title><rect x="802.5" y="899.0" width="56.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="805.5" y="910.0">__x64_..</text>
</g>
<g>
<title>do_epoll_wait (210 samples, 4.76%)</title><rect x="802.5" y="883.0" width="56.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="805.5" y="894.0">do_epo..</text>
</g>
<g>
<title>__fdget (8 samples, 0.18%)</title><rect x="803.0" y="867.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="806.0" y="878.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.18%)</title><rect x="803.0" y="851.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="806.0" y="862.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.18%)</title><rect x="803.0" y="835.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="806.0" y="846.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="805.1" y="867.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="808.1" y="878.0"></text>
</g>
<g>
<title>ep_poll (192 samples, 4.35%)</title><rect x="805.7" y="867.0" width="51.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="808.7" y="878.0">ep_poll</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.09%)</title><rect x="809.4" y="851.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="812.4" y="862.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="810.5" y="851.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="813.5" y="862.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (142 samples, 3.22%)</title><rect x="810.7" y="851.0" width="38.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.7" y="862.0">ep_..</text>
</g>
<g>
<title>ep_send_events_proc (108 samples, 2.45%)</title><rect x="818.0" y="835.0" width="28.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="821.0" y="846.0">ep..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (10 samples, 0.23%)</title><rect x="822.5" y="819.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="825.5" y="830.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (75 samples, 1.70%)</title><rect x="825.2" y="819.0" width="20.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="828.2" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.09%)</title><rect x="827.6" y="803.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="830.6" y="814.0"></text>
</g>
<g>
<title>sock_poll (61 samples, 1.38%)</title><rect x="828.7" y="803.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="831.7" y="814.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (11 samples, 0.25%)</title><rect x="834.8" y="787.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.8" y="798.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="837.7" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="840.7" y="798.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="837.7" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.7" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="837.7" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="840.7" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="837.7" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="840.7" y="750.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="837.7" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="840.7" y="734.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="837.7" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.7" y="718.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="837.7" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="840.7" y="702.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="837.7" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.7" y="686.0"></text>
</g>
<g>
<title>tcp_poll (16 samples, 0.36%)</title><rect x="838.0" y="787.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="841.0" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (10 samples, 0.23%)</title><rect x="842.3" y="787.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="845.3" y="798.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="845.0" y="803.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="848.0" y="814.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.14%)</title><rect x="845.2" y="819.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="848.2" y="830.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.16%)</title><rect x="846.8" y="835.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="849.8" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.07%)</title><rect x="848.7" y="851.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="851.7" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="849.2" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.2" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="849.2" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="852.2" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="849.2" y="803.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="852.2" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="849.2" y="787.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="852.2" y="798.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.11%)</title><rect x="849.5" y="851.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="852.5" y="862.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="850.8" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="853.8" y="862.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="850.8" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.8" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="850.8" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.8" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="850.8" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.8" y="814.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="850.8" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.8" y="798.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="850.8" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="853.8" y="782.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="850.8" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.8" y="766.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="850.8" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.8" y="750.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="850.8" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="853.8" y="734.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="850.8" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="853.8" y="718.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="850.8" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="853.8" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 0.50%)</title><rect x="851.1" y="851.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.1" y="862.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="851.1" y="835.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.1" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (20 samples, 0.45%)</title><rect x="851.6" y="835.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="854.6" y="846.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.45%)</title><rect x="851.6" y="819.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="854.6" y="830.0"></text>
</g>
<g>
<title>__sched_text_start (19 samples, 0.43%)</title><rect x="851.9" y="803.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="854.9" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.41%)</title><rect x="852.2" y="787.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.2" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="856.7" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="859.7" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="856.7" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="859.7" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="856.7" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="859.7" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="856.7" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="859.7" y="734.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="856.7" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="859.7" y="718.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="856.7" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="859.7" y="702.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="856.7" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.7" y="686.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="856.7" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="859.7" y="670.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.02%)</title><rect x="856.7" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="859.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="856.7" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="859.7" y="638.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.14%)</title><rect x="857.0" y="867.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="860.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,202 samples, 27.23%)</title><rect x="858.6" y="979.0" width="321.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.6" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.02%)</title><rect x="865.5" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="868.5" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="865.8" y="963.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="868.8" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="866.1" y="963.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.1" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="866.1" y="947.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="869.1" y="958.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.02%)</title><rect x="866.3" y="931.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="869.3" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="866.6" y="947.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="869.6" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="866.6" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="869.6" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 0.02%)</title><rect x="866.6" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="869.6" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.14%)</title><rect x="866.9" y="963.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="869.9" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.07%)</title><rect x="866.9" y="947.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="869.9" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="867.4" y="931.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="870.4" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="867.7" y="947.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="870.7" y="958.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.02%)</title><rect x="867.9" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="870.9" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="868.2" y="947.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="871.2" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="868.5" y="963.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="871.5" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="868.5" y="947.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="871.5" y="958.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="868.5" y="931.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="871.5" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="868.5" y="915.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,162 samples, 26.32%)</title><rect x="869.0" y="963.0" width="310.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.0" y="974.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (717 samples, 16.24%)</title><rect x="869.5" y="947.0" width="191.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.5" y="958.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (542 samples, 12.28%)</title><rect x="871.1" y="931.0" width="144.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.1" y="942.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (540 samples, 12.23%)</title><rect x="871.7" y="915.0" width="144.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.7" y="926.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (480 samples, 10.87%)</title><rect x="871.7" y="899.0" width="128.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.7" y="910.0">RequestHandler1_..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.07%)</title><rect x="871.9" y="883.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="871.9" y="867.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="871.9" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="871.9" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (43 samples, 0.97%)</title><rect x="872.7" y="883.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (42 samples, 0.95%)</title><rect x="873.0" y="867.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.0" y="878.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="876.0" y="851.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="879.0" y="862.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="876.0" y="835.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="879.0" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="876.0" y="819.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="879.0" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="876.0" y="803.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="876.2" y="851.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="879.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.07%)</title><rect x="876.2" y="835.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="877.0" y="851.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="877.0" y="835.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="880.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.11%)</title><rect x="877.3" y="819.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.3" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="878.6" y="851.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="881.6" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.20%)</title><rect x="879.2" y="851.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="882.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (10 samples, 0.23%)</title><rect x="881.6" y="851.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.16%)</title><rect x="882.4" y="835.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.16%)</title><rect x="882.4" y="819.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.16%)</title><rect x="882.4" y="803.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (433 samples, 9.81%)</title><rect x="884.2" y="883.0" width="115.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.2" y="894.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (189 samples, 4.28%)</title><rect x="885.3" y="867.0" width="50.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.3" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.02%)</title><rect x="885.3" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.02%)</title><rect x="885.3" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (1 samples, 0.02%)</title><rect x="885.3" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.3" y="830.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.02%)</title><rect x="885.3" y="803.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="888.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (188 samples, 4.26%)</title><rect x="885.6" y="851.0" width="50.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.6" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (161 samples, 3.65%)</title><rect x="892.8" y="835.0" width="43.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.8" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (24 samples, 0.54%)</title><rect x="896.3" y="819.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (24 samples, 0.54%)</title><rect x="896.3" y="803.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (24 samples, 0.54%)</title><rect x="896.3" y="787.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (24 samples, 0.54%)</title><rect x="896.3" y="771.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.54%)</title><rect x="896.3" y="755.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="902.7" y="819.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="902.7" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="902.7" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="903.0" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="903.0" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="903.0" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="903.0" y="723.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="906.0" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="903.0" y="707.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="906.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="903.0" y="691.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="906.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="903.0" y="675.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="903.2" y="723.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="906.2" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="903.2" y="707.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="906.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="903.2" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="903.2" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="906.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="903.2" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.2" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="903.2" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="906.2" y="654.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="903.2" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="906.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (121 samples, 2.74%)</title><rect x="903.5" y="819.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.5" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (121 samples, 2.74%)</title><rect x="903.5" y="803.0" width="32.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.5" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (121 samples, 2.74%)</title><rect x="903.5" y="787.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.5" y="798.0">ja..</text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.02%)</title><rect x="904.3" y="771.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="907.3" y="782.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="904.3" y="755.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="907.3" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="904.3" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="907.3" y="750.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="904.3" y="723.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="907.3" y="734.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="904.3" y="707.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="907.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (117 samples, 2.65%)</title><rect x="904.6" y="771.0" width="31.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.6" y="782.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (116 samples, 2.63%)</title><rect x="904.8" y="755.0" width="31.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.8" y="766.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 0.43%)</title><rect x="906.7" y="739.0" width="5.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="909.7" y="750.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="907.8" y="723.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.8" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="907.8" y="707.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="910.8" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="907.8" y="691.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.8" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="907.8" y="675.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="910.8" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="907.8" y="659.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="910.8" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="908.0" y="723.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="911.0" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="908.6" y="723.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="911.6" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.09%)</title><rect x="908.8" y="723.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="911.8" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="909.9" y="723.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="912.9" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.11%)</title><rect x="910.4" y="723.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="913.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (89 samples, 2.02%)</title><rect x="911.8" y="739.0" width="23.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="914.8" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.79%)</title><rect x="914.4" y="723.0" width="21.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.4" y="734.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="914.4" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 1.77%)</title><rect x="914.7" y="707.0" width="20.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="917.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (74 samples, 1.68%)</title><rect x="915.8" y="691.0" width="19.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="918.8" y="702.0"></text>
</g>
<g>
<title>do_futex (74 samples, 1.68%)</title><rect x="915.8" y="675.0" width="19.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="918.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="915.8" y="659.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="918.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (73 samples, 1.65%)</title><rect x="916.0" y="659.0" width="19.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.0" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.16%)</title><rect x="917.4" y="643.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="920.4" y="654.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.07%)</title><rect x="918.5" y="627.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="921.5" y="638.0"></text>
</g>
<g>
<title>wake_q_add_safe (4 samples, 0.09%)</title><rect x="919.3" y="643.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="922.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (57 samples, 1.29%)</title><rect x="920.3" y="643.0" width="15.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="923.3" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (56 samples, 1.27%)</title><rect x="920.6" y="627.0" width="15.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="923.6" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (55 samples, 1.25%)</title><rect x="920.9" y="611.0" width="14.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="923.9" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="935.3" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="938.3" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="935.3" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.3" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="935.3" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.3" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="935.3" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.3" y="558.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="935.3" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="938.3" y="542.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="935.3" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="938.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="935.6" y="739.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="938.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.forwardRequest (218 samples, 4.94%)</title><rect x="935.8" y="867.0" width="58.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.8" y="878.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (212 samples, 4.80%)</title><rect x="935.8" y="851.0" width="56.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.8" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.02%)</title><rect x="935.8" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="938.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="935.8" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="938.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="935.8" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="938.8" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="935.8" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="938.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="935.8" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="938.8" y="782.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="935.8" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="938.8" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="935.8" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="938.8" y="750.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="935.8" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="938.8" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="935.8" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="938.8" y="718.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="935.8" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="938.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (211 samples, 4.78%)</title><rect x="936.1" y="835.0" width="56.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.1" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (188 samples, 4.26%)</title><rect x="939.8" y="819.0" width="50.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.8" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (35 samples, 0.79%)</title><rect x="944.6" y="803.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (35 samples, 0.79%)</title><rect x="944.6" y="787.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (35 samples, 0.79%)</title><rect x="944.6" y="771.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (35 samples, 0.79%)</title><rect x="944.6" y="755.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.79%)</title><rect x="944.6" y="739.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.6" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="953.5" y="723.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.5" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="953.5" y="707.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="956.5" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="953.5" y="691.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="956.5" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="953.5" y="675.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="956.5" y="686.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="953.5" y="659.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.5" y="670.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="953.5" y="643.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="956.5" y="654.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="953.7" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="956.7" y="734.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="953.7" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.7" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="953.7" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="956.7" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="953.7" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.7" y="686.0"></text>
</g>
<g>
<title>net_tx_action (1 samples, 0.02%)</title><rect x="953.7" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="956.7" y="670.0"></text>
</g>
<g>
<title>__kfree_skb_defer (1 samples, 0.02%)</title><rect x="953.7" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="956.7" y="654.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="953.7" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="956.7" y="638.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="953.7" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="956.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.11%)</title><rect x="954.0" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.11%)</title><rect x="954.0" y="787.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="954.0" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="954.0" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="954.0" y="739.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="954.0" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.0" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="954.0" y="707.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="957.0" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="954.0" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="957.0" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="954.3" y="691.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="957.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="954.3" y="675.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="957.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="954.3" y="659.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="957.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.5" y="707.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="957.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="954.5" y="691.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="957.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="954.8" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (129 samples, 2.92%)</title><rect x="955.3" y="803.0" width="34.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.3" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (129 samples, 2.92%)</title><rect x="955.3" y="787.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.3" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (129 samples, 2.92%)</title><rect x="955.3" y="771.0" width="34.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="958.3" y="782.0">ja..</text>
</g>
<g>
<title>SafepointBlob (1 samples, 0.02%)</title><rect x="957.7" y="755.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="960.7" y="766.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="957.7" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="960.7" y="750.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="957.7" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.7" y="734.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="957.7" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="960.7" y="718.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="957.7" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="960.7" y="702.0"></text>
</g>
<g>
<title>bad_area_access_error (1 samples, 0.02%)</title><rect x="957.7" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.7" y="686.0"></text>
</g>
<g>
<title>__bad_area_nosemaphore (1 samples, 0.02%)</title><rect x="957.7" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="960.7" y="670.0"></text>
</g>
<g>
<title>unhandled_signal (1 samples, 0.02%)</title><rect x="957.7" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="960.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (119 samples, 2.70%)</title><rect x="958.0" y="755.0" width="31.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.0" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (119 samples, 2.70%)</title><rect x="958.0" y="739.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.0" y="750.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (35 samples, 0.79%)</title><rect x="958.8" y="723.0" width="9.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="961.8" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="960.1" y="707.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.1" y="718.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="960.7" y="707.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="963.7" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="960.9" y="707.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="963.9" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.09%)</title><rect x="961.5" y="707.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="964.5" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.20%)</title><rect x="962.6" y="707.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="965.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="965.0" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="968.0" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="965.5" y="707.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="968.5" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="966.3" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="969.3" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="966.6" y="707.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="969.6" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.07%)</title><rect x="967.4" y="707.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="970.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="968.2" y="723.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="971.2" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="968.2" y="707.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="971.2" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (79 samples, 1.79%)</title><rect x="968.4" y="723.0" width="21.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="971.4" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 1.59%)</title><rect x="970.8" y="707.0" width="18.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="973.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (70 samples, 1.59%)</title><rect x="970.8" y="691.0" width="18.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="973.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (65 samples, 1.47%)</title><rect x="972.2" y="675.0" width="17.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="975.2" y="686.0"></text>
</g>
<g>
<title>do_futex (64 samples, 1.45%)</title><rect x="972.4" y="659.0" width="17.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="975.4" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="972.7" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (61 samples, 1.38%)</title><rect x="973.0" y="643.0" width="16.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="976.0" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="976.2" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="979.2" y="638.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="976.2" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="979.2" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="976.5" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.5" y="638.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.07%)</title><rect x="976.5" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="979.5" y="622.0"></text>
</g>
<g>
<title>wake_q_add_safe (5 samples, 0.11%)</title><rect x="977.3" y="627.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="980.3" y="638.0"></text>
</g>
<g>
<title>wake_up_q (40 samples, 0.91%)</title><rect x="978.6" y="627.0" width="10.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="981.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (39 samples, 0.88%)</title><rect x="978.9" y="611.0" width="10.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="981.9" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (38 samples, 0.86%)</title><rect x="978.9" y="595.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.9" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="989.0" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.0" y="606.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="989.3" y="643.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="992.3" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="989.5" y="723.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="992.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="989.8" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="992.8" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="989.8" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="992.8" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="989.8" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.8" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="989.8" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.8" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="989.8" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.8" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="989.8" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="992.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.20%)</title><rect x="990.1" y="819.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="993.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.isCancelled (6 samples, 0.14%)</title><rect x="992.5" y="851.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="993.8" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Topology.primaryFor (22 samples, 0.50%)</title><rect x="994.1" y="867.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (22 samples, 0.50%)</title><rect x="994.1" y="851.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.1" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (14 samples, 0.32%)</title><rect x="995.7" y="835.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="998.7" y="846.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="999.4" y="835.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1002.4" y="846.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="999.4" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1002.4" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="999.4" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.4" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="999.4" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1002.4" y="798.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="999.4" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.4" y="782.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="999.4" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1002.4" y="766.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="999.4" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1002.4" y="750.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="999.4" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1002.4" y="734.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="999.4" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1002.4" y="718.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="999.4" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1002.4" y="702.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="999.4" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.4" y="686.0"></text>
</g>
<g>
<title>ieee80211_deliver_skb?[mac80211] (1 samples, 0.02%)</title><rect x="999.4" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1002.4" y="670.0"></text>
</g>
<g>
<title>netif_receive_skb (1 samples, 0.02%)</title><rect x="999.4" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.4" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="999.4" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.4" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="999.4" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1002.4" y="622.0"></text>
</g>
<g>
<title>arp_rcv (1 samples, 0.02%)</title><rect x="999.4" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1002.4" y="606.0"></text>
</g>
<g>
<title>arp_process (1 samples, 0.02%)</title><rect x="999.4" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1002.4" y="590.0"></text>
</g>
<g>
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="999.4" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.4" y="574.0"></text>
</g>
<g>
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="999.4" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1002.4" y="558.0"></text>
</g>
<g>
<title>ip_route_input_slow (1 samples, 0.02%)</title><rect x="999.4" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="999.7" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1002.7" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="999.7" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.7" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="999.7" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.7" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="999.7" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.7" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="999.7" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1002.7" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="999.7" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1002.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (58 samples, 1.31%)</title><rect x="1000.0" y="899.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (58 samples, 1.31%)</title><rect x="1000.0" y="883.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1003.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (40 samples, 0.91%)</title><rect x="1000.0" y="867.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.0" y="878.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1008.5" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1011.5" y="862.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1008.5" y="835.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1011.5" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1008.5" y="819.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1011.5" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1008.5" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1011.5" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.14%)</title><rect x="1008.8" y="851.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1011.8" y="862.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1010.1" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1013.1" y="846.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1010.1" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1013.1" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1010.1" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1013.1" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1010.1" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.1" y="798.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1010.4" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1013.4" y="862.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1010.4" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1013.4" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1010.4" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1013.4" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1010.4" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1013.4" y="814.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="1010.4" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1013.4" y="798.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="1010.4" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1013.4" y="782.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="1010.4" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1013.4" y="766.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="1010.4" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1013.4" y="750.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="1010.4" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1013.4" y="734.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="1010.4" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1013.4" y="718.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="1010.4" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1013.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.41%)</title><rect x="1010.7" y="867.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (18 samples, 0.41%)</title><rect x="1010.7" y="851.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (18 samples, 0.41%)</title><rect x="1010.7" y="835.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.7" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.07%)</title><rect x="1012.8" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1015.8" y="830.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.16%)</title><rect x="1013.6" y="819.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1016.6" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1015.2" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1018.2" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1015.2" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.2" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1015.2" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1018.2" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1015.2" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1018.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="1015.5" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1015.5" y="883.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1015.5" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.5" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1015.5" y="851.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1018.5" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1015.5" y="835.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.5" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1015.5" y="819.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1018.5" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1015.5" y="803.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1018.5" y="814.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1015.5" y="787.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1018.5" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1015.5" y="771.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.5" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1015.5" y="755.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.5" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1015.7" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.7" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1015.7" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1018.7" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1015.7" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1018.7" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1015.7" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.7" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1015.7" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1018.7" y="798.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1015.7" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1018.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1015.7" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.7" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1015.7" y="739.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.7" y="750.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="1015.7" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (92 samples, 2.08%)</title><rect x="1016.0" y="931.0" width="24.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1019.0" y="942.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1021.4" y="915.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1024.4" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1021.4" y="899.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1024.4" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1021.4" y="883.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1024.4" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1021.4" y="867.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1024.4" y="878.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1021.4" y="851.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1024.4" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1021.4" y="835.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1024.4" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1021.4" y="819.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1024.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.41%)</title><rect x="1021.6" y="915.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.6" y="926.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (2 samples, 0.05%)</title><rect x="1021.9" y="899.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1024.9" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1022.4" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1025.4" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="1022.4" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1025.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.02%)</title><rect x="1022.4" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1025.4" y="878.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.4" y="851.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1025.4" y="862.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.4" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1025.4" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1022.4" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1025.4" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1022.4" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1025.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.32%)</title><rect x="1022.7" y="899.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.32%)</title><rect x="1022.7" y="883.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.32%)</title><rect x="1022.7" y="867.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1025.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.14%)</title><rect x="1024.8" y="851.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.93%)</title><rect x="1026.4" y="915.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.77%)</title><rect x="1028.3" y="899.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1037.1" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1037.1" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="1037.1" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.1" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1037.1" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1040.1" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1037.1" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1040.1" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1037.1" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.1" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1037.1" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1040.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1037.1" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1040.1" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="1037.1" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1040.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (12 samples, 0.27%)</title><rect x="1037.4" y="915.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.4" y="926.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1040.3" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1043.3" y="910.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1040.3" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1043.3" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1040.3" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1043.3" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1040.3" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.3" y="862.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="1040.3" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1043.3" y="846.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="1040.3" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1043.3" y="830.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="1040.3" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1043.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="1040.6" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="1040.6" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.6" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="1040.6" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1043.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.29%)</title><rect x="1040.9" y="931.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.18%)</title><rect x="1042.2" y="915.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.18%)</title><rect x="1042.2" y="899.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 1.43%)</title><rect x="1044.3" y="931.0" width="16.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.3" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.70%)</title><rect x="1052.6" y="915.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="1060.1" y="899.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1063.1" y="910.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.07%)</title><rect x="1060.1" y="883.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.1" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="1060.1" y="867.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1063.1" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="1060.1" y="851.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.1" y="862.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="1060.1" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1063.1" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1060.1" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.1" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1060.1" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1063.1" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1060.1" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1063.1" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1060.1" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1063.1" y="782.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="1060.4" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.4" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="1060.4" y="819.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1063.4" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1060.6" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1063.6" y="830.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="1060.6" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.6" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1060.9" y="915.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1063.9" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1060.9" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.9" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1060.9" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1063.9" y="894.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1060.9" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1063.9" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1060.9" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1063.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="1061.2" y="947.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (442 samples, 10.01%)</title><rect x="1061.4" y="947.0" width="118.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.4" y="958.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (413 samples, 9.35%)</title><rect x="1065.7" y="931.0" width="110.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1068.7" y="942.0">one/nio/net/N..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.25%)</title><rect x="1069.7" y="915.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1072.7" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1072.4" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1075.4" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1072.4" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.4" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1072.4" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.4" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1072.4" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1075.4" y="862.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1072.4" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1075.4" y="846.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="1072.4" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1075.4" y="830.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1072.4" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.4" y="814.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.02%)</title><rect x="1072.4" y="787.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1075.4" y="798.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1072.4" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1075.4" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1072.4" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1075.4" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1072.4" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1075.4" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (68 samples, 1.54%)</title><rect x="1072.7" y="915.0" width="18.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1075.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (16 samples, 0.36%)</title><rect x="1074.0" y="899.0" width="4.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1077.0" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.18%)</title><rect x="1078.3" y="899.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1081.3" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1080.4" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1083.4" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1080.7" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.7" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="1081.0" y="899.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1084.0" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (36 samples, 0.82%)</title><rect x="1081.2" y="899.0" width="9.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1084.2" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.09%)</title><rect x="1084.2" y="883.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1087.2" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (14 samples, 0.32%)</title><rect x="1085.2" y="883.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1088.2" y="894.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.02%)</title><rect x="1088.4" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1091.4" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="1088.4" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1091.4" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1088.4" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1091.4" y="846.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="1088.4" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1091.4" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1088.4" y="803.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1091.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1088.7" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1091.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1088.7" y="851.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1091.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1088.7" y="835.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1091.7" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1088.7" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.7" y="830.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1088.7" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.7" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1088.7" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1091.7" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.16%)</title><rect x="1089.0" y="883.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1092.0" y="894.0"></text>
</g>
<g>
<title>__recv (313 samples, 7.09%)</title><rect x="1090.8" y="915.0" width="83.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1093.8" y="926.0">__recv</text>
</g>
<g>
<title>apic_timer_interrupt (4 samples, 0.09%)</title><rect x="1097.8" y="899.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1100.8" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (4 samples, 0.09%)</title><rect x="1097.8" y="883.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1100.8" y="894.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.09%)</title><rect x="1097.8" y="867.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1100.8" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.09%)</title><rect x="1097.8" y="851.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1100.8" y="862.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="1098.1" y="835.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1101.1" y="846.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="1098.1" y="819.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1101.1" y="830.0"></text>
</g>
<g>
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="1098.1" y="803.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1101.1" y="814.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1098.3" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1101.3" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1098.3" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1101.3" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1098.3" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1101.3" y="814.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1098.6" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1101.6" y="846.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="1098.6" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (283 samples, 6.41%)</title><rect x="1098.9" y="899.0" width="75.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1101.9" y="910.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.05%)</title><rect x="1098.9" y="883.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1101.9" y="894.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="1099.4" y="883.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1102.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (278 samples, 6.30%)</title><rect x="1100.2" y="883.0" width="74.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1103.2" y="894.0">do_sysca..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="1104.7" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (258 samples, 5.84%)</title><rect x="1105.0" y="867.0" width="69.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1108.0" y="878.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (257 samples, 5.82%)</title><rect x="1105.0" y="851.0" width="68.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1108.0" y="862.0">__sys_r..</text>
</g>
<g>
<title>fput_many (3 samples, 0.07%)</title><rect x="1106.9" y="835.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1109.9" y="846.0"></text>
</g>
<g>
<title>sock_recvmsg (222 samples, 5.03%)</title><rect x="1107.7" y="835.0" width="59.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.7" y="846.0">sock_r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.14%)</title><rect x="1107.9" y="819.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1110.9" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="1109.6" y="819.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1112.6" y="830.0"></text>
</g>
<g>
<title>inet6_recvmsg (173 samples, 3.92%)</title><rect x="1110.1" y="819.0" width="46.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1113.1" y="830.0">inet..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1110.6" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1113.6" y="814.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1110.9" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1113.9" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1111.2" y="803.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1114.2" y="814.0"></text>
</g>
<g>
<title>tcp_recvmsg (168 samples, 3.81%)</title><rect x="1111.4" y="803.0" width="44.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1114.4" y="814.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (47 samples, 1.06%)</title><rect x="1115.2" y="787.0" width="12.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.2" y="798.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="1115.4" y="771.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1118.4" y="782.0"></text>
</g>
<g>
<title>skb_release_all (41 samples, 0.93%)</title><rect x="1116.2" y="771.0" width="11.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.2" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1116.2" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1119.2" y="766.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="1116.5" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.5" y="766.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.34%)</title><rect x="1116.8" y="755.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1119.8" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (17 samples, 0.39%)</title><rect x="1120.8" y="755.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1123.8" y="766.0"></text>
</g>
<g>
<title>dst_release (17 samples, 0.39%)</title><rect x="1120.8" y="739.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.8" y="750.0"></text>
</g>
<g>
<title>sock_rfree (7 samples, 0.16%)</title><rect x="1125.3" y="755.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.3" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="1127.2" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1130.2" y="782.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1127.7" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1130.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (14 samples, 0.32%)</title><rect x="1128.0" y="787.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1131.0" y="798.0"></text>
</g>
<g>
<title>lock_sock_nested (13 samples, 0.29%)</title><rect x="1131.7" y="787.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (13 samples, 0.29%)</title><rect x="1131.7" y="771.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1134.7" y="782.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (13 samples, 0.29%)</title><rect x="1131.7" y="755.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1134.7" y="766.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.14%)</title><rect x="1135.2" y="787.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1138.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1136.0" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1139.0" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1136.0" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.0" y="766.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="1136.0" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1139.0" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.05%)</title><rect x="1136.3" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1139.3" y="782.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (38 samples, 0.86%)</title><rect x="1136.8" y="787.0" width="10.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1139.8" y="798.0"></text>
</g>
<g>
<title>__skb_datagram_iter (38 samples, 0.86%)</title><rect x="1136.8" y="771.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.8" y="782.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.05%)</title><rect x="1142.2" y="755.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1145.2" y="766.0"></text>
</g>
<g>
<title>simple_copy_to_iter (16 samples, 0.36%)</title><rect x="1142.7" y="755.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.7" y="766.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.14%)</title><rect x="1142.7" y="739.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1145.7" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1144.0" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1147.0" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.18%)</title><rect x="1144.3" y="739.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1147.3" y="750.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.16%)</title><rect x="1144.6" y="723.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1147.6" y="734.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.05%)</title><rect x="1146.4" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1149.4" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (16 samples, 0.36%)</title><rect x="1147.0" y="787.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.0" y="798.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1149.4" y="771.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1152.4" y="782.0"></text>
</g>
<g>
<title>tcp_send_ack (6 samples, 0.14%)</title><rect x="1149.6" y="771.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1152.6" y="782.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (6 samples, 0.14%)</title><rect x="1149.6" y="755.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.6" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1149.6" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1152.6" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="1149.6" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1152.6" y="734.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="1149.6" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1152.6" y="718.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.11%)</title><rect x="1149.9" y="739.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1152.9" y="750.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.09%)</title><rect x="1149.9" y="723.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1152.9" y="734.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.09%)</title><rect x="1149.9" y="707.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1152.9" y="718.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.09%)</title><rect x="1149.9" y="691.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1152.9" y="702.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.09%)</title><rect x="1149.9" y="675.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1152.9" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.09%)</title><rect x="1149.9" y="659.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1152.9" y="670.0"></text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.09%)</title><rect x="1149.9" y="643.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.9" y="654.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.09%)</title><rect x="1149.9" y="627.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1152.9" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="1149.9" y="611.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1152.9" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.07%)</title><rect x="1149.9" y="595.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1152.9" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.07%)</title><rect x="1149.9" y="579.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1152.9" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.07%)</title><rect x="1149.9" y="563.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1152.9" y="574.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.07%)</title><rect x="1149.9" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1152.9" y="558.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.07%)</title><rect x="1149.9" y="531.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.9" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.07%)</title><rect x="1149.9" y="515.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.9" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.07%)</title><rect x="1149.9" y="499.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1152.9" y="510.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.07%)</title><rect x="1149.9" y="483.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1152.9" y="494.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="1149.9" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1152.9" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="1150.2" y="467.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.2" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="1150.2" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1153.2" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="1150.2" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1153.2" y="446.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="1150.2" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.2" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="1150.2" y="403.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.2" y="414.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1150.2" y="387.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.2" y="398.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1150.2" y="371.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1153.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1150.4" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1153.4" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1150.4" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.4" y="382.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1150.4" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.4" y="366.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1150.4" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1153.4" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1150.4" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1153.4" y="334.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1150.4" y="307.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1153.4" y="318.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1150.4" y="291.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.4" y="302.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1150.4" y="275.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.4" y="286.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="1150.4" y="259.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.4" y="270.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1150.4" y="243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1153.4" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1150.7" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.7" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1150.7" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.7" y="606.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="1150.7" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1153.7" y="590.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1151.0" y="723.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.0" y="734.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1151.0" y="707.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1154.0" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1151.0" y="691.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.0" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1151.0" y="675.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.0" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (18 samples, 0.41%)</title><rect x="1151.2" y="787.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1154.2" y="798.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1152.8" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.8" y="782.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.25%)</title><rect x="1153.1" y="771.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.1" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="1153.1" y="755.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.1" y="766.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.09%)</title><rect x="1153.7" y="755.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.7" y="766.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.11%)</title><rect x="1154.7" y="755.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.7" y="766.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1156.1" y="787.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.1" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (39 samples, 0.88%)</title><rect x="1156.3" y="819.0" width="10.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1159.3" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1156.9" y="803.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1159.9" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (36 samples, 0.82%)</title><rect x="1157.1" y="803.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.1" y="814.0"></text>
</g>
<g>
<title>aa_sk_perm (36 samples, 0.82%)</title><rect x="1157.1" y="787.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.1" y="798.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1158.7" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1161.7" y="782.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.02%)</title><rect x="1158.7" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.7" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1158.7" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1161.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1158.7" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.7" y="734.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="1159.0" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1162.0" y="782.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (28 samples, 0.63%)</title><rect x="1159.3" y="771.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.3" y="782.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.02%)</title><rect x="1162.7" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1165.7" y="766.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.05%)</title><rect x="1163.0" y="755.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1166.0" y="766.0"></text>
</g>
<g>
<title>aa_profile_af_perm (12 samples, 0.27%)</title><rect x="1163.5" y="755.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1166.5" y="766.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.02%)</title><rect x="1166.5" y="739.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.5" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="1166.7" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1169.7" y="830.0"></text>
</g>
<g>
<title>sockfd_lookup_light (25 samples, 0.57%)</title><rect x="1167.0" y="835.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1170.0" y="846.0"></text>
</g>
<g>
<title>__fdget (23 samples, 0.52%)</title><rect x="1167.0" y="819.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.0" y="830.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.52%)</title><rect x="1167.0" y="803.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1170.0" y="814.0"></text>
</g>
<g>
<title>__fget (23 samples, 0.52%)</title><rect x="1167.0" y="787.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1170.0" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1173.2" y="819.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.2" y="830.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="1173.7" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.7" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1174.0" y="867.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.0" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1174.0" y="851.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.0" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1174.0" y="835.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.0" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1174.0" y="819.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1177.0" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1174.0" y="803.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.0" y="814.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1174.0" y="787.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1177.0" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1174.0" y="771.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1174.2" y="867.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1177.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.14%)</title><rect x="1174.5" y="915.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1177.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (13 samples, 0.29%)</title><rect x="1176.1" y="931.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.02%)</title><rect x="1179.6" y="963.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.02%)</title><rect x="1179.6" y="947.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1182.6" y="958.0"></text>
</g>
<g>
<title>__close (1 samples, 0.02%)</title><rect x="1179.6" y="931.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1182.6" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1179.6" y="915.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.6" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1179.6" y="899.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1182.6" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1179.6" y="883.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1182.6" y="894.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="1179.6" y="867.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1182.6" y="878.0"></text>
</g>
<g>
<title>____fput (1 samples, 0.02%)</title><rect x="1179.6" y="851.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1182.6" y="862.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.02%)</title><rect x="1179.6" y="835.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.6" y="846.0"></text>
</g>
<g>
<title>dput (1 samples, 0.02%)</title><rect x="1179.6" y="819.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.6" y="830.0"></text>
</g>
<g>
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="1179.6" y="803.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1182.6" y="814.0"></text>
</g>
<g>
<title>dentry_free (1 samples, 0.02%)</title><rect x="1179.6" y="787.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.6" y="798.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1179.6" y="771.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.6" y="782.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1179.6" y="755.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.6" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (15 samples, 0.34%)</title><rect x="1179.8" y="979.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.8" y="990.0"></text>
</g>
<g>
<title>gettimeofday (15 samples, 0.34%)</title><rect x="1179.8" y="963.0" width="4.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1182.8" y="974.0"></text>
</g>
<g>
<title>[vdso] (14 samples, 0.32%)</title><rect x="1180.1" y="947.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1183.1" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1183.6" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1186.6" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1183.6" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1186.6" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1183.6" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1186.6" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1183.6" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>start_thread (23 samples, 0.52%)</title><rect x="1183.9" y="995.0" width="6.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1186.9" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (23 samples, 0.52%)</title><rect x="1183.9" y="979.0" width="6.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1186.9" y="990.0"></text>
</g>
<g>
<title>Thread::call_run() (23 samples, 0.52%)</title><rect x="1183.9" y="963.0" width="6.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.9" y="974.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.16%)</title><rect x="1183.9" y="947.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.9" y="958.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.16%)</title><rect x="1183.9" y="931.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.9" y="942.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.07%)</title><rect x="1183.9" y="915.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.9" y="926.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.07%)</title><rect x="1183.9" y="899.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1186.9" y="910.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.09%)</title><rect x="1184.7" y="915.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.7" y="926.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.09%)</title><rect x="1184.7" y="899.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.7" y="910.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.09%)</title><rect x="1184.7" y="883.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.7" y="894.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="1184.7" y="867.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.7" y="878.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.07%)</title><rect x="1184.9" y="867.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="878.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.05%)</title><rect x="1184.9" y="851.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (2 samples, 0.05%)</title><rect x="1184.9" y="835.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (2 samples, 0.05%)</title><rect x="1184.9" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1185.2" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.2" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1185.2" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.2" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1185.5" y="851.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.5" y="862.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="1185.5" y="835.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.5" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (6 samples, 0.14%)</title><rect x="1185.7" y="947.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.7" y="958.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.05%)</title><rect x="1185.7" y="931.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="942.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.05%)</title><rect x="1185.7" y="915.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.7" y="926.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.05%)</title><rect x="1185.7" y="899.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="910.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.05%)</title><rect x="1185.7" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="894.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.02%)</title><rect x="1185.7" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.7" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.02%)</title><rect x="1185.7" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.02%)</title><rect x="1185.7" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="846.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.02%)</title><rect x="1186.0" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.0" y="878.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (1 samples, 0.02%)</title><rect x="1186.0" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.0" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.02%)</title><rect x="1186.0" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="846.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1186.0" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.0" y="830.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1186.0" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1186.0" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="798.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (4 samples, 0.09%)</title><rect x="1186.3" y="931.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1189.3" y="942.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (4 samples, 0.09%)</title><rect x="1186.3" y="915.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1189.3" y="926.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (4 samples, 0.09%)</title><rect x="1186.3" y="899.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="910.0"></text>
</g>
<g>
<title>Agent_OnAttach (4 samples, 0.09%)</title><rect x="1186.3" y="883.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1189.3" y="894.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (4 samples, 0.09%)</title><rect x="1186.3" y="867.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::ostream&amp;) (4 samples, 0.09%)</title><rect x="1186.3" y="851.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.3" y="862.0"></text>
</g>
<g>
<title>Profiler::stop() (4 samples, 0.09%)</title><rect x="1186.3" y="835.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>PerfEvents::stop() (4 samples, 0.09%)</title><rect x="1186.3" y="819.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.3" y="830.0"></text>
</g>
<g>
<title>PerfEvents::destroyForThread(int) (2 samples, 0.05%)</title><rect x="1186.3" y="803.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>munmap (2 samples, 0.05%)</title><rect x="1186.8" y="803.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1186.8" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1186.8" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1186.8" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>task_work_run (2 samples, 0.05%)</title><rect x="1186.8" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>____fput (2 samples, 0.05%)</title><rect x="1186.8" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>__fput (2 samples, 0.05%)</title><rect x="1186.8" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1189.8" y="718.0"></text>
</g>
<g>
<title>perf_release (2 samples, 0.05%)</title><rect x="1186.8" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1189.8" y="702.0"></text>
</g>
<g>
<title>perf_event_release_kernel (2 samples, 0.05%)</title><rect x="1186.8" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1189.8" y="686.0"></text>
</g>
<g>
<title>perf_remove_from_context (2 samples, 0.05%)</title><rect x="1186.8" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>event_function_call (2 samples, 0.05%)</title><rect x="1186.8" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1189.8" y="654.0"></text>
</g>
<g>
<title>task_function_call (1 samples, 0.02%)</title><rect x="1187.1" y="627.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1190.1" y="638.0"></text>
</g>
<g>
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="1187.1" y="611.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1190.1" y="622.0"></text>
</g>
<g>
<title>VMThread::run() (9 samples, 0.20%)</title><rect x="1187.3" y="947.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.3" y="958.0"></text>
</g>
<g>
<title>VMThread::loop() (9 samples, 0.20%)</title><rect x="1187.3" y="931.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="942.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.09%)</title><rect x="1187.3" y="915.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1188.1" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="910.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1188.1" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1188.1" y="867.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1188.1" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1188.1" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1191.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1188.1" y="819.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1188.1" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1188.1" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1191.1" y="798.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1188.4" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.4" y="926.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1188.4" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.4" y="910.0"></text>
</g>
<g>
<title>VM_ThreadDump::doit() (1 samples, 0.02%)</title><rect x="1188.4" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="894.0"></text>
</g>
<g>
<title>ThreadStackTrace::dump_stack_at_safepoint(int) (1 samples, 0.02%)</title><rect x="1188.4" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.4" y="878.0"></text>
</g>
<g>
<title>JavaThread::last_java_vframe(RegisterMap*) (1 samples, 0.02%)</title><rect x="1188.4" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="1188.4" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>compiledVFrame::compiledVFrame(frame const*, RegisterMap const*, JavaThread*, CompiledMethod*) (1 samples, 0.02%)</title><rect x="1188.4" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>vframe::vframe(frame const*, RegisterMap const*, JavaThread*) (1 samples, 0.02%)</title><rect x="1188.4" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>__sched_yield (4 samples, 0.09%)</title><rect x="1188.7" y="915.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1191.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="1188.7" y="899.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.7" y="910.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="1188.7" y="883.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1191.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1189.2" y="883.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.05%)</title><rect x="1189.2" y="867.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.05%)</title><rect x="1189.2" y="851.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.2" y="862.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="1189.2" y="835.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1192.2" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="1189.2" y="819.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.02%)</title><rect x="1189.7" y="931.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.7" y="942.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
</g>
</svg>
