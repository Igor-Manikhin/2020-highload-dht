<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1366" onload="init(evt)" viewBox="0 0 1200 1366" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1349"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1349"> </text>
<g id="frames">
<g>
<title>all (4,050 samples, 100.00%)</title><rect x="10.0" y="1315.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1326.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="10.0" y="1299.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1310.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.54%)</title><rect x="10.3" y="1299.0" width="6.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (21 samples, 0.52%)</title><rect x="10.6" y="1283.0" width="6.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.6" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (19 samples, 0.47%)</title><rect x="11.2" y="1267.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.2" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (11 samples, 0.27%)</title><rect x="12.0" y="1251.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.0" y="1262.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.10%)</title><rect x="15.2" y="1251.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="18.2" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="15.8" y="1235.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="18.8" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="15.8" y="1219.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="18.8" y="1230.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="15.8" y="1203.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="18.8" y="1214.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="15.8" y="1187.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.8" y="1198.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="15.8" y="1171.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="18.8" y="1182.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="16.1" y="1171.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.1" y="1182.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="16.4" y="1251.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="19.4" y="1262.0"></text>
</g>
<g>
<title>[no_Java_frame] (5 samples, 0.12%)</title><rect x="16.7" y="1299.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="19.7" y="1310.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.07%)</title><rect x="18.2" y="1299.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="21.2" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="18.2" y="1283.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.2" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.07%)</title><rect x="18.2" y="1267.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="21.2" y="1278.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="18.4" y="1251.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.4" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="18.4" y="1235.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="21.4" y="1246.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="18.7" y="1235.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.7" y="1246.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="18.7" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="21.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.57%)</title><rect x="19.0" y="1299.0" width="6.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="22.0" y="1310.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="19.0" y="1283.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="22.0" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="19.3" y="1283.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.3" y="1294.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="19.9" y="1283.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="22.9" y="1294.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="20.5" y="1283.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="23.5" y="1294.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (17 samples, 0.42%)</title><rect x="20.8" y="1283.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="23.8" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.25%)</title><rect x="22.8" y="1267.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.8" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="22.8" y="1251.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="25.8" y="1262.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="23.1" y="1251.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.1" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="23.4" y="1251.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.4" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.17%)</title><rect x="23.7" y="1235.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.7" y="1246.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.15%)</title><rect x="23.7" y="1219.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.7" y="1230.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.12%)</title><rect x="24.0" y="1203.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.0" y="1214.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.10%)</title><rect x="24.0" y="1187.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.0" y="1198.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.02%)</title><rect x="24.0" y="1171.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.0" y="1182.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="24.0" y="1155.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="27.0" y="1166.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="24.0" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.0" y="1150.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="24.3" y="1171.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.3" y="1182.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="24.6" y="1171.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.6" y="1182.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="24.6" y="1155.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.6" y="1166.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="24.6" y="1139.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="27.6" y="1150.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="25.2" y="1187.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.2" y="1198.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.02%)</title><rect x="25.4" y="1219.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.4" y="1230.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="25.4" y="1203.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.4" y="1214.0"></text>
</g>
<g>
<title>[unknown_Java] (25 samples, 0.62%)</title><rect x="25.7" y="1299.0" width="7.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="28.7" y="1310.0"></text>
</g>
<g>
<title>SafepointBlob (1 samples, 0.02%)</title><rect x="25.7" y="1283.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="28.7" y="1294.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="25.7" y="1267.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.7" y="1278.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="25.7" y="1251.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.7" y="1262.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="25.7" y="1235.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.7" y="1246.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="25.7" y="1219.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.7" y="1230.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="25.7" y="1203.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="28.7" y="1214.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.02%)</title><rect x="25.7" y="1187.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="28.7" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.59%)</title><rect x="26.0" y="1283.0" width="7.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="29.0" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.52%)</title><rect x="26.9" y="1267.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.9" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.52%)</title><rect x="26.9" y="1251.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.9" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.44%)</title><rect x="26.9" y="1235.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="29.9" y="1246.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.44%)</title><rect x="26.9" y="1219.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.9" y="1230.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="27.2" y="1203.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="30.2" y="1214.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.35%)</title><rect x="27.8" y="1203.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="30.8" y="1214.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="28.4" y="1187.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="31.4" y="1198.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="28.9" y="1171.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.9" y="1182.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.05%)</title><rect x="29.2" y="1187.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="32.2" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.17%)</title><rect x="29.8" y="1187.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="32.8" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.17%)</title><rect x="29.8" y="1171.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="32.8" y="1182.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.17%)</title><rect x="29.8" y="1155.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="32.8" y="1166.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="31.9" y="1203.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.9" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="32.1" y="1235.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.1" y="1246.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="32.1" y="1219.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="35.1" y="1230.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="32.1" y="1203.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.1" y="1214.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="32.4" y="1187.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.4" y="1198.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="33.0" y="1299.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="36.0" y="1310.0"></text>
</g>
<g>
<title>__new_sem_wait_slow.constprop.0 (1 samples, 0.02%)</title><rect x="33.3" y="1299.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="36.3" y="1310.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="33.6" y="1299.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="36.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,860 samples, 70.62%)</title><rect x="33.9" y="1299.0" width="833.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.9" y="1310.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (3 samples, 0.07%)</title><rect x="33.9" y="1283.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/Object.wait (3 samples, 0.07%)</title><rect x="33.9" y="1267.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.9" y="1278.0"></text>
</g>
<g>
<title>JVM_MonitorWait (1 samples, 0.02%)</title><rect x="33.9" y="1251.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="36.9" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::wait(Handle, long, Thread*) (1 samples, 0.02%)</title><rect x="33.9" y="1235.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.9" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::wait(long, bool, Thread*) (1 samples, 0.02%)</title><rect x="33.9" y="1219.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="36.9" y="1230.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="33.9" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="36.9" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="34.2" y="1251.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="37.2" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="34.2" y="1235.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.2" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="34.2" y="1219.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.2" y="1230.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="34.2" y="1203.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="37.2" y="1214.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="34.2" y="1187.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="37.2" y="1198.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="34.2" y="1171.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.2" y="1182.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="34.2" y="1155.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="37.2" y="1166.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="34.5" y="1155.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,857 samples, 70.54%)</title><rect x="34.8" y="1283.0" width="832.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.8" y="1294.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,857 samples, 70.54%)</title><rect x="34.8" y="1267.0" width="832.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.8" y="1278.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2,495 samples, 61.60%)</title><rect x="35.1" y="1251.0" width="726.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.1" y="1262.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2,484 samples, 61.33%)</title><rect x="38.3" y="1235.0" width="723.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.3" y="1246.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>itable stub (11 samples, 0.27%)</title><rect x="39.4" y="1219.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="42.4" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$67/253098529.run (1,013 samples, 25.01%)</title><rect x="42.6" y="1219.0" width="295.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.6" y="1230.0">ru/mail/polis/service/manikhin/AsyncServ..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$forwardRequest$1 (1,013 samples, 25.01%)</title><rect x="42.6" y="1203.0" width="295.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.6" y="1214.0">ru/mail/polis/service/manikhin/AsyncServ..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="42.6" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.6" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="42.6" y="1171.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (670 samples, 16.54%)</title><rect x="43.2" y="1187.0" width="195.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.2" y="1198.0">one/nio/http/HttpClient.i..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (670 samples, 16.54%)</title><rect x="43.2" y="1171.0" width="195.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.2" y="1182.0">one/nio/http/HttpClient.i..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (219 samples, 5.41%)</title><rect x="45.5" y="1155.0" width="63.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.5" y="1166.0">one/nio..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.22%)</title><rect x="58.4" y="1139.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="61.4" y="1150.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.17%)</title><rect x="58.9" y="1123.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="61.9" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.17%)</title><rect x="58.9" y="1107.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="61.9" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.17%)</title><rect x="58.9" y="1091.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="61.9" y="1102.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="59.2" y="1075.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="62.2" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.12%)</title><rect x="59.5" y="1075.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="62.5" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (3 samples, 0.07%)</title><rect x="59.5" y="1059.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="62.5" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.05%)</title><rect x="59.8" y="1043.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="62.8" y="1054.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (2 samples, 0.05%)</title><rect x="59.8" y="1027.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="62.8" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="59.8" y="1011.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.8" y="1022.0"></text>
</g>
<g>
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.02%)</title><rect x="59.8" y="995.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.8" y="1006.0"></text>
</g>
<g>
<title>G1Policy::should_allocate_mutator_region() const (1 samples, 0.02%)</title><rect x="60.1" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="63.1" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="60.4" y="1059.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="63.4" y="1070.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="60.4" y="1043.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="63.4" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="60.7" y="1043.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="63.7" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="60.7" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="63.7" y="1038.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="60.7" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="63.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (165 samples, 4.07%)</title><rect x="61.0" y="1139.0" width="48.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.0" y="1150.0">one/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="62.2" y="1123.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="65.2" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.32%)</title><rect x="63.0" y="1123.0" width="3.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="66.0" y="1134.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="64.5" y="1107.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="67.5" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="65.1" y="1107.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="68.1" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.10%)</title><rect x="65.6" y="1107.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="68.6" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="65.6" y="1091.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="68.6" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="65.9" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="68.9" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="66.2" y="1091.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="69.2" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="66.8" y="1123.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="69.8" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="66.8" y="1107.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="69.8" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="66.8" y="1091.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="69.8" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="66.8" y="1075.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.8" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="66.8" y="1059.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="69.8" y="1070.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="66.8" y="1043.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="69.8" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="66.8" y="1027.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="69.8" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="66.8" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="69.8" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="66.8" y="995.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="69.8" y="1006.0"></text>
</g>
<g>
<title>__recv (144 samples, 3.56%)</title><rect x="67.1" y="1123.0" width="42.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="70.1" y="1134.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (130 samples, 3.21%)</title><rect x="71.2" y="1107.0" width="37.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.2" y="1118.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (130 samples, 3.21%)</title><rect x="71.2" y="1091.0" width="37.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="74.2" y="1102.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (125 samples, 3.09%)</title><rect x="72.6" y="1075.0" width="36.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.6" y="1086.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (125 samples, 3.09%)</title><rect x="72.6" y="1059.0" width="36.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="75.6" y="1070.0">__s..</text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="72.9" y="1043.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="75.9" y="1054.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.02%)</title><rect x="73.5" y="1043.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.5" y="1054.0"></text>
</g>
<g>
<title>sock_recvmsg (120 samples, 2.96%)</title><rect x="73.8" y="1043.0" width="35.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.8" y="1054.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (113 samples, 2.79%)</title><rect x="74.1" y="1027.0" width="32.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="77.1" y="1038.0">in..</text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="74.4" y="1011.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.4" y="1022.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.02%)</title><rect x="74.7" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="77.7" y="1022.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="75.0" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.0" y="1022.0"></text>
</g>
<g>
<title>tcp_recvmsg (109 samples, 2.69%)</title><rect x="75.3" y="1011.0" width="31.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="78.3" y="1022.0">tc..</text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.54%)</title><rect x="77.0" y="995.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="80.0" y="1006.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="77.0" y="979.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.0" y="990.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.49%)</title><rect x="77.3" y="979.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.3" y="990.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="77.3" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="80.3" y="974.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.15%)</title><rect x="77.6" y="963.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="80.6" y="974.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="79.1" y="947.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.1" y="958.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="79.1" y="931.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.1" y="942.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.22%)</title><rect x="79.3" y="963.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.3" y="974.0"></text>
</g>
<g>
<title>dst_release (8 samples, 0.20%)</title><rect x="79.6" y="947.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="82.6" y="958.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.10%)</title><rect x="82.0" y="963.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.0" y="974.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="83.1" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.1" y="990.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="83.4" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="86.4" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="83.7" y="995.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="86.7" y="1006.0"></text>
</g>
<g>
<title>sk_wait_data (15 samples, 0.37%)</title><rect x="84.6" y="995.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="84.6" y="979.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="87.6" y="990.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.02%)</title><rect x="84.9" y="979.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="87.9" y="990.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="84.9" y="963.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="87.9" y="974.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="85.2" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.2" y="990.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="85.2" y="963.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.2" y="974.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="85.2" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.2" y="958.0"></text>
</g>
<g>
<title>wait_woken (12 samples, 0.30%)</title><rect x="85.5" y="979.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.5" y="990.0"></text>
</g>
<g>
<title>schedule_timeout (12 samples, 0.30%)</title><rect x="85.5" y="963.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.5" y="974.0"></text>
</g>
<g>
<title>__mod_timer (6 samples, 0.15%)</title><rect x="85.5" y="947.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="88.5" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="86.3" y="931.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.3" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="87.2" y="947.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.2" y="958.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="87.5" y="947.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.5" y="958.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.02%)</title><rect x="87.5" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.5" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="87.5" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="90.5" y="926.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.10%)</title><rect x="87.8" y="947.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.8" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.10%)</title><rect x="87.8" y="931.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.8" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.07%)</title><rect x="88.1" y="915.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.1" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.7" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="91.7" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.7" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="91.7" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="88.7" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.7" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="88.7" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.7" y="862.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="88.7" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.7" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="88.7" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="91.7" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="88.7" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.7" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.30%)</title><rect x="89.0" y="995.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.0" y="1006.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.27%)</title><rect x="89.0" y="979.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.0" y="990.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.22%)</title><rect x="89.5" y="963.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.5" y="974.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.17%)</title><rect x="89.5" y="947.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="92.5" y="958.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.15%)</title><rect x="89.5" y="931.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.5" y="942.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="91.3" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.3" y="942.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="91.6" y="947.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.6" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="92.2" y="979.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="95.2" y="990.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (48 samples, 1.19%)</title><rect x="92.5" y="995.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.5" y="1006.0"></text>
</g>
<g>
<title>tcp_send_ack (48 samples, 1.19%)</title><rect x="92.5" y="979.0" width="13.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.5" y="990.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (48 samples, 1.19%)</title><rect x="92.5" y="963.0" width="13.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="95.5" y="974.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.10%)</title><rect x="92.5" y="947.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.5" y="958.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="92.5" y="931.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="95.5" y="942.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="93.3" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="96.3" y="942.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (44 samples, 1.09%)</title><rect x="93.6" y="947.0" width="12.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="96.6" y="958.0"></text>
</g>
<g>
<title>ip_queue_xmit (42 samples, 1.04%)</title><rect x="94.2" y="931.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="97.2" y="942.0"></text>
</g>
<g>
<title>__ip_queue_xmit (42 samples, 1.04%)</title><rect x="94.2" y="915.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="97.2" y="926.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="94.2" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.2" y="910.0"></text>
</g>
<g>
<title>ip_local_out (41 samples, 1.01%)</title><rect x="94.5" y="899.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="97.5" y="910.0"></text>
</g>
<g>
<title>ip_output (41 samples, 1.01%)</title><rect x="94.5" y="883.0" width="11.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="97.5" y="894.0"></text>
</g>
<g>
<title>ip_finish_output (39 samples, 0.96%)</title><rect x="95.1" y="867.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="98.1" y="878.0"></text>
</g>
<g>
<title>__ip_finish_output (38 samples, 0.94%)</title><rect x="95.1" y="851.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.1" y="862.0"></text>
</g>
<g>
<title>ip_finish_output2 (37 samples, 0.91%)</title><rect x="95.1" y="835.0" width="10.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.1" y="846.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 0.81%)</title><rect x="95.7" y="819.0" width="9.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="98.7" y="830.0"></text>
</g>
<g>
<title>do_softirq.part.0 (33 samples, 0.81%)</title><rect x="95.7" y="803.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.7" y="814.0"></text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 0.81%)</title><rect x="95.7" y="787.0" width="9.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.7" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 0.81%)</title><rect x="95.7" y="771.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.7" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="96.5" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.5" y="766.0"></text>
</g>
<g>
<title>net_rx_action (28 samples, 0.69%)</title><rect x="96.8" y="755.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.8" y="766.0"></text>
</g>
<g>
<title>process_backlog (28 samples, 0.69%)</title><rect x="96.8" y="739.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.8" y="750.0"></text>
</g>
<g>
<title>__netif_receive_skb (27 samples, 0.67%)</title><rect x="97.1" y="723.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="100.1" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 0.64%)</title><rect x="97.4" y="707.0" width="7.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.4" y="718.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 0.62%)</title><rect x="97.7" y="691.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="100.7" y="702.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="97.7" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.7" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish (24 samples, 0.59%)</title><rect x="98.0" y="675.0" width="7.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.0" y="686.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 0.57%)</title><rect x="98.0" y="659.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="101.0" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 0.57%)</title><rect x="98.0" y="643.0" width="6.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.0" y="654.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 0.57%)</title><rect x="98.0" y="627.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.0" y="638.0"></text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 0.57%)</title><rect x="98.0" y="611.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="101.0" y="622.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="98.0" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.0" y="606.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="98.3" y="595.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.3" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="98.3" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.3" y="590.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="98.6" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="101.6" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="98.9" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.9" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 0.47%)</title><rect x="99.2" y="595.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.2" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 0.47%)</title><rect x="99.2" y="579.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="102.2" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.15%)</title><rect x="99.4" y="563.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="102.4" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="99.4" y="547.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.4" y="558.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="99.4" y="531.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.4" y="542.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="100.3" y="547.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.3" y="558.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="100.3" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.3" y="542.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="100.6" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="103.6" y="542.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="100.6" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.6" y="526.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="100.6" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.6" y="510.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="100.9" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.9" y="542.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="100.9" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="103.9" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="101.2" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="104.2" y="574.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.27%)</title><rect x="101.5" y="563.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="104.5" y="574.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.15%)</title><rect x="102.4" y="547.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="105.4" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="102.4" y="531.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="105.4" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.05%)</title><rect x="102.4" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="105.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="102.4" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="105.4" y="510.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="102.7" y="483.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="105.7" y="494.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="102.9" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.9" y="526.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="102.9" y="499.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="105.9" y="510.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.05%)</title><rect x="103.2" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.2" y="494.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="103.2" y="467.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.2" y="478.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="103.5" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.5" y="462.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="103.5" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="106.5" y="446.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="103.8" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.8" y="542.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="104.1" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="107.1" y="558.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="104.4" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="107.4" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="104.7" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="107.7" y="670.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="105.0" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="108.0" y="766.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="105.3" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.3" y="830.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="105.3" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="108.3" y="814.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="105.6" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="108.6" y="830.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="105.9" y="835.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="108.9" y="846.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="106.1" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="109.1" y="862.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="106.4" y="995.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="109.4" y="1006.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="106.4" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.4" y="990.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="106.4" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.4" y="974.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.02%)</title><rect x="106.7" y="995.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.7" y="1006.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.15%)</title><rect x="107.0" y="1027.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="110.0" y="1038.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.10%)</title><rect x="107.6" y="1011.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.6" y="1022.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.10%)</title><rect x="107.6" y="995.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.6" y="1006.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.05%)</title><rect x="108.2" y="979.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="111.2" y="990.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="108.5" y="963.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="111.5" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="108.8" y="1043.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.8" y="1054.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="108.8" y="1027.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="111.8" y="1038.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="108.8" y="1011.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="111.8" y="1022.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="108.8" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="111.8" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="109.1" y="1139.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="112.1" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="109.1" y="1123.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.1" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="109.1" y="1107.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.1" y="1118.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="109.1" y="1091.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.1" y="1102.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="109.1" y="1075.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.1" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="109.1" y="1059.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="112.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (62 samples, 1.53%)</title><rect x="109.4" y="1155.0" width="18.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="110.2" y="1139.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="110.2" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="110.2" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="110.5" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="110.5" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="110.5" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="110.5" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.10%)</title><rect x="110.8" y="1139.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="111.1" y="1123.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="111.1" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="111.4" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.4" y="1102.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="111.7" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.7" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="112.0" y="1139.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="115.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (30 samples, 0.74%)</title><rect x="112.3" y="1139.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.3" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="114.0" y="1123.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="117.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.52%)</title><rect x="114.9" y="1123.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.47%)</title><rect x="115.5" y="1107.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="121.0" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (5 samples, 0.12%)</title><rect x="121.3" y="1139.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (16 samples, 0.40%)</title><rect x="122.8" y="1139.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.15%)</title><rect x="125.4" y="1123.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.15%)</title><rect x="125.4" y="1107.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.4" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="126.5" y="1091.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="129.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="127.1" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="127.1" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.1" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="127.1" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.1" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="127.1" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="130.1" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="127.1" y="1059.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="130.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (28 samples, 0.69%)</title><rect x="127.4" y="1155.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.40%)</title><rect x="128.6" y="1139.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.12%)</title><rect x="128.9" y="1123.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="130.3" y="1123.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="130.3" y="1107.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="130.3" y="1091.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.3" y="1102.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="133.0" y="1075.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="136.0" y="1086.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="133.0" y="1059.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="136.0" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="133.0" y="1043.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.0" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="133.0" y="1027.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.0" y="1038.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="133.0" y="1011.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="136.0" y="1022.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="133.0" y="995.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="136.0" y="1006.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="133.0" y="979.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="136.0" y="990.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="133.0" y="963.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="136.0" y="974.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="133.0" y="947.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="136.0" y="958.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="133.0" y="931.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="136.0" y="942.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="133.0" y="915.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.20%)</title><rect x="133.2" y="1139.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.2" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.10%)</title><rect x="134.4" y="1123.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="137.4" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.07%)</title><rect x="134.7" y="1107.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.7" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="134.7" y="1091.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.7" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="134.7" y="1075.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.7" y="1086.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="135.3" y="1059.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.3" y="1070.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="135.3" y="1043.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.3" y="1054.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="135.3" y="1027.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.07%)</title><rect x="135.6" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="135.9" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="135.9" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.07%)</title><rect x="136.4" y="1155.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (44 samples, 1.09%)</title><rect x="137.3" y="1155.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.3" y="1166.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.02%)</title><rect x="137.9" y="1139.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="140.9" y="1150.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="138.2" y="1139.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="141.2" y="1150.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="138.2" y="1123.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="141.2" y="1134.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="138.2" y="1107.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="141.2" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="138.2" y="1091.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="141.2" y="1102.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="138.2" y="1075.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.2" y="1086.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="138.2" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.2" y="1070.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="138.2" y="1043.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.2" y="1054.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="138.2" y="1027.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.2" y="1038.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="138.2" y="1011.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="141.2" y="1022.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="138.2" y="995.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.2" y="1006.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="138.2" y="979.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="141.2" y="990.0"></text>
</g>
<g>
<title>setsockopt (40 samples, 0.99%)</title><rect x="138.5" y="1139.0" width="11.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="141.5" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.91%)</title><rect x="139.4" y="1123.0" width="10.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="142.4" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.02%)</title><rect x="139.4" y="1107.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="142.4" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.89%)</title><rect x="139.7" y="1107.0" width="10.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="142.7" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (30 samples, 0.74%)</title><rect x="141.4" y="1091.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="144.4" y="1102.0"></text>
</g>
<g>
<title>__sys_setsockopt (29 samples, 0.72%)</title><rect x="141.4" y="1075.0" width="8.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="144.4" y="1086.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (3 samples, 0.07%)</title><rect x="142.0" y="1059.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="145.0" y="1070.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (1 samples, 0.02%)</title><rect x="142.6" y="1043.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.6" y="1054.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.05%)</title><rect x="142.9" y="1059.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="145.9" y="1070.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="143.4" y="1059.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.4" y="1070.0"></text>
</g>
<g>
<title>security_socket_setsockopt (9 samples, 0.22%)</title><rect x="144.0" y="1059.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.0" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (9 samples, 0.22%)</title><rect x="144.0" y="1043.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="147.0" y="1054.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.22%)</title><rect x="144.0" y="1027.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="147.0" y="1038.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (7 samples, 0.17%)</title><rect x="144.6" y="1011.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="147.6" y="1022.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.07%)</title><rect x="145.8" y="995.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.8" y="1006.0"></text>
</g>
<g>
<title>sock_setsockopt (10 samples, 0.25%)</title><rect x="146.6" y="1059.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="149.6" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="146.9" y="1043.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.9" y="1054.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="147.8" y="1043.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="150.8" y="1054.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="147.8" y="1027.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="150.8" y="1038.0"></text>
</g>
<g>
<title>sock_set_timeout (5 samples, 0.12%)</title><rect x="148.1" y="1043.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="151.1" y="1054.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="149.0" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.0" y="1038.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="149.3" y="1027.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="152.3" y="1038.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="149.6" y="1059.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.6" y="1070.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="149.6" y="1043.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="152.6" y="1054.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="149.6" y="1027.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="152.6" y="1038.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="149.6" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.6" y="1022.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.02%)</title><rect x="149.9" y="1075.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (299 samples, 7.38%)</title><rect x="150.1" y="1155.0" width="87.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.1" y="1166.0">one/nio/ne..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.15%)</title><rect x="151.0" y="1139.0" width="1.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="154.0" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (7 samples, 0.17%)</title><rect x="152.8" y="1139.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="155.8" y="1150.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="153.1" y="1123.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="156.1" y="1134.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="153.6" y="1123.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="156.6" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="153.6" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="156.6" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="153.9" y="1107.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="156.9" y="1118.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="154.5" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="157.5" y="1134.0"></text>
</g>
<g>
<title>send (283 samples, 6.99%)</title><rect x="154.8" y="1139.0" width="82.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="157.8" y="1150.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (278 samples, 6.86%)</title><rect x="156.3" y="1123.0" width="81.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="159.3" y="1134.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (278 samples, 6.86%)</title><rect x="156.3" y="1107.0" width="81.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.3" y="1118.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (271 samples, 6.69%)</title><rect x="158.0" y="1091.0" width="79.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.0" y="1102.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (271 samples, 6.69%)</title><rect x="158.0" y="1075.0" width="79.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.0" y="1086.0">__sys_sen..</text>
</g>
<g>
<title>sock_sendmsg (267 samples, 6.59%)</title><rect x="158.3" y="1059.0" width="77.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="161.3" y="1070.0">sock_send..</text>
</g>
<g>
<title>inet6_sendmsg (265 samples, 6.54%)</title><rect x="158.3" y="1043.0" width="77.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.3" y="1054.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (263 samples, 6.49%)</title><rect x="158.9" y="1027.0" width="76.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.9" y="1038.0">tcp_send..</text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="158.9" y="1011.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.9" y="1022.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.10%)</title><rect x="159.8" y="1011.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="162.8" y="1022.0"></text>
</g>
<g>
<title>__release_sock (4 samples, 0.10%)</title><rect x="159.8" y="995.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="162.8" y="1006.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.10%)</title><rect x="159.8" y="979.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.8" y="990.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.10%)</title><rect x="159.8" y="963.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="162.8" y="974.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="159.8" y="947.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="162.8" y="958.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="159.8" y="931.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="162.8" y="942.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="159.8" y="915.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.8" y="926.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="160.0" y="947.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="163.0" y="958.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="160.0" y="931.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="163.0" y="942.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="160.0" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="163.0" y="926.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="160.3" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="163.3" y="942.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="160.6" y="947.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="163.6" y="958.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="160.9" y="1011.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="163.9" y="1022.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (254 samples, 6.27%)</title><rect x="161.5" y="1011.0" width="74.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="164.5" y="1022.0">tcp_send..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="163.5" y="995.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.5" y="1006.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="163.8" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="166.8" y="990.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.10%)</title><rect x="164.1" y="995.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="167.1" y="1006.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.07%)</title><rect x="164.1" y="979.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="167.1" y="990.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="165.0" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="168.0" y="990.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.07%)</title><rect x="165.3" y="995.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="168.3" y="1006.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="165.6" y="979.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.6" y="990.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23 samples, 0.57%)</title><rect x="166.2" y="995.0" width="6.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="169.2" y="1006.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.54%)</title><rect x="166.5" y="979.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.5" y="990.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.25%)</title><rect x="167.0" y="963.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="170.0" y="974.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.20%)</title><rect x="167.0" y="947.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.0" y="958.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.07%)</title><rect x="168.2" y="931.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="171.2" y="942.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="169.1" y="931.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.1" y="942.0"></text>
</g>
<g>
<title>memset (2 samples, 0.05%)</title><rect x="169.4" y="947.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="172.4" y="958.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.10%)</title><rect x="170.0" y="963.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.0" y="974.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="170.8" y="947.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="173.8" y="958.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="171.1" y="963.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="174.1" y="974.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="171.1" y="947.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.1" y="958.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="171.4" y="931.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="174.4" y="942.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="171.4" y="915.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.4" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="171.4" y="899.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="174.4" y="910.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="171.4" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="174.4" y="894.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="171.7" y="963.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.7" y="974.0"></text>
</g>
<g>
<title>memset (3 samples, 0.07%)</title><rect x="172.0" y="963.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="175.0" y="974.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="172.9" y="995.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.9" y="1006.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="173.2" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.2" y="990.0"></text>
</g>
<g>
<title>tcp_push (209 samples, 5.16%)</title><rect x="173.5" y="995.0" width="60.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="176.5" y="1006.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (209 samples, 5.16%)</title><rect x="173.5" y="979.0" width="60.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.5" y="990.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (209 samples, 5.16%)</title><rect x="173.5" y="963.0" width="60.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="176.5" y="974.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (190 samples, 4.69%)</title><rect x="174.0" y="947.0" width="55.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.0" y="958.0">__tcp..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="174.6" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.6" y="942.0"></text>
</g>
<g>
<title>ip_queue_xmit (184 samples, 4.54%)</title><rect x="174.9" y="931.0" width="53.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="177.9" y="942.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (184 samples, 4.54%)</title><rect x="174.9" y="915.0" width="53.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="177.9" y="926.0">__ip_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="174.9" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.9" y="910.0"></text>
</g>
<g>
<title>ip_local_out (182 samples, 4.49%)</title><rect x="175.2" y="899.0" width="53.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.2" y="910.0">ip_lo..</text>
</g>
<g>
<title>ip_output (182 samples, 4.49%)</title><rect x="175.2" y="883.0" width="53.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="178.2" y="894.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (180 samples, 4.44%)</title><rect x="175.8" y="867.0" width="52.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="178.8" y="878.0">ip_fi..</text>
</g>
<g>
<title>__ip_finish_output (175 samples, 4.32%)</title><rect x="176.1" y="851.0" width="51.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.1" y="862.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (173 samples, 4.27%)</title><rect x="176.7" y="835.0" width="50.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.7" y="846.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (152 samples, 3.75%)</title><rect x="177.5" y="819.0" width="44.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.5" y="830.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (151 samples, 3.73%)</title><rect x="177.5" y="803.0" width="44.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.5" y="814.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (148 samples, 3.65%)</title><rect x="178.4" y="787.0" width="43.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="181.4" y="798.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (148 samples, 3.65%)</title><rect x="178.4" y="771.0" width="43.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="181.4" y="782.0">__so..</text>
</g>
<g>
<title>net_rx_action (146 samples, 3.60%)</title><rect x="178.7" y="755.0" width="42.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.7" y="766.0">net_..</text>
</g>
<g>
<title>process_backlog (144 samples, 3.56%)</title><rect x="179.3" y="739.0" width="41.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.3" y="750.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (143 samples, 3.53%)</title><rect x="179.6" y="723.0" width="41.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.6" y="734.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (143 samples, 3.53%)</title><rect x="179.6" y="707.0" width="41.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="182.6" y="718.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="179.6" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.6" y="702.0"></text>
</g>
<g>
<title>ip_rcv (141 samples, 3.48%)</title><rect x="180.2" y="691.0" width="41.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.2" y="702.0">ip_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="180.2" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="183.2" y="686.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.07%)</title><rect x="180.7" y="675.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.7" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish (136 samples, 3.36%)</title><rect x="181.6" y="675.0" width="39.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.6" y="686.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (133 samples, 3.28%)</title><rect x="182.2" y="659.0" width="38.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.2" y="670.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (133 samples, 3.28%)</title><rect x="182.2" y="643.0" width="38.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="185.2" y="654.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (133 samples, 3.28%)</title><rect x="182.2" y="627.0" width="38.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.2" y="638.0">ip_..</text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.07%)</title><rect x="182.5" y="611.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="185.5" y="622.0"></text>
</g>
<g>
<title>tcp_v4_rcv (129 samples, 3.19%)</title><rect x="183.4" y="611.0" width="37.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="186.4" y="622.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="184.2" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.2" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="184.8" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.8" y="606.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="185.1" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.1" y="606.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="185.4" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="188.4" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="185.4" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.4" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (120 samples, 2.96%)</title><rect x="186.0" y="595.0" width="34.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="189.0" y="606.0">tc..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.10%)</title><rect x="186.0" y="579.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="189.0" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (116 samples, 2.86%)</title><rect x="187.1" y="579.0" width="33.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="190.1" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.12%)</title><rect x="189.2" y="563.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="192.2" y="574.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.12%)</title><rect x="189.2" y="547.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.2" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="189.2" y="531.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="192.2" y="542.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.12%)</title><rect x="189.2" y="515.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.2" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="189.2" y="499.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.2" y="510.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.05%)</title><rect x="190.1" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="193.1" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="190.1" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.1" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="190.6" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="193.6" y="574.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="190.9" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.9" y="574.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.42%)</title><rect x="191.2" y="563.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="194.2" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="191.2" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.2" y="558.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="191.5" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="194.5" y="558.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (13 samples, 0.32%)</title><rect x="191.8" y="547.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.8" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.22%)</title><rect x="192.4" y="531.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="195.4" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.10%)</title><rect x="192.4" y="515.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.10%)</title><rect x="192.4" y="499.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="195.4" y="510.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="192.7" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="195.7" y="494.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.12%)</title><rect x="193.6" y="515.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.6" y="526.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.12%)</title><rect x="193.6" y="499.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="196.6" y="510.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.07%)</title><rect x="194.1" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="197.1" y="494.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="194.1" y="467.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="197.1" y="478.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="194.4" y="451.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.4" y="462.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="194.7" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.7" y="446.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="195.0" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="198.0" y="542.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="195.6" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="198.6" y="558.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="195.9" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="198.9" y="558.0"></text>
</g>
<g>
<title>tcp_data_ready (84 samples, 2.07%)</title><rect x="196.2" y="563.0" width="24.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.2" y="574.0">t..</text>
</g>
<g>
<title>sock_def_readable (84 samples, 2.07%)</title><rect x="196.2" y="547.0" width="24.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.2" y="558.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (82 samples, 2.02%)</title><rect x="196.8" y="531.0" width="23.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.8" y="542.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (82 samples, 2.02%)</title><rect x="196.8" y="515.0" width="23.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.8" y="526.0">_..</text>
</g>
<g>
<title>__lock_text_start (82 samples, 2.02%)</title><rect x="196.8" y="499.0" width="23.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="199.8" y="510.0">_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="220.7" y="563.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="223.7" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="220.7" y="547.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.7" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="220.9" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="223.9" y="670.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="221.2" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="224.2" y="766.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="221.5" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="224.5" y="814.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="221.5" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.5" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="221.5" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="224.5" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="221.5" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.5" y="766.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="221.5" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.5" y="750.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="221.5" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.5" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="221.5" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="224.5" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="221.5" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.5" y="702.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="221.5" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="224.5" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="221.5" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="224.5" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="221.5" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.5" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="221.5" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.5" y="638.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="221.5" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="224.5" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.44%)</title><rect x="221.8" y="819.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="224.8" y="830.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.44%)</title><rect x="221.8" y="803.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="224.8" y="814.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.22%)</title><rect x="222.7" y="787.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="225.7" y="798.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.20%)</title><rect x="222.7" y="771.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="225.7" y="782.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="223.0" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.0" y="766.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.15%)</title><rect x="223.3" y="755.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="226.3" y="766.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="223.3" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="226.3" y="750.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.12%)</title><rect x="223.6" y="739.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="226.6" y="750.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.12%)</title><rect x="223.6" y="723.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="226.6" y="734.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="225.0" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="228.0" y="782.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="225.3" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="228.3" y="798.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.10%)</title><rect x="225.6" y="787.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="228.6" y="798.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="226.5" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.5" y="782.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="226.8" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="229.8" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="227.1" y="851.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.1" y="862.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="227.6" y="851.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="230.6" y="862.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="228.2" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.2" y="910.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="228.5" y="931.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.5" y="942.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="228.5" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="231.5" y="926.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="229.1" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.1" y="942.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.10%)</title><rect x="229.4" y="947.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.4" y="958.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="230.6" y="947.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="233.6" y="958.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="230.8" y="947.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.8" y="958.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="231.4" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="234.4" y="958.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.10%)</title><rect x="231.7" y="947.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="234.7" y="958.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.10%)</title><rect x="231.7" y="931.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.7" y="942.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="232.0" y="915.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="235.0" y="926.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="232.0" y="899.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="235.0" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="232.0" y="883.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.0" y="894.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.02%)</title><rect x="232.9" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="235.9" y="958.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.07%)</title><rect x="233.2" y="947.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="236.2" y="958.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="234.1" y="947.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.1" y="958.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.07%)</title><rect x="234.3" y="995.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="237.3" y="1006.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="234.6" y="979.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.6" y="990.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="234.9" y="979.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="237.9" y="990.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="235.2" y="995.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="238.2" y="1006.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.05%)</title><rect x="235.5" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.5" y="1054.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="235.8" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="238.8" y="1038.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="235.8" y="1011.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.8" y="1022.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="235.8" y="995.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.8" y="1006.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="236.1" y="1059.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="239.1" y="1070.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.07%)</title><rect x="236.1" y="1043.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.1" y="1054.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="236.1" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="239.1" y="1038.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="236.4" y="1027.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="239.4" y="1038.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="236.4" y="1011.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.4" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="237.0" y="1091.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.0" y="1102.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="237.0" y="1075.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="240.0" y="1086.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="237.0" y="1059.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="240.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.07%)</title><rect x="237.3" y="1155.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (2 samples, 0.05%)</title><rect x="237.6" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.02%)</title><rect x="238.1" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.sendResponse (341 samples, 8.42%)</title><rect x="238.4" y="1187.0" width="99.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.4" y="1198.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (331 samples, 8.17%)</title><rect x="241.3" y="1171.0" width="96.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.3" y="1182.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (299 samples, 7.38%)</title><rect x="243.7" y="1155.0" width="87.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.7" y="1166.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.40%)</title><rect x="243.7" y="1139.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="243.7" y="1123.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.7" y="1134.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="243.7" y="1107.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="246.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.37%)</title><rect x="244.0" y="1123.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.17%)</title><rect x="244.0" y="1107.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.0" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="245.1" y="1091.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="248.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.20%)</title><rect x="246.0" y="1107.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.20%)</title><rect x="246.0" y="1091.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.20%)</title><rect x="246.0" y="1075.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (283 samples, 6.99%)</title><rect x="248.3" y="1139.0" width="82.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.3" y="1150.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (283 samples, 6.99%)</title><rect x="248.3" y="1123.0" width="82.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.3" y="1134.0">one/nio/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.15%)</title><rect x="249.8" y="1107.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="252.8" y="1118.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="249.8" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="252.8" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (2 samples, 0.05%)</title><rect x="250.1" y="1091.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="253.1" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="250.7" y="1091.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="253.7" y="1102.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.02%)</title><rect x="251.2" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="254.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (272 samples, 6.72%)</title><rect x="251.5" y="1107.0" width="79.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.5" y="1118.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="251.8" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (270 samples, 6.67%)</title><rect x="252.1" y="1091.0" width="78.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.1" y="1102.0">one/nio/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="253.9" y="1075.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="256.9" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.22%)</title><rect x="254.4" y="1075.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="257.4" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="254.4" y="1059.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="257.4" y="1070.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.15%)</title><rect x="255.3" y="1059.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="258.3" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="256.2" y="1043.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="259.2" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="256.5" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="259.5" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="256.8" y="1043.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="259.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="257.1" y="1075.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="260.1" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="257.1" y="1059.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="260.1" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="257.1" y="1043.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="257.1" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="260.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="257.1" y="1011.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="260.1" y="1022.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="257.1" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.1" y="1006.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="257.1" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="260.1" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="257.1" y="963.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.1" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="257.1" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="260.1" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="257.1" y="931.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="260.1" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="257.1" y="915.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.1" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="257.4" y="1075.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.4" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="257.4" y="1059.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.4" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="257.4" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.4" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="257.4" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="260.4" y="1038.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="257.4" y="1011.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.4" y="1022.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="257.4" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.4" y="1006.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r14 (1 samples, 0.02%)</title><rect x="257.4" y="979.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="260.4" y="990.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="257.7" y="1075.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="260.7" y="1086.0"></text>
</g>
<g>
<title>send (250 samples, 6.17%)</title><rect x="257.9" y="1075.0" width="72.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="260.9" y="1086.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (246 samples, 6.07%)</title><rect x="259.1" y="1059.0" width="71.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="262.1" y="1070.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (246 samples, 6.07%)</title><rect x="259.1" y="1043.0" width="71.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="262.1" y="1054.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (244 samples, 6.02%)</title><rect x="259.1" y="1027.0" width="71.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="262.1" y="1038.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (244 samples, 6.02%)</title><rect x="259.1" y="1011.0" width="71.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="262.1" y="1022.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (238 samples, 5.88%)</title><rect x="259.7" y="995.0" width="69.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.7" y="1006.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="260.6" y="979.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.6" y="990.0"></text>
</g>
<g>
<title>inet6_sendmsg (228 samples, 5.63%)</title><rect x="260.9" y="979.0" width="66.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.9" y="990.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (228 samples, 5.63%)</title><rect x="260.9" y="963.0" width="66.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="263.9" y="974.0">tcp_sen..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="260.9" y="947.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="263.9" y="958.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="261.7" y="947.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.7" y="958.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.12%)</title><rect x="262.0" y="947.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.0" y="958.0"></text>
</g>
<g>
<title>__release_sock (5 samples, 0.12%)</title><rect x="262.0" y="931.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="265.0" y="942.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="262.3" y="915.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="265.3" y="926.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.02%)</title><rect x="262.3" y="899.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.3" y="910.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="262.3" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.3" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="262.3" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.3" y="878.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.07%)</title><rect x="262.6" y="915.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.6" y="926.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.07%)</title><rect x="262.6" y="899.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.6" y="910.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.07%)</title><rect x="262.6" y="883.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.6" y="894.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="262.6" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.6" y="878.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="262.9" y="867.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="265.9" y="878.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="263.2" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="266.2" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="263.2" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="266.2" y="862.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="263.2" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="266.2" y="846.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="263.2" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="266.2" y="830.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="263.5" y="947.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="266.5" y="958.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (216 samples, 5.33%)</title><rect x="264.1" y="947.0" width="62.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="267.1" y="958.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="265.8" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="268.8" y="942.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="265.8" y="915.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.8" y="926.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.12%)</title><rect x="266.1" y="931.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.1" y="942.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.10%)</title><rect x="266.1" y="915.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="269.1" y="926.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="267.3" y="915.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="270.3" y="926.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="267.6" y="931.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="270.6" y="942.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (26 samples, 0.64%)</title><rect x="267.9" y="931.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="270.9" y="942.0"></text>
</g>
<g>
<title>__alloc_skb (25 samples, 0.62%)</title><rect x="268.1" y="915.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.1" y="926.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (12 samples, 0.30%)</title><rect x="269.0" y="899.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.0" y="910.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.20%)</title><rect x="269.0" y="883.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.0" y="894.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="269.9" y="867.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.9" y="878.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.07%)</title><rect x="270.5" y="867.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="273.5" y="878.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="271.3" y="883.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="274.3" y="894.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="271.6" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="274.6" y="894.0"></text>
</g>
<g>
<title>memset (2 samples, 0.05%)</title><rect x="271.9" y="883.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="274.9" y="894.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.12%)</title><rect x="272.5" y="899.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="275.5" y="910.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="273.7" y="883.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="276.7" y="894.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="274.0" y="899.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="277.0" y="910.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="274.0" y="883.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="277.0" y="894.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="274.6" y="899.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.6" y="910.0"></text>
</g>
<g>
<title>memset (2 samples, 0.05%)</title><rect x="274.8" y="899.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="277.8" y="910.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="275.4" y="931.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.4" y="942.0"></text>
</g>
<g>
<title>tcp_push (175 samples, 4.32%)</title><rect x="275.7" y="931.0" width="51.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.7" y="942.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (175 samples, 4.32%)</title><rect x="275.7" y="915.0" width="51.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.7" y="926.0">__tcp..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="275.7" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.7" y="910.0"></text>
</g>
<g>
<title>tcp_write_xmit (174 samples, 4.30%)</title><rect x="276.0" y="899.0" width="50.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="279.0" y="910.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (154 samples, 3.80%)</title><rect x="276.3" y="883.0" width="44.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="279.3" y="894.0">__tc..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="277.2" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="280.2" y="878.0"></text>
</g>
<g>
<title>ip_queue_xmit (146 samples, 3.60%)</title><rect x="277.5" y="867.0" width="42.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.5" y="878.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (144 samples, 3.56%)</title><rect x="277.5" y="851.0" width="41.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="280.5" y="862.0">__i..</text>
</g>
<g>
<title>ip_local_out (142 samples, 3.51%)</title><rect x="278.0" y="835.0" width="41.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.0" y="846.0">ip_..</text>
</g>
<g>
<title>ip_output (142 samples, 3.51%)</title><rect x="278.0" y="819.0" width="41.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="281.0" y="830.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (141 samples, 3.48%)</title><rect x="278.3" y="803.0" width="41.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="281.3" y="814.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.10%)</title><rect x="278.3" y="787.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="281.3" y="798.0"></text>
</g>
<g>
<title>__ip_finish_output (136 samples, 3.36%)</title><rect x="279.5" y="787.0" width="39.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.5" y="798.0">__i..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="279.5" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="282.5" y="782.0"></text>
</g>
<g>
<title>ip_finish_output2 (134 samples, 3.31%)</title><rect x="279.8" y="771.0" width="39.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="282.8" y="782.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (107 samples, 2.64%)</title><rect x="279.8" y="755.0" width="31.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="282.8" y="766.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (106 samples, 2.62%)</title><rect x="279.8" y="739.0" width="30.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.8" y="750.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (101 samples, 2.49%)</title><rect x="280.7" y="723.0" width="29.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.7" y="734.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (100 samples, 2.47%)</title><rect x="280.7" y="707.0" width="29.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="283.7" y="718.0">__..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="281.5" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.5" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="281.8" y="691.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="284.8" y="702.0"></text>
</g>
<g>
<title>net_rx_action (94 samples, 2.32%)</title><rect x="282.4" y="691.0" width="27.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="285.4" y="702.0">n..</text>
</g>
<g>
<title>process_backlog (92 samples, 2.27%)</title><rect x="283.0" y="675.0" width="26.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="286.0" y="686.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (91 samples, 2.25%)</title><rect x="283.3" y="659.0" width="26.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.3" y="670.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (91 samples, 2.25%)</title><rect x="283.3" y="643.0" width="26.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="286.3" y="654.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="283.6" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="286.6" y="638.0"></text>
</g>
<g>
<title>ip_rcv (88 samples, 2.17%)</title><rect x="283.9" y="627.0" width="25.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="286.9" y="638.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.05%)</title><rect x="283.9" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="286.9" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (86 samples, 2.12%)</title><rect x="284.5" y="611.0" width="25.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.5" y="622.0">i..</text>
</g>
<g>
<title>ip_local_deliver (85 samples, 2.10%)</title><rect x="284.8" y="595.0" width="24.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="287.8" y="606.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (85 samples, 2.10%)</title><rect x="284.8" y="579.0" width="24.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="287.8" y="590.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (85 samples, 2.10%)</title><rect x="284.8" y="563.0" width="24.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.8" y="574.0">i..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="285.3" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.3" y="558.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.05%)</title><rect x="285.9" y="547.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="288.9" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (79 samples, 1.95%)</title><rect x="286.5" y="547.0" width="23.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="289.5" y="558.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="286.5" y="531.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="289.5" y="542.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="286.8" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="289.8" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="287.1" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="290.1" y="542.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="287.4" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.4" y="542.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="287.4" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.4" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (74 samples, 1.83%)</title><rect x="287.7" y="531.0" width="21.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.7" y="542.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (74 samples, 1.83%)</title><rect x="287.7" y="515.0" width="21.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="290.7" y="526.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.10%)</title><rect x="288.0" y="499.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.0" y="510.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.10%)</title><rect x="288.0" y="483.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="291.0" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.10%)</title><rect x="288.0" y="467.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="291.0" y="478.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="288.0" y="451.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="291.0" y="462.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="288.2" y="451.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="291.2" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="288.2" y="435.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="291.2" y="446.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="288.8" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="291.8" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="288.8" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.8" y="430.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="289.1" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="292.1" y="510.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="289.4" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="292.4" y="510.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.37%)</title><rect x="289.7" y="499.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="292.7" y="510.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="290.3" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="293.3" y="494.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.27%)</title><rect x="290.6" y="483.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.6" y="494.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.17%)</title><rect x="291.5" y="467.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.5" y="478.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.17%)</title><rect x="291.5" y="451.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="294.5" y="462.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.17%)</title><rect x="291.5" y="435.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="294.5" y="446.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.15%)</title><rect x="291.7" y="419.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="294.7" y="430.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.15%)</title><rect x="291.7" y="403.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="294.7" y="414.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.10%)</title><rect x="292.3" y="387.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="295.3" y="398.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="293.2" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="296.2" y="382.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="293.5" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="296.5" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="293.8" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.8" y="494.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="294.1" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="297.1" y="510.0"></text>
</g>
<g>
<title>tcp_data_ready (48 samples, 1.19%)</title><rect x="294.4" y="499.0" width="14.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="297.4" y="510.0"></text>
</g>
<g>
<title>sock_def_readable (48 samples, 1.19%)</title><rect x="294.4" y="483.0" width="14.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="297.4" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (48 samples, 1.19%)</title><rect x="294.4" y="467.0" width="14.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="297.4" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 1.19%)</title><rect x="294.4" y="451.0" width="14.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.4" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (48 samples, 1.19%)</title><rect x="294.4" y="435.0" width="14.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.4" y="446.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="308.4" y="499.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.4" y="510.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="308.6" y="499.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.6" y="510.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="309.2" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="312.2" y="542.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="309.5" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="312.5" y="638.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="309.8" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="312.8" y="718.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.05%)</title><rect x="310.1" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="313.1" y="734.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.05%)</title><rect x="310.1" y="707.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.1" y="718.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="310.1" y="691.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="313.1" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="310.1" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="313.1" y="686.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="310.1" y="659.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.1" y="670.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="310.1" y="643.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="313.1" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="310.1" y="627.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="313.1" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="310.1" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="313.1" y="622.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="310.1" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.1" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="310.1" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.1" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="310.1" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.1" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="310.1" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.1" y="558.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="310.1" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="310.1" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.1" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="310.1" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.1" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="310.1" y="483.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.1" y="494.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="310.1" y="467.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="313.1" y="478.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="310.1" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="313.1" y="462.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="310.4" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.4" y="462.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="310.4" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.4" y="446.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="310.7" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.7" y="750.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="310.7" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.7" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="310.7" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="313.7" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="310.7" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.7" y="702.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="310.7" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.7" y="686.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="310.7" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.7" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="310.7" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.7" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="310.7" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.7" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="310.7" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="313.7" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="310.7" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.7" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="310.7" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="313.7" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="310.7" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.7" y="574.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="310.7" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.7" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="310.7" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="313.7" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="310.7" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.7" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="310.7" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.7" y="510.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="310.7" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.7" y="494.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="310.7" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.7" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="310.7" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.7" y="462.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="310.7" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="313.7" y="446.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="310.7" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.7" y="430.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="310.7" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.7" y="414.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="310.7" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.7" y="398.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="310.7" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.7" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (25 samples, 0.62%)</title><rect x="311.0" y="755.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.0" y="766.0"></text>
</g>
<g>
<title>__dev_queue_xmit (24 samples, 0.59%)</title><rect x="311.0" y="739.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.0" y="750.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="313.0" y="723.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="316.0" y="734.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.27%)</title><rect x="313.6" y="723.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="316.6" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="314.2" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="317.2" y="718.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.17%)</title><rect x="314.8" y="707.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="317.8" y="718.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="314.8" y="691.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="317.8" y="702.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="314.8" y="675.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="317.8" y="686.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="314.8" y="659.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.8" y="670.0"></text>
</g>
<g>
<title>sk_free (4 samples, 0.10%)</title><rect x="315.6" y="691.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.6" y="702.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="316.8" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="319.8" y="734.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="317.1" y="723.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="320.1" y="734.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="318.0" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="321.0" y="750.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="318.3" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.3" y="766.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.05%)</title><rect x="318.3" y="739.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="321.3" y="750.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.05%)</title><rect x="318.3" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="321.3" y="734.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="318.3" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="321.3" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="318.3" y="691.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="321.3" y="702.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="318.3" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="321.3" y="686.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="318.3" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.3" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="318.3" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.3" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="318.3" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.3" y="638.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="318.3" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="321.3" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="318.3" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="321.3" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="318.3" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.3" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="318.3" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="321.3" y="574.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="318.3" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.3" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="318.3" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="321.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="318.3" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="321.3" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="318.3" y="499.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="321.3" y="510.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="318.3" y="483.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.3" y="494.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="318.3" y="467.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.3" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="318.3" y="451.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="321.3" y="462.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="318.3" y="435.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="321.3" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="318.3" y="419.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.3" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="318.5" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="321.5" y="494.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="318.8" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.8" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="319.1" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.1" y="798.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="319.4" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.4" y="862.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="319.7" y="851.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.7" y="862.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.10%)</title><rect x="320.0" y="867.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="323.0" y="878.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="320.3" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.3" y="862.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="320.6" y="851.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="323.6" y="862.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="320.9" y="835.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="323.9" y="846.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="321.2" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="324.2" y="894.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="321.5" y="883.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.5" y="894.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="321.8" y="883.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="324.8" y="894.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.35%)</title><rect x="322.0" y="883.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.0" y="894.0"></text>
</g>
<g>
<title>tcp_rearm_rto (13 samples, 0.32%)</title><rect x="322.3" y="867.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.3" y="878.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.27%)</title><rect x="322.9" y="851.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.9" y="862.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.27%)</title><rect x="322.9" y="835.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.9" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.27%)</title><rect x="322.9" y="819.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="325.9" y="830.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="326.1" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="329.1" y="894.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="326.4" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="329.4" y="894.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="326.7" y="931.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.7" y="942.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="326.7" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="329.7" y="926.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="327.0" y="947.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.0" y="958.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.02%)</title><rect x="327.3" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="330.3" y="990.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.12%)</title><rect x="327.6" y="979.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="330.6" y="990.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.10%)</title><rect x="327.9" y="963.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="330.9" y="974.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.10%)</title><rect x="327.9" y="947.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.9" y="958.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.05%)</title><rect x="328.5" y="931.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.5" y="942.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="328.5" y="915.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.5" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.10%)</title><rect x="329.0" y="995.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.0" y="1006.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.07%)</title><rect x="329.0" y="979.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.0" y="990.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="329.0" y="963.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.0" y="974.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="329.0" y="947.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.0" y="958.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="329.9" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.9" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="330.2" y="1027.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (24 samples, 0.59%)</title><rect x="330.8" y="1155.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.30%)</title><rect x="334.3" y="1139.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.30%)</title><rect x="334.3" y="1123.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.3" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="336.6" y="1107.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="339.6" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="336.9" y="1107.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="339.9" y="1118.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="336.9" y="1091.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="339.9" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="337.2" y="1091.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="340.2" y="1102.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="337.2" y="1075.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="340.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$69/1679533751.run (1,456 samples, 35.95%)</title><rect x="337.8" y="1219.0" width="424.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.8" y="1230.0">ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$69..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$2 (1,455 samples, 35.93%)</title><rect x="338.1" y="1203.0" width="423.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.1" y="1214.0">ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$ent..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.handleRequest (1,455 samples, 35.93%)</title><rect x="338.1" y="1187.0" width="423.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.1" y="1198.0">ru/mail/polis/service/manikhin/AsyncServiceImpl.handleRequ..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="338.9" y="1171.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.9" y="1182.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="338.9" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="341.9" y="1166.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="338.9" y="1139.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="341.9" y="1150.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="338.9" y="1123.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="341.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (1,451 samples, 35.83%)</title><rect x="339.2" y="1171.0" width="422.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.2" y="1182.0">ru/mail/polis/service/manikhin/AsyncServiceImpl.put</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.05%)</title><rect x="339.2" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.2" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="339.2" y="1139.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="342.2" y="1150.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="339.5" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="342.5" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="339.5" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="342.5" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="339.5" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="342.5" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="339.5" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="342.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="339.5" y="1059.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="342.5" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="339.5" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="342.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (966 samples, 23.85%)</title><rect x="339.8" y="1155.0" width="281.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.8" y="1166.0">ru/mail/polis/dao/manikhin/DAOImpl.ups..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (952 samples, 23.51%)</title><rect x="339.8" y="1139.0" width="277.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.8" y="1150.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="340.1" y="1123.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="343.1" y="1134.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (950 samples, 23.46%)</title><rect x="340.4" y="1123.0" width="276.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.4" y="1134.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="342.7" y="1107.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="345.7" y="1118.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="343.0" y="1107.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="346.0" y="1118.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (880 samples, 21.73%)</title><rect x="343.3" y="1107.0" width="256.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="346.3" y="1118.0">Java_org_rocksdb_RocksDB_put__J_3B..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.07%)</title><rect x="344.2" y="1091.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="347.2" y="1102.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="345.1" y="1091.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="348.1" y="1102.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="345.4" y="1075.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.4" y="1086.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="345.4" y="1059.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="348.4" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="345.4" y="1043.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="348.4" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="345.4" y="1027.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.4" y="1038.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.05%)</title><rect x="345.6" y="1091.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="348.6" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="345.9" y="1075.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.9" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="345.9" y="1059.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="348.9" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="345.9" y="1043.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="348.9" y="1054.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="345.9" y="1027.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.9" y="1038.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="345.9" y="1011.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="348.9" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="345.9" y="995.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.9" y="1006.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.05%)</title><rect x="346.2" y="1091.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="349.2" y="1102.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="346.8" y="1091.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="349.8" y="1102.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (5 samples, 0.12%)</title><rect x="347.1" y="1091.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="350.1" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.12%)</title><rect x="348.6" y="1091.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="351.6" y="1102.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="350.0" y="1091.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="353.0" y="1102.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (856 samples, 21.14%)</title><rect x="350.3" y="1091.0" width="249.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="353.3" y="1102.0">rocksdb_put_helper(JNIEnv_*, rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="352.3" y="1075.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="355.3" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="352.9" y="1075.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="355.9" y="1086.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="353.5" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="356.5" y="1086.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (11 samples, 0.27%)</title><rect x="353.8" y="1075.0" width="3.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="356.8" y="1086.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (5 samples, 0.12%)</title><rect x="355.6" y="1059.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="358.6" y="1070.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.27%)</title><rect x="357.0" y="1075.0" width="3.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="360.0" y="1086.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="357.9" y="1059.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="360.9" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.12%)</title><rect x="358.8" y="1059.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="361.8" y="1070.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (818 samples, 20.20%)</title><rect x="360.2" y="1075.0" width="238.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="363.2" y="1086.0">rocksdb::DB::Put(rocksdb::WriteO..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.17%)</title><rect x="361.1" y="1059.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="364.1" y="1070.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (808 samples, 19.95%)</title><rect x="363.1" y="1059.0" width="235.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="366.1" y="1070.0">rocksdb::DBImpl::Put(rocksdb::W..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (796 samples, 19.65%)</title><rect x="363.1" y="1043.0" width="231.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="366.1" y="1054.0">rocksdb::DB::Put(rocksdb::Write..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.07%)</title><rect x="363.7" y="1027.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="366.7" y="1038.0"></text>
</g>
<g>
<title>cfree (3 samples, 0.07%)</title><rect x="364.6" y="1027.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="367.6" y="1038.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="365.5" y="1027.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="368.5" y="1038.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (4 samples, 0.10%)</title><rect x="365.7" y="1027.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="368.7" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (734 samples, 18.12%)</title><rect x="366.9" y="1027.0" width="213.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="369.9" y="1038.0">rocksdb::DBImpl::Write(rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="367.2" y="1011.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="370.2" y="1022.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.02%)</title><rect x="367.8" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="370.8" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_destroy (1 samples, 0.02%)</title><rect x="368.1" y="1011.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="371.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::ColumnFamilyHandleImpl(rocksdb::ColumnFamilyData*, rocksdb::DBImpl*, rocksdb::InstrumentedMutex*) (1 samples, 0.02%)</title><rect x="368.4" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="371.4" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.02%)</title><rect x="368.7" y="1011.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="371.7" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.02%)</title><rect x="369.0" y="1011.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="372.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.10%)</title><rect x="369.2" y="1011.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="372.2" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="370.1" y="995.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="373.1" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="370.1" y="979.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="373.1" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="370.1" y="963.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="373.1" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="370.1" y="947.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.1" y="958.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="370.1" y="931.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="373.1" y="942.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="370.1" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.1" y="926.0"></text>
</g>
<g>
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="370.1" y="899.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.1" y="910.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="370.1" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="373.1" y="894.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.02%)</title><rect x="370.1" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="373.1" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="370.1" y="851.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="373.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (692 samples, 17.09%)</title><rect x="370.4" y="1011.0" width="201.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="373.4" y="1022.0">rocksdb::DBImpl::WriteImpl..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="378.6" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="381.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.17%)</title><rect x="378.9" y="995.0" width="2.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="381.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.15%)</title><rect x="379.2" y="979.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.15%)</title><rect x="379.2" y="963.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="382.2" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.12%)</title><rect x="379.2" y="947.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.2" y="958.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.12%)</title><rect x="379.2" y="931.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.2" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="379.2" y="915.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.2" y="926.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="379.7" y="915.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.7" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="380.0" y="899.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.0" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="380.0" y="883.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="383.0" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="380.0" y="867.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="383.0" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="380.6" y="947.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.6" y="958.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="380.6" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.6" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="380.6" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="383.6" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="380.6" y="899.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.6" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.17%)</title><rect x="380.9" y="995.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="383.9" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="382.9" y="995.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="385.9" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="383.2" y="995.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="386.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.07%)</title><rect x="383.5" y="995.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="386.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (11 samples, 0.27%)</title><rect x="384.4" y="995.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="387.4" y="1006.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="387.3" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="390.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.02%)</title><rect x="387.6" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="390.6" y="1006.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.02%)</title><rect x="387.6" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="390.6" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.02%)</title><rect x="387.9" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="390.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (317 samples, 7.83%)</title><rect x="388.2" y="995.0" width="92.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="391.2" y="1006.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.05%)</title><rect x="388.8" y="979.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="391.8" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.02%)</title><rect x="389.1" y="963.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="392.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (312 samples, 7.70%)</title><rect x="389.3" y="979.0" width="91.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="392.3" y="990.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.02%)</title><rect x="390.5" y="963.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="393.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() [clone .plt] (1 samples, 0.02%)</title><rect x="390.8" y="963.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="393.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (305 samples, 7.53%)</title><rect x="391.1" y="963.0" width="88.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="394.1" y="974.0">rocksdb::l..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (22 samples, 0.54%)</title><rect x="392.3" y="947.0" width="6.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="395.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (3 samples, 0.07%)</title><rect x="398.7" y="947.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="401.7" y="958.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (5 samples, 0.12%)</title><rect x="399.5" y="947.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="402.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (256 samples, 6.32%)</title><rect x="401.0" y="947.0" width="74.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="404.0" y="958.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.05%)</title><rect x="401.3" y="931.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="404.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.05%)</title><rect x="401.9" y="931.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="404.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (251 samples, 6.20%)</title><rect x="402.5" y="931.0" width="73.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="405.5" y="942.0">rocksdb:..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="405.4" y="915.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="408.4" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="406.2" y="915.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="409.2" y="926.0"></text>
</g>
<g>
<title>__write (231 samples, 5.70%)</title><rect x="406.5" y="915.0" width="67.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="409.5" y="926.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (217 samples, 5.36%)</title><rect x="410.6" y="899.0" width="63.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.6" y="910.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (217 samples, 5.36%)</title><rect x="410.6" y="883.0" width="63.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.6" y="894.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_write (208 samples, 5.14%)</title><rect x="412.9" y="867.0" width="60.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="415.9" y="878.0">__x64_..</text>
</g>
<g>
<title>ksys_write (208 samples, 5.14%)</title><rect x="412.9" y="851.0" width="60.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="415.9" y="862.0">ksys_w..</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.17%)</title><rect x="413.2" y="835.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="416.2" y="846.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="413.2" y="819.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.2" y="830.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.10%)</title><rect x="413.2" y="803.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="416.2" y="814.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.07%)</title><rect x="414.4" y="819.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="417.4" y="830.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="415.0" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="418.0" y="814.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="415.3" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="418.3" y="846.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="415.6" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="418.6" y="846.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="415.9" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="418.9" y="846.0"></text>
</g>
<g>
<title>vfs_write (197 samples, 4.86%)</title><rect x="416.2" y="835.0" width="57.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.2" y="846.0">vfs_wr..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.05%)</title><rect x="417.0" y="819.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="420.0" y="830.0"></text>
</g>
<g>
<title>__vfs_write (179 samples, 4.42%)</title><rect x="417.6" y="819.0" width="52.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.6" y="830.0">__vfs..</text>
</g>
<g>
<title>new_sync_write (179 samples, 4.42%)</title><rect x="417.6" y="803.0" width="52.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.6" y="814.0">new_s..</text>
</g>
<g>
<title>ext4_file_write_iter (177 samples, 4.37%)</title><rect x="417.6" y="787.0" width="51.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="420.6" y="798.0">ext4_..</text>
</g>
<g>
<title>__generic_file_write_iter (174 samples, 4.30%)</title><rect x="417.9" y="771.0" width="50.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="420.9" y="782.0">__gen..</text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="418.2" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="421.2" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r11 (1 samples, 0.02%)</title><rect x="418.5" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="421.5" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="418.8" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.8" y="766.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="419.1" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="422.1" y="766.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="419.6" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="422.6" y="766.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="419.9" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="422.9" y="766.0"></text>
</g>
<g>
<title>file_remove_privs (1 samples, 0.02%)</title><rect x="420.2" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="423.2" y="766.0"></text>
</g>
<g>
<title>file_update_time (39 samples, 0.96%)</title><rect x="420.5" y="755.0" width="11.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="423.5" y="766.0"></text>
</g>
<g>
<title>generic_update_time (39 samples, 0.96%)</title><rect x="420.5" y="739.0" width="11.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.5" y="750.0"></text>
</g>
<g>
<title>__mark_inode_dirty (38 samples, 0.94%)</title><rect x="420.5" y="723.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.5" y="734.0"></text>
</g>
<g>
<title>ext4_dirty_inode (38 samples, 0.94%)</title><rect x="420.5" y="707.0" width="11.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.5" y="718.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.25%)</title><rect x="420.8" y="691.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.8" y="702.0"></text>
</g>
<g>
<title>jbd2__journal_start (10 samples, 0.25%)</title><rect x="420.8" y="675.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.8" y="686.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.02%)</title><rect x="420.8" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.8" y="670.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.10%)</title><rect x="421.1" y="659.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="424.1" y="670.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.12%)</title><rect x="422.3" y="659.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.3" y="670.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.02%)</title><rect x="423.4" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="426.4" y="654.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.07%)</title><rect x="423.7" y="691.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="426.7" y="702.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.07%)</title><rect x="423.7" y="675.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.7" y="686.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.05%)</title><rect x="423.7" y="659.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.7" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="423.7" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="426.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="423.7" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="426.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="424.0" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.0" y="638.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="424.3" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.3" y="670.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (24 samples, 0.59%)</title><rect x="424.6" y="691.0" width="7.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="427.6" y="702.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (14 samples, 0.35%)</title><rect x="424.6" y="675.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="425.2" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="428.2" y="670.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.25%)</title><rect x="425.5" y="659.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.5" y="670.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.05%)</title><rect x="426.4" y="643.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="429.4" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.02%)</title><rect x="426.6" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.6" y="638.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (5 samples, 0.12%)</title><rect x="426.9" y="643.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="429.9" y="654.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (5 samples, 0.12%)</title><rect x="426.9" y="627.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="429.9" y="638.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="426.9" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="429.9" y="622.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.07%)</title><rect x="427.5" y="611.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.5" y="622.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.07%)</title><rect x="427.5" y="595.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="430.5" y="606.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="428.4" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="431.4" y="670.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (10 samples, 0.25%)</title><rect x="428.7" y="675.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="431.7" y="686.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (7 samples, 0.17%)</title><rect x="428.7" y="659.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="431.7" y="670.0"></text>
</g>
<g>
<title>__getblk_gfp (5 samples, 0.12%)</title><rect x="429.0" y="643.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.0" y="654.0"></text>
</g>
<g>
<title>__find_get_block (5 samples, 0.12%)</title><rect x="429.0" y="627.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.0" y="638.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.05%)</title><rect x="429.8" y="611.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="432.8" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="430.4" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="433.4" y="654.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="430.7" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="433.7" y="670.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="430.7" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.7" y="654.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.02%)</title><rect x="430.7" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.7" y="638.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.05%)</title><rect x="431.0" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="434.0" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="431.6" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="434.6" y="734.0"></text>
</g>
<g>
<title>generic_perform_write (124 samples, 3.06%)</title><rect x="431.9" y="755.0" width="36.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.9" y="766.0">gen..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.05%)</title><rect x="433.9" y="739.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="436.9" y="750.0"></text>
</g>
<g>
<title>ext4_da_write_begin (44 samples, 1.09%)</title><rect x="434.5" y="739.0" width="12.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="437.5" y="750.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (17 samples, 0.42%)</title><rect x="435.1" y="723.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.1" y="734.0"></text>
</g>
<g>
<title>jbd2__journal_start (16 samples, 0.40%)</title><rect x="435.4" y="707.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="438.4" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc (6 samples, 0.15%)</title><rect x="435.7" y="691.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.7" y="702.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="437.4" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="440.4" y="702.0"></text>
</g>
<g>
<title>start_this_handle (8 samples, 0.20%)</title><rect x="437.7" y="691.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="440.7" y="702.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.02%)</title><rect x="439.8" y="675.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.8" y="686.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.07%)</title><rect x="440.0" y="723.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="443.0" y="734.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.02%)</title><rect x="440.9" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="443.9" y="734.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (18 samples, 0.44%)</title><rect x="441.2" y="723.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="444.2" y="734.0"></text>
</g>
<g>
<title>pagecache_get_page (16 samples, 0.40%)</title><rect x="441.2" y="707.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="444.2" y="718.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="442.7" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="445.7" y="702.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (1 samples, 0.02%)</title><rect x="442.7" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="445.7" y="686.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.25%)</title><rect x="443.0" y="691.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="446.0" y="702.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.10%)</title><rect x="444.4" y="675.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="447.4" y="686.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.02%)</title><rect x="445.6" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.6" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="445.6" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.6" y="670.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="445.6" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="448.6" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="445.6" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.6" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="445.6" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.6" y="622.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="445.6" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="448.6" y="606.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="445.6" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.6" y="590.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="445.6" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.6" y="574.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="445.6" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.6" y="558.0"></text>
</g>
<g>
<title>sta_info_get_bss?[mac80211] (1 samples, 0.02%)</title><rect x="445.6" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.6" y="542.0"></text>
</g>
<g>
<title>wait_for_stable_page (2 samples, 0.05%)</title><rect x="445.9" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="448.9" y="718.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="446.5" y="723.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.5" y="734.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="446.7" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.7" y="734.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="446.7" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="449.7" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="446.7" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="449.7" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="446.7" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="449.7" y="686.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="446.7" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="449.7" y="670.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="446.7" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.7" y="654.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="446.7" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="449.7" y="638.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="446.7" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="449.7" y="622.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="446.7" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="449.7" y="606.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.02%)</title><rect x="447.0" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="450.0" y="734.0"></text>
</g>
<g>
<title>ext4_da_write_end (67 samples, 1.65%)</title><rect x="447.3" y="739.0" width="19.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="450.3" y="750.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.10%)</title><rect x="448.2" y="723.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.2" y="734.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.10%)</title><rect x="448.2" y="707.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="451.2" y="718.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="449.1" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.1" y="702.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="449.4" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="452.4" y="734.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="449.4" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.4" y="718.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.02%)</title><rect x="449.4" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="452.4" y="702.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="449.4" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="452.4" y="686.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.02%)</title><rect x="449.4" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="452.4" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="449.4" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="452.4" y="654.0"></text>
</g>
<g>
<title>generic_write_end (59 samples, 1.46%)</title><rect x="449.7" y="723.0" width="17.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="452.7" y="734.0"></text>
</g>
<g>
<title>__mark_inode_dirty (48 samples, 1.19%)</title><rect x="450.0" y="707.0" width="13.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="453.0" y="718.0"></text>
</g>
<g>
<title>ext4_dirty_inode (46 samples, 1.14%)</title><rect x="450.2" y="691.0" width="13.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="453.2" y="702.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.05%)</title><rect x="450.2" y="675.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.2" y="686.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.05%)</title><rect x="450.2" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.2" y="670.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="450.2" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="453.2" y="654.0"></text>
</g>
<g>
<title>preempt_schedule_common (2 samples, 0.05%)</title><rect x="450.2" y="627.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.2" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="450.2" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.2" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="450.2" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="453.2" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="450.5" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="453.5" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="450.5" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.5" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="450.5" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="453.5" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="450.5" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.5" y="542.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="450.5" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="453.5" y="526.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="450.5" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.5" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="450.5" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.5" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="450.5" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="453.5" y="478.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="450.5" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="453.5" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="450.5" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.5" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="450.5" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.5" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="450.5" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="453.5" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="450.5" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.5" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="450.5" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.5" y="382.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="450.5" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="453.5" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.05%)</title><rect x="450.8" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.8" y="686.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (40 samples, 0.99%)</title><rect x="451.4" y="675.0" width="11.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="454.4" y="686.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (32 samples, 0.79%)</title><rect x="451.4" y="659.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="454.4" y="670.0"></text>
</g>
<g>
<title>__brelse (3 samples, 0.07%)</title><rect x="452.0" y="643.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.0" y="654.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="452.9" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="455.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.07%)</title><rect x="453.2" y="643.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="456.2" y="654.0"></text>
</g>
<g>
<title>ext4_do_update_inode (22 samples, 0.54%)</title><rect x="454.0" y="643.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="457.0" y="654.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.02%)</title><rect x="454.6" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.6" y="638.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="454.6" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.6" y="622.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (19 samples, 0.47%)</title><rect x="454.9" y="627.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="457.9" y="638.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="455.2" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="458.2" y="622.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (17 samples, 0.42%)</title><rect x="455.5" y="611.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="458.5" y="622.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="456.1" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="459.1" y="606.0"></text>
</g>
<g>
<title>crypto_shash_update (12 samples, 0.30%)</title><rect x="456.9" y="595.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="459.9" y="606.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (12 samples, 0.30%)</title><rect x="456.9" y="579.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="459.9" y="590.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="460.4" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.4" y="654.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (8 samples, 0.20%)</title><rect x="460.7" y="659.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.7" y="670.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (7 samples, 0.17%)</title><rect x="460.7" y="643.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.7" y="654.0"></text>
</g>
<g>
<title>__getblk_gfp (6 samples, 0.15%)</title><rect x="460.7" y="627.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.7" y="638.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.10%)</title><rect x="461.0" y="611.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="464.0" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="462.2" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.2" y="622.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.02%)</title><rect x="462.2" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.2" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="462.2" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.2" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="462.2" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="465.2" y="574.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="462.5" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.5" y="638.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="462.8" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="465.8" y="654.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.05%)</title><rect x="463.1" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="466.1" y="686.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="463.6" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.6" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="463.9" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="466.9" y="718.0"></text>
</g>
<g>
<title>block_write_end (9 samples, 0.22%)</title><rect x="464.2" y="707.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="467.2" y="718.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (8 samples, 0.20%)</title><rect x="464.5" y="691.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.5" y="702.0"></text>
</g>
<g>
<title>__set_page_dirty (1 samples, 0.02%)</title><rect x="466.0" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.0" y="686.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.05%)</title><rect x="466.3" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.3" y="686.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.02%)</title><rect x="466.8" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.8" y="750.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="467.1" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="470.1" y="750.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="467.4" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.4" y="750.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.02%)</title><rect x="467.7" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="470.7" y="750.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.02%)</title><rect x="468.0" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.0" y="766.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="468.3" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.3" y="766.0"></text>
</g>
<g>
<title>down_write_trylock (2 samples, 0.05%)</title><rect x="468.6" y="771.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.6" y="782.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.05%)</title><rect x="469.2" y="787.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.2" y="798.0"></text>
</g>
<g>
<title>rw_verify_area (13 samples, 0.32%)</title><rect x="469.8" y="819.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.8" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="470.3" y="803.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.3" y="814.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.25%)</title><rect x="470.6" y="803.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="473.6" y="814.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.17%)</title><rect x="470.9" y="787.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="473.9" y="798.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.17%)</title><rect x="470.9" y="771.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.9" y="782.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.07%)</title><rect x="472.1" y="755.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="475.1" y="766.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="473.0" y="787.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="476.0" y="798.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.02%)</title><rect x="473.6" y="867.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (6 samples, 0.15%)</title><rect x="473.8" y="915.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="476.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.05%)</title><rect x="475.6" y="947.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="478.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="476.2" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="479.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (12 samples, 0.30%)</title><rect x="476.5" y="947.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="479.5" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="476.8" y="931.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="479.8" y="942.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.02%)</title><rect x="477.0" y="931.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="480.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.02%)</title><rect x="477.3" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="480.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (3 samples, 0.07%)</title><rect x="477.6" y="931.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="480.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="478.5" y="931.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="481.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="479.4" y="931.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="482.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="480.0" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="483.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="480.3" y="979.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="483.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.05%)</title><rect x="480.5" y="995.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="483.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (9 samples, 0.22%)</title><rect x="481.1" y="995.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="484.1" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.12%)</title><rect x="482.3" y="979.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="485.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.02%)</title><rect x="483.7" y="995.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="486.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.05%)</title><rect x="484.0" y="995.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="487.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (3 samples, 0.07%)</title><rect x="484.6" y="995.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="487.6" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="485.2" y="979.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.2" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="485.2" y="963.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.2" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="485.2" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.05%)</title><rect x="485.5" y="995.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="488.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.05%)</title><rect x="486.1" y="995.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="489.1" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::ComputeContentFlags() const (1 samples, 0.02%)</title><rect x="486.7" y="995.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="489.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.02%)</title><rect x="487.0" y="995.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="490.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.05%)</title><rect x="487.2" y="995.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="490.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (213 samples, 5.26%)</title><rect x="487.8" y="995.0" width="62.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="490.8" y="1006.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (212 samples, 5.23%)</title><rect x="488.1" y="979.0" width="61.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="491.1" y="990.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="488.1" y="963.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="491.1" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="488.7" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="491.7" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="488.7" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="491.7" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="488.7" y="915.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.7" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="488.7" y="899.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="491.7" y="910.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="488.7" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.7" y="894.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="488.7" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="491.7" y="878.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="488.7" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="491.7" y="862.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="488.7" y="835.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="491.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="489.0" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="492.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.02%)</title><rect x="489.3" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.3" y="974.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (207 samples, 5.11%)</title><rect x="489.6" y="963.0" width="60.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="492.6" y="974.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (192 samples, 4.74%)</title><rect x="491.6" y="947.0" width="56.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="494.6" y="958.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (2 samples, 0.05%)</title><rect x="491.6" y="931.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="494.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.02%)</title><rect x="492.2" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="495.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (189 samples, 4.67%)</title><rect x="492.5" y="931.0" width="55.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="495.5" y="942.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (4 samples, 0.10%)</title><rect x="493.7" y="915.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="496.7" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="494.8" y="915.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="497.8" y="926.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="494.8" y="899.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="497.8" y="910.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="494.8" y="883.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.8" y="894.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="494.8" y="867.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="497.8" y="878.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="494.8" y="851.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="497.8" y="862.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="494.8" y="835.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="497.8" y="846.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="495.1" y="819.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.1" y="830.0"></text>
</g>
<g>
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="495.4" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.4" y="830.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.02%)</title><rect x="495.7" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="498.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.02%)</title><rect x="496.0" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="499.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (2 samples, 0.05%)</title><rect x="496.3" y="915.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="499.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.02%)</title><rect x="496.9" y="915.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="499.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (170 samples, 4.20%)</title><rect x="497.2" y="915.0" width="49.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="500.2" y="926.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (12 samples, 0.30%)</title><rect x="498.9" y="899.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="501.9" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="499.5" y="883.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="502.5" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="500.1" y="883.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="503.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (7 samples, 0.17%)</title><rect x="500.4" y="883.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="503.4" y="894.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (145 samples, 3.58%)</title><rect x="502.4" y="899.0" width="42.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="505.4" y="910.0">bool..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (131 samples, 3.23%)</title><rect x="503.9" y="883.0" width="38.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="506.9" y="894.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (31 samples, 0.77%)</title><rect x="525.4" y="867.0" width="9.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="528.4" y="878.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (7 samples, 0.17%)</title><rect x="525.7" y="851.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="528.7" y="862.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="527.7" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="530.7" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="528.0" y="851.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="531.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (21 samples, 0.52%)</title><rect x="528.3" y="851.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="531.3" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (5 samples, 0.12%)</title><rect x="529.8" y="835.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="532.8" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.22%)</title><rect x="531.2" y="835.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="534.2" y="846.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="533.9" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="536.9" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="534.2" y="835.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="537.2" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="534.4" y="867.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="537.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (24 samples, 0.59%)</title><rect x="534.7" y="867.0" width="7.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="537.7" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.20%)</title><rect x="539.4" y="851.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="542.4" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="541.4" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="544.4" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="541.4" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.4" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="541.4" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.4" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="541.4" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="544.4" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="541.4" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="544.4" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="541.4" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="544.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="541.7" y="867.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="541.7" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="544.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="541.7" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="544.7" y="846.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="542.0" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="545.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.07%)</title><rect x="542.3" y="883.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="545.3" y="894.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="542.9" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="545.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.12%)</title><rect x="543.2" y="883.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="546.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.05%)</title><rect x="544.6" y="899.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="547.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.10%)</title><rect x="545.2" y="899.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="548.2" y="910.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (2 samples, 0.05%)</title><rect x="545.5" y="883.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="548.5" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.02%)</title><rect x="546.1" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="549.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.02%)</title><rect x="546.4" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="549.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.05%)</title><rect x="546.7" y="915.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="549.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="547.3" y="915.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="550.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="547.6" y="947.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="550.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (7 samples, 0.17%)</title><rect x="547.8" y="947.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="550.8" y="958.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="549.6" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="552.6" y="942.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="549.6" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.6" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="549.6" y="899.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="552.6" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="549.6" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="552.6" y="894.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="549.6" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.6" y="878.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="549.6" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="552.6" y="862.0"></text>
</g>
<g>
<title>skb_dequeue (1 samples, 0.02%)</title><rect x="549.6" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="552.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (27 samples, 0.67%)</title><rect x="549.9" y="995.0" width="7.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="552.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (26 samples, 0.64%)</title><rect x="549.9" y="979.0" width="7.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="552.9" y="990.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="549.9" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="552.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="550.2" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="553.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (24 samples, 0.59%)</title><rect x="550.5" y="963.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="553.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (22 samples, 0.54%)</title><rect x="550.5" y="947.0" width="6.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="553.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.02%)</title><rect x="550.5" y="931.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="553.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (19 samples, 0.47%)</title><rect x="550.8" y="931.0" width="5.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="553.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="550.8" y="915.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="553.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (17 samples, 0.42%)</title><rect x="551.1" y="915.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="554.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (13 samples, 0.32%)</title><rect x="551.9" y="899.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="554.9" y="910.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 0.30%)</title><rect x="551.9" y="883.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="554.9" y="894.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (11 samples, 0.27%)</title><rect x="551.9" y="867.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="554.9" y="878.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (5 samples, 0.12%)</title><rect x="553.7" y="851.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="556.7" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (1 samples, 0.02%)</title><rect x="553.7" y="835.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="556.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="554.0" y="835.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="557.0" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11710472488507848484.so (1 samples, 0.02%)</title><rect x="554.5" y="819.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="557.5" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="554.8" y="819.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="557.8" y="830.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.02%)</title><rect x="555.1" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="558.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.02%)</title><rect x="555.4" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="558.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.02%)</title><rect x="555.7" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="558.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="556.0" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="559.0" y="926.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, rocksdb::MemTable* const&amp;) (1 samples, 0.02%)</title><rect x="556.3" y="931.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="559.3" y="942.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.02%)</title><rect x="556.6" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="559.6" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="556.6" y="915.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="559.6" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="556.6" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="559.6" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="556.6" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="559.6" y="894.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.05%)</title><rect x="556.9" y="947.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="559.9" y="958.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) [clone .plt] (1 samples, 0.02%)</title><rect x="557.5" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="560.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.02%)</title><rect x="557.8" y="995.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="560.8" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (3 samples, 0.07%)</title><rect x="558.0" y="995.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="561.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (12 samples, 0.30%)</title><rect x="558.9" y="995.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="561.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="561.0" y="979.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="564.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="561.5" y="963.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="564.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="561.5" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="564.5" y="958.0"></text>
</g>
<g>
<title>pthread_cond_wait (1 samples, 0.02%)</title><rect x="561.8" y="979.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="564.8" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="561.8" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="564.8" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="561.8" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="564.8" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="561.8" y="931.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="564.8" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="561.8" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.02%)</title><rect x="562.1" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="565.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.05%)</title><rect x="562.4" y="995.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="565.4" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.10%)</title><rect x="563.0" y="995.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="566.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.10%)</title><rect x="563.0" y="979.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="566.0" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.07%)</title><rect x="564.2" y="995.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="567.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.02%)</title><rect x="565.0" y="995.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="568.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (2 samples, 0.05%)</title><rect x="565.3" y="995.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="568.3" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.02%)</title><rect x="565.3" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="568.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.02%)</title><rect x="565.6" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="568.6" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (6 samples, 0.15%)</title><rect x="565.9" y="995.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="568.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="567.1" y="979.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="570.1" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="567.4" y="979.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="570.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.10%)</title><rect x="567.7" y="995.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="570.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (4 samples, 0.10%)</title><rect x="567.7" y="979.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="570.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.02%)</title><rect x="568.8" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="571.8" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="568.8" y="979.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="571.8" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.02%)</title><rect x="569.1" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="572.1" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.05%)</title><rect x="569.4" y="995.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="572.4" y="1006.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.07%)</title><rect x="570.0" y="995.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="573.0" y="1006.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (2 samples, 0.05%)</title><rect x="570.9" y="995.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="573.9" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="571.4" y="995.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.4" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="571.4" y="979.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="574.4" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="571.4" y="963.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="574.4" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="571.7" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="574.7" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="571.7" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.7" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="571.7" y="915.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="574.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.07%)</title><rect x="572.0" y="1011.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="575.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.07%)</title><rect x="572.9" y="1011.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="575.9" y="1022.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.02%)</title><rect x="573.8" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="576.8" y="1022.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (3 samples, 0.07%)</title><rect x="574.1" y="1011.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="577.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::HasMerge() const (1 samples, 0.02%)</title><rect x="574.9" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="577.9" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="575.2" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="578.2" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.05%)</title><rect x="575.5" y="1011.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="578.5" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.05%)</title><rect x="576.1" y="1011.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="579.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.07%)</title><rect x="576.7" y="1011.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="579.7" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (4 samples, 0.10%)</title><rect x="577.6" y="1011.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="580.6" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.10%)</title><rect x="578.7" y="1011.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="581.7" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.05%)</title><rect x="579.9" y="1011.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="582.9" y="1022.0"></text>
</g>
<g>
<title>std::condition_variable::~condition_variable() (1 samples, 0.02%)</title><rect x="580.5" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="583.5" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.05%)</title><rect x="580.8" y="1027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="583.8" y="1038.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.12%)</title><rect x="581.4" y="1027.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="584.4" y="1038.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (18 samples, 0.44%)</title><rect x="582.8" y="1027.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="585.8" y="1038.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.02%)</title><rect x="582.8" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="585.8" y="1022.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.07%)</title><rect x="583.1" y="1011.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="586.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (4 samples, 0.10%)</title><rect x="584.0" y="1011.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="587.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.02%)</title><rect x="585.1" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="588.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="585.4" y="1011.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="588.4" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.02%)</title><rect x="585.4" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="588.4" y="1006.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.05%)</title><rect x="585.7" y="995.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="588.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.05%)</title><rect x="586.3" y="1011.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="589.3" y="1022.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.10%)</title><rect x="586.9" y="1011.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="589.9" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (5 samples, 0.12%)</title><rect x="588.1" y="1027.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="591.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (8 samples, 0.20%)</title><rect x="589.5" y="1027.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="592.5" y="1038.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="591.8" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="594.8" y="1038.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.02%)</title><rect x="592.1" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="595.1" y="1038.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (8 samples, 0.20%)</title><rect x="592.4" y="1027.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="595.4" y="1038.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.02%)</title><rect x="594.8" y="1027.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="597.8" y="1038.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.12%)</title><rect x="595.0" y="1043.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="598.0" y="1054.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.07%)</title><rect x="596.5" y="1043.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="599.5" y="1054.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (1 samples, 0.02%)</title><rect x="597.4" y="1043.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="600.4" y="1054.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.07%)</title><rect x="597.7" y="1043.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="600.7" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (4 samples, 0.10%)</title><rect x="598.5" y="1075.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="601.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.57%)</title><rect x="599.7" y="1107.0" width="6.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="602.7" y="1118.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.22%)</title><rect x="599.7" y="1091.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="602.7" y="1102.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.05%)</title><rect x="602.3" y="1091.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="605.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="602.9" y="1091.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="605.9" y="1102.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.02%)</title><rect x="602.9" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="605.9" y="1086.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="602.9" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="605.9" y="1070.0"></text>
</g>
<g>
<title>__lll_lock_wait (4 samples, 0.10%)</title><rect x="603.2" y="1091.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="606.2" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="604.1" y="1075.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="607.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="604.1" y="1059.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.1" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="604.1" y="1043.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="607.1" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="604.1" y="1027.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="607.1" y="1038.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="604.1" y="1011.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.1" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="604.1" y="995.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.1" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="604.1" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="607.1" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="604.1" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="607.1" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="604.1" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.15%)</title><rect x="604.4" y="1091.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="607.4" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="605.0" y="1075.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="608.0" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="605.0" y="1059.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="608.0" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="605.2" y="1059.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="608.2" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="605.2" y="1043.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="608.2" y="1054.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="605.5" y="1027.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="608.5" y="1038.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="605.5" y="1011.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="608.5" y="1022.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="605.5" y="995.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="608.5" y="1006.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="605.8" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="608.8" y="1006.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="606.1" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="609.1" y="1102.0"></text>
</g>
<g>
<title>__libc_malloc (14 samples, 0.35%)</title><rect x="606.4" y="1107.0" width="4.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="609.4" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.49%)</title><rect x="610.5" y="1107.0" width="5.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="613.5" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.47%)</title><rect x="610.8" y="1091.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.8" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.47%)</title><rect x="610.8" y="1075.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.8" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.40%)</title><rect x="611.1" y="1059.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.1" y="1070.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.40%)</title><rect x="611.1" y="1043.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.1" y="1054.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.35%)</title><rect x="611.1" y="1027.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.1" y="1038.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="611.4" y="1011.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="614.4" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.30%)</title><rect x="611.7" y="1011.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.7" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.30%)</title><rect x="611.7" y="995.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.7" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.30%)</title><rect x="611.7" y="979.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="614.7" y="990.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.05%)</title><rect x="615.2" y="1027.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="618.2" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="615.7" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.7" y="1070.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="615.7" y="1043.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="618.7" y="1054.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="615.7" y="1027.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.7" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="615.7" y="1011.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="618.7" y="1022.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.02%)</title><rect x="616.3" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="619.3" y="1118.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.05%)</title><rect x="616.6" y="1107.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="619.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (3 samples, 0.07%)</title><rect x="617.2" y="1139.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.2" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="617.2" y="1123.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="620.2" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="617.2" y="1107.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="620.2" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="617.2" y="1091.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="620.2" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="617.2" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="620.2" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="617.2" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="620.2" y="1070.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="617.2" y="1043.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="620.2" y="1054.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="617.5" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="620.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="617.8" y="1123.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="620.8" y="1134.0"></text>
</g>
<g>
<title>Klass::is_klass() const volatile (1 samples, 0.02%)</title><rect x="617.8" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="620.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="617.8" y="1091.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="620.8" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="617.8" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="620.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (11 samples, 0.27%)</title><rect x="618.1" y="1139.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.1" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="618.9" y="1123.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="621.9" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="619.2" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="622.2" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="619.2" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="622.2" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="619.2" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="622.2" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="619.2" y="1059.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="622.2" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="619.2" y="1043.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="622.2" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="619.2" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="622.2" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="619.2" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="622.2" y="1022.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="619.2" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="622.2" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="619.2" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="622.2" y="990.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="619.2" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="622.2" y="974.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="619.2" y="947.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="622.2" y="958.0"></text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.02%)</title><rect x="619.5" y="1123.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="622.5" y="1134.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="619.5" y="1107.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="622.5" y="1118.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="619.5" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="622.5" y="1102.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="619.8" y="1123.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="622.8" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="620.4" y="1123.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="623.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.sendResponse (483 samples, 11.93%)</title><rect x="621.3" y="1155.0" width="140.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.3" y="1166.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="622.4" y="1139.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="625.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (476 samples, 11.75%)</title><rect x="623.3" y="1139.0" width="138.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.3" y="1150.0">one/nio/http/Http..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.27%)</title><rect x="625.6" y="1123.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="628.6" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.27%)</title><rect x="625.6" y="1107.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="628.6" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (11 samples, 0.27%)</title><rect x="625.6" y="1091.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="628.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (436 samples, 10.77%)</title><rect x="628.8" y="1123.0" width="127.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.8" y="1134.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.49%)</title><rect x="628.8" y="1107.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="628.8" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.8" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="628.8" y="1075.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="631.8" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="628.8" y="1059.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="631.8" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="628.8" y="1043.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="631.8" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="628.8" y="1027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="631.8" y="1038.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="628.8" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="631.8" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="629.1" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="632.1" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="629.1" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="632.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (18 samples, 0.44%)</title><rect x="629.4" y="1091.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.20%)</title><rect x="629.4" y="1075.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.4" y="1086.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="631.2" y="1059.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="634.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="631.8" y="1075.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="631.8" y="1059.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="631.8" y="1043.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (416 samples, 10.27%)</title><rect x="634.7" y="1107.0" width="121.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.7" y="1118.0">one/nio/net/Ses..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="634.7" y="1091.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="637.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="634.7" y="1075.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="637.7" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="634.7" y="1059.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="637.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="634.7" y="1043.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="637.7" y="1054.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="634.7" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="637.7" y="1038.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="634.7" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="637.7" y="1022.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="635.0" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="638.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (414 samples, 10.22%)</title><rect x="635.3" y="1091.0" width="120.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.3" y="1102.0">one/nio/net/Ses..</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="636.7" y="1075.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="639.7" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.02%)</title><rect x="637.0" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="640.0" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.02%)</title><rect x="637.3" y="1075.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="640.3" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.10%)</title><rect x="637.6" y="1075.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="640.6" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (3 samples, 0.07%)</title><rect x="637.6" y="1059.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="640.6" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="638.2" y="1043.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="641.2" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="638.5" y="1059.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="641.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.05%)</title><rect x="638.8" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (400 samples, 9.88%)</title><rect x="639.3" y="1075.0" width="116.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.3" y="1086.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (400 samples, 9.88%)</title><rect x="639.3" y="1059.0" width="116.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.3" y="1070.0">one/nio/net/Na..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.10%)</title><rect x="642.0" y="1043.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="645.0" y="1054.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (16 samples, 0.40%)</title><rect x="643.1" y="1043.0" width="4.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="646.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="644.3" y="1027.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="647.3" y="1038.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="644.6" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="647.6" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="644.9" y="1027.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="647.9" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="645.2" y="1027.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="648.2" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.17%)</title><rect x="645.5" y="1027.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="648.5" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="646.0" y="1011.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="649.0" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="646.6" y="1011.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="649.6" y="1022.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="647.2" y="1011.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="650.2" y="1022.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="647.5" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="650.5" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="647.8" y="1043.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="650.8" y="1054.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="648.1" y="1043.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.1" y="1054.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="648.1" y="1027.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="651.1" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="648.1" y="1011.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="651.1" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="648.1" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.1" y="1006.0"></text>
</g>
<g>
<title>send (369 samples, 9.11%)</title><rect x="648.4" y="1043.0" width="107.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="651.4" y="1054.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (366 samples, 9.04%)</title><rect x="649.2" y="1027.0" width="106.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.2" y="1038.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="649.2" y="1011.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="652.2" y="1022.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="649.5" y="1011.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="652.5" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (364 samples, 8.99%)</title><rect x="649.8" y="1011.0" width="106.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.8" y="1022.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (359 samples, 8.86%)</title><rect x="651.3" y="995.0" width="104.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="654.3" y="1006.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (359 samples, 8.86%)</title><rect x="651.3" y="979.0" width="104.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.3" y="990.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="651.6" y="963.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.6" y="974.0"></text>
</g>
<g>
<title>sock_sendmsg (349 samples, 8.62%)</title><rect x="652.2" y="963.0" width="101.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.2" y="974.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (339 samples, 8.37%)</title><rect x="652.2" y="947.0" width="98.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="655.2" y="958.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (336 samples, 8.30%)</title><rect x="653.0" y="931.0" width="97.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="656.0" y="942.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="653.3" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.3" y="926.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="653.6" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="656.6" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="653.9" y="915.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="656.9" y="926.0"></text>
</g>
<g>
<title>release_sock (12 samples, 0.30%)</title><rect x="654.2" y="915.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="657.2" y="926.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="654.2" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="657.2" y="910.0"></text>
</g>
<g>
<title>__release_sock (10 samples, 0.25%)</title><rect x="654.5" y="899.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="657.5" y="910.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="654.5" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.5" y="894.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.02%)</title><rect x="654.5" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.5" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="654.5" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.5" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="654.5" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="657.5" y="846.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 0.22%)</title><rect x="654.8" y="883.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="657.8" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.20%)</title><rect x="655.1" y="867.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="658.1" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="655.1" y="851.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="658.1" y="862.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="655.1" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="658.1" y="846.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="655.1" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="658.1" y="830.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="655.1" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="658.1" y="814.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="655.1" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="658.1" y="798.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="655.1" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.1" y="782.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="655.4" y="851.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="658.4" y="862.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="655.4" y="835.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="658.4" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="655.4" y="819.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="658.4" y="830.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="655.4" y="803.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="658.4" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="655.4" y="787.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="658.4" y="798.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.10%)</title><rect x="655.6" y="851.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="658.6" y="862.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="655.6" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="658.6" y="846.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.07%)</title><rect x="655.9" y="835.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.9" y="846.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="656.5" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="659.5" y="830.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="656.5" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="659.5" y="814.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="656.5" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="659.5" y="798.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="656.5" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="659.5" y="782.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="656.5" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="659.5" y="766.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.05%)</title><rect x="656.8" y="851.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="659.8" y="862.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="656.8" y="835.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.8" y="846.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.05%)</title><rect x="656.8" y="819.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="659.8" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="656.8" y="803.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.8" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="656.8" y="787.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="659.8" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="657.4" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="660.4" y="910.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="657.4" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="660.4" y="894.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="657.4" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="660.4" y="878.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="657.4" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="660.4" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="657.4" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.4" y="846.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="657.4" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="660.4" y="830.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="657.4" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="660.4" y="814.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.05%)</title><rect x="657.7" y="915.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="660.7" y="926.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="658.3" y="915.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="661.3" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (316 samples, 7.80%)</title><rect x="658.6" y="915.0" width="92.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.6" y="926.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="660.9" y="899.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="663.9" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="661.2" y="883.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="664.2" y="894.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="661.5" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="664.5" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="661.5" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.5" y="894.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="661.8" y="899.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="664.8" y="910.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.07%)</title><rect x="662.1" y="899.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.1" y="910.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.07%)</title><rect x="662.1" y="883.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="665.1" y="894.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (24 samples, 0.59%)</title><rect x="662.9" y="899.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="665.9" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (24 samples, 0.59%)</title><rect x="662.9" y="883.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="665.9" y="894.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (11 samples, 0.27%)</title><rect x="663.2" y="867.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="666.2" y="878.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.15%)</title><rect x="663.2" y="851.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="666.2" y="862.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.10%)</title><rect x="663.5" y="835.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="666.5" y="846.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="664.7" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.7" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="664.7" y="819.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="667.7" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="664.7" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="667.7" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="664.7" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="667.7" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="664.7" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="667.7" y="782.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="664.7" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="667.7" y="766.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="664.7" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.7" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="664.7" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="667.7" y="734.0"></text>
</g>
<g>
<title>memset (5 samples, 0.12%)</title><rect x="665.0" y="851.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="668.0" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="666.4" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="669.4" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="666.4" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.4" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="666.4" y="835.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="669.4" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="666.4" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="669.4" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="666.4" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="669.4" y="814.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="666.4" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.4" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="666.4" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="669.4" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.17%)</title><rect x="666.7" y="867.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="669.7" y="878.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="668.8" y="867.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.8" y="878.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="668.8" y="851.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="671.8" y="862.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="669.3" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="672.3" y="878.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="669.6" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="672.6" y="878.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.07%)</title><rect x="669.9" y="899.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.9" y="910.0"></text>
</g>
<g>
<title>tcp_push (269 samples, 6.64%)</title><rect x="670.8" y="899.0" width="78.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="673.8" y="910.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (269 samples, 6.64%)</title><rect x="670.8" y="883.0" width="78.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="673.8" y="894.0">__tcp_pus..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="671.1" y="867.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="674.1" y="878.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="671.7" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.7" y="878.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.05%)</title><rect x="672.0" y="867.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="675.0" y="878.0"></text>
</g>
<g>
<title>tcp_write_xmit (263 samples, 6.49%)</title><rect x="672.5" y="867.0" width="76.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="675.5" y="878.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="673.4" y="851.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="676.4" y="862.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (235 samples, 5.80%)</title><rect x="673.7" y="851.0" width="68.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="676.7" y="862.0">__tcp_t..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="675.5" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="678.5" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="675.5" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.5" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="675.5" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="678.5" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="675.5" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="678.5" y="798.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="675.8" y="835.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="678.8" y="846.0"></text>
</g>
<g>
<title>ip_queue_xmit (225 samples, 5.56%)</title><rect x="676.0" y="835.0" width="65.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.0" y="846.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (225 samples, 5.56%)</title><rect x="676.0" y="819.0" width="65.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="679.0" y="830.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="676.9" y="803.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="679.9" y="814.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="676.9" y="787.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="679.9" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="677.5" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="680.5" y="814.0"></text>
</g>
<g>
<title>ip_local_out (216 samples, 5.33%)</title><rect x="677.8" y="803.0" width="62.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.8" y="814.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="677.8" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="680.8" y="798.0"></text>
</g>
<g>
<title>ip_output (215 samples, 5.31%)</title><rect x="678.1" y="787.0" width="62.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="681.1" y="798.0">ip_out..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="678.4" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="681.4" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="678.7" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="681.7" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="678.7" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.7" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="678.7" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="681.7" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="678.7" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="681.7" y="734.0"></text>
</g>
<g>
<title>ip_finish_output (212 samples, 5.23%)</title><rect x="679.0" y="771.0" width="61.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="682.0" y="782.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="679.0" y="755.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="682.0" y="766.0"></text>
</g>
<g>
<title>__ip_finish_output (209 samples, 5.16%)</title><rect x="679.5" y="755.0" width="60.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="682.5" y="766.0">__ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="679.5" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="682.5" y="750.0"></text>
</g>
<g>
<title>ip_finish_output2 (207 samples, 5.11%)</title><rect x="679.8" y="739.0" width="60.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="682.8" y="750.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (179 samples, 4.42%)</title><rect x="681.0" y="723.0" width="52.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.0" y="734.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (178 samples, 4.40%)</title><rect x="681.0" y="707.0" width="51.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="684.0" y="718.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (172 samples, 4.25%)</title><rect x="681.9" y="691.0" width="50.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="684.9" y="702.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (171 samples, 4.22%)</title><rect x="681.9" y="675.0" width="49.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="684.9" y="686.0">__sof..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="683.3" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="686.3" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="683.6" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="686.6" y="670.0"></text>
</g>
<g>
<title>net_rx_action (164 samples, 4.05%)</title><rect x="683.9" y="659.0" width="47.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="686.9" y="670.0">net_..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="686.0" y="643.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="689.0" y="654.0"></text>
</g>
<g>
<title>process_backlog (156 samples, 3.85%)</title><rect x="686.2" y="643.0" width="45.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.2" y="654.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (149 samples, 3.68%)</title><rect x="688.3" y="627.0" width="43.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="691.3" y="638.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (148 samples, 3.65%)</title><rect x="688.6" y="611.0" width="43.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.6" y="622.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="688.9" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="691.9" y="606.0"></text>
</g>
<g>
<title>ip_rcv (146 samples, 3.60%)</title><rect x="689.2" y="595.0" width="42.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.2" y="606.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="689.4" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="692.4" y="590.0"></text>
</g>
<g>
<title>ip_rcv_finish (143 samples, 3.53%)</title><rect x="690.0" y="579.0" width="41.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="693.0" y="590.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (139 samples, 3.43%)</title><rect x="690.3" y="563.0" width="40.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="693.3" y="574.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (138 samples, 3.41%)</title><rect x="690.6" y="547.0" width="40.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.6" y="558.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (138 samples, 3.41%)</title><rect x="690.6" y="531.0" width="40.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.6" y="542.0">ip_..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="691.2" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.2" y="526.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.05%)</title><rect x="691.5" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (133 samples, 3.28%)</title><rect x="692.1" y="515.0" width="38.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="695.1" y="526.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.15%)</title><rect x="692.4" y="499.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="695.4" y="510.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="693.5" y="483.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="696.5" y="494.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="694.1" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.1" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="694.4" y="499.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="697.4" y="510.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="694.4" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.4" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="694.7" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="697.7" y="494.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="695.0" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.0" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (121 samples, 2.99%)</title><rect x="695.3" y="499.0" width="35.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.3" y="510.0">tcp..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="695.3" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="698.3" y="494.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="695.6" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.6" y="494.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="695.9" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="698.9" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (117 samples, 2.89%)</title><rect x="696.4" y="483.0" width="34.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="699.4" y="494.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.12%)</title><rect x="697.3" y="467.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="700.3" y="478.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.12%)</title><rect x="697.3" y="451.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="700.3" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="697.3" y="435.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="700.3" y="446.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.12%)</title><rect x="697.3" y="419.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="700.3" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.10%)</title><rect x="697.3" y="403.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.3" y="414.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="698.5" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="701.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="698.5" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="701.5" y="398.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="698.8" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="701.8" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="699.4" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="702.4" y="478.0"></text>
</g>
<g>
<title>tcp_ack (34 samples, 0.84%)</title><rect x="699.9" y="467.0" width="9.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="702.9" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="700.8" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="703.8" y="462.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="701.1" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.1" y="462.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="701.4" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.4" y="462.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="701.7" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="704.7" y="462.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="702.0" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.0" y="462.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (23 samples, 0.57%)</title><rect x="702.3" y="451.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.3" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.40%)</title><rect x="702.8" y="435.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="705.8" y="446.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.17%)</title><rect x="702.8" y="419.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.8" y="430.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.17%)</title><rect x="702.8" y="403.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="705.8" y="414.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.17%)</title><rect x="702.8" y="387.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="705.8" y="398.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.20%)</title><rect x="704.9" y="419.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="707.9" y="430.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.20%)</title><rect x="704.9" y="403.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="707.9" y="414.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.07%)</title><rect x="706.3" y="387.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.3" y="398.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="706.3" y="371.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.3" y="382.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="706.3" y="355.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.3" y="366.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="706.9" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="709.9" y="350.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="707.2" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.2" y="430.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="707.5" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="710.5" y="446.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="707.8" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="710.8" y="446.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="708.1" y="435.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.1" y="446.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="708.7" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="711.7" y="446.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="709.0" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="712.0" y="462.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="709.3" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.3" y="462.0"></text>
</g>
<g>
<title>tcp_data_ready (67 samples, 1.65%)</title><rect x="709.8" y="467.0" width="19.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="712.8" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (67 samples, 1.65%)</title><rect x="709.8" y="451.0" width="19.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="712.8" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (66 samples, 1.63%)</title><rect x="710.1" y="435.0" width="19.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="713.1" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (66 samples, 1.63%)</title><rect x="710.1" y="419.0" width="19.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="713.1" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (65 samples, 1.60%)</title><rect x="710.1" y="403.0" width="19.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="713.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="729.1" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="732.1" y="414.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="729.4" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.4" y="478.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="729.7" y="451.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.7" y="462.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="729.9" y="467.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.9" y="478.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="730.5" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.5" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="730.8" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="733.8" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.05%)</title><rect x="731.1" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="734.1" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="731.7" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.7" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (3 samples, 0.07%)</title><rect x="732.0" y="691.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="735.0" y="702.0"></text>
</g>
<g>
<title>do_IRQ (3 samples, 0.07%)</title><rect x="732.0" y="675.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="735.0" y="686.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.07%)</title><rect x="732.0" y="659.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.0" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.07%)</title><rect x="732.0" y="643.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.0" y="654.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.07%)</title><rect x="732.0" y="627.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.0" y="638.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="732.3" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="735.3" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="732.3" y="595.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.3" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="732.3" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="735.3" y="590.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="732.3" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="735.3" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="732.3" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="735.3" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="732.3" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="735.3" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="732.3" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.3" y="526.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="732.3" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="735.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="732.6" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="735.6" y="494.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="732.6" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.6" y="478.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="732.9" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="735.9" y="718.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="732.9" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="735.9" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="732.9" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="735.9" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="732.9" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="735.9" y="670.0"></text>
</g>
<g>
<title>dev_queue_xmit (22 samples, 0.54%)</title><rect x="733.2" y="723.0" width="6.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="736.2" y="734.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.52%)</title><rect x="733.2" y="707.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="736.2" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="735.5" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.5" y="702.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.25%)</title><rect x="735.8" y="691.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="738.8" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="735.8" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="738.8" y="686.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.20%)</title><rect x="736.4" y="675.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.4" y="686.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.15%)</title><rect x="736.4" y="659.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="739.4" y="670.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.15%)</title><rect x="736.4" y="643.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="739.4" y="654.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.12%)</title><rect x="736.6" y="627.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.6" y="638.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.05%)</title><rect x="738.1" y="659.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="741.1" y="670.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="738.7" y="691.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.7" y="702.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="739.3" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.3" y="718.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="739.6" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="742.6" y="734.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.05%)</title><rect x="739.6" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.6" y="718.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.05%)</title><rect x="739.6" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.6" y="702.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="739.6" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.6" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="739.6" y="659.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.6" y="670.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="739.9" y="643.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="742.9" y="654.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="739.9" y="627.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="742.9" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="739.9" y="611.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.9" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="739.9" y="595.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.9" y="606.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="739.9" y="579.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.9" y="590.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="739.9" y="563.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.9" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="739.9" y="547.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.9" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="739.9" y="531.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.9" y="542.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="739.9" y="515.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="742.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="739.9" y="499.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="742.9" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="739.9" y="483.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="742.9" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="739.9" y="467.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="742.9" y="478.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="739.9" y="451.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.9" y="462.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="739.9" y="435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="742.9" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="740.1" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="743.1" y="750.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="740.4" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="743.4" y="766.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.05%)</title><rect x="740.7" y="803.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="743.7" y="814.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="741.3" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.3" y="814.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.05%)</title><rect x="741.6" y="835.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="744.6" y="846.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.20%)</title><rect x="742.2" y="851.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="745.2" y="862.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="744.5" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="747.5" y="862.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="744.8" y="851.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="747.8" y="862.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="745.4" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="748.4" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.10%)</title><rect x="745.7" y="851.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.7" y="862.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.07%)</title><rect x="746.0" y="835.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="749.0" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="746.3" y="819.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="749.3" y="830.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="746.3" y="803.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="749.3" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="746.6" y="787.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="749.6" y="798.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="746.8" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="749.8" y="862.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.10%)</title><rect x="747.1" y="851.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="750.1" y="862.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="748.0" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="751.0" y="846.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="748.0" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.0" y="830.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="748.3" y="851.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="751.3" y="862.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="748.6" y="851.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="751.6" y="862.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="749.2" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="752.2" y="910.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.10%)</title><rect x="749.5" y="899.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="752.5" y="910.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="749.5" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="752.5" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.07%)</title><rect x="749.8" y="883.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.8" y="894.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="750.3" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.3" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="750.6" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="753.6" y="926.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.22%)</title><rect x="750.9" y="947.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.9" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.20%)</title><rect x="751.2" y="931.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="754.2" y="942.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.20%)</title><rect x="751.2" y="915.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="754.2" y="926.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (5 samples, 0.12%)</title><rect x="752.1" y="899.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.1" y="910.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="752.7" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="755.7" y="894.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="753.0" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.0" y="894.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="753.5" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.5" y="958.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.17%)</title><rect x="753.8" y="963.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.8" y="974.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.10%)</title><rect x="754.1" y="947.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="757.1" y="958.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="754.1" y="931.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="757.1" y="942.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.10%)</title><rect x="754.1" y="915.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="757.1" y="926.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="755.3" y="947.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="758.3" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 0.52%)</title><rect x="755.9" y="1123.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.25%)</title><rect x="759.1" y="1107.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.25%)</title><rect x="759.1" y="1091.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.1" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="760.5" y="1075.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="763.5" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.10%)</title><rect x="760.8" y="1075.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="763.8" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="761.4" y="1059.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="764.4" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="761.7" y="1043.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="764.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.10%)</title><rect x="762.0" y="1251.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.10%)</title><rect x="762.0" y="1235.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.10%)</title><rect x="762.0" y="1219.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.10%)</title><rect x="762.0" y="1203.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (305 samples, 7.53%)</title><rect x="763.2" y="1251.0" width="88.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.2" y="1262.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (295 samples, 7.28%)</title><rect x="764.0" y="1235.0" width="86.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.0" y="1246.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (207 samples, 5.11%)</title><rect x="764.0" y="1219.0" width="60.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.0" y="1230.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.07%)</title><rect x="764.6" y="1203.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.6" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="764.6" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="767.6" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="764.9" y="1187.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="767.9" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="764.9" y="1171.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="767.9" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="764.9" y="1155.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="767.9" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="764.9" y="1139.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="767.9" y="1150.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="764.9" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="767.9" y="1134.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.02%)</title><rect x="764.9" y="1107.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="767.9" y="1118.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="765.2" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="768.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.30%)</title><rect x="765.5" y="1203.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (12 samples, 0.30%)</title><rect x="765.5" y="1187.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (18 samples, 0.44%)</title><rect x="769.0" y="1203.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.44%)</title><rect x="769.0" y="1187.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.12%)</title><rect x="772.5" y="1171.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="772.5" y="1155.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.07%)</title><rect x="773.1" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.1" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.07%)</title><rect x="773.1" y="1123.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="776.1" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="773.4" y="1107.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="776.4" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="773.4" y="1091.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="776.4" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="773.4" y="1075.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="776.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="773.4" y="1059.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="776.4" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="773.4" y="1043.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="776.4" y="1054.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="773.6" y="1043.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="776.6" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="773.6" y="1027.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="776.6" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="773.6" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="776.6" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="773.6" y="995.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="776.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="773.9" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (172 samples, 4.25%)</title><rect x="774.2" y="1203.0" width="50.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.2" y="1214.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (171 samples, 4.22%)</title><rect x="774.5" y="1187.0" width="49.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.5" y="1198.0">jdk/i..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="776.0" y="1171.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="779.0" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (76 samples, 1.88%)</title><rect x="776.3" y="1171.0" width="22.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="779.3" y="1182.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="777.1" y="1155.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="780.1" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="777.1" y="1139.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="780.1" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="777.1" y="1123.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="780.1" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="777.1" y="1107.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.1" y="1118.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="777.1" y="1091.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.1" y="1102.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="777.1" y="1075.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="780.1" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="777.1" y="1059.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.1" y="1070.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="777.4" y="1155.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="780.4" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 0.47%)</title><rect x="778.0" y="1155.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="781.0" y="1166.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (4 samples, 0.10%)</title><rect x="781.5" y="1139.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="784.5" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="782.7" y="1139.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="785.7" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="783.0" y="1139.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="786.0" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="783.6" y="1155.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="786.6" y="1166.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="784.4" y="1155.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="787.4" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (36 samples, 0.89%)</title><rect x="784.7" y="1155.0" width="10.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="787.7" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.74%)</title><rect x="786.5" y="1139.0" width="8.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="789.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.74%)</title><rect x="786.5" y="1123.0" width="8.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="789.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.40%)</title><rect x="790.3" y="1107.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.3" y="1118.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.40%)</title><rect x="790.3" y="1091.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.3" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="790.3" y="1075.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="793.3" y="1086.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.35%)</title><rect x="790.8" y="1075.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="793.8" y="1086.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.10%)</title><rect x="793.8" y="1059.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="796.8" y="1070.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="794.9" y="1107.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="797.9" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="795.2" y="1155.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="798.2" y="1166.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="795.5" y="1155.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="798.5" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_wait (2 samples, 0.05%)</title><rect x="796.1" y="1155.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="799.1" y="1166.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.15%)</title><rect x="796.7" y="1155.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="799.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 2.15%)</title><rect x="798.4" y="1171.0" width="25.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="801.4" y="1182.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.12%)</title><rect x="798.4" y="1155.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="801.4" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="799.6" y="1139.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="802.6" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="799.6" y="1123.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="802.6" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="799.6" y="1107.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="802.6" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (65 samples, 1.60%)</title><rect x="799.9" y="1155.0" width="18.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="802.9" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.91%)</title><rect x="808.0" y="1139.0" width="10.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="811.0" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="808.0" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="811.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.89%)</title><rect x="808.3" y="1123.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="811.3" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.79%)</title><rect x="809.5" y="1107.0" width="9.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.5" y="1118.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.74%)</title><rect x="810.1" y="1091.0" width="8.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.1" y="1102.0"></text>
</g>
<g>
<title>futex_wait (30 samples, 0.74%)</title><rect x="810.1" y="1075.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="813.1" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="811.5" y="1059.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="814.5" y="1070.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.42%)</title><rect x="812.1" y="1059.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="815.1" y="1070.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.40%)</title><rect x="812.4" y="1043.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="815.4" y="1054.0"></text>
</g>
<g>
<title>__sched_text_start (15 samples, 0.37%)</title><rect x="812.7" y="1027.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="815.7" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.37%)</title><rect x="812.7" y="1011.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="815.7" y="1022.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.07%)</title><rect x="817.1" y="1059.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="820.1" y="1070.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="817.6" y="1043.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="820.6" y="1054.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="817.9" y="1059.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="820.9" y="1070.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="818.2" y="1059.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="821.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (12 samples, 0.30%)</title><rect x="818.8" y="1155.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="821.8" y="1166.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="822.3" y="1155.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="825.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="822.6" y="1155.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="825.6" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="822.9" y="1155.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="825.9" y="1166.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="823.5" y="1155.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="826.5" y="1166.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="823.8" y="1171.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="826.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.10%)</title><rect x="824.3" y="1219.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.3" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="825.2" y="1203.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="828.2" y="1214.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="825.2" y="1187.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="828.2" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="825.2" y="1171.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (13 samples, 0.32%)</title><rect x="825.5" y="1219.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (13 samples, 0.32%)</title><rect x="825.5" y="1203.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.05%)</title><rect x="828.4" y="1187.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="828.7" y="1171.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="828.7" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="828.7" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.7" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="828.7" y="1123.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="831.7" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="828.7" y="1107.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="831.7" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="828.7" y="1091.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="831.7" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="828.7" y="1075.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.7" y="1086.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="829.0" y="1187.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="832.0" y="1198.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="829.0" y="1171.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.0" y="1182.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="829.0" y="1155.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="832.0" y="1166.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="829.0" y="1139.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.0" y="1150.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="829.0" y="1123.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.0" y="1134.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="829.0" y="1107.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="832.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (71 samples, 1.75%)</title><rect x="829.3" y="1219.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (71 samples, 1.75%)</title><rect x="829.3" y="1203.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (71 samples, 1.75%)</title><rect x="829.3" y="1187.0" width="20.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (61 samples, 1.51%)</title><rect x="832.2" y="1171.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (61 samples, 1.51%)</title><rect x="832.2" y="1155.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.2" y="1166.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="832.2" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="835.2" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.25%)</title><rect x="832.5" y="1139.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="835.5" y="1150.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="833.4" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="836.4" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="833.7" y="1123.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="836.7" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="834.3" y="1123.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="837.3" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="834.5" y="1123.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="837.5" y="1134.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="834.8" y="1123.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="837.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (50 samples, 1.23%)</title><rect x="835.4" y="1139.0" width="14.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="838.4" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.16%)</title><rect x="836.3" y="1123.0" width="13.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="839.3" y="1134.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="836.3" y="1107.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="839.3" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 1.14%)</title><rect x="836.6" y="1107.0" width="13.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.6" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 1.11%)</title><rect x="836.9" y="1091.0" width="13.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.9" y="1102.0"></text>
</g>
<g>
<title>do_futex (44 samples, 1.09%)</title><rect x="836.9" y="1075.0" width="12.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.9" y="1086.0"></text>
</g>
<g>
<title>futex_wake (44 samples, 1.09%)</title><rect x="836.9" y="1059.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="839.9" y="1070.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="837.7" y="1043.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="840.7" y="1054.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="838.0" y="1043.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="841.0" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (39 samples, 0.96%)</title><rect x="838.3" y="1043.0" width="11.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="841.3" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (39 samples, 0.96%)</title><rect x="838.3" y="1027.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.3" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (39 samples, 0.96%)</title><rect x="838.3" y="1011.0" width="11.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="841.3" y="1022.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="849.7" y="1075.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="852.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (7 samples, 0.17%)</title><rect x="850.0" y="1235.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.0" y="1246.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (52 samples, 1.28%)</title><rect x="852.0" y="1251.0" width="15.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.0" y="1262.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (52 samples, 1.28%)</title><rect x="852.0" y="1235.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.0" y="1246.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$103/2116484703.run (52 samples, 1.28%)</title><rect x="852.0" y="1219.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.0" y="1230.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (52 samples, 1.28%)</title><rect x="852.0" y="1203.0" width="15.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.0" y="1214.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (52 samples, 1.28%)</title><rect x="852.0" y="1187.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.0" y="1198.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (52 samples, 1.28%)</title><rect x="852.0" y="1171.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.0" y="1182.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.02%)</title><rect x="852.6" y="1155.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.6" y="1166.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (1 samples, 0.02%)</title><rect x="852.6" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.6" y="1150.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (1 samples, 0.02%)</title><rect x="852.6" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.6" y="1134.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 0.02%)</title><rect x="852.6" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.6" y="1118.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (1 samples, 0.02%)</title><rect x="852.6" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.6" y="1102.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (1 samples, 0.02%)</title><rect x="852.6" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.6" y="1086.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (1 samples, 0.02%)</title><rect x="852.6" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.6" y="1070.0"></text>
</g>
<g>
<title>Java_java_net_SocketInputStream_socketRead0 (1 samples, 0.02%)</title><rect x="852.6" y="1043.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="855.6" y="1054.0"></text>
</g>
<g>
<title>poll (1 samples, 0.02%)</title><rect x="852.6" y="1027.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="855.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="852.6" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="855.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="852.6" y="995.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="855.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="852.6" y="979.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="855.6" y="990.0"></text>
</g>
<g>
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="852.6" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.6" y="974.0"></text>
</g>
<g>
<title>poll_schedule_timeout.constprop.0 (1 samples, 0.02%)</title><rect x="852.6" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="855.6" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="852.6" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.6" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="852.6" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="855.6" y="926.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="852.6" y="899.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="855.6" y="910.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="852.6" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="855.6" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="852.6" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="855.6" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (49 samples, 1.21%)</title><rect x="852.9" y="1155.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.9" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (47 samples, 1.16%)</title><rect x="852.9" y="1139.0" width="13.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.9" y="1150.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.02%)</title><rect x="852.9" y="1123.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="855.9" y="1134.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="852.9" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="855.9" y="1118.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (46 samples, 1.14%)</title><rect x="853.2" y="1123.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.2" y="1134.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (46 samples, 1.14%)</title><rect x="853.2" y="1107.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.2" y="1118.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (46 samples, 1.14%)</title><rect x="853.2" y="1091.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.37%)</title><rect x="853.2" y="1075.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.37%)</title><rect x="853.2" y="1059.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor34.invoke (1 samples, 0.02%)</title><rect x="853.2" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.2" y="1054.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 0.02%)</title><rect x="853.2" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.2" y="1038.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.02%)</title><rect x="853.2" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.2" y="1022.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.02%)</title><rect x="853.2" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.2" y="1006.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.02%)</title><rect x="853.2" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.2" y="990.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (1 samples, 0.02%)</title><rect x="853.2" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.2" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (1 samples, 0.02%)</title><rect x="853.2" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.2" y="958.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (1 samples, 0.02%)</title><rect x="853.2" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.2" y="942.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.02%)</title><rect x="853.2" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.2" y="926.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.02%)</title><rect x="853.2" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.2" y="910.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.02%)</title><rect x="853.2" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.2" y="894.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.02%)</title><rect x="853.2" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.2" y="878.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.02%)</title><rect x="853.2" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.2" y="862.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.02%)</title><rect x="853.2" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.2" y="846.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.02%)</title><rect x="853.2" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.2" y="830.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.02%)</title><rect x="853.2" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.2" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="853.2" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="853.2" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.02%)</title><rect x="853.2" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.2" y="766.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.02%)</title><rect x="853.2" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.2" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="853.2" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="853.2" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (1 samples, 0.02%)</title><rect x="853.2" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.2" y="702.0"></text>
</g>
<g>
<title>com/sun/management/internal/OperatingSystemImpl.getProcessCpuTime (1 samples, 0.02%)</title><rect x="853.2" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.2" y="686.0"></text>
</g>
<g>
<title>com/sun/management/internal/OperatingSystemImpl.getProcessCpuTime0 (1 samples, 0.02%)</title><rect x="853.2" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.2" y="670.0"></text>
</g>
<g>
<title>times (1 samples, 0.02%)</title><rect x="853.2" y="643.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="856.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="853.2" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="856.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="853.2" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="856.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_times (1 samples, 0.02%)</title><rect x="853.2" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.2" y="606.0"></text>
</g>
<g>
<title>do_sys_times (1 samples, 0.02%)</title><rect x="853.2" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="856.2" y="590.0"></text>
</g>
<g>
<title>thread_group_cputime_adjusted (1 samples, 0.02%)</title><rect x="853.2" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="856.2" y="574.0"></text>
</g>
<g>
<title>thread_group_cputime (1 samples, 0.02%)</title><rect x="853.2" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor42.invoke (14 samples, 0.35%)</title><rect x="853.5" y="1043.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.5" y="1054.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (14 samples, 0.35%)</title><rect x="853.5" y="1027.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.5" y="1038.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (12 samples, 0.30%)</title><rect x="853.5" y="1011.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.5" y="1022.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (12 samples, 0.30%)</title><rect x="853.5" y="995.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.5" y="1006.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (12 samples, 0.30%)</title><rect x="853.5" y="979.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.5" y="990.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (12 samples, 0.30%)</title><rect x="853.5" y="963.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.5" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (12 samples, 0.30%)</title><rect x="853.5" y="947.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.5" y="958.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (12 samples, 0.30%)</title><rect x="853.5" y="931.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.5" y="942.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (12 samples, 0.30%)</title><rect x="853.5" y="915.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.5" y="926.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (12 samples, 0.30%)</title><rect x="853.5" y="899.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.5" y="910.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (12 samples, 0.30%)</title><rect x="853.5" y="883.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.5" y="894.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (12 samples, 0.30%)</title><rect x="853.5" y="867.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.5" y="878.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (12 samples, 0.30%)</title><rect x="853.5" y="851.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.5" y="862.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (12 samples, 0.30%)</title><rect x="853.5" y="835.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.5" y="846.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (12 samples, 0.30%)</title><rect x="853.5" y="819.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="830.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 0.17%)</title><rect x="853.5" y="803.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.5" y="814.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (7 samples, 0.17%)</title><rect x="853.5" y="787.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.5" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 0.17%)</title><rect x="853.5" y="771.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.5" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (7 samples, 0.17%)</title><rect x="853.5" y="755.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.5" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.07%)</title><rect x="853.5" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.5" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 0.07%)</title><rect x="853.5" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.5" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.07%)</title><rect x="853.5" y="707.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.5" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.07%)</title><rect x="853.5" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.5" y="702.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.02%)</title><rect x="853.5" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.5" y="686.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.02%)</title><rect x="853.5" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.next (1 samples, 0.02%)</title><rect x="853.5" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="853.5" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="853.5" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="853.5" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.5" y="606.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.05%)</title><rect x="853.8" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.8" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="853.8" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="853.8" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.02%)</title><rect x="854.1" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.1" y="638.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.02%)</title><rect x="854.1" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.1" y="622.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.ensureInvocableMethod (1 samples, 0.02%)</title><rect x="854.1" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.02%)</title><rect x="854.1" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.1" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="854.1" y="563.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="857.1" y="574.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.05%)</title><rect x="854.4" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.4" y="750.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.05%)</title><rect x="854.4" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.hasNext (1 samples, 0.02%)</title><rect x="854.4" y="707.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.4" y="718.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.getType (1 samples, 0.02%)</title><rect x="854.6" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.02%)</title><rect x="854.6" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="854.6" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="854.6" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="854.6" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="854.6" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="854.6" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.6" y="622.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.05%)</title><rect x="854.9" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.9" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="854.9" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="854.9" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.02%)</title><rect x="855.2" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.2" y="702.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.02%)</title><rect x="855.2" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.2" y="686.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.ensureInvocableMethod (1 samples, 0.02%)</title><rect x="855.2" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.02%)</title><rect x="855.2" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor10.invoke (1 samples, 0.02%)</title><rect x="855.2" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.2" y="638.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (5 samples, 0.12%)</title><rect x="855.5" y="803.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.5" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="855.5" y="787.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="855.5" y="771.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (5 samples, 0.12%)</title><rect x="855.5" y="755.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.5" y="766.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (5 samples, 0.12%)</title><rect x="855.5" y="739.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.5" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="855.5" y="723.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="855.5" y="707.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor46.invoke (4 samples, 0.10%)</title><rect x="855.5" y="691.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.5" y="702.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (4 samples, 0.10%)</title><rect x="855.5" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="858.5" y="686.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (4 samples, 0.10%)</title><rect x="855.5" y="659.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="855.5" y="643.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="858.5" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="855.5" y="627.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="858.5" y="638.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (3 samples, 0.07%)</title><rect x="855.8" y="643.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="858.8" y="654.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (2 samples, 0.05%)</title><rect x="855.8" y="627.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="858.8" y="638.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (2 samples, 0.05%)</title><rect x="855.8" y="611.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="858.8" y="622.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (2 samples, 0.05%)</title><rect x="855.8" y="595.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="858.8" y="606.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (2 samples, 0.05%)</title><rect x="855.8" y="579.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="858.8" y="590.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.02%)</title><rect x="856.1" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="859.1" y="574.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.02%)</title><rect x="856.1" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="859.1" y="558.0"></text>
</g>
<g>
<title>do_thread_dump(ThreadDumpResult*, typeArrayHandle, int, int, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="856.4" y="627.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="859.4" y="638.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="856.4" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="859.4" y="622.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="856.4" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="859.4" y="606.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="856.4" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="859.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor47.invoke (1 samples, 0.02%)</title><rect x="856.7" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.7" y="702.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.findDeadlockedThreads (1 samples, 0.02%)</title><rect x="856.7" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.7" y="686.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.findDeadlockedThreads0 (1 samples, 0.02%)</title><rect x="856.7" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.7" y="670.0"></text>
</g>
<g>
<title>jmm_FindDeadlockedThreads (1 samples, 0.02%)</title><rect x="856.7" y="643.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="859.7" y="654.0"></text>
</g>
<g>
<title>find_deadlocks(bool, Thread*) (1 samples, 0.02%)</title><rect x="856.7" y="627.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="859.7" y="638.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="856.7" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="859.7" y="622.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="856.7" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="859.7" y="606.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="856.7" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="859.7" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="856.7" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="859.7" y="574.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="856.7" y="547.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="859.7" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="856.7" y="531.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="859.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="856.7" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="859.7" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="856.7" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="859.7" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (1 samples, 0.02%)</title><rect x="857.0" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.0" y="1022.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (1 samples, 0.02%)</title><rect x="857.0" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.0" y="1006.0"></text>
</g>
<g>
<title>java/security/Permissions.add (1 samples, 0.02%)</title><rect x="857.0" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.0" y="990.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (1 samples, 0.02%)</title><rect x="857.0" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="857.0" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.0" y="958.0"></text>
</g>
<g>
<title>java/security/Permissions$1.apply (1 samples, 0.02%)</title><rect x="857.0" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.0" y="942.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.02%)</title><rect x="857.3" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.3" y="1022.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.02%)</title><rect x="857.3" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.3" y="1006.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.02%)</title><rect x="857.3" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.3" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.02%)</title><rect x="857.3" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.3" y="974.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.02%)</title><rect x="857.3" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.3" y="958.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.02%)</title><rect x="857.3" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.3" y="942.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.02%)</title><rect x="857.3" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.3" y="926.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.02%)</title><rect x="857.3" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.3" y="910.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.02%)</title><rect x="857.3" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.3" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.02%)</title><rect x="857.3" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.3" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.02%)</title><rect x="857.3" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.3" y="862.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.02%)</title><rect x="857.3" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.3" y="846.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.02%)</title><rect x="857.3" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.3" y="830.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.02%)</title><rect x="857.3" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.3" y="814.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.02%)</title><rect x="857.3" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.3" y="798.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClassForName (1 samples, 0.02%)</title><rect x="857.3" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.02%)</title><rect x="857.3" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.02%)</title><rect x="857.3" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.3" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.02%)</title><rect x="857.3" y="723.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="860.3" y="734.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.02%)</title><rect x="857.3" y="707.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="860.3" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.02%)</title><rect x="857.3" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="860.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="857.6" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="857.6" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/Long.equals (1 samples, 0.02%)</title><rect x="857.6" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.6" y="1054.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (23 samples, 0.57%)</title><rect x="857.9" y="1075.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.9" y="1086.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (23 samples, 0.57%)</title><rect x="857.9" y="1059.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.9" y="1070.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (23 samples, 0.57%)</title><rect x="857.9" y="1043.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.9" y="1054.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (23 samples, 0.57%)</title><rect x="857.9" y="1027.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.9" y="1038.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeClassDesc (1 samples, 0.02%)</title><rect x="857.9" y="1011.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.9" y="1022.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeNonProxyDesc (1 samples, 0.02%)</title><rect x="857.9" y="995.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.9" y="1006.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.02%)</title><rect x="857.9" y="979.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.9" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.02%)</title><rect x="857.9" y="963.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.9" y="974.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.02%)</title><rect x="857.9" y="947.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.9" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="857.9" y="931.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="860.9" y="942.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (22 samples, 0.54%)</title><rect x="858.1" y="1011.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.1" y="1022.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (2 samples, 0.05%)</title><rect x="858.1" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.1" y="1006.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (2 samples, 0.05%)</title><rect x="858.1" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.1" y="990.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.05%)</title><rect x="858.1" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.1" y="974.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.02%)</title><rect x="858.4" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="861.4" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="858.4" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="861.4" y="942.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (20 samples, 0.49%)</title><rect x="858.7" y="995.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.7" y="1006.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (20 samples, 0.49%)</title><rect x="858.7" y="979.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.7" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (20 samples, 0.49%)</title><rect x="858.7" y="963.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.7" y="974.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (20 samples, 0.49%)</title><rect x="858.7" y="947.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.7" y="958.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (20 samples, 0.49%)</title><rect x="858.7" y="931.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.7" y="942.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (20 samples, 0.49%)</title><rect x="858.7" y="915.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.7" y="926.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="858.7" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.7" y="910.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="858.7" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.7" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="858.7" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.7" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="858.7" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.7" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="858.7" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.7" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="858.7" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="858.7" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.02%)</title><rect x="858.7" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.02%)</title><rect x="858.7" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.7" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="858.7" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="858.7" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.7" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.02%)</title><rect x="858.7" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.7" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeClassDesc (1 samples, 0.02%)</title><rect x="858.7" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeNonProxyDesc (1 samples, 0.02%)</title><rect x="858.7" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.writeNonProxy (1 samples, 0.02%)</title><rect x="858.7" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeTypeString (1 samples, 0.02%)</title><rect x="858.7" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.02%)</title><rect x="858.7" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="858.7" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.insert (1 samples, 0.02%)</title><rect x="858.7" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (19 samples, 0.47%)</title><rect x="859.0" y="899.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.0" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (19 samples, 0.47%)</title><rect x="859.0" y="883.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (19 samples, 0.47%)</title><rect x="859.0" y="867.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (19 samples, 0.47%)</title><rect x="859.0" y="851.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.0" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (19 samples, 0.47%)</title><rect x="859.0" y="835.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.0" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (18 samples, 0.44%)</title><rect x="859.0" y="819.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.0" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.44%)</title><rect x="859.0" y="803.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.0" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.02%)</title><rect x="859.0" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.0" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (5 samples, 0.12%)</title><rect x="859.3" y="787.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.3" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (4 samples, 0.10%)</title><rect x="859.6" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.6" y="782.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (3 samples, 0.07%)</title><rect x="859.6" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.6" y="766.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.07%)</title><rect x="859.6" y="739.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.6" y="750.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (3 samples, 0.07%)</title><rect x="859.6" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.6" y="734.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (3 samples, 0.07%)</title><rect x="859.6" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.6" y="718.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (3 samples, 0.07%)</title><rect x="859.6" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.6" y="702.0"></text>
</g>
<g>
<title>send (3 samples, 0.07%)</title><rect x="859.6" y="675.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="862.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="859.6" y="659.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="862.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="859.6" y="643.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="862.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.07%)</title><rect x="859.6" y="627.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.6" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (3 samples, 0.07%)</title><rect x="859.6" y="611.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="862.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.07%)</title><rect x="859.6" y="595.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.6" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.07%)</title><rect x="859.6" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="862.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.07%)</title><rect x="859.6" y="563.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="862.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.07%)</title><rect x="859.6" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.07%)</title><rect x="859.6" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="862.6" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.07%)</title><rect x="859.6" y="515.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.07%)</title><rect x="859.6" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.6" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.07%)</title><rect x="859.6" y="483.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.6" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.07%)</title><rect x="859.6" y="467.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="862.6" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.07%)</title><rect x="859.6" y="451.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.6" y="462.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.07%)</title><rect x="859.6" y="435.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.6" y="446.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.07%)</title><rect x="859.6" y="419.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.07%)</title><rect x="859.6" y="403.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.6" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.07%)</title><rect x="859.6" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="862.6" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.07%)</title><rect x="859.6" y="371.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.6" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="859.6" y="355.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.6" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="859.6" y="339.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="862.6" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.05%)</title><rect x="859.6" y="323.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="862.6" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="859.6" y="307.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.6" y="318.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="859.6" y="291.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="862.6" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="859.6" y="275.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="862.6" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="859.9" y="259.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="862.9" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="859.9" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="862.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="859.9" y="227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="862.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="859.9" y="211.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="862.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="859.9" y="195.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="859.9" y="179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="862.9" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="859.9" y="163.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="862.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="859.9" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="859.9" y="131.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="862.9" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="859.9" y="115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.9" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.02%)</title><rect x="859.9" y="99.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="859.9" y="83.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="859.9" y="67.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="862.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="859.9" y="51.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.9" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="859.9" y="35.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="862.9" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="860.2" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="863.2" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="860.2" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="863.2" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="860.2" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="863.2" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="860.2" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="863.2" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="860.2" y="291.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.2" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.02%)</title><rect x="860.5" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.5" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="860.5" y="739.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="863.5" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.02%)</title><rect x="860.8" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.8" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (1 samples, 0.02%)</title><rect x="860.8" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.8" y="782.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.02%)</title><rect x="860.8" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.8" y="766.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.02%)</title><rect x="860.8" y="739.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="863.8" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="860.8" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="863.8" y="734.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="860.8" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="863.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (5 samples, 0.12%)</title><rect x="861.1" y="787.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.1" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.12%)</title><rect x="861.1" y="771.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.02%)</title><rect x="861.1" y="755.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (1 samples, 0.02%)</title><rect x="861.1" y="739.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.1" y="750.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.02%)</title><rect x="861.1" y="723.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.07%)</title><rect x="861.3" y="755.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.07%)</title><rect x="861.3" y="739.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.3" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.07%)</title><rect x="861.3" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.3" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.07%)</title><rect x="861.3" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.3" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.02%)</title><rect x="861.3" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.3" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (1 samples, 0.02%)</title><rect x="861.3" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.3" y="686.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.02%)</title><rect x="861.3" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="861.6" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="861.6" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.05%)</title><rect x="861.6" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.6" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="861.6" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="861.6" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (2 samples, 0.05%)</title><rect x="861.6" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.05%)</title><rect x="861.6" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="861.6" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.02%)</title><rect x="861.6" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.02%)</title><rect x="861.6" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.02%)</title><rect x="861.6" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.6" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="861.6" y="515.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="864.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.02%)</title><rect x="861.9" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="861.9" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.02%)</title><rect x="861.9" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="864.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.02%)</title><rect x="861.9" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="864.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.02%)</title><rect x="861.9" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.9" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="861.9" y="499.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="864.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.02%)</title><rect x="862.2" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.07%)</title><rect x="862.5" y="787.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.5" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.07%)</title><rect x="862.5" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.5" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.07%)</title><rect x="862.5" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.5" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.05%)</title><rect x="862.8" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.8" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="862.8" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="862.8" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.05%)</title><rect x="862.8" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.8" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="862.8" y="675.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="862.8" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (2 samples, 0.05%)</title><rect x="862.8" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.05%)</title><rect x="862.8" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.05%)</title><rect x="862.8" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.05%)</title><rect x="862.8" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (2 samples, 0.05%)</title><rect x="862.8" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (2 samples, 0.05%)</title><rect x="862.8" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (2 samples, 0.05%)</title><rect x="862.8" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.8" y="558.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (2 samples, 0.05%)</title><rect x="862.8" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.8" y="542.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.02%)</title><rect x="862.8" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.8" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="862.8" y="499.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="865.8" y="510.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.02%)</title><rect x="863.1" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="866.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.05%)</title><rect x="863.4" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="866.4" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.getUTFLength (1 samples, 0.02%)</title><rect x="863.4" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="863.7" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.7" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.insert (1 samples, 0.02%)</title><rect x="863.7" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="864.0" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="864.0" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.0" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="864.3" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.3" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="864.3" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="864.3" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="864.3" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.3" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="864.3" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.3" y="766.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (3 samples, 0.07%)</title><rect x="864.6" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.6" y="1086.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.07%)</title><rect x="864.6" y="1059.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.6" y="1070.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.07%)</title><rect x="864.6" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.6" y="1054.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.07%)</title><rect x="864.6" y="1027.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.6" y="1038.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.05%)</title><rect x="864.6" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.6" y="1022.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.05%)</title><rect x="864.6" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.6" y="1006.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (2 samples, 0.05%)</title><rect x="864.6" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.6" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="864.6" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="864.6" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.05%)</title><rect x="864.6" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.6" y="942.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (2 samples, 0.05%)</title><rect x="864.6" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.6" y="926.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (2 samples, 0.05%)</title><rect x="864.6" y="899.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.6" y="910.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.02%)</title><rect x="864.8" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.02%)</title><rect x="864.8" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.8" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.02%)</title><rect x="865.1" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="868.1" y="1022.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.02%)</title><rect x="865.1" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.1" y="1006.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.02%)</title><rect x="865.1" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.1" y="990.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.02%)</title><rect x="865.1" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.1" y="974.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (2 samples, 0.05%)</title><rect x="865.4" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.4" y="1086.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (2 samples, 0.05%)</title><rect x="865.4" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.4" y="1070.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (2 samples, 0.05%)</title><rect x="865.4" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.4" y="1054.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (2 samples, 0.05%)</title><rect x="865.4" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.4" y="1038.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (2 samples, 0.05%)</title><rect x="865.4" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.4" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.05%)</title><rect x="865.4" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.4" y="1006.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.05%)</title><rect x="865.4" y="979.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="868.4" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="865.7" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="868.7" y="974.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (2 samples, 0.05%)</title><rect x="866.0" y="1075.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="869.0" y="1086.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (2 samples, 0.05%)</title><rect x="866.0" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.0" y="1070.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.flush (2 samples, 0.05%)</title><rect x="866.0" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.0" y="1054.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.05%)</title><rect x="866.0" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.0" y="1038.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.05%)</title><rect x="866.0" y="1011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.0" y="1022.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (2 samples, 0.05%)</title><rect x="866.0" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.0" y="1006.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (2 samples, 0.05%)</title><rect x="866.0" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.0" y="990.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (2 samples, 0.05%)</title><rect x="866.0" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.0" y="974.0"></text>
</g>
<g>
<title>Java_java_net_SocketOutputStream_socketWrite0 (1 samples, 0.02%)</title><rect x="866.0" y="947.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="869.0" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="866.0" y="931.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="869.0" y="942.0"></text>
</g>
<g>
<title>send (1 samples, 0.02%)</title><rect x="866.3" y="947.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="869.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="866.3" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="869.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="866.3" y="915.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="869.3" y="926.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="866.3" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.3" y="910.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.02%)</title><rect x="866.3" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.3" y="894.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="866.3" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.3" y="878.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.02%)</title><rect x="866.3" y="851.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.3" y="862.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="866.3" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="869.3" y="846.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="866.3" y="819.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.3" y="830.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="866.3" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.3" y="814.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="866.3" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.3" y="798.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="866.3" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="869.3" y="782.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="866.3" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="869.3" y="766.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="866.3" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.3" y="750.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="866.3" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.3" y="734.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="866.3" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.3" y="718.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="866.3" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="869.3" y="702.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="866.3" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="869.3" y="686.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="866.3" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="869.3" y="670.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="866.3" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.3" y="654.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="866.3" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="869.3" y="638.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="866.3" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="869.3" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="866.3" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="869.3" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="866.3" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.3" y="590.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="866.3" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.3" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="866.3" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.3" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="866.3" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="869.3" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/Target.incrementCallCount (1 samples, 0.02%)</title><rect x="866.6" y="1139.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.6" y="1150.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (1 samples, 0.02%)</title><rect x="866.9" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.9" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="866.9" y="1123.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.9" y="1134.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.02%)</title><rect x="866.9" y="1107.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="869.9" y="1118.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="866.9" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="869.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,080 samples, 26.67%)</title><rect x="867.2" y="1299.0" width="314.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.2" y="1310.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.02%)</title><rect x="868.3" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="871.3" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.02%)</title><rect x="868.3" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.3" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.02%)</title><rect x="868.3" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.3" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (244 samples, 6.02%)</title><rect x="868.6" y="1283.0" width="71.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.6" y="1294.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (244 samples, 6.02%)</title><rect x="868.6" y="1267.0" width="71.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.6" y="1278.0">one/nio/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.15%)</title><rect x="873.6" y="1251.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="876.6" y="1262.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="875.3" y="1251.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="878.3" y="1262.0"></text>
</g>
<g>
<title>clock_gettime (18 samples, 0.44%)</title><rect x="875.9" y="1251.0" width="5.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="878.9" y="1262.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="878.2" y="1235.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="881.2" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.17%)</title><rect x="879.1" y="1235.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="882.1" y="1246.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.17%)</title><rect x="879.1" y="1219.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="882.1" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (201 samples, 4.96%)</title><rect x="881.2" y="1251.0" width="58.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="884.2" y="1262.0">epoll_..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="896.3" y="1235.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="899.3" y="1246.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="896.3" y="1219.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="899.3" y="1230.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="896.3" y="1203.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="899.3" y="1214.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="896.3" y="1187.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="899.3" y="1198.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="896.3" y="1171.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="899.3" y="1182.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="896.3" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="899.3" y="1166.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.02%)</title><rect x="896.3" y="1139.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="899.3" y="1150.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="896.3" y="1123.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="899.3" y="1134.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.02%)</title><rect x="896.3" y="1107.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="899.3" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (147 samples, 3.63%)</title><rect x="896.6" y="1235.0" width="42.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.6" y="1246.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (147 samples, 3.63%)</title><rect x="896.6" y="1219.0" width="42.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="899.6" y="1230.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (144 samples, 3.56%)</title><rect x="897.5" y="1203.0" width="41.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="900.5" y="1214.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (144 samples, 3.56%)</title><rect x="897.5" y="1187.0" width="41.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.5" y="1198.0">do_..</text>
</g>
<g>
<title>__fdget (4 samples, 0.10%)</title><rect x="898.4" y="1171.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.4" y="1182.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="898.4" y="1155.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="901.4" y="1166.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.10%)</title><rect x="898.4" y="1139.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="901.4" y="1150.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="899.5" y="1171.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="902.5" y="1182.0"></text>
</g>
<g>
<title>ep_poll (127 samples, 3.14%)</title><rect x="900.4" y="1171.0" width="37.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="903.4" y="1182.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (87 samples, 2.15%)</title><rect x="903.6" y="1155.0" width="25.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.6" y="1166.0">e..</text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="909.7" y="1139.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.7" y="1150.0"></text>
</g>
<g>
<title>ep_send_events_proc (58 samples, 1.43%)</title><rect x="910.0" y="1139.0" width="16.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="913.0" y="1150.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.15%)</title><rect x="912.0" y="1123.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="915.0" y="1134.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (44 samples, 1.09%)</title><rect x="913.8" y="1123.0" width="12.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="916.8" y="1134.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="917.0" y="1107.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="920.0" y="1118.0"></text>
</g>
<g>
<title>sock_poll (27 samples, 0.67%)</title><rect x="917.6" y="1107.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.6" y="1118.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.12%)</title><rect x="921.1" y="1091.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="924.1" y="1102.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.15%)</title><rect x="922.5" y="1091.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="925.5" y="1102.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.10%)</title><rect x="924.3" y="1091.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.3" y="1102.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.10%)</title><rect x="925.4" y="1107.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="928.4" y="1118.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="926.6" y="1123.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.6" y="1134.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.17%)</title><rect x="926.9" y="1139.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="929.9" y="1150.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.12%)</title><rect x="928.9" y="1155.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.9" y="1166.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (24 samples, 0.59%)</title><rect x="930.4" y="1155.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="933.4" y="1166.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 0.59%)</title><rect x="930.4" y="1139.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="933.4" y="1150.0"></text>
</g>
<g>
<title>schedule (23 samples, 0.57%)</title><rect x="930.7" y="1123.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="933.7" y="1134.0"></text>
</g>
<g>
<title>__sched_text_start (22 samples, 0.54%)</title><rect x="931.0" y="1107.0" width="6.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="934.0" y="1118.0"></text>
</g>
<g>
<title>finish_task_switch (21 samples, 0.52%)</title><rect x="931.3" y="1091.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="934.3" y="1102.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="937.1" y="1075.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.1" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="937.1" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.1" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="937.1" y="1043.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="940.1" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="937.1" y="1027.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="940.1" y="1038.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="937.1" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="940.1" y="1022.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="937.1" y="995.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="940.1" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="937.1" y="979.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="940.1" y="990.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.17%)</title><rect x="937.4" y="1171.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="940.4" y="1182.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="939.4" y="1235.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="942.4" y="1246.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="939.4" y="1219.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="942.4" y="1230.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="939.4" y="1203.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="942.4" y="1214.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="939.4" y="1187.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="942.4" y="1198.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="939.4" y="1171.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="942.4" y="1182.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="939.4" y="1155.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="942.4" y="1166.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="939.4" y="1139.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="942.4" y="1150.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="939.4" y="1123.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="942.4" y="1134.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="939.4" y="1107.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.4" y="1118.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="939.4" y="1091.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.4" y="1102.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="939.4" y="1075.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.4" y="1086.0"></text>
</g>
<g>
<title>ieee80211_deliver_skb?[mac80211] (1 samples, 0.02%)</title><rect x="939.4" y="1059.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.4" y="1070.0"></text>
</g>
<g>
<title>netif_receive_skb (1 samples, 0.02%)</title><rect x="939.4" y="1043.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="942.4" y="1054.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="939.4" y="1027.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.4" y="1038.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="939.4" y="1011.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="942.4" y="1022.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="939.4" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.4" y="1006.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="939.4" y="979.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="942.4" y="990.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="939.4" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.4" y="974.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="939.4" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.4" y="958.0"></text>
</g>
<g>
<title>kfree_skb (1 samples, 0.02%)</title><rect x="939.4" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="942.4" y="942.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="939.4" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="942.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (821 samples, 20.27%)</title><rect x="939.7" y="1283.0" width="239.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.7" y="1294.0">one/nio/net/Session.process</text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="944.1" y="1267.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="947.1" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.20%)</title><rect x="944.4" y="1267.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="947.4" y="1278.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="944.4" y="1251.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="947.4" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.15%)</title><rect x="944.7" y="1251.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="947.7" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.07%)</title><rect x="945.0" y="1235.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="948.0" y="1246.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="945.8" y="1235.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="948.8" y="1246.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="946.1" y="1235.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="949.1" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="946.4" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="949.4" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="946.4" y="1235.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="949.4" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="946.7" y="1267.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="949.7" y="1278.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="946.7" y="1251.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="949.7" y="1262.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="947.0" y="1251.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="950.0" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (794 samples, 19.60%)</title><rect x="947.3" y="1267.0" width="231.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.3" y="1278.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (487 samples, 12.02%)</title><rect x="947.3" y="1251.0" width="141.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.3" y="1262.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="947.6" y="1235.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="950.6" y="1246.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.20%)</title><rect x="947.9" y="1235.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="950.9" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (327 samples, 8.07%)</title><rect x="950.2" y="1235.0" width="95.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.2" y="1246.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (326 samples, 8.05%)</title><rect x="950.2" y="1219.0" width="95.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.2" y="1230.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (280 samples, 6.91%)</title><rect x="950.5" y="1203.0" width="81.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.5" y="1214.0">RequestHa..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="951.1" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="954.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="951.1" y="1171.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="951.1" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="951.1" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (18 samples, 0.44%)</title><rect x="951.4" y="1187.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="954.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.42%)</title><rect x="951.7" y="1171.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="953.4" y="1155.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="953.4" y="1139.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="953.4" y="1123.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.4" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.12%)</title><rect x="954.0" y="1155.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="957.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.10%)</title><rect x="955.5" y="1155.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="956.0" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="956.0" y="1123.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="956.0" y="1107.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (259 samples, 6.40%)</title><rect x="956.6" y="1187.0" width="75.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.6" y="1198.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (159 samples, 3.93%)</title><rect x="956.9" y="1171.0" width="46.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.9" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (159 samples, 3.93%)</title><rect x="956.9" y="1155.0" width="46.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="959.9" y="1166.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (139 samples, 3.43%)</title><rect x="962.7" y="1139.0" width="40.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.7" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (16 samples, 0.40%)</title><rect x="964.5" y="1123.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (16 samples, 0.40%)</title><rect x="964.5" y="1107.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (16 samples, 0.40%)</title><rect x="964.5" y="1091.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (16 samples, 0.40%)</title><rect x="964.5" y="1075.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.40%)</title><rect x="964.5" y="1059.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="969.2" y="1123.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="969.2" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="969.2" y="1091.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="969.2" y="1075.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="969.2" y="1059.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="969.2" y="1043.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.2" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="969.2" y="1027.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="972.2" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="969.4" y="1011.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="972.4" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="969.4" y="995.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="972.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="969.7" y="1027.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="972.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="969.7" y="1011.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="972.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (114 samples, 2.81%)</title><rect x="970.0" y="1123.0" width="33.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.0" y="1134.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (114 samples, 2.81%)</title><rect x="970.0" y="1107.0" width="33.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.0" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (114 samples, 2.81%)</title><rect x="970.0" y="1091.0" width="33.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.0" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="970.6" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (111 samples, 2.74%)</title><rect x="970.9" y="1075.0" width="32.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.9" y="1086.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (111 samples, 2.74%)</title><rect x="970.9" y="1059.0" width="32.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.9" y="1070.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.37%)</title><rect x="971.8" y="1043.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="974.8" y="1054.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="972.4" y="1027.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="975.4" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="972.6" y="1027.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="975.6" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.10%)</title><rect x="973.2" y="1027.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="976.2" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="974.4" y="1027.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="977.4" y="1038.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="975.0" y="1027.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="978.0" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="975.6" y="1027.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="978.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (88 samples, 2.17%)</title><rect x="976.1" y="1043.0" width="25.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="979.1" y="1054.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.75%)</title><rect x="981.1" y="1027.0" width="20.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="984.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="981.1" y="1011.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="984.1" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.68%)</title><rect x="982.0" y="1011.0" width="19.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="985.0" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (65 samples, 1.60%)</title><rect x="982.6" y="995.0" width="18.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="985.6" y="1006.0"></text>
</g>
<g>
<title>do_futex (65 samples, 1.60%)</title><rect x="982.6" y="979.0" width="18.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.6" y="990.0"></text>
</g>
<g>
<title>futex_wake (63 samples, 1.56%)</title><rect x="982.8" y="963.0" width="18.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="985.8" y="974.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="984.9" y="947.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.9" y="958.0"></text>
</g>
<g>
<title>wake_up_q (53 samples, 1.31%)</title><rect x="985.8" y="947.0" width="15.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="988.8" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (52 samples, 1.28%)</title><rect x="986.0" y="931.0" width="15.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="989.0" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 1.23%)</title><rect x="986.0" y="915.0" width="14.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="989.0" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="1000.6" y="915.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1003.6" y="926.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1001.2" y="963.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1004.2" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1001.5" y="995.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1004.5" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1001.5" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1004.5" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1001.5" y="963.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.5" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1001.5" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1004.5" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.10%)</title><rect x="1001.8" y="1043.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1004.8" y="1054.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="1002.9" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1005.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.forwardRequest (88 samples, 2.17%)</title><rect x="1003.2" y="1171.0" width="25.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.2" y="1182.0">r..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (84 samples, 2.07%)</title><rect x="1003.2" y="1155.0" width="24.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.2" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 2.07%)</title><rect x="1003.2" y="1139.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1006.2" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (68 samples, 1.68%)</title><rect x="1006.2" y="1123.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (8 samples, 0.20%)</title><rect x="1007.6" y="1107.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.20%)</title><rect x="1007.6" y="1091.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.20%)</title><rect x="1007.6" y="1075.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (8 samples, 0.20%)</title><rect x="1007.6" y="1059.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.20%)</title><rect x="1007.6" y="1043.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="1009.9" y="1107.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="1009.9" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="1009.9" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="1009.9" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="1009.9" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="1009.9" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1012.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1009.9" y="1011.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1012.9" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="1009.9" y="995.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1012.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (53 samples, 1.31%)</title><rect x="1010.5" y="1107.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (53 samples, 1.31%)</title><rect x="1010.5" y="1091.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (53 samples, 1.31%)</title><rect x="1010.5" y="1075.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="1011.4" y="1059.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1014.4" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1011.4" y="1043.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1011.4" y="1027.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1011.4" y="1011.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1014.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1011.4" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.4" y="1006.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1011.4" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1014.4" y="990.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1011.4" y="963.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1014.4" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1011.4" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.4" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1011.4" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1014.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 1.21%)</title><rect x="1011.7" y="1059.0" width="14.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 1.21%)</title><rect x="1011.7" y="1043.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.7" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.12%)</title><rect x="1012.0" y="1027.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1015.0" y="1038.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1012.3" y="1011.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1015.3" y="1022.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1012.6" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1015.6" y="1022.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="1012.9" y="1011.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1015.9" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1013.1" y="1011.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1016.1" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (43 samples, 1.06%)</title><rect x="1013.4" y="1027.0" width="12.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1016.4" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.01%)</title><rect x="1014.0" y="1011.0" width="12.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.0" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 1.01%)</title><rect x="1014.0" y="995.0" width="12.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1017.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (39 samples, 0.96%)</title><rect x="1014.6" y="979.0" width="11.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1017.6" y="990.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.94%)</title><rect x="1014.9" y="963.0" width="11.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1017.9" y="974.0"></text>
</g>
<g>
<title>futex_wake (37 samples, 0.91%)</title><rect x="1014.9" y="947.0" width="10.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1017.9" y="958.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1015.5" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1018.5" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="1015.8" y="931.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.8" y="942.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1016.4" y="931.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.4" y="942.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1016.4" y="915.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1019.4" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1016.4" y="899.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1019.4" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1016.4" y="883.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1019.4" y="894.0"></text>
</g>
<g>
<title>net_tx_action (1 samples, 0.02%)</title><rect x="1016.4" y="867.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1019.4" y="878.0"></text>
</g>
<g>
<title>__kfree_skb_defer (1 samples, 0.02%)</title><rect x="1016.4" y="851.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.4" y="862.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1016.4" y="835.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1019.4" y="846.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1016.4" y="819.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1019.4" y="830.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1016.4" y="803.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1019.4" y="814.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="1016.4" y="787.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1019.4" y="798.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="1016.6" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1019.6" y="942.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.74%)</title><rect x="1016.9" y="931.0" width="8.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.9" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.74%)</title><rect x="1016.9" y="915.0" width="8.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.9" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 0.72%)</title><rect x="1016.9" y="899.0" width="8.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1019.9" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1025.4" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1028.4" y="910.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1025.7" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1028.7" y="958.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1026.0" y="1123.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1029.0" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.12%)</title><rect x="1026.3" y="1123.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1029.3" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1027.4" y="1107.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1030.4" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1027.4" y="1091.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.4" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1027.4" y="1075.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1030.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.isCancelled (4 samples, 0.10%)</title><rect x="1027.7" y="1155.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.7" y="1166.0"></text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.02%)</title><rect x="1028.0" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1031.0" y="1150.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1028.0" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1031.0" y="1134.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="1028.0" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1031.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.05%)</title><rect x="1028.3" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Topology.primaryFor (11 samples, 0.27%)</title><rect x="1028.9" y="1171.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.9" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (11 samples, 0.27%)</title><rect x="1028.9" y="1155.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.9" y="1166.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.10%)</title><rect x="1030.9" y="1139.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1033.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (44 samples, 1.09%)</title><rect x="1032.1" y="1203.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.1" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.get (44 samples, 1.09%)</title><rect x="1032.1" y="1187.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.1" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (36 samples, 0.89%)</title><rect x="1032.1" y="1171.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.1" y="1182.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.12%)</title><rect x="1041.1" y="1155.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1044.1" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.20%)</title><rect x="1042.6" y="1171.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.20%)</title><rect x="1042.6" y="1155.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (8 samples, 0.20%)</title><rect x="1042.6" y="1139.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.6" y="1150.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.07%)</title><rect x="1042.9" y="1123.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.9" y="1134.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.10%)</title><rect x="1043.7" y="1123.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1046.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="1044.9" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1044.9" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1044.9" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.9" y="1182.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="1044.9" y="1155.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1047.9" y="1166.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1045.2" y="1219.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1048.2" y="1230.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1045.2" y="1203.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1048.2" y="1214.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1045.2" y="1187.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1048.2" y="1198.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1045.2" y="1171.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1048.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 1.58%)</title><rect x="1045.5" y="1235.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.22%)</title><rect x="1049.6" y="1219.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.22%)</title><rect x="1049.6" y="1203.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.22%)</title><rect x="1049.6" y="1187.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1052.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.22%)</title><rect x="1049.6" y="1171.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="1051.6" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.77%)</title><rect x="1052.2" y="1219.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.67%)</title><rect x="1053.4" y="1203.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.4" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="1060.3" y="1187.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1063.3" y="1198.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.07%)</title><rect x="1060.3" y="1171.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.3" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="1060.3" y="1155.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1063.3" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="1060.3" y="1139.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1063.3" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="1060.3" y="1123.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1063.3" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="1060.3" y="1107.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1063.3" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.05%)</title><rect x="1060.3" y="1091.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.3" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.05%)</title><rect x="1060.3" y="1075.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.3" y="1086.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.05%)</title><rect x="1060.3" y="1059.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1063.3" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (2 samples, 0.05%)</title><rect x="1060.3" y="1043.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.3" y="1054.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (2 samples, 0.05%)</title><rect x="1060.3" y="1027.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1063.3" y="1038.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (2 samples, 0.05%)</title><rect x="1060.3" y="1011.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1063.3" y="1022.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.02%)</title><rect x="1060.3" y="995.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1063.3" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1060.6" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1063.6" y="1006.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1060.9" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (10 samples, 0.25%)</title><rect x="1061.2" y="1219.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.35%)</title><rect x="1064.1" y="1235.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.1" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1064.1" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.1" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1064.1" y="1203.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1067.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (13 samples, 0.32%)</title><rect x="1064.4" y="1219.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (13 samples, 0.32%)</title><rect x="1064.4" y="1203.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.4" y="1214.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1065.6" y="1187.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1068.6" y="1198.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1065.6" y="1171.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1068.6" y="1182.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1065.6" y="1155.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.6" y="1166.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1065.6" y="1139.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1068.6" y="1150.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1065.6" y="1123.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1068.6" y="1134.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="1065.6" y="1107.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1068.6" y="1118.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1065.6" y="1091.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1068.6" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1065.6" y="1075.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.6" y="1086.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (8 samples, 0.20%)</title><rect x="1065.9" y="1187.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1068.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.44%)</title><rect x="1068.2" y="1235.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.35%)</title><rect x="1069.4" y="1219.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.35%)</title><rect x="1069.4" y="1203.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 1.33%)</title><rect x="1073.5" y="1235.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.59%)</title><rect x="1081.9" y="1219.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.9" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1088.9" y="1219.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1091.9" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1088.9" y="1203.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1091.9" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1088.9" y="1187.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="1089.2" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.2" y="1262.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1089.2" y="1235.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1092.2" y="1246.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1089.2" y="1219.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1092.2" y="1230.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1089.2" y="1203.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1092.2" y="1214.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1089.2" y="1187.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1092.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (306 samples, 7.56%)</title><rect x="1089.5" y="1251.0" width="89.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.5" y="1262.0">one/nio/ne..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1092.4" y="1235.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1095.4" y="1246.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1092.4" y="1219.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1095.4" y="1230.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1092.4" y="1203.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1095.4" y="1214.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1092.4" y="1187.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1095.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (287 samples, 7.09%)</title><rect x="1092.7" y="1235.0" width="83.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.7" y="1246.0">one/nio/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.12%)</title><rect x="1096.5" y="1219.0" width="1.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1099.5" y="1230.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (48 samples, 1.19%)</title><rect x="1097.9" y="1219.0" width="14.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1100.9" y="1230.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.17%)</title><rect x="1099.1" y="1203.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1102.1" y="1214.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="1101.1" y="1203.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1104.1" y="1214.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1102.0" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1105.0" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="1102.3" y="1203.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.3" y="1214.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (28 samples, 0.69%)</title><rect x="1103.2" y="1203.0" width="8.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1106.2" y="1214.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (9 samples, 0.22%)</title><rect x="1103.8" y="1187.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1106.8" y="1198.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.0] (1 samples, 0.02%)</title><rect x="1106.1" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.1" y="1182.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1106.1" y="1155.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1109.1" y="1166.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="1106.1" y="1139.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1109.1" y="1150.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1106.1" y="1123.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1109.1" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (9 samples, 0.22%)</title><rect x="1106.4" y="1187.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.4" y="1198.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1108.7" y="1171.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1111.7" y="1182.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1108.7" y="1155.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1111.7" y="1166.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1108.7" y="1139.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1111.7" y="1150.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1108.7" y="1123.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1111.7" y="1134.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="1108.7" y="1107.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.7" y="1118.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="1108.7" y="1091.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1111.7" y="1102.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="1108.7" y="1075.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1111.7" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="1108.7" y="1059.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1111.7" y="1070.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.17%)</title><rect x="1109.0" y="1187.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1112.0" y="1198.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1111.0" y="1187.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.0" y="1198.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1111.0" y="1171.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1114.0" y="1182.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1111.0" y="1155.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1114.0" y="1166.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1111.0" y="1139.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1114.0" y="1150.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="1111.0" y="1123.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1114.0" y="1134.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="1111.0" y="1107.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.0" y="1118.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="1111.0" y="1091.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.0" y="1102.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="1111.0" y="1075.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1114.0" y="1086.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="1111.0" y="1059.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1114.0" y="1070.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="1111.0" y="1043.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1114.0" y="1054.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="1111.0" y="1027.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1114.0" y="1038.0"></text>
</g>
<g>
<title>ieee80211_rx_h_michael_mic_verify?[mac80211] (1 samples, 0.02%)</title><rect x="1111.0" y="1011.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1114.0" y="1022.0"></text>
</g>
<g>
<title>jni_ThrowNew (1 samples, 0.02%)</title><rect x="1111.3" y="1203.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1114.3" y="1214.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (1 samples, 0.02%)</title><rect x="1111.3" y="1187.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.3" y="1198.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (1 samples, 0.02%)</title><rect x="1111.3" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1114.3" y="1182.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, Symbol*, JavaCallArguments*, Handle, Handle, Handle) (1 samples, 0.02%)</title><rect x="1111.3" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.3" y="1166.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="1111.6" y="1203.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1111.9" y="1219.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1114.9" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1111.9" y="1203.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1114.9" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1111.9" y="1187.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1114.9" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1111.9" y="1171.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1114.9" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1111.9" y="1155.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1114.9" y="1166.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1111.9" y="1139.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.9" y="1150.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1111.9" y="1123.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1114.9" y="1134.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1111.9" y="1107.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.9" y="1118.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1111.9" y="1091.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1114.9" y="1102.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1111.9" y="1075.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.9" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1111.9" y="1059.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1114.9" y="1070.0"></text>
</g>
<g>
<title>__recv (214 samples, 5.28%)</title><rect x="1112.2" y="1219.0" width="62.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1115.2" y="1230.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (189 samples, 4.67%)</title><rect x="1119.5" y="1203.0" width="55.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.5" y="1214.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (189 samples, 4.67%)</title><rect x="1119.5" y="1187.0" width="55.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.5" y="1198.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (181 samples, 4.47%)</title><rect x="1121.8" y="1171.0" width="52.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1124.8" y="1182.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (178 samples, 4.40%)</title><rect x="1121.8" y="1155.0" width="51.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1124.8" y="1166.0">__sys..</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="1121.8" y="1139.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.8" y="1150.0"></text>
</g>
<g>
<title>sock_recvmsg (166 samples, 4.10%)</title><rect x="1122.1" y="1139.0" width="48.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.1" y="1150.0">sock..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="1122.4" y="1123.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.4" y="1134.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="1123.0" y="1123.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1126.0" y="1134.0"></text>
</g>
<g>
<title>inet6_recvmsg (142 samples, 3.51%)</title><rect x="1123.6" y="1123.0" width="41.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1126.6" y="1134.0">ine..</text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="1123.6" y="1107.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1126.6" y="1118.0"></text>
</g>
<g>
<title>tcp_recvmsg (140 samples, 3.46%)</title><rect x="1124.2" y="1107.0" width="40.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1127.2" y="1118.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.52%)</title><rect x="1127.9" y="1091.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1130.9" y="1102.0"></text>
</g>
<g>
<title>skb_release_all (21 samples, 0.52%)</title><rect x="1127.9" y="1075.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1130.9" y="1086.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.15%)</title><rect x="1127.9" y="1059.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1130.9" y="1070.0"></text>
</g>
<g>
<title>skb_release_head_state (11 samples, 0.27%)</title><rect x="1129.7" y="1059.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1132.7" y="1070.0"></text>
</g>
<g>
<title>dst_release (9 samples, 0.22%)</title><rect x="1130.3" y="1043.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1133.3" y="1054.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.10%)</title><rect x="1132.9" y="1059.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1135.9" y="1070.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="1134.1" y="1091.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.1" y="1102.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1134.4" y="1091.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1137.4" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.17%)</title><rect x="1134.6" y="1091.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1137.6" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.05%)</title><rect x="1136.7" y="1091.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.7" y="1102.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.17%)</title><rect x="1137.3" y="1091.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1140.3" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.15%)</title><rect x="1137.6" y="1075.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1140.6" y="1086.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (6 samples, 0.15%)</title><rect x="1137.6" y="1059.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.6" y="1070.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="1139.3" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1142.3" y="1102.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1139.3" y="1075.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.3" y="1086.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1139.6" y="1075.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.6" y="1086.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (25 samples, 0.62%)</title><rect x="1139.9" y="1091.0" width="7.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.9" y="1102.0"></text>
</g>
<g>
<title>__skb_datagram_iter (25 samples, 0.62%)</title><rect x="1139.9" y="1075.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.9" y="1086.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1141.1" y="1059.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1144.1" y="1070.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1141.1" y="1043.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1144.1" y="1054.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1141.1" y="1027.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1144.1" y="1038.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1141.1" y="1011.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1144.1" y="1022.0"></text>
</g>
<g>
<title>simple_copy_to_iter (20 samples, 0.49%)</title><rect x="1141.3" y="1059.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1144.3" y="1070.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.25%)</title><rect x="1141.3" y="1043.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1144.3" y="1054.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.20%)</title><rect x="1141.9" y="1027.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.9" y="1038.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.22%)</title><rect x="1144.3" y="1043.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1147.3" y="1054.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.15%)</title><rect x="1144.8" y="1027.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1147.8" y="1038.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="1146.6" y="1027.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1149.6" y="1038.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="1146.9" y="1043.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.9" y="1054.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (50 samples, 1.23%)</title><rect x="1147.2" y="1091.0" width="14.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.2" y="1102.0"></text>
</g>
<g>
<title>tcp_send_ack (45 samples, 1.11%)</title><rect x="1148.6" y="1075.0" width="13.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1151.6" y="1086.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1148.6" y="1059.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.6" y="1070.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (44 samples, 1.09%)</title><rect x="1148.9" y="1059.0" width="12.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1151.9" y="1070.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.17%)</title><rect x="1148.9" y="1043.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1151.9" y="1054.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.15%)</title><rect x="1148.9" y="1027.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1151.9" y="1038.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="1149.2" y="1011.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1152.2" y="1022.0"></text>
</g>
<g>
<title>memset (3 samples, 0.07%)</title><rect x="1149.8" y="1011.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.8" y="1022.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1150.7" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.7" y="1038.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 0.89%)</title><rect x="1151.0" y="1043.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.0" y="1054.0"></text>
</g>
<g>
<title>ip_queue_xmit (36 samples, 0.89%)</title><rect x="1151.0" y="1027.0" width="10.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.0" y="1038.0"></text>
</g>
<g>
<title>__ip_queue_xmit (36 samples, 0.89%)</title><rect x="1151.0" y="1011.0" width="10.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1154.0" y="1022.0"></text>
</g>
<g>
<title>ip_local_out (33 samples, 0.81%)</title><rect x="1151.5" y="995.0" width="9.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1154.5" y="1006.0"></text>
</g>
<g>
<title>ip_output (33 samples, 0.81%)</title><rect x="1151.5" y="979.0" width="9.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.5" y="990.0"></text>
</g>
<g>
<title>ip_finish_output (33 samples, 0.81%)</title><rect x="1151.5" y="963.0" width="9.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.5" y="974.0"></text>
</g>
<g>
<title>__ip_finish_output (32 samples, 0.79%)</title><rect x="1151.8" y="947.0" width="9.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1154.8" y="958.0"></text>
</g>
<g>
<title>ip_finish_output2 (32 samples, 0.79%)</title><rect x="1151.8" y="931.0" width="9.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.8" y="942.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 0.64%)</title><rect x="1153.0" y="915.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.0" y="926.0"></text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 0.62%)</title><rect x="1153.0" y="899.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1156.0" y="910.0"></text>
</g>
<g>
<title>do_softirq_own_stack (23 samples, 0.57%)</title><rect x="1153.3" y="883.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1156.3" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 0.57%)</title><rect x="1153.3" y="867.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.3" y="878.0"></text>
</g>
<g>
<title>net_rx_action (23 samples, 0.57%)</title><rect x="1153.3" y="851.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.3" y="862.0"></text>
</g>
<g>
<title>process_backlog (23 samples, 0.57%)</title><rect x="1153.3" y="835.0" width="6.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.3" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 0.54%)</title><rect x="1153.6" y="819.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1156.6" y="830.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 0.54%)</title><rect x="1153.6" y="803.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1156.6" y="814.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 0.52%)</title><rect x="1153.9" y="787.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1156.9" y="798.0"></text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 0.52%)</title><rect x="1153.9" y="771.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.9" y="782.0"></text>
</g>
<g>
<title>ip_local_deliver (19 samples, 0.47%)</title><rect x="1153.9" y="755.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.9" y="766.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 0.47%)</title><rect x="1153.9" y="739.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.9" y="750.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (18 samples, 0.44%)</title><rect x="1153.9" y="723.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.9" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1153.9" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1156.9" y="718.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.05%)</title><rect x="1154.2" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.2" y="718.0"></text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 0.37%)</title><rect x="1154.7" y="707.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.7" y="718.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="1154.7" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.7" y="702.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.32%)</title><rect x="1155.3" y="691.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.3" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.32%)</title><rect x="1155.3" y="675.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.3" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="1155.3" y="659.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.3" y="670.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1155.3" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.3" y="654.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1155.3" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.3" y="638.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="1155.6" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1158.6" y="654.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="1155.6" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.6" y="638.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1155.9" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.9" y="622.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="1155.9" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.9" y="606.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.22%)</title><rect x="1156.2" y="659.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.2" y="670.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.12%)</title><rect x="1157.1" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.1" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="1157.4" y="627.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.4" y="638.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1157.4" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.4" y="622.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1157.4" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.4" y="606.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1157.4" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.4" y="590.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1157.4" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.4" y="574.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="1157.7" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.7" y="622.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="1157.7" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1160.7" y="606.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.05%)</title><rect x="1157.7" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.7" y="590.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="1157.7" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.7" y="574.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="1157.7" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1160.7" y="558.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1158.0" y="531.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.0" y="542.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="1158.2" y="627.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.2" y="638.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="1158.5" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.5" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="1158.8" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1161.8" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1158.8" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1161.8" y="654.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="1159.1" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.1" y="734.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.05%)</title><rect x="1159.4" y="755.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.4" y="766.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1160.0" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.0" y="894.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1160.0" y="867.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.0" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1160.0" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.0" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1160.0" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.0" y="846.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1160.0" y="819.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.0" y="830.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="1160.0" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.0" y="814.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1160.0" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.0" y="798.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="1160.0" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1163.0" y="782.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1160.0" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1163.0" y="766.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1160.0" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1163.0" y="750.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1160.0" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.0" y="734.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1160.0" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.0" y="718.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1160.0" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.0" y="702.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1160.0" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1163.0" y="686.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1160.0" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.0" y="670.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1160.3" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1163.3" y="910.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1160.3" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.3" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1160.3" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.3" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1160.3" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1163.3" y="862.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1160.3" y="835.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.3" y="846.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="1160.3" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.3" y="830.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1160.3" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.3" y="814.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="1160.3" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.3" y="798.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1160.3" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.3" y="782.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1160.3" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.3" y="766.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1160.3" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.3" y="750.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1160.3" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1163.3" y="734.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1160.3" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1163.3" y="718.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1160.3" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.3" y="702.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1160.3" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.3" y="686.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1160.3" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.3" y="670.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.05%)</title><rect x="1160.6" y="915.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.6" y="926.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="1160.6" y="899.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.6" y="910.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="1161.2" y="995.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1164.2" y="1006.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1161.4" y="1043.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.4" y="1054.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="1161.7" y="1091.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1164.7" y="1102.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.22%)</title><rect x="1162.0" y="1091.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.0" y="1102.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1163.2" y="1075.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1166.2" y="1086.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.10%)</title><rect x="1163.5" y="1075.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1166.5" y="1086.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1163.5" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1166.5" y="1070.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1163.8" y="1059.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.8" y="1070.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="1164.1" y="1059.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1167.1" y="1070.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1164.7" y="1091.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.7" y="1102.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.47%)</title><rect x="1164.9" y="1123.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1167.9" y="1134.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.37%)</title><rect x="1166.1" y="1107.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.1" y="1118.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="1166.1" y="1091.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1169.1" y="1102.0"></text>
</g>
<g>
<title>aa_sk_perm (14 samples, 0.35%)</title><rect x="1166.4" y="1091.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1169.4" y="1102.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (12 samples, 0.30%)</title><rect x="1167.0" y="1075.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.0" y="1086.0"></text>
</g>
<g>
<title>aa_label_next_confined (3 samples, 0.07%)</title><rect x="1167.9" y="1059.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1170.9" y="1070.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.15%)</title><rect x="1168.7" y="1059.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.7" y="1070.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (2 samples, 0.05%)</title><rect x="1169.9" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1172.9" y="1054.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.27%)</title><rect x="1170.5" y="1139.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.5" y="1150.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.25%)</title><rect x="1170.5" y="1123.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.5" y="1134.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.25%)</title><rect x="1170.5" y="1107.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.5" y="1118.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.25%)</title><rect x="1170.5" y="1091.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.5" y="1102.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1173.4" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.4" y="1134.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="1173.7" y="1155.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1176.7" y="1166.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="1174.0" y="1155.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1177.0" y="1166.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="1174.3" y="1155.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1177.3" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.15%)</title><rect x="1174.6" y="1219.0" width="1.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1177.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (8 samples, 0.20%)</title><rect x="1176.3" y="1235.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.3" y="1246.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1178.6" y="1267.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.6" y="1278.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1178.6" y="1251.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.6" y="1262.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1178.6" y="1235.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.6" y="1246.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1178.6" y="1219.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1181.6" y="1230.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="1178.6" y="1203.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1181.6" y="1214.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="1178.6" y="1187.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.6" y="1198.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="1178.6" y="1171.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.6" y="1182.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="1178.6" y="1155.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.6" y="1166.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="1178.6" y="1139.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.6" y="1150.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="1178.6" y="1123.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.6" y="1134.0"></text>
</g>
<g>
<title>ieee80211_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="1178.6" y="1107.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.6" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.25%)</title><rect x="1178.9" y="1283.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.9" y="1294.0"></text>
</g>
<g>
<title>gettimeofday (9 samples, 0.22%)</title><rect x="1179.2" y="1267.0" width="2.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1182.2" y="1278.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.20%)</title><rect x="1179.2" y="1251.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1182.2" y="1262.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1181.6" y="1251.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.6" y="1262.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1181.6" y="1235.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.6" y="1246.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1181.6" y="1219.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.6" y="1230.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1181.6" y="1203.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.6" y="1214.0"></text>
</g>
<g>
<title>start_thread (28 samples, 0.69%)</title><rect x="1181.8" y="1299.0" width="8.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1184.8" y="1310.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (28 samples, 0.69%)</title><rect x="1181.8" y="1283.0" width="8.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1184.8" y="1294.0"></text>
</g>
<g>
<title>Thread::call_run() (28 samples, 0.69%)</title><rect x="1181.8" y="1267.0" width="8.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.8" y="1278.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.02%)</title><rect x="1181.8" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.8" y="1262.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.02%)</title><rect x="1181.8" y="1235.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.8" y="1246.0"></text>
</g>
<g>
<title>getrusage (1 samples, 0.02%)</title><rect x="1181.8" y="1219.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1184.8" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1181.8" y="1203.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.8" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1181.8" y="1187.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.8" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_getrusage (1 samples, 0.02%)</title><rect x="1181.8" y="1171.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.8" y="1182.0"></text>
</g>
<g>
<title>__do_sys_getrusage (1 samples, 0.02%)</title><rect x="1181.8" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1184.8" y="1166.0"></text>
</g>
<g>
<title>getrusage (1 samples, 0.02%)</title><rect x="1181.8" y="1139.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1184.8" y="1150.0"></text>
</g>
<g>
<title>get_task_mm (1 samples, 0.02%)</title><rect x="1181.8" y="1123.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1184.8" y="1134.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.07%)</title><rect x="1182.1" y="1251.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.1" y="1262.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.07%)</title><rect x="1182.1" y="1235.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.1" y="1246.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.05%)</title><rect x="1182.1" y="1219.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.1" y="1230.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="1182.1" y="1203.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1185.1" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1182.7" y="1219.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.7" y="1230.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1182.7" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.7" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.02%)</title><rect x="1182.7" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="1198.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.02%)</title><rect x="1182.7" y="1171.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.7" y="1182.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1182.7" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.7" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (1 samples, 0.02%)</title><rect x="1182.7" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="1150.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.02%)</title><rect x="1182.7" y="1123.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="1134.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1182.7" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.7" y="1118.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (17 samples, 0.42%)</title><rect x="1183.0" y="1251.0" width="5.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="1262.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 0.37%)</title><rect x="1183.0" y="1235.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.0" y="1246.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (15 samples, 0.37%)</title><rect x="1183.0" y="1219.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.0" y="1230.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 0.37%)</title><rect x="1183.0" y="1203.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.0" y="1214.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (15 samples, 0.37%)</title><rect x="1183.0" y="1187.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.0" y="1198.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (8 samples, 0.20%)</title><rect x="1183.0" y="1171.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.0" y="1182.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.02%)</title><rect x="1183.0" y="1155.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.0" y="1166.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.02%)</title><rect x="1183.0" y="1139.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.0" y="1150.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.02%)</title><rect x="1183.0" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.0" y="1134.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.02%)</title><rect x="1183.3" y="1155.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.3" y="1166.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (1 samples, 0.02%)</title><rect x="1183.3" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.3" y="1150.0"></text>
</g>
<g>
<title>Block::succ_prob(unsigned int) (1 samples, 0.02%)</title><rect x="1183.3" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.3" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.02%)</title><rect x="1183.6" y="1155.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.6" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.02%)</title><rect x="1183.6" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.6" y="1150.0"></text>
</g>
<g>
<title>loadConINode::bottom_type() const (1 samples, 0.02%)</title><rect x="1183.6" y="1123.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.12%)</title><rect x="1183.9" y="1155.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.9" y="1166.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.02%)</title><rect x="1183.9" y="1139.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.9" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.02%)</title><rect x="1184.2" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.2" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1184.2" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.2" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.02%)</title><rect x="1184.5" y="1139.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.5" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.02%)</title><rect x="1184.8" y="1139.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.8" y="1150.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.02%)</title><rect x="1184.8" y="1123.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="1134.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="1185.0" y="1139.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.0" y="1150.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="1185.0" y="1123.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.0" y="1134.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.12%)</title><rect x="1185.3" y="1171.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.3" y="1182.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (2 samples, 0.05%)</title><rect x="1185.3" y="1155.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.3" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.05%)</title><rect x="1185.3" y="1139.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1185.3" y="1123.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.3" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1185.3" y="1107.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="1118.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1185.3" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unswitching(IdealLoopTree*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1185.3" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::create_slow_version_of_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.02%)</title><rect x="1185.3" y="1059.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.02%)</title><rect x="1185.3" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="1185.6" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.02%)</title><rect x="1185.6" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.6" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.02%)</title><rect x="1185.6" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1185.6" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.6" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.07%)</title><rect x="1185.9" y="1155.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="1185.9" y="1139.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="1150.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="1185.9" y="1123.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1186.2" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.02%)</title><rect x="1186.2" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="1186.5" y="1139.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1186.5" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="1134.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="1107.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1186.8" y="1171.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.8" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1186.8" y="1155.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1186.8" y="1139.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1186.8" y="1123.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1186.8" y="1107.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1186.8" y="1091.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.8" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1186.8" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1186.8" y="1059.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1186.8" y="1043.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1186.8" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1186.8" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1186.8" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::build_loop_tree(ciTypeFlow::Block*) (1 samples, 0.02%)</title><rect x="1186.8" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.1" y="1075.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.1" y="1059.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.1" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.1" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.1" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.1" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.1" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.1" y="979.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.1" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.1" y="947.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.1" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.1" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.1" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.1" y="883.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.1" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.1" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.1" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.1" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.1" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.1" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.1" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.1" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.1" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.1" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.1" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.1" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.1" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.1" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1187.1" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="670.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (2 samples, 0.05%)</title><rect x="1187.4" y="1235.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1190.4" y="1246.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (2 samples, 0.05%)</title><rect x="1187.4" y="1219.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1190.4" y="1230.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (2 samples, 0.05%)</title><rect x="1187.4" y="1203.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="1214.0"></text>
</g>
<g>
<title>Agent_OnAttach (2 samples, 0.05%)</title><rect x="1187.4" y="1187.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1190.4" y="1198.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (2 samples, 0.05%)</title><rect x="1187.4" y="1171.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="1182.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::ostream&amp;) (2 samples, 0.05%)</title><rect x="1187.4" y="1155.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="1166.0"></text>
</g>
<g>
<title>Profiler::stop() (2 samples, 0.05%)</title><rect x="1187.4" y="1139.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="1150.0"></text>
</g>
<g>
<title>PerfEvents::stop() (2 samples, 0.05%)</title><rect x="1187.4" y="1123.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="1134.0"></text>
</g>
<g>
<title>munmap (2 samples, 0.05%)</title><rect x="1187.4" y="1107.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1190.4" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1187.4" y="1091.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.4" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1187.4" y="1075.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1190.4" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="1187.4" y="1059.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1190.4" y="1070.0"></text>
</g>
<g>
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="1187.4" y="1043.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1190.4" y="1054.0"></text>
</g>
<g>
<title>__do_munmap (1 samples, 0.02%)</title><rect x="1187.4" y="1027.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1190.4" y="1038.0"></text>
</g>
<g>
<title>remove_vma (1 samples, 0.02%)</title><rect x="1187.4" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1190.4" y="1022.0"></text>
</g>
<g>
<title>perf_mmap_close (1 samples, 0.02%)</title><rect x="1187.4" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.4" y="1006.0"></text>
</g>
<g>
<title>ring_buffer_put (1 samples, 0.02%)</title><rect x="1187.4" y="979.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1190.4" y="990.0"></text>
</g>
<g>
<title>call_rcu (1 samples, 0.02%)</title><rect x="1187.4" y="963.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1190.4" y="974.0"></text>
</g>
<g>
<title>__call_rcu (1 samples, 0.02%)</title><rect x="1187.4" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1190.4" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1187.7" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1190.7" y="1070.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="1187.7" y="1043.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1190.7" y="1054.0"></text>
</g>
<g>
<title>____fput (1 samples, 0.02%)</title><rect x="1187.7" y="1027.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.7" y="1038.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.02%)</title><rect x="1187.7" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1190.7" y="1022.0"></text>
</g>
<g>
<title>perf_release (1 samples, 0.02%)</title><rect x="1187.7" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1190.7" y="1006.0"></text>
</g>
<g>
<title>perf_event_release_kernel (1 samples, 0.02%)</title><rect x="1187.7" y="979.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1190.7" y="990.0"></text>
</g>
<g>
<title>perf_remove_from_context (1 samples, 0.02%)</title><rect x="1187.7" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1190.7" y="974.0"></text>
</g>
<g>
<title>event_function_call (1 samples, 0.02%)</title><rect x="1187.7" y="947.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.7" y="958.0"></text>
</g>
<g>
<title>task_function_call (1 samples, 0.02%)</title><rect x="1187.7" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.7" y="942.0"></text>
</g>
<g>
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="1187.7" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.7" y="926.0"></text>
</g>
<g>
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="1187.7" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1190.7" y="910.0"></text>
</g>
<g>
<title>native_send_call_func_single_ipi (1 samples, 0.02%)</title><rect x="1187.7" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1190.7" y="894.0"></text>
</g>
<g>
<title>default_send_IPI_single (1 samples, 0.02%)</title><rect x="1187.7" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1190.7" y="878.0"></text>
</g>
<g>
<title>flat_send_IPI_mask (1 samples, 0.02%)</title><rect x="1187.7" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>_flat_send_IPI_mask (1 samples, 0.02%)</title><rect x="1187.7" y="835.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>VMThread::run() (6 samples, 0.15%)</title><rect x="1188.0" y="1251.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.0" y="1262.0"></text>
</g>
<g>
<title>VMThread::loop() (6 samples, 0.15%)</title><rect x="1188.0" y="1235.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="1246.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.10%)</title><rect x="1188.0" y="1219.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="1230.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.02%)</title><rect x="1188.8" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.8" y="1214.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1189.1" y="1219.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1192.1" y="1230.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1189.4" y="1219.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="1230.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.4" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="1214.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.4" y="1187.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.4" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.4" y="1171.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.4" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1189.4" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="1166.0"></text>
</g>
<g>
<title>G1CollectedHeap::process_discovered_references(G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1189.4" y="1139.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="1150.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (1 samples, 0.02%)</title><rect x="1189.4" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="1134.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="1251.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="1262.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.02%)</title><rect x="1189.7" y="1235.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="1246.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1189.7" y="1219.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="1230.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1189.7" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.7" y="1214.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) [clone .part.0] (1 samples, 0.02%)</title><rect x="1189.7" y="1187.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="1198.0"></text>
</g>
</g>
</svg>
