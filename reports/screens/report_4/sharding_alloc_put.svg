<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="885"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="885"> </text>
<g id="frames">
<g>
<title>all (30,232 samples, 100.00%)</title><rect x="10.0" y="851.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="862.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (20,356 samples, 67.33%)</title><rect x="10.0" y="835.0" width="794.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (30 samples, 0.10%)</title><rect x="10.0" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (30 samples, 0.10%)</title><rect x="10.0" y="803.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1983747920.linkToTargetMethod (30 samples, 0.10%)</title><rect x="10.0" y="787.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1504046856.invoke (30 samples, 0.10%)</title><rect x="10.0" y="771.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.10%)</title><rect x="10.0" y="755.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (30 samples, 0.10%)</title><rect x="10.0" y="739.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (30 samples, 0.10%)</title><rect x="10.0" y="723.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.10%)</title><rect x="10.0" y="707.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20,326 samples, 67.23%)</title><rect x="11.2" y="819.0" width="793.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.2" y="830.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20,326 samples, 67.23%)</title><rect x="11.2" y="803.0" width="793.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.2" y="814.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17,868 samples, 59.10%)</title><rect x="11.2" y="787.0" width="697.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.2" y="798.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (17,868 samples, 59.10%)</title><rect x="11.2" y="771.0" width="697.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.2" y="782.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$67/253098529.run (10,969 samples, 36.28%)</title><rect x="11.2" y="755.0" width="428.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.2" y="766.0">ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$67/..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$forwardRequest$1 (10,969 samples, 36.28%)</title><rect x="11.2" y="739.0" width="428.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.2" y="750.0">ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$forw..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10,851 samples, 35.89%)</title><rect x="11.2" y="723.0" width="423.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.2" y="734.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10,851 samples, 35.89%)</title><rect x="11.2" y="707.0" width="423.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.2" y="718.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (36 samples, 0.12%)</title><rect x="11.2" y="691.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="14.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (9,833 samples, 32.53%)</title><rect x="12.6" y="691.0" width="383.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.6" y="702.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (4,901 samples, 16.21%)</title><rect x="12.6" y="675.0" width="191.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="15.6" y="686.0">byte[]</text>
</g>
<g>
<title>byte[] (4,932 samples, 16.31%)</title><rect x="203.9" y="675.0" width="192.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="206.9" y="686.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (796 samples, 2.63%)</title><rect x="396.4" y="691.0" width="31.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.4" y="702.0">on..</text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="396.4" y="675.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="399.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.14%)</title><rect x="396.8" y="675.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.14%)</title><rect x="396.8" y="659.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.06%)</title><rect x="396.8" y="643.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="399.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.08%)</title><rect x="397.6" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.6" y="654.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.08%)</title><rect x="397.6" y="627.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="400.6" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.04%)</title><rect x="398.5" y="675.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="401.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (652 samples, 2.16%)</title><rect x="399.0" y="675.0" width="25.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.0" y="686.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (652 samples, 2.16%)</title><rect x="399.0" y="659.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.0" y="670.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (652 samples, 2.16%)</title><rect x="399.0" y="643.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.0" y="654.0">o..</text>
</g>
<g>
<title>char[] (525 samples, 1.74%)</title><rect x="399.0" y="627.0" width="20.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="402.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.15%)</title><rect x="419.5" y="627.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="422.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (82 samples, 0.27%)</title><rect x="421.2" y="627.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (82 samples, 0.27%)</title><rect x="421.2" y="611.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (82 samples, 0.27%)</title><rect x="421.2" y="595.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="606.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.27%)</title><rect x="421.2" y="579.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="424.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.08%)</title><rect x="424.4" y="675.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.4" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.08%)</title><rect x="424.4" y="659.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="427.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (52 samples, 0.17%)</title><rect x="425.4" y="675.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.17%)</title><rect x="425.4" y="659.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.17%)</title><rect x="425.4" y="643.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.08%)</title><rect x="425.4" y="627.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="428.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.09%)</title><rect x="426.4" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.4" y="638.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.09%)</title><rect x="426.4" y="611.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="429.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (136 samples, 0.45%)</title><rect x="427.4" y="691.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.4" y="702.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (40 samples, 0.13%)</title><rect x="427.4" y="675.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="430.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (96 samples, 0.32%)</title><rect x="429.0" y="675.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.0" y="686.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.32%)</title><rect x="429.0" y="659.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="432.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (29 samples, 0.10%)</title><rect x="432.8" y="691.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.10%)</title><rect x="432.8" y="675.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.10%)</title><rect x="432.8" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.06%)</title><rect x="432.8" y="643.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="435.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="433.4" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.4" y="654.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="433.4" y="627.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="436.4" y="638.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (21 samples, 0.07%)</title><rect x="433.9" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.9" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (21 samples, 0.07%)</title><rect x="433.9" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.9" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (21 samples, 0.07%)</title><rect x="433.9" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.9" y="670.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (21 samples, 0.07%)</title><rect x="433.9" y="643.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="436.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.sendResponse (118 samples, 0.39%)</title><rect x="434.7" y="723.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (118 samples, 0.39%)</title><rect x="434.7" y="707.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="437.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (118 samples, 0.39%)</title><rect x="434.7" y="691.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (89 samples, 0.29%)</title><rect x="434.7" y="675.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (89 samples, 0.29%)</title><rect x="434.7" y="659.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.7" y="670.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.29%)</title><rect x="434.7" y="643.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="437.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 0.10%)</title><rect x="438.2" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.2" y="686.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (29 samples, 0.10%)</title><rect x="438.2" y="659.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="441.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$69/1679533751.run (6,899 samples, 22.82%)</title><rect x="439.3" y="755.0" width="269.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.3" y="766.0">ru/mail/polis/service/manikhin/Async..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$2 (6,899 samples, 22.82%)</title><rect x="439.3" y="739.0" width="269.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.3" y="750.0">ru/mail/polis/service/manikhin/Async..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.handleRequest (6,899 samples, 22.82%)</title><rect x="439.3" y="723.0" width="269.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.3" y="734.0">ru/mail/polis/service/manikhin/Async..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (6,899 samples, 22.82%)</title><rect x="439.3" y="707.0" width="269.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.3" y="718.0">ru/mail/polis/service/manikhin/Async..</text>
</g>
<g>
<title>one.nio.http.Response (490 samples, 1.62%)</title><rect x="439.3" y="691.0" width="19.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="442.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,972 samples, 6.52%)</title><rect x="458.4" y="691.0" width="77.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.4" y="702.0">one/nio/..</text>
</g>
<g>
<title>byte[] (827 samples, 2.74%)</title><rect x="458.4" y="675.0" width="32.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="461.4" y="686.0">by..</text>
</g>
<g>
<title>java.lang.String[] (614 samples, 2.03%)</title><rect x="490.7" y="675.0" width="24.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="493.7" y="686.0">j..</text>
</g>
<g>
<title>java.lang.String (531 samples, 1.76%)</title><rect x="514.7" y="675.0" width="20.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="517.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (1,447 samples, 4.79%)</title><rect x="535.4" y="691.0" width="56.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.4" y="702.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (633 samples, 2.09%)</title><rect x="535.4" y="675.0" width="24.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.4" y="686.0">r..</text>
</g>
<g>
<title>byte[] (633 samples, 2.09%)</title><rect x="535.4" y="659.0" width="24.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="538.4" y="670.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (814 samples, 2.69%)</title><rect x="560.1" y="675.0" width="31.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.1" y="686.0">ru..</text>
</g>
<g>
<title>byte[] (814 samples, 2.69%)</title><rect x="560.1" y="659.0" width="31.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="563.1" y="670.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.sendResponse (2,990 samples, 9.89%)</title><rect x="591.9" y="691.0" width="116.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.9" y="702.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,990 samples, 9.89%)</title><rect x="591.9" y="675.0" width="116.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.9" y="686.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,990 samples, 9.89%)</title><rect x="591.9" y="659.0" width="116.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.9" y="670.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,135 samples, 7.06%)</title><rect x="591.9" y="643.0" width="83.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.9" y="654.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,135 samples, 7.06%)</title><rect x="591.9" y="627.0" width="83.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.9" y="638.0">one/nio/u..</text>
</g>
<g>
<title>byte[] (1,559 samples, 5.16%)</title><rect x="591.9" y="611.0" width="60.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="594.9" y="622.0">byte[]</text>
</g>
<g>
<title>byte[] (576 samples, 1.91%)</title><rect x="652.7" y="611.0" width="22.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.7" y="622.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (855 samples, 2.83%)</title><rect x="675.2" y="643.0" width="33.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.2" y="654.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (855 samples, 2.83%)</title><rect x="675.2" y="627.0" width="33.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="678.2" y="638.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (933 samples, 3.09%)</title><rect x="708.6" y="787.0" width="36.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.6" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (933 samples, 3.09%)</title><rect x="708.6" y="771.0" width="36.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.6" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (931 samples, 3.08%)</title><rect x="708.6" y="755.0" width="36.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.6" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (931 samples, 3.08%)</title><rect x="708.6" y="739.0" width="36.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.6" y="750.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (931 samples, 3.08%)</title><rect x="708.6" y="723.0" width="36.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="711.6" y="734.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1,525 samples, 5.04%)</title><rect x="745.0" y="787.0" width="59.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.0" y="798.0">sun/rm..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,525 samples, 5.04%)</title><rect x="745.0" y="771.0" width="59.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.0" y="782.0">java/s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$103/2116484703.run (1,525 samples, 5.04%)</title><rect x="745.0" y="755.0" width="59.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.0" y="766.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1,525 samples, 5.04%)</title><rect x="745.0" y="739.0" width="59.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.0" y="750.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1,525 samples, 5.04%)</title><rect x="745.0" y="723.0" width="59.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.0" y="734.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1,525 samples, 5.04%)</title><rect x="745.0" y="707.0" width="59.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.0" y="718.0">sun/rm..</text>
</g>
<g>
<title>java.io.DataOutputStream (30 samples, 0.10%)</title><rect x="745.0" y="691.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="748.0" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1,491 samples, 4.93%)</title><rect x="746.3" y="691.0" width="58.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.3" y="702.0">sun/rm..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,352 samples, 4.47%)</title><rect x="746.4" y="675.0" width="52.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.4" y="686.0">java/..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,352 samples, 4.47%)</title><rect x="746.4" y="659.0" width="52.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.4" y="670.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,352 samples, 4.47%)</title><rect x="746.4" y="643.0" width="52.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.4" y="654.0">sun/r..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1,352 samples, 4.47%)</title><rect x="746.4" y="627.0" width="52.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.4" y="638.0">sun/r..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (739 samples, 2.44%)</title><rect x="746.6" y="611.0" width="28.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.6" y="622.0">ja..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (739 samples, 2.44%)</title><rect x="746.6" y="595.0" width="28.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.6" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor42.invoke (733 samples, 2.42%)</title><rect x="746.8" y="579.0" width="28.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.8" y="590.0">jd..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (733 samples, 2.42%)</title><rect x="746.8" y="563.0" width="28.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.8" y="574.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (671 samples, 2.22%)</title><rect x="746.8" y="547.0" width="26.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.8" y="558.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (671 samples, 2.22%)</title><rect x="746.8" y="531.0" width="26.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.8" y="542.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (671 samples, 2.22%)</title><rect x="746.8" y="515.0" width="26.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.8" y="526.0">j..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (671 samples, 2.22%)</title><rect x="746.8" y="499.0" width="26.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.8" y="510.0">c..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (671 samples, 2.22%)</title><rect x="746.8" y="483.0" width="26.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.8" y="494.0">c..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (671 samples, 2.22%)</title><rect x="746.8" y="467.0" width="26.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.8" y="478.0">j..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (671 samples, 2.22%)</title><rect x="746.8" y="451.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.8" y="462.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (671 samples, 2.22%)</title><rect x="746.8" y="435.0" width="26.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.8" y="446.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (671 samples, 2.22%)</title><rect x="746.8" y="419.0" width="26.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.8" y="430.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (671 samples, 2.22%)</title><rect x="746.8" y="403.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.8" y="414.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (671 samples, 2.22%)</title><rect x="746.8" y="387.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.8" y="398.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (671 samples, 2.22%)</title><rect x="746.8" y="371.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.8" y="382.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (671 samples, 2.22%)</title><rect x="746.8" y="355.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.8" y="366.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (616 samples, 2.04%)</title><rect x="746.8" y="339.0" width="24.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.8" y="350.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (616 samples, 2.04%)</title><rect x="746.8" y="323.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.8" y="334.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (615 samples, 2.03%)</title><rect x="746.8" y="307.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.8" y="318.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (615 samples, 2.03%)</title><rect x="746.8" y="291.0" width="24.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.8" y="302.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (204 samples, 0.67%)</title><rect x="746.8" y="275.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.8" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (177 samples, 0.59%)</title><rect x="746.8" y="259.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.8" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (163 samples, 0.54%)</title><rect x="746.8" y="243.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.8" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (163 samples, 0.54%)</title><rect x="746.8" y="227.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="746.8" y="211.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="749.8" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (95 samples, 0.31%)</title><rect x="747.4" y="211.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.4" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (14 samples, 0.05%)</title><rect x="747.4" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.4" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (10 samples, 0.03%)</title><rect x="747.4" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.4" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (10 samples, 0.03%)</title><rect x="747.4" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.4" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (10 samples, 0.03%)</title><rect x="747.4" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.4" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (10 samples, 0.03%)</title><rect x="747.4" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.4" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (10 samples, 0.03%)</title><rect x="747.4" y="115.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="750.4" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (81 samples, 0.27%)</title><rect x="748.0" y="195.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.0" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.03%)</title><rect x="748.0" y="179.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="751.0" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (73 samples, 0.24%)</title><rect x="748.3" y="179.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.3" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (73 samples, 0.24%)</title><rect x="748.3" y="163.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="751.3" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (52 samples, 0.17%)</title><rect x="751.1" y="211.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.1" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.17%)</title><rect x="751.1" y="195.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="754.1" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (14 samples, 0.05%)</title><rect x="753.2" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.2" y="254.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (14 samples, 0.05%)</title><rect x="753.2" y="227.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="756.2" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (27 samples, 0.09%)</title><rect x="753.7" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.7" y="270.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (13 samples, 0.04%)</title><rect x="753.9" y="243.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.9" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (13 samples, 0.04%)</title><rect x="753.9" y="227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.03%)</title><rect x="754.1" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (9 samples, 0.03%)</title><rect x="754.1" y="195.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="757.1" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (9 samples, 0.03%)</title><rect x="754.4" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="754.4" y="227.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="757.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.06%)</title><rect x="754.8" y="275.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="757.8" y="286.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (13 samples, 0.04%)</title><rect x="755.5" y="275.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="758.5" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (196 samples, 0.65%)</title><rect x="756.0" y="275.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.0" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (13 samples, 0.04%)</title><rect x="756.0" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (9 samples, 0.03%)</title><rect x="756.0" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (9 samples, 0.03%)</title><rect x="756.0" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (9 samples, 0.03%)</title><rect x="756.0" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (9 samples, 0.03%)</title><rect x="756.0" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.0" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (9 samples, 0.03%)</title><rect x="756.0" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="759.0" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (183 samples, 0.61%)</title><rect x="756.5" y="259.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.03%)</title><rect x="756.5" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="759.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (175 samples, 0.58%)</title><rect x="756.8" y="243.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (175 samples, 0.58%)</title><rect x="756.8" y="227.0" width="6.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="759.8" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (183 samples, 0.61%)</title><rect x="763.7" y="275.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (162 samples, 0.54%)</title><rect x="763.7" y="259.0" width="6.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="766.7" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.07%)</title><rect x="770.0" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.07%)</title><rect x="770.0" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (21 samples, 0.07%)</title><rect x="770.0" y="227.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.0" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (21 samples, 0.07%)</title><rect x="770.0" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.0" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.07%)</title><rect x="770.0" y="195.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.07%)</title><rect x="770.0" y="179.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor16.invoke (7 samples, 0.02%)</title><rect x="770.1" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.1" y="174.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (7 samples, 0.02%)</title><rect x="770.1" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.1" y="158.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (7 samples, 0.02%)</title><rect x="770.1" y="131.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="773.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor21.invoke (7 samples, 0.02%)</title><rect x="770.4" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.4" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (7 samples, 0.02%)</title><rect x="770.4" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (7 samples, 0.02%)</title><rect x="770.4" y="131.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="773.4" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (55 samples, 0.18%)</title><rect x="770.8" y="339.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.8" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (55 samples, 0.18%)</title><rect x="770.8" y="323.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (55 samples, 0.18%)</title><rect x="770.8" y="307.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (55 samples, 0.18%)</title><rect x="770.8" y="291.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.8" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (55 samples, 0.18%)</title><rect x="770.8" y="275.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.8" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (55 samples, 0.18%)</title><rect x="770.8" y="259.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (55 samples, 0.18%)</title><rect x="770.8" y="243.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor46.invoke (55 samples, 0.18%)</title><rect x="770.8" y="227.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.8" y="238.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (55 samples, 0.18%)</title><rect x="770.8" y="211.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.8" y="222.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (54 samples, 0.18%)</title><rect x="770.9" y="195.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.9" y="206.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (7 samples, 0.02%)</title><rect x="771.1" y="179.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="774.1" y="190.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (26 samples, 0.09%)</title><rect x="771.3" y="179.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="774.3" y="190.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (16 samples, 0.05%)</title><rect x="772.4" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.4" y="190.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (16 samples, 0.05%)</title><rect x="772.4" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="772.6" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (10 samples, 0.03%)</title><rect x="772.6" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1227074340.invoke (10 samples, 0.03%)</title><rect x="772.6" y="115.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="772.6" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.02%)</title><rect x="772.7" y="83.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.7" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.02%)</title><rect x="772.7" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.7" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="772.7" y="51.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="775.7" y="62.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (57 samples, 0.19%)</title><rect x="773.2" y="547.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.2" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.03%)</title><rect x="773.2" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.2" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (10 samples, 0.03%)</title><rect x="773.2" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.2" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (10 samples, 0.03%)</title><rect x="773.2" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.2" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (8 samples, 0.03%)</title><rect x="773.3" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.3" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (47 samples, 0.16%)</title><rect x="773.6" y="531.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.6" y="542.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (47 samples, 0.16%)</title><rect x="773.6" y="515.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (26 samples, 0.09%)</title><rect x="773.7" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (26 samples, 0.09%)</title><rect x="773.7" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (26 samples, 0.09%)</title><rect x="773.7" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (26 samples, 0.09%)</title><rect x="773.7" y="451.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (25 samples, 0.08%)</title><rect x="773.7" y="435.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (25 samples, 0.08%)</title><rect x="773.7" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (23 samples, 0.08%)</title><rect x="773.7" y="403.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (23 samples, 0.08%)</title><rect x="773.7" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (19 samples, 0.06%)</title><rect x="773.7" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (19 samples, 0.06%)</title><rect x="773.7" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (13 samples, 0.04%)</title><rect x="773.8" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (7 samples, 0.02%)</title><rect x="774.0" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.0" y="334.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (19 samples, 0.06%)</title><rect x="774.7" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.7" y="510.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (19 samples, 0.06%)</title><rect x="774.7" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (19 samples, 0.06%)</title><rect x="774.7" y="467.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (17 samples, 0.06%)</title><rect x="774.7" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.7" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (340 samples, 1.12%)</title><rect x="775.4" y="611.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (340 samples, 1.12%)</title><rect x="775.4" y="595.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (340 samples, 1.12%)</title><rect x="775.4" y="579.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (334 samples, 1.10%)</title><rect x="775.4" y="563.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (334 samples, 1.10%)</title><rect x="775.4" y="547.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (328 samples, 1.08%)</title><rect x="775.4" y="531.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (328 samples, 1.08%)</title><rect x="775.4" y="515.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (328 samples, 1.08%)</title><rect x="775.4" y="499.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="775.4" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="778.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (321 samples, 1.06%)</title><rect x="775.7" y="483.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (300 samples, 0.99%)</title><rect x="775.7" y="467.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (300 samples, 0.99%)</title><rect x="775.7" y="451.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.7" y="462.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (9 samples, 0.03%)</title><rect x="775.7" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="778.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (32 samples, 0.11%)</title><rect x="776.0" y="435.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (32 samples, 0.11%)</title><rect x="776.0" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (31 samples, 0.10%)</title><rect x="776.0" y="403.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (31 samples, 0.10%)</title><rect x="776.0" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (30 samples, 0.10%)</title><rect x="776.1" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.1" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (30 samples, 0.10%)</title><rect x="776.1" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (30 samples, 0.10%)</title><rect x="776.1" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (30 samples, 0.10%)</title><rect x="776.1" y="323.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (30 samples, 0.10%)</title><rect x="776.1" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.1" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (29 samples, 0.10%)</title><rect x="776.1" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.1" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (29 samples, 0.10%)</title><rect x="776.1" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (23 samples, 0.08%)</title><rect x="776.1" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (23 samples, 0.08%)</title><rect x="776.1" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (23 samples, 0.08%)</title><rect x="776.1" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (22 samples, 0.07%)</title><rect x="776.1" y="211.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (17 samples, 0.06%)</title><rect x="776.1" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (17 samples, 0.06%)</title><rect x="776.1" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (12 samples, 0.04%)</title><rect x="776.3" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.3" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.03%)</title><rect x="776.4" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.03%)</title><rect x="776.4" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (10 samples, 0.03%)</title><rect x="776.4" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (10 samples, 0.03%)</title><rect x="776.4" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.4" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (9 samples, 0.03%)</title><rect x="776.4" y="83.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.4" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.03%)</title><rect x="776.4" y="67.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.4" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (259 samples, 0.86%)</title><rect x="777.3" y="435.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.3" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (253 samples, 0.84%)</title><rect x="777.5" y="419.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (253 samples, 0.84%)</title><rect x="777.5" y="403.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (253 samples, 0.84%)</title><rect x="777.5" y="387.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (253 samples, 0.84%)</title><rect x="777.5" y="371.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (229 samples, 0.76%)</title><rect x="777.7" y="355.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (229 samples, 0.76%)</title><rect x="777.7" y="339.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (106 samples, 0.35%)</title><rect x="777.7" y="323.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (22 samples, 0.07%)</title><rect x="777.7" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (20 samples, 0.07%)</title><rect x="777.7" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.7" y="302.0"></text>
</g>
<g>
<title>int[] (8 samples, 0.03%)</title><rect x="777.7" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="780.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.04%)</title><rect x="778.0" y="275.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (84 samples, 0.28%)</title><rect x="778.5" y="307.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.5" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (78 samples, 0.26%)</title><rect x="778.5" y="291.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.5" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (76 samples, 0.25%)</title><rect x="778.6" y="275.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (76 samples, 0.25%)</title><rect x="778.6" y="259.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (76 samples, 0.25%)</title><rect x="778.6" y="243.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (69 samples, 0.23%)</title><rect x="778.6" y="227.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (64 samples, 0.21%)</title><rect x="778.8" y="211.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.8" y="222.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (8 samples, 0.03%)</title><rect x="778.8" y="195.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="781.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (56 samples, 0.19%)</title><rect x="779.1" y="195.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.1" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.03%)</title><rect x="779.1" y="179.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="782.1" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (47 samples, 0.16%)</title><rect x="779.5" y="179.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (47 samples, 0.16%)</title><rect x="779.5" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (47 samples, 0.16%)</title><rect x="779.5" y="147.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (47 samples, 0.16%)</title><rect x="779.5" y="131.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.5" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (28 samples, 0.09%)</title><rect x="779.7" y="115.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.7" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (28 samples, 0.09%)</title><rect x="779.7" y="99.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.7" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (14 samples, 0.05%)</title><rect x="779.7" y="83.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.7" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (14 samples, 0.05%)</title><rect x="779.7" y="67.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.7" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (14 samples, 0.05%)</title><rect x="779.7" y="51.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="780.0" y="35.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="783.0" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (14 samples, 0.05%)</title><rect x="780.2" y="83.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.2" y="94.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (14 samples, 0.05%)</title><rect x="780.2" y="67.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="783.2" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (11 samples, 0.04%)</title><rect x="780.8" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.8" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (11 samples, 0.04%)</title><rect x="780.8" y="99.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="783.8" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.02%)</title><rect x="781.3" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.3" y="238.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.02%)</title><rect x="781.3" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="784.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (34 samples, 0.11%)</title><rect x="781.8" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (15 samples, 0.05%)</title><rect x="781.8" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (13 samples, 0.04%)</title><rect x="781.8" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (19 samples, 0.06%)</title><rect x="782.4" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (19 samples, 0.06%)</title><rect x="782.4" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.4" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.06%)</title><rect x="782.4" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (15 samples, 0.05%)</title><rect x="782.4" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.4" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (15 samples, 0.05%)</title><rect x="782.4" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (10 samples, 0.03%)</title><rect x="782.6" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.6" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.03%)</title><rect x="782.7" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.03%)</title><rect x="782.7" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (8 samples, 0.03%)</title><rect x="782.7" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.7" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (8 samples, 0.03%)</title><rect x="782.7" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.7" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (84 samples, 0.28%)</title><rect x="783.3" y="323.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.3" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (84 samples, 0.28%)</title><rect x="783.3" y="307.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="786.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (11 samples, 0.04%)</title><rect x="786.6" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (11 samples, 0.04%)</title><rect x="786.6" y="339.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="789.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (9 samples, 0.03%)</title><rect x="787.0" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.0" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (9 samples, 0.03%)</title><rect x="787.0" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="790.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (21 samples, 0.07%)</title><rect x="787.4" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.4" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (21 samples, 0.07%)</title><rect x="787.4" y="451.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="790.4" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (100 samples, 0.33%)</title><rect x="788.7" y="611.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (97 samples, 0.32%)</title><rect x="788.8" y="595.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (97 samples, 0.32%)</title><rect x="788.8" y="579.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (97 samples, 0.32%)</title><rect x="788.8" y="563.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (28 samples, 0.09%)</title><rect x="788.8" y="547.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (25 samples, 0.08%)</title><rect x="788.8" y="531.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (25 samples, 0.08%)</title><rect x="788.8" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.8" y="526.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (7 samples, 0.02%)</title><rect x="788.8" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="791.8" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (11 samples, 0.04%)</title><rect x="789.1" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (7 samples, 0.02%)</title><rect x="789.2" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (7 samples, 0.02%)</title><rect x="789.5" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (69 samples, 0.23%)</title><rect x="789.9" y="547.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (29 samples, 0.10%)</title><rect x="789.9" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (29 samples, 0.10%)</title><rect x="789.9" y="515.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.9" y="526.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (7 samples, 0.02%)</title><rect x="789.9" y="499.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="792.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (17 samples, 0.06%)</title><rect x="790.2" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.2" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (8 samples, 0.03%)</title><rect x="790.2" y="483.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="793.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (9 samples, 0.03%)</title><rect x="790.5" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="793.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (40 samples, 0.13%)</title><rect x="791.0" y="531.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (12 samples, 0.04%)</title><rect x="791.1" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (12 samples, 0.04%)</title><rect x="791.1" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (27 samples, 0.09%)</title><rect x="791.5" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (27 samples, 0.09%)</title><rect x="791.5" y="499.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (27 samples, 0.09%)</title><rect x="791.5" y="483.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (21 samples, 0.07%)</title><rect x="791.5" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.5" y="478.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (21 samples, 0.07%)</title><rect x="791.5" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.5" y="462.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (15 samples, 0.05%)</title><rect x="791.8" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.8" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (169 samples, 0.56%)</title><rect x="792.6" y="611.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.6" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (168 samples, 0.56%)</title><rect x="792.6" y="595.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.6" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (166 samples, 0.55%)</title><rect x="792.7" y="579.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.7" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (165 samples, 0.55%)</title><rect x="792.7" y="563.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.7" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (165 samples, 0.55%)</title><rect x="792.7" y="547.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (165 samples, 0.55%)</title><rect x="792.7" y="531.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (105 samples, 0.35%)</title><rect x="793.0" y="515.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.0" y="526.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="793.0" y="499.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="796.0" y="510.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.13%)</title><rect x="793.4" y="499.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="796.4" y="510.0"></text>
</g>
<g>
<title>char[] (41 samples, 0.14%)</title><rect x="795.2" y="499.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="798.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (26 samples, 0.09%)</title><rect x="797.1" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.1" y="526.0"></text>
</g>
<g>
<title>int[] (14 samples, 0.05%)</title><rect x="797.1" y="499.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="800.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="797.7" y="499.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="800.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (27 samples, 0.09%)</title><rect x="798.1" y="515.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (21 samples, 0.07%)</title><rect x="798.4" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.4" y="510.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.04%)</title><rect x="798.4" y="483.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="801.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="798.9" y="483.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="801.9" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (135 samples, 0.45%)</title><rect x="799.2" y="675.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.2" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (131 samples, 0.43%)</title><rect x="799.4" y="659.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="802.4" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (129 samples, 0.43%)</title><rect x="799.5" y="643.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (128 samples, 0.42%)</title><rect x="799.5" y="627.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.5" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (7 samples, 0.02%)</title><rect x="799.6" y="611.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="802.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (105 samples, 0.35%)</title><rect x="799.9" y="611.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.9" y="622.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.11%)</title><rect x="800.1" y="595.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="803.1" y="606.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.10%)</title><rect x="801.5" y="595.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.5" y="606.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (32 samples, 0.11%)</title><rect x="802.7" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.7" y="606.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="802.7" y="579.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="805.7" y="590.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.06%)</title><rect x="803.3" y="579.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="806.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (13 samples, 0.04%)</title><rect x="804.0" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="804.2" y="595.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="807.2" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,876 samples, 32.67%)</title><rect x="804.5" y="835.0" width="385.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.5" y="846.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (416 samples, 1.38%)</title><rect x="804.5" y="819.0" width="16.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.5" y="830.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (416 samples, 1.38%)</title><rect x="804.5" y="803.0" width="16.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="807.5" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9,460 samples, 31.29%)</title><rect x="820.8" y="819.0" width="369.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.8" y="830.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,460 samples, 31.29%)</title><rect x="820.8" y="803.0" width="369.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.8" y="814.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,460 samples, 31.29%)</title><rect x="820.8" y="787.0" width="369.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.8" y="798.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,119 samples, 10.32%)</title><rect x="820.8" y="771.0" width="121.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.8" y="782.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,119 samples, 10.32%)</title><rect x="820.8" y="755.0" width="121.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.8" y="766.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,553 samples, 8.44%)</title><rect x="820.8" y="739.0" width="99.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.8" y="750.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (503 samples, 1.66%)</title><rect x="820.8" y="723.0" width="19.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (503 samples, 1.66%)</title><rect x="820.8" y="707.0" width="19.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (503 samples, 1.66%)</title><rect x="820.8" y="691.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (503 samples, 1.66%)</title><rect x="820.8" y="675.0" width="19.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.8" y="686.0"></text>
</g>
<g>
<title>java.lang.String (248 samples, 0.82%)</title><rect x="820.8" y="659.0" width="9.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="823.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (255 samples, 0.84%)</title><rect x="830.4" y="659.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.4" y="670.0"></text>
</g>
<g>
<title>byte[] (255 samples, 0.84%)</title><rect x="830.4" y="643.0" width="10.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="833.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (2,050 samples, 6.78%)</title><rect x="840.4" y="723.0" width="80.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.4" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (239 samples, 0.79%)</title><rect x="840.4" y="707.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (239 samples, 0.79%)</title><rect x="840.4" y="691.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (239 samples, 0.79%)</title><rect x="840.4" y="675.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (239 samples, 0.79%)</title><rect x="840.4" y="659.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.4" y="670.0"></text>
</g>
<g>
<title>byte[] (239 samples, 0.79%)</title><rect x="840.4" y="643.0" width="9.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="843.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.62%)</title><rect x="849.7" y="707.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.62%)</title><rect x="849.7" y="691.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$69/1679533751.get$Lambda (186 samples, 0.62%)</title><rect x="849.7" y="675.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="852.7" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$69 (186 samples, 0.62%)</title><rect x="849.7" y="659.0" width="7.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="852.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (513 samples, 1.70%)</title><rect x="857.0" y="707.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (513 samples, 1.70%)</title><rect x="857.0" y="691.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.0" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (513 samples, 1.70%)</title><rect x="857.0" y="675.0" width="20.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="860.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (308 samples, 1.02%)</title><rect x="877.0" y="707.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (307 samples, 1.02%)</title><rect x="877.0" y="691.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.0" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (174 samples, 0.58%)</title><rect x="877.0" y="675.0" width="6.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="880.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (133 samples, 0.44%)</title><rect x="883.8" y="675.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (133 samples, 0.44%)</title><rect x="883.8" y="659.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (133 samples, 0.44%)</title><rect x="883.8" y="643.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="886.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.forwardRequest (804 samples, 2.66%)</title><rect x="889.0" y="707.0" width="31.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.0" y="718.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (532 samples, 1.76%)</title><rect x="889.0" y="691.0" width="20.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (147 samples, 0.49%)</title><rect x="889.0" y="675.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$67/253098529.get$Lambda (147 samples, 0.49%)</title><rect x="889.0" y="659.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.0" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$67 (147 samples, 0.49%)</title><rect x="889.0" y="643.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="892.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1924582348.invoke (385 samples, 1.27%)</title><rect x="894.8" y="675.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (385 samples, 1.27%)</title><rect x="894.8" y="659.0" width="15.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (98 samples, 0.32%)</title><rect x="894.8" y="643.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.32%)</title><rect x="894.8" y="627.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="897.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (287 samples, 0.95%)</title><rect x="898.6" y="643.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (287 samples, 0.95%)</title><rect x="898.6" y="627.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.6" y="638.0"></text>
</g>
<g>
<title>byte[] (287 samples, 0.95%)</title><rect x="898.6" y="611.0" width="11.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="901.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (272 samples, 0.90%)</title><rect x="909.8" y="691.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="912.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (271 samples, 0.90%)</title><rect x="909.8" y="675.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (159 samples, 0.53%)</title><rect x="909.8" y="659.0" width="6.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="912.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (112 samples, 0.37%)</title><rect x="916.0" y="659.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (112 samples, 0.37%)</title><rect x="916.0" y="643.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (112 samples, 0.37%)</title><rect x="916.0" y="627.0" width="4.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="919.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (566 samples, 1.87%)</title><rect x="920.4" y="739.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.4" y="750.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (566 samples, 1.87%)</title><rect x="920.4" y="723.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.4" y="734.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (566 samples, 1.87%)</title><rect x="920.4" y="707.0" width="22.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.4" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String (235 samples, 0.78%)</title><rect x="920.4" y="691.0" width="9.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="923.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (331 samples, 1.09%)</title><rect x="929.6" y="691.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.6" y="702.0"></text>
</g>
<g>
<title>byte[] (331 samples, 1.09%)</title><rect x="929.6" y="675.0" width="12.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="932.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,522 samples, 8.34%)</title><rect x="942.5" y="771.0" width="98.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.5" y="782.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Request (413 samples, 1.37%)</title><rect x="942.5" y="755.0" width="16.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="945.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (821 samples, 2.72%)</title><rect x="958.6" y="755.0" width="32.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.6" y="766.0">on..</text>
</g>
<g>
<title>java.lang.String[] (821 samples, 2.72%)</title><rect x="958.6" y="739.0" width="32.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="961.6" y="750.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,288 samples, 4.26%)</title><rect x="990.7" y="755.0" width="50.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.7" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,288 samples, 4.26%)</title><rect x="990.7" y="739.0" width="50.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.7" y="750.0">one/n..</text>
</g>
<g>
<title>char[] (646 samples, 2.14%)</title><rect x="990.7" y="723.0" width="25.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="993.7" y="734.0">c..</text>
</g>
<g>
<title>java.lang.String (230 samples, 0.76%)</title><rect x="1015.9" y="723.0" width="9.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1018.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (412 samples, 1.36%)</title><rect x="1024.9" y="723.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (412 samples, 1.36%)</title><rect x="1024.9" y="707.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (412 samples, 1.36%)</title><rect x="1024.9" y="691.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.9" y="702.0"></text>
</g>
<g>
<title>byte[] (412 samples, 1.36%)</title><rect x="1024.9" y="675.0" width="16.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1027.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (341 samples, 1.13%)</title><rect x="1040.9" y="771.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.9" y="782.0"></text>
</g>
<g>
<title>byte[] (341 samples, 1.13%)</title><rect x="1040.9" y="755.0" width="13.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1043.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (512 samples, 1.69%)</title><rect x="1054.2" y="771.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (512 samples, 1.69%)</title><rect x="1054.2" y="755.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (512 samples, 1.69%)</title><rect x="1054.2" y="739.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.2" y="750.0"></text>
</g>
<g>
<title>java.lang.String (254 samples, 0.84%)</title><rect x="1054.2" y="723.0" width="10.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1057.2" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (258 samples, 0.85%)</title><rect x="1064.2" y="723.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.2" y="734.0"></text>
</g>
<g>
<title>byte[] (258 samples, 0.85%)</title><rect x="1064.2" y="707.0" width="10.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1067.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,966 samples, 9.81%)</title><rect x="1074.2" y="771.0" width="115.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1077.2" y="782.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,966 samples, 9.81%)</title><rect x="1074.2" y="755.0" width="115.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.2" y="766.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (1,408 samples, 4.66%)</title><rect x="1074.2" y="739.0" width="55.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1077.2" y="750.0">char[]</text>
</g>
<g>
<title>java.lang.String (573 samples, 1.90%)</title><rect x="1129.2" y="739.0" width="22.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1132.2" y="750.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (985 samples, 3.26%)</title><rect x="1151.6" y="739.0" width="38.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.6" y="750.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (985 samples, 3.26%)</title><rect x="1151.6" y="723.0" width="38.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.6" y="734.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (985 samples, 3.26%)</title><rect x="1151.6" y="707.0" width="38.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.6" y="718.0">jav..</text>
</g>
<g>
<title>byte[] (985 samples, 3.26%)</title><rect x="1151.6" y="691.0" width="38.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1154.6" y="702.0">byt..</text>
</g>
</g>
</svg>
