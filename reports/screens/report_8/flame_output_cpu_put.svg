<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1397"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1397"> </text>
<g id="frames">
<g>
<title>all (8,570 samples, 100.00%)</title><rect x="10.0" y="1363.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1374.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (10 samples, 0.12%)</title><rect x="10.0" y="1347.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1358.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.07%)</title><rect x="11.4" y="1347.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.4" y="1358.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (21 samples, 0.25%)</title><rect x="12.5" y="1347.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.5" y="1358.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.06%)</title><rect x="12.6" y="1331.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="1342.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (2 samples, 0.02%)</title><rect x="12.6" y="1315.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.6" y="1326.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="13.0" y="1315.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.0" y="1326.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (13 samples, 0.15%)</title><rect x="13.3" y="1331.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.3" y="1342.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (11 samples, 0.13%)</title><rect x="13.6" y="1315.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.6" y="1326.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(Method*, CompLevel, JavaThread*) (8 samples, 0.09%)</title><rect x="13.7" y="1299.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.7" y="1310.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, Method*), Method*, CompLevel, bool) (5 samples, 0.06%)</title><rect x="14.1" y="1283.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.1" y="1294.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::is_method_profiled(Method*) (2 samples, 0.02%)</title><rect x="14.3" y="1267.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.3" y="1278.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::loop_predicate(int, int, CompLevel, Method*) (2 samples, 0.02%)</title><rect x="14.5" y="1267.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.5" y="1278.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (2 samples, 0.02%)</title><rect x="14.8" y="1299.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.8" y="1310.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (2 samples, 0.02%)</title><rect x="14.8" y="1283.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.8" y="1294.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (2 samples, 0.02%)</title><rect x="14.8" y="1267.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.8" y="1278.0"></text>
</g>
<g>
<title>Method::load_signature_classes(methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="14.8" y="1251.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.8" y="1262.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (2 samples, 0.02%)</title><rect x="14.8" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.8" y="1246.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (2 samples, 0.02%)</title><rect x="14.8" y="1219.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.8" y="1230.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="15.1" y="1331.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.1" y="1342.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.02%)</title><rect x="15.1" y="1315.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.1" y="1326.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (17 samples, 0.20%)</title><rect x="15.4" y="1347.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.4" y="1358.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (17 samples, 0.20%)</title><rect x="15.4" y="1331.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.4" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (17 samples, 0.20%)</title><rect x="15.4" y="1315.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.4" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (14 samples, 0.16%)</title><rect x="15.4" y="1299.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.4" y="1310.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="17.4" y="1299.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.4" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="17.4" y="1283.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.4" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="17.4" y="1267.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.4" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.16%)</title><rect x="17.7" y="1347.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.7" y="1358.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (14 samples, 0.16%)</title><rect x="17.7" y="1331.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="20.7" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (12 samples, 0.14%)</title><rect x="17.8" y="1315.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.8" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.06%)</title><rect x="18.3" y="1299.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.3" y="1310.0"></text>
</g>
<g>
<title>[no_Java_frame] (9 samples, 0.11%)</title><rect x="19.6" y="1347.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="22.6" y="1358.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.07%)</title><rect x="20.9" y="1347.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.9" y="1358.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (5 samples, 0.06%)</title><rect x="21.0" y="1331.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.0" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (5 samples, 0.06%)</title><rect x="21.0" y="1315.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.44%)</title><rect x="21.7" y="1347.0" width="5.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="24.7" y="1358.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (17 samples, 0.20%)</title><rect x="21.7" y="1331.0" width="2.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="24.7" y="1342.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="24.0" y="1331.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="27.0" y="1342.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="24.0" y="1315.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="27.0" y="1326.0"></text>
</g>
<g>
<title>open64 (5 samples, 0.06%)</title><rect x="24.9" y="1331.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="27.9" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="24.9" y="1315.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.9" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="24.9" y="1299.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="27.9" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_openat (5 samples, 0.06%)</title><rect x="24.9" y="1283.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.9" y="1294.0"></text>
</g>
<g>
<title>do_sys_open (5 samples, 0.06%)</title><rect x="24.9" y="1267.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.9" y="1278.0"></text>
</g>
<g>
<title>do_filp_open (5 samples, 0.06%)</title><rect x="24.9" y="1251.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.9" y="1262.0"></text>
</g>
<g>
<title>path_openat (5 samples, 0.06%)</title><rect x="24.9" y="1235.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.9" y="1246.0"></text>
</g>
<g>
<title>do_last (2 samples, 0.02%)</title><rect x="24.9" y="1219.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.9" y="1230.0"></text>
</g>
<g>
<title>vfs_open (2 samples, 0.02%)</title><rect x="24.9" y="1203.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.9" y="1214.0"></text>
</g>
<g>
<title>do_dentry_open (2 samples, 0.02%)</title><rect x="24.9" y="1187.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.9" y="1198.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (2 samples, 0.02%)</title><rect x="25.1" y="1219.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.1" y="1230.0"></text>
</g>
<g>
<title>inode_permission (2 samples, 0.02%)</title><rect x="25.1" y="1203.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.1" y="1214.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (7 samples, 0.08%)</title><rect x="25.6" y="1331.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="28.6" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="25.7" y="1315.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="28.7" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="25.7" y="1299.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.7" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.06%)</title><rect x="25.8" y="1283.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.8" y="1294.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.06%)</title><rect x="25.8" y="1267.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="28.8" y="1278.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.05%)</title><rect x="25.8" y="1251.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="28.8" y="1262.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.05%)</title><rect x="25.8" y="1235.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="28.8" y="1246.0"></text>
</g>
<g>
<title>read (3 samples, 0.04%)</title><rect x="26.5" y="1331.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="29.5" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="26.5" y="1315.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.5" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="26.5" y="1299.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.5" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.02%)</title><rect x="26.7" y="1283.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.7" y="1294.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.02%)</title><rect x="26.7" y="1267.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="29.7" y="1278.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.02%)</title><rect x="26.7" y="1251.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.7" y="1262.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="26.7" y="1235.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.7" y="1246.0"></text>
</g>
<g>
<title>kernfs_fop_read (2 samples, 0.02%)</title><rect x="26.7" y="1219.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="29.7" y="1230.0"></text>
</g>
<g>
<title>seq_read (2 samples, 0.02%)</title><rect x="26.7" y="1203.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="29.7" y="1214.0"></text>
</g>
<g>
<title>kernfs_seq_show (2 samples, 0.02%)</title><rect x="26.7" y="1187.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.7" y="1198.0"></text>
</g>
<g>
<title>cgroup_seqfile_show (2 samples, 0.02%)</title><rect x="26.7" y="1171.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="29.7" y="1182.0"></text>
</g>
<g>
<title>memcg_stat_show (2 samples, 0.02%)</title><rect x="26.7" y="1155.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.7" y="1166.0"></text>
</g>
<g>
<title>seq_printf (2 samples, 0.02%)</title><rect x="26.7" y="1139.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.7" y="1150.0"></text>
</g>
<g>
<title>[unknown_Java] (84 samples, 0.98%)</title><rect x="26.9" y="1347.0" width="11.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="29.9" y="1358.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (3 samples, 0.04%)</title><rect x="26.9" y="1331.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.9" y="1342.0"></text>
</g>
<g>
<title>Interpreter (18 samples, 0.21%)</title><rect x="27.6" y="1331.0" width="2.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="30.6" y="1342.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (12 samples, 0.14%)</title><rect x="30.1" y="1331.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="33.1" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.02%)</title><rect x="30.4" y="1315.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.4" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (2 samples, 0.02%)</title><rect x="30.7" y="1315.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="33.7" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (2 samples, 0.02%)</title><rect x="31.1" y="1315.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.1" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="31.3" y="1315.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="34.3" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (2 samples, 0.02%)</title><rect x="31.3" y="1299.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="34.3" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.28%)</title><rect x="31.9" y="1331.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="34.9" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.25%)</title><rect x="32.3" y="1315.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="35.3" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.25%)</title><rect x="32.3" y="1299.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.3" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.21%)</title><rect x="32.6" y="1283.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.6" y="1294.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.19%)</title><rect x="32.9" y="1267.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="35.9" y="1278.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.18%)</title><rect x="33.0" y="1251.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.0" y="1262.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.14%)</title><rect x="33.4" y="1235.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="36.4" y="1246.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.14%)</title><rect x="33.4" y="1219.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="36.4" y="1230.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.14%)</title><rect x="33.4" y="1203.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.4" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.09%)</title><rect x="35.2" y="1331.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="38.2" y="1342.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.07%)</title><rect x="35.5" y="1315.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="38.5" y="1326.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.07%)</title><rect x="35.5" y="1299.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="38.5" y="1310.0"></text>
</g>
<g>
<title>monitorexit_nofpu Runtime1 stub (2 samples, 0.02%)</title><rect x="36.6" y="1331.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="39.6" y="1342.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (12 samples, 0.14%)</title><rect x="36.8" y="1331.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="39.8" y="1342.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="38.6" y="1347.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="41.6" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="38.6" y="1331.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="41.6" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="38.6" y="1315.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.6" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.04%)</title><rect x="38.6" y="1299.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="41.6" y="1310.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="38.6" y="1283.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="41.6" y="1294.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="38.6" y="1267.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="41.6" y="1278.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="38.6" y="1251.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="41.6" y="1262.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="38.6" y="1235.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="41.6" y="1246.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="38.6" y="1219.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="41.6" y="1230.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (2 samples, 0.02%)</title><rect x="39.6" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,962 samples, 57.90%)</title><rect x="40.2" y="1347.0" width="683.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.2" y="1358.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (2,321 samples, 27.08%)</title><rect x="40.2" y="1331.0" width="319.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.2" y="1342.0">io/netty/util/concurrent/FastThreadLocalRun..</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (2,321 samples, 27.08%)</title><rect x="40.2" y="1315.0" width="319.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.2" y="1326.0">io/netty/util/internal/ThreadExecutorMap$2...</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (2,320 samples, 27.07%)</title><rect x="40.3" y="1299.0" width="319.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.3" y="1310.0">io/netty/util/concurrent/SingleThreadEventE..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (2,320 samples, 27.07%)</title><rect x="40.3" y="1283.0" width="319.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.3" y="1294.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.04%)</title><rect x="48.1" y="1267.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.1" y="1278.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultSelectStrategy.calculateStrategy (2 samples, 0.02%)</title><rect x="48.6" y="1267.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.6" y="1278.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.hasTasks (9 samples, 0.11%)</title><rect x="48.8" y="1267.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.8" y="1278.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.hasTasks (3 samples, 0.04%)</title><rect x="49.7" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.7" y="1262.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (1,400 samples, 16.34%)</title><rect x="50.1" y="1267.0" width="192.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.1" y="1278.0">io/netty/channel/nio/NioE..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (1,398 samples, 16.31%)</title><rect x="50.3" y="1251.0" width="192.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.3" y="1262.0">io/netty/channel/nio/NioE..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (1,396 samples, 16.29%)</title><rect x="50.3" y="1235.0" width="192.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.3" y="1246.0">io/netty/channel/nio/NioE..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (1,379 samples, 16.09%)</title><rect x="50.5" y="1219.0" width="189.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.5" y="1230.0">io/netty/channel/nio/Abst..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (1,058 samples, 12.35%)</title><rect x="52.4" y="1203.0" width="145.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.4" y="1214.0">io/netty/channel/D..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,057 samples, 12.33%)</title><rect x="52.5" y="1187.0" width="145.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.5" y="1198.0">io/netty/channel/A..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,048 samples, 12.23%)</title><rect x="52.8" y="1171.0" width="144.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.8" y="1182.0">io/netty/channel/A..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (1,047 samples, 12.22%)</title><rect x="53.0" y="1155.0" width="144.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.0" y="1166.0">io/netty/channel/D..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1,045 samples, 12.19%)</title><rect x="53.2" y="1139.0" width="143.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.2" y="1150.0">io/netty/channel/A..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,043 samples, 12.17%)</title><rect x="53.2" y="1123.0" width="143.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.2" y="1134.0">io/netty/channel/A..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,042 samples, 12.16%)</title><rect x="53.2" y="1107.0" width="143.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.2" y="1118.0">io/netty/channel/A..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (1,040 samples, 12.14%)</title><rect x="53.5" y="1091.0" width="143.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.5" y="1102.0">io/netty/handler/c..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.02%)</title><rect x="55.4" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.4" y="1086.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder$1.cumulate (7 samples, 0.08%)</title><rect x="56.0" y="1075.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.0" y="1086.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (4 samples, 0.05%)</title><rect x="56.3" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.3" y="1070.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (3 samples, 0.04%)</title><rect x="56.3" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.3" y="1054.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (3 samples, 0.04%)</title><rect x="56.3" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.3" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.capacity (3 samples, 0.04%)</title><rect x="56.3" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.reallocate (2 samples, 0.02%)</title><rect x="56.4" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.4" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (217 samples, 2.53%)</title><rect x="57.0" y="1075.0" width="29.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.0" y="1086.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.isRemoved (2 samples, 0.02%)</title><rect x="57.4" y="1059.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.4" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (134 samples, 1.56%)</title><rect x="57.6" y="1059.0" width="18.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.6" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.decode (134 samples, 1.56%)</title><rect x="57.6" y="1043.0" width="18.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.6" y="1054.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readRetainedSlice (12 samples, 0.14%)</title><rect x="58.6" y="1027.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.6" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes (2 samples, 0.02%)</title><rect x="58.9" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.9" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (2 samples, 0.02%)</title><rect x="58.9" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.02%)</title><rect x="58.9" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.9" y="990.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="58.9" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.9" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.retainedSlice (7 samples, 0.08%)</title><rect x="59.3" y="1011.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledSlicedByteBuf.newInstance (6 samples, 0.07%)</title><rect x="59.4" y="995.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledSlicedByteBuf.newInstance0 (6 samples, 0.07%)</title><rect x="59.4" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.4" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractPooledDerivedByteBuf.init (2 samples, 0.02%)</title><rect x="59.6" y="963.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.6" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (3 samples, 0.04%)</title><rect x="59.8" y="963.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.8" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpContent.&lt;init&gt; (2 samples, 0.02%)</title><rect x="60.4" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.4" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultLastHttpContent.&lt;init&gt; (10 samples, 0.12%)</title><rect x="60.7" y="1027.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.7" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpContent.&lt;init&gt; (3 samples, 0.04%)</title><rect x="60.7" y="1011.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.7" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpObject.&lt;init&gt; (2 samples, 0.02%)</title><rect x="60.7" y="995.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.7" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultLastHttpContent$TrailingHttpHeaders.&lt;init&gt; (7 samples, 0.08%)</title><rect x="61.1" y="1011.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.1" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (7 samples, 0.08%)</title><rect x="61.1" y="995.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (4 samples, 0.05%)</title><rect x="61.2" y="979.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.2" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (3 samples, 0.04%)</title><rect x="61.4" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.4" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="61.5" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.5" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$LineParser.parse (6 samples, 0.07%)</title><rect x="62.0" y="1027.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.0" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (6 samples, 0.07%)</title><rect x="62.0" y="1011.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.0" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByte (3 samples, 0.04%)</title><rect x="62.2" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.2" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByteAsc0 (2 samples, 0.02%)</title><rect x="62.3" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.3" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (76 samples, 0.89%)</title><rect x="62.9" y="1027.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.9" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (18 samples, 0.21%)</title><rect x="63.8" y="1011.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.8" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (16 samples, 0.19%)</title><rect x="64.1" y="995.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (12 samples, 0.14%)</title><rect x="64.2" y="979.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.2" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (4 samples, 0.05%)</title><rect x="64.4" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.4" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (4 samples, 0.05%)</title><rect x="64.4" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="958.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (7 samples, 0.08%)</title><rect x="64.9" y="963.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.9" y="974.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (7 samples, 0.08%)</title><rect x="64.9" y="947.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.9" y="958.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (7 samples, 0.08%)</title><rect x="64.9" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.9" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (7 samples, 0.08%)</title><rect x="64.9" y="915.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.9" y="926.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiSanitizeShort (7 samples, 0.08%)</title><rect x="64.9" y="899.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.08%)</title><rect x="64.9" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.9" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (3 samples, 0.04%)</title><rect x="65.9" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.9" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (3 samples, 0.04%)</title><rect x="65.9" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.9" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.getAll (9 samples, 0.11%)</title><rect x="66.3" y="1011.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAllAsString (6 samples, 0.07%)</title><rect x="66.7" y="995.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.7" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.getAll (6 samples, 0.07%)</title><rect x="66.7" y="979.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.7" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (3 samples, 0.04%)</title><rect x="67.1" y="963.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.1" y="974.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (2 samples, 0.02%)</title><rect x="67.3" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.3" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (19 samples, 0.22%)</title><rect x="67.6" y="1011.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.6" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByte (13 samples, 0.15%)</title><rect x="67.8" y="995.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.8" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByteAsc0 (11 samples, 0.13%)</title><rect x="68.0" y="979.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.0" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf._getByte (2 samples, 0.02%)</title><rect x="68.8" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.8" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.getByte (2 samples, 0.02%)</title><rect x="68.8" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.8" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getByte (2 samples, 0.02%)</title><rect x="68.8" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.8" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.getByte (2 samples, 0.02%)</title><rect x="68.8" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.8" y="926.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.process (3 samples, 0.04%)</title><rect x="69.1" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.1" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.forEachByte (2 samples, 0.02%)</title><rect x="69.6" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (2 samples, 0.02%)</title><rect x="69.6" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.6" y="990.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2 samples, 0.02%)</title><rect x="69.6" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.6" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2 samples, 0.02%)</title><rect x="69.6" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.6" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.splitHeader (10 samples, 0.12%)</title><rect x="70.3" y="1011.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.subStringUnsafe (8 samples, 0.09%)</title><rect x="70.6" y="995.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isTransferEncodingChunked (4 samples, 0.05%)</title><rect x="71.7" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.7" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeaders.containsValue (2 samples, 0.02%)</title><rect x="72.0" y="995.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (4 samples, 0.05%)</title><rect x="72.4" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (3 samples, 0.04%)</title><rect x="72.5" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="72.5" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.5" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.02%)</title><rect x="72.5" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (2 samples, 0.02%)</title><rect x="72.5" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.5" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.02%)</title><rect x="73.1" y="1011.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.1" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$1.size (2 samples, 0.02%)</title><rect x="73.1" y="995.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.resetNow (5 samples, 0.06%)</title><rect x="73.3" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.3" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.splitInitialLine (11 samples, 0.13%)</title><rect x="74.0" y="1027.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.0" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.findSPLenient (3 samples, 0.04%)</title><rect x="74.4" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.4" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.subStringUnsafe (5 samples, 0.06%)</title><rect x="74.9" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="75.0" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="75.1" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.02%)</title><rect x="75.1" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.1" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpRequestDecoder.createMessage (4 samples, 0.05%)</title><rect x="75.5" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.5" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMethod.valueOf (2 samples, 0.02%)</title><rect x="75.7" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.7" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (77 samples, 0.90%)</title><rect x="76.1" y="1059.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.1" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (77 samples, 0.90%)</title><rect x="76.1" y="1043.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.1" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (76 samples, 0.89%)</title><rect x="76.2" y="1027.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.2" y="1038.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (74 samples, 0.86%)</title><rect x="76.4" y="1011.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.4" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (72 samples, 0.84%)</title><rect x="76.4" y="995.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.4" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (71 samples, 0.83%)</title><rect x="76.5" y="979.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.5" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (70 samples, 0.82%)</title><rect x="76.6" y="963.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.6" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (68 samples, 0.79%)</title><rect x="76.9" y="947.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.9" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (66 samples, 0.77%)</title><rect x="77.2" y="931.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.2" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (64 samples, 0.75%)</title><rect x="77.2" y="915.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.2" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (64 samples, 0.75%)</title><rect x="77.2" y="899.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.2" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (63 samples, 0.74%)</title><rect x="77.3" y="883.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.3" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (2 samples, 0.02%)</title><rect x="77.6" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.6" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (2 samples, 0.02%)</title><rect x="77.6" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.6" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.acceptInboundMessage (8 samples, 0.09%)</title><rect x="78.0" y="867.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.0" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.acceptInboundMessage (4 samples, 0.05%)</title><rect x="78.0" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.0" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.isAggregated (4 samples, 0.05%)</title><rect x="78.6" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.6" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.isAggregated (3 samples, 0.04%)</title><rect x="78.7" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.7" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (50 samples, 0.58%)</title><rect x="79.1" y="867.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.1" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (12 samples, 0.14%)</title><rect x="79.5" y="851.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.5" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (10 samples, 0.12%)</title><rect x="79.8" y="835.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (5 samples, 0.06%)</title><rect x="79.9" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.9" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (4 samples, 0.05%)</title><rect x="80.1" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.1" y="814.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (4 samples, 0.05%)</title><rect x="80.1" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (4 samples, 0.05%)</title><rect x="80.1" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.1" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="80.1" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="80.1" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="80.1" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="80.1" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.1" y="718.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="80.1" y="691.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="83.1" y="702.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="80.1" y="675.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="83.1" y="686.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="80.1" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="83.1" y="670.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="80.1" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="83.1" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (4 samples, 0.05%)</title><rect x="80.6" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.6" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (3 samples, 0.04%)</title><rect x="80.8" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.8" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (9 samples, 0.11%)</title><rect x="81.6" y="851.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.6" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (6 samples, 0.07%)</title><rect x="82.0" y="835.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.0" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.setTransferEncodingChunked (4 samples, 0.05%)</title><rect x="82.3" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.3" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.getAll (3 samples, 0.04%)</title><rect x="82.3" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.3" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.isContentLengthInvalid (7 samples, 0.08%)</title><rect x="82.8" y="851.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.8" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.isContentLengthInvalid (6 samples, 0.07%)</title><rect x="83.0" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.0" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.getContentLength (5 samples, 0.06%)</title><rect x="83.1" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (3 samples, 0.04%)</title><rect x="83.4" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.02%)</title><rect x="83.5" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.5" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.isStartMessage (2 samples, 0.02%)</title><rect x="83.8" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.8" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.newContinueResponse (14 samples, 0.16%)</title><rect x="84.1" y="851.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.1" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.newContinueResponse (11 samples, 0.13%)</title><rect x="84.5" y="835.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.5" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.continueResponse (11 samples, 0.13%)</title><rect x="84.5" y="819.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.5" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.is100ContinueExpected (4 samples, 0.05%)</title><rect x="84.5" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.5" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (3 samples, 0.04%)</title><rect x="84.5" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.5" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.contains (2 samples, 0.02%)</title><rect x="84.6" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.6" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isUnsupportedExpectation (7 samples, 0.08%)</title><rect x="85.0" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.0" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (3 samples, 0.04%)</title><rect x="85.0" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.0" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (2 samples, 0.02%)</title><rect x="85.2" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.2" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isExpectHeaderValid (4 samples, 0.05%)</title><rect x="85.5" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.5" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.compareTo (3 samples, 0.04%)</title><rect x="85.6" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (2 samples, 0.02%)</title><rect x="86.3" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.3" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (2 samples, 0.02%)</title><rect x="86.3" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.3" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (792 samples, 9.24%)</title><rect x="86.8" y="1075.0" width="109.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.8" y="1086.0">io/netty/hand..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (792 samples, 9.24%)</title><rect x="86.8" y="1059.0" width="109.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.8" y="1070.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (792 samples, 9.24%)</title><rect x="86.8" y="1043.0" width="109.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.8" y="1054.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (787 samples, 9.18%)</title><rect x="86.8" y="1027.0" width="108.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.8" y="1038.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (786 samples, 9.17%)</title><rect x="87.0" y="1011.0" width="108.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.0" y="1022.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (786 samples, 9.17%)</title><rect x="87.0" y="995.0" width="108.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.0" y="1006.0">io/netty/hand..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (784 samples, 9.15%)</title><rect x="87.2" y="979.0" width="108.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.2" y="990.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (783 samples, 9.14%)</title><rect x="87.4" y="963.0" width="107.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.4" y="974.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (783 samples, 9.14%)</title><rect x="87.4" y="947.0" width="107.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.4" y="958.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (779 samples, 9.09%)</title><rect x="87.4" y="931.0" width="107.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.4" y="942.0">io/netty/chan..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (777 samples, 9.07%)</title><rect x="87.4" y="915.0" width="107.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.4" y="926.0">io/netty/hand..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (671 samples, 7.83%)</title><rect x="87.7" y="899.0" width="92.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.7" y="910.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (671 samples, 7.83%)</title><rect x="87.7" y="883.0" width="92.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.7" y="894.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (664 samples, 7.75%)</title><rect x="87.7" y="867.0" width="91.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.7" y="878.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (664 samples, 7.75%)</title><rect x="87.7" y="851.0" width="91.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.7" y="862.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.acceptInboundMessage (3 samples, 0.04%)</title><rect x="87.7" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.7" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.release (3 samples, 0.04%)</title><rect x="88.1" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.1" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (29 samples, 0.34%)</title><rect x="88.5" y="835.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.5" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.release (29 samples, 0.34%)</title><rect x="88.5" y="819.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.5" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (29 samples, 0.34%)</title><rect x="88.5" y="803.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.5" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (24 samples, 0.28%)</title><rect x="88.5" y="787.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.5" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (24 samples, 0.28%)</title><rect x="88.5" y="771.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.5" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (23 samples, 0.27%)</title><rect x="88.6" y="755.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.6" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (23 samples, 0.27%)</title><rect x="88.6" y="739.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.6" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (23 samples, 0.27%)</title><rect x="88.6" y="723.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.6" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractPooledDerivedByteBuf.deallocate (22 samples, 0.26%)</title><rect x="88.8" y="707.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.8" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (18 samples, 0.21%)</title><rect x="88.9" y="691.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.9" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (16 samples, 0.19%)</title><rect x="88.9" y="675.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.9" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (15 samples, 0.18%)</title><rect x="89.0" y="659.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.0" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (13 samples, 0.15%)</title><rect x="89.2" y="643.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.2" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (11 samples, 0.13%)</title><rect x="89.4" y="627.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.4" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (9 samples, 0.11%)</title><rect x="89.4" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.4" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (5 samples, 0.06%)</title><rect x="89.6" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.6" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (3 samples, 0.04%)</title><rect x="90.3" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.3" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (2 samples, 0.02%)</title><rect x="91.1" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.1" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (2 samples, 0.02%)</title><rect x="91.1" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.1" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (2 samples, 0.02%)</title><rect x="91.4" y="691.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.4" y="702.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2 samples, 0.02%)</title><rect x="91.4" y="675.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.4" y="686.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2 samples, 0.02%)</title><rect x="91.4" y="659.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.4" y="670.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="91.4" y="643.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="91.4" y="627.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="91.4" y="611.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="91.4" y="595.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.4" y="606.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="91.4" y="579.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="94.4" y="590.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="91.4" y="563.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="94.4" y="574.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="91.4" y="547.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="94.4" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="91.4" y="531.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="94.4" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (5 samples, 0.06%)</title><rect x="91.8" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.8" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (3 samples, 0.04%)</title><rect x="91.9" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (629 samples, 7.34%)</title><rect x="92.5" y="835.0" width="86.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.5" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (629 samples, 7.34%)</title><rect x="92.5" y="819.0" width="86.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.5" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.uri (2 samples, 0.02%)</title><rect x="92.5" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (9 samples, 0.11%)</title><rect x="92.9" y="803.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.06%)</title><rect x="93.4" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.entityHandler (616 samples, 7.19%)</title><rect x="94.1" y="803.0" width="84.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.1" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.method (2 samples, 0.02%)</title><rect x="95.1" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.1" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="95.4" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.4" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="95.4" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.4" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="95.4" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.4" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="95.4" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.4" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="95.4" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.4" y="734.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectUtil.checkPositive (3 samples, 0.04%)</title><rect x="95.4" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.4" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.parameters (36 samples, 0.42%)</title><rect x="95.8" y="787.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.8" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.decodeParams (34 samples, 0.40%)</title><rect x="95.9" y="771.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.9" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.addParam (33 samples, 0.39%)</title><rect x="95.9" y="755.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.9" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.decodeComponent (7 samples, 0.08%)</title><rect x="95.9" y="739.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.07%)</title><rect x="96.1" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (2 samples, 0.02%)</title><rect x="96.1" y="707.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="96.3" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="96.3" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (15 samples, 0.18%)</title><rect x="96.9" y="739.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.16%)</title><rect x="97.0" y="723.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.0" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.02%)</title><rect x="97.6" y="707.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.6" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.afterNodeInsertion (5 samples, 0.06%)</title><rect x="97.8" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="98.0" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.0" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.removeEldestEntry (2 samples, 0.02%)</title><rect x="98.1" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.1" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (3 samples, 0.04%)</title><rect x="98.5" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.5" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (8 samples, 0.09%)</title><rect x="99.1" y="739.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.07%)</title><rect x="99.1" y="723.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.02%)</title><rect x="99.9" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="99.9" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.9" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="100.2" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="103.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (3 samples, 0.04%)</title><rect x="100.7" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="100.9" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.putRequest (541 samples, 6.31%)</title><rect x="101.2" y="787.0" width="74.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.2" y="798.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.multiPut (539 samples, 6.29%)</title><rect x="101.4" y="771.0" width="74.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.4" y="782.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.05%)</title><rect x="102.4" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.05%)</title><rect x="102.4" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.05%)</title><rect x="102.4" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="102.9" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="102.9" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="103.2" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.2" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="103.6" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.6" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonSet.iterator (2 samples, 0.02%)</title><rect x="104.0" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.respond (36 samples, 0.42%)</title><rect x="104.7" y="755.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5 samples, 0.06%)</title><rect x="105.0" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 0.06%)</title><rect x="105.0" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.02%)</title><rect x="105.4" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.atLeastAsync (19 samples, 0.22%)</title><rect x="105.7" y="739.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/833410809.linkToTargetMethod (2 samples, 0.02%)</title><rect x="105.7" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1234770752.invokeStatic (2 samples, 0.02%)</title><rect x="105.7" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$138/983769881.get$Lambda (2 samples, 0.02%)</title><rect x="105.7" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (15 samples, 0.18%)</title><rect x="106.0" y="723.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.0" y="734.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="106.0" y="707.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="109.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$138/983769881.accept (12 samples, 0.14%)</title><rect x="106.4" y="707.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$atLeastAsync$9 (9 samples, 0.11%)</title><rect x="106.8" y="691.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/822448041.linkToTargetMethod (3 samples, 0.04%)</title><rect x="106.8" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1347077609.invokeStatic (3 samples, 0.04%)</title><rect x="106.8" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$140/326552115.get$Lambda (3 samples, 0.04%)</title><rect x="106.8" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6 samples, 0.07%)</title><rect x="107.2" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.05%)</title><rect x="107.5" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.isForwarded (5 samples, 0.06%)</title><rect x="108.3" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.3" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (5 samples, 0.06%)</title><rect x="108.3" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.3" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (5 samples, 0.06%)</title><rect x="108.3" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.3" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.contains (5 samples, 0.06%)</title><rect x="108.3" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.3" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (4 samples, 0.05%)</title><rect x="108.4" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.4" y="686.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (3 samples, 0.04%)</title><rect x="108.6" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.6" y="670.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (2 samples, 0.02%)</title><rect x="108.7" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.7" y="654.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (2 samples, 0.02%)</title><rect x="108.7" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.7" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (2 samples, 0.02%)</title><rect x="108.7" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.7" y="622.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiSanitizeShort (2 samples, 0.02%)</title><rect x="108.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="108.7" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.respond (5 samples, 0.06%)</title><rect x="109.0" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="109.0" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="109.0" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$145/1327492977.get$Lambda (3 samples, 0.04%)</title><rect x="109.0" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="109.4" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="109.4" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Topology.getReplicas (9 samples, 0.11%)</title><rect x="109.8" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.02%)</title><rect x="110.2" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="110.7" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.02%)</title><rect x="110.7" y="723.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.02%)</title><rect x="110.7" y="707.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.getRequestBody (70 samples, 0.82%)</title><rect x="111.1" y="755.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.1" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readBytes (27 samples, 0.32%)</title><rect x="111.5" y="739.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.5" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readBytes (22 samples, 0.26%)</title><rect x="112.2" y="723.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.2" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes (2 samples, 0.02%)</title><rect x="112.3" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.3" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/DuplicatedByteBuf.getBytes (19 samples, 0.22%)</title><rect x="112.6" y="707.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.6" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.getBytes (17 samples, 0.20%)</title><rect x="112.9" y="691.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.9" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.getBytes (16 samples, 0.19%)</title><rect x="113.0" y="675.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.0" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkDstIndex (3 samples, 0.04%)</title><rect x="113.1" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.1" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (2 samples, 0.02%)</title><rect x="113.3" y="643.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.3" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (2 samples, 0.02%)</title><rect x="113.3" y="627.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.3" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.getBytes (9 samples, 0.11%)</title><rect x="113.7" y="659.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.7" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.getBytes (9 samples, 0.11%)</title><rect x="113.7" y="643.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.7" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (4 samples, 0.05%)</title><rect x="113.7" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.7" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex0 (3 samples, 0.04%)</title><rect x="113.7" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.7" y="622.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (3 samples, 0.04%)</title><rect x="114.5" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.5" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (3 samples, 0.04%)</title><rect x="114.5" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.5" y="622.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.copyMemory (3 samples, 0.04%)</title><rect x="114.5" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.04%)</title><rect x="114.5" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.04%)</title><rect x="114.5" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.04%)</title><rect x="114.5" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.04%)</title><rect x="114.5" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (3 samples, 0.04%)</title><rect x="114.5" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Math.min (2 samples, 0.02%)</title><rect x="114.9" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.9" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.retainedDuplicate (28 samples, 0.33%)</title><rect x="115.3" y="739.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.3" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.duplicate (22 samples, 0.26%)</title><rect x="115.5" y="723.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledDuplicatedByteBuf.&lt;init&gt; (20 samples, 0.23%)</title><rect x="115.7" y="707.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.7" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/DuplicatedByteBuf.&lt;init&gt; (20 samples, 0.23%)</title><rect x="115.7" y="691.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.7" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/DuplicatedByteBuf.&lt;init&gt; (17 samples, 0.20%)</title><rect x="116.2" y="675.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.2" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.setIndex (11 samples, 0.13%)</title><rect x="116.4" y="659.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.4" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.setIndex0 (2 samples, 0.02%)</title><rect x="117.3" y="643.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.3" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndexBounds (2 samples, 0.02%)</title><rect x="117.3" y="627.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.3" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/DuplicatedByteBuf.capacity (3 samples, 0.04%)</title><rect x="117.5" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.5" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.&lt;init&gt; (4 samples, 0.05%)</title><rect x="117.9" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.9" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.&lt;init&gt; (4 samples, 0.05%)</title><rect x="117.9" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.9" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.retain (5 samples, 0.06%)</title><rect x="118.5" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.retain0 (3 samples, 0.04%)</title><rect x="118.8" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.retain (3 samples, 0.04%)</title><rect x="118.8" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.8" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.retain (3 samples, 0.04%)</title><rect x="118.8" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.8" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.retain (3 samples, 0.04%)</title><rect x="118.8" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.8" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.retain (3 samples, 0.04%)</title><rect x="118.8" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.8" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.retain0 (3 samples, 0.04%)</title><rect x="118.8" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd (2 samples, 0.02%)</title><rect x="118.9" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck (2 samples, 0.02%)</title><rect x="118.9" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.9" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.readBytes (2 samples, 0.02%)</title><rect x="119.3" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.3" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (2 samples, 0.02%)</title><rect x="119.3" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.3" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2 samples, 0.02%)</title><rect x="119.3" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.3" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2 samples, 0.02%)</title><rect x="119.3" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.3" y="702.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="119.3" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="119.3" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="119.3" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="119.3" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.3" y="638.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="119.3" y="611.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="122.3" y="622.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="119.3" y="595.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="122.3" y="606.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="119.3" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="122.3" y="590.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="119.3" y="563.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="122.3" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.release (2 samples, 0.02%)</title><rect x="119.6" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.6" y="750.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2 samples, 0.02%)</title><rect x="119.6" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.6" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2 samples, 0.02%)</title><rect x="119.6" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.6" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="119.6" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="119.6" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="119.6" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="119.6" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.6" y="654.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="119.6" y="627.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="122.6" y="638.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="119.6" y="611.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="122.6" y="622.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="119.6" y="595.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="122.6" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.retainedDuplicate (4 samples, 0.05%)</title><rect x="119.9" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.9" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (3 samples, 0.04%)</title><rect x="119.9" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.9" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (3 samples, 0.04%)</title><rect x="119.9" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.9" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (3 samples, 0.04%)</title><rect x="119.9" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.9" y="702.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3 samples, 0.04%)</title><rect x="119.9" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.04%)</title><rect x="119.9" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="119.9" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="119.9" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.9" y="638.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.04%)</title><rect x="119.9" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="122.9" y="622.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.04%)</title><rect x="119.9" y="595.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="122.9" y="606.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.04%)</title><rect x="119.9" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="122.9" y="590.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.04%)</title><rect x="119.9" y="563.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="122.9" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.content (2 samples, 0.02%)</title><rect x="120.4" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.isForwarded (4 samples, 0.05%)</title><rect x="120.7" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.7" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (4 samples, 0.05%)</title><rect x="120.7" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.7" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (4 samples, 0.05%)</title><rect x="120.7" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.7" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.contains (4 samples, 0.05%)</title><rect x="120.7" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.7" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (3 samples, 0.04%)</title><rect x="120.8" y="691.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.putProxyResponse (345 samples, 4.03%)</title><rect x="121.3" y="755.0" width="47.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.3" y="766.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.04%)</title><rect x="122.6" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.02%)</title><rect x="122.8" y="723.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.02%)</title><rect x="122.8" y="707.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (227 samples, 2.65%)</title><rect x="123.2" y="739.0" width="31.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.2" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (226 samples, 2.64%)</title><rect x="123.3" y="723.0" width="31.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.3" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (226 samples, 2.64%)</title><rect x="123.3" y="707.0" width="31.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.3" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (226 samples, 2.64%)</title><rect x="123.3" y="691.0" width="31.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.3" y="702.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="123.6" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="123.6" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (2 samples, 0.02%)</title><rect x="123.9" y="675.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (122 samples, 1.42%)</title><rect x="124.1" y="675.0" width="16.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.1" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (20 samples, 0.23%)</title><rect x="124.4" y="659.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.4" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.07%)</title><rect x="124.7" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.06%)</title><rect x="124.8" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (4 samples, 0.05%)</title><rect x="125.0" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.05%)</title><rect x="125.0" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.05%)</title><rect x="125.0" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.0" y="590.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="125.0" y="563.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="128.0" y="574.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.02%)</title><rect x="125.2" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (12 samples, 0.14%)</title><rect x="125.5" y="643.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.14%)</title><rect x="125.5" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.12%)</title><rect x="125.8" y="611.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.07%)</title><rect x="126.3" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.04%)</title><rect x="126.5" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.04%)</title><rect x="126.5" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.5" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.02%)</title><rect x="126.5" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="126.9" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17 samples, 0.20%)</title><rect x="127.2" y="659.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.19%)</title><rect x="127.2" y="643.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="127.2" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="127.2" y="611.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.2" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.get$Lambda (2 samples, 0.02%)</title><rect x="127.2" y="595.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.2" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (13 samples, 0.15%)</title><rect x="127.4" y="627.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12 samples, 0.14%)</title><rect x="127.6" y="611.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.6" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (12 samples, 0.14%)</title><rect x="127.6" y="595.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.14%)</title><rect x="127.6" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.09%)</title><rect x="127.6" y="563.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (7 samples, 0.08%)</title><rect x="127.7" y="547.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (7 samples, 0.08%)</title><rect x="127.7" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$29/566034357.test (5 samples, 0.06%)</title><rect x="128.0" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (4 samples, 0.05%)</title><rect x="128.1" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.04%)</title><rect x="128.1" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.02%)</title><rect x="128.7" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.02%)</title><rect x="128.7" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (70 samples, 0.82%)</title><rect x="130.1" y="659.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.1" y="670.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (66 samples, 0.77%)</title><rect x="130.6" y="643.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.6" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (62 samples, 0.72%)</title><rect x="131.0" y="627.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.0" y="638.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (25 samples, 0.29%)</title><rect x="131.7" y="611.0" width="3.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.04%)</title><rect x="132.1" y="595.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="135.1" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="132.1" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="135.1" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.04%)</title><rect x="132.7" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="135.7" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.05%)</title><rect x="133.6" y="595.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="136.6" y="606.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="133.6" y="579.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="136.6" y="590.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.08%)</title><rect x="134.2" y="595.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="137.2" y="606.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.05%)</title><rect x="134.6" y="579.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="137.6" y="590.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.04%)</title><rect x="134.7" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="137.7" y="574.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (2 samples, 0.02%)</title><rect x="135.2" y="611.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="138.2" y="622.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.02%)</title><rect x="135.6" y="611.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="138.6" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (25 samples, 0.29%)</title><rect x="136.1" y="611.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.1" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (24 samples, 0.28%)</title><rect x="136.3" y="595.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.06%)</title><rect x="137.5" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.05%)</title><rect x="137.6" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.05%)</title><rect x="137.6" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.6" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="137.9" y="531.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="140.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.05%)</title><rect x="138.2" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (2 samples, 0.02%)</title><rect x="138.2" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="138.5" y="563.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.5" y="574.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (6 samples, 0.07%)</title><rect x="138.7" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.7" y="590.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.02%)</title><rect x="138.7" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.7" y="574.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.05%)</title><rect x="139.0" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.05%)</title><rect x="139.0" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.expectContinue (2 samples, 0.02%)</title><rect x="139.7" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.06%)</title><rect x="140.0" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="140.1" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="140.1" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.02%)</title><rect x="140.7" y="659.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (82 samples, 0.96%)</title><rect x="140.9" y="675.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.9" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.map (5 samples, 0.06%)</title><rect x="142.3" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.3" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.02%)</title><rect x="142.3" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.02%)</title><rect x="142.3" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/1827784972.apply (3 samples, 0.04%)</title><rect x="142.6" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (2 samples, 0.02%)</title><rect x="142.7" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (3 samples, 0.04%)</title><rect x="143.1" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (63 samples, 0.74%)</title><rect x="143.6" y="659.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (61 samples, 0.71%)</title><rect x="143.8" y="643.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (13 samples, 0.15%)</title><rect x="144.4" y="627.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (6 samples, 0.07%)</title><rect x="144.5" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.05%)</title><rect x="144.8" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.8" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.04%)</title><rect x="144.9" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4 samples, 0.05%)</title><rect x="145.6" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.6" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (3 samples, 0.04%)</title><rect x="145.6" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.6" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (3 samples, 0.04%)</title><rect x="145.6" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.6" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.&lt;init&gt; (2 samples, 0.02%)</title><rect x="145.8" y="563.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.8" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (40 samples, 0.47%)</title><rect x="146.2" y="627.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.getModifiers (4 samples, 0.05%)</title><rect x="146.5" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.5" y="622.0"></text>
</g>
<g>
<title>JVM_GetClassModifiers (3 samples, 0.04%)</title><rect x="146.6" y="595.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="149.6" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="146.7" y="579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="149.7" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (20 samples, 0.23%)</title><rect x="147.0" y="611.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.0" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (18 samples, 0.21%)</title><rect x="147.3" y="595.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.3" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (17 samples, 0.20%)</title><rect x="147.4" y="579.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (13 samples, 0.15%)</title><rect x="148.0" y="563.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getClassAccessFlags (8 samples, 0.09%)</title><rect x="148.0" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>JVM_GetClassAccessFlags (5 samples, 0.06%)</title><rect x="148.4" y="531.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="151.4" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="148.7" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (3 samples, 0.04%)</title><rect x="149.1" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (2 samples, 0.02%)</title><rect x="149.2" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyModuleAccess (2 samples, 0.02%)</title><rect x="149.5" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (13 samples, 0.15%)</title><rect x="149.9" y="611.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.9" y="622.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (12 samples, 0.14%)</title><rect x="150.0" y="595.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="153.0" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="150.6" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="153.6" y="590.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (5 samples, 0.06%)</title><rect x="151.0" y="579.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="154.0" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="151.4" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="154.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.02%)</title><rect x="151.7" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.02%)</title><rect x="151.7" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.7" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.02%)</title><rect x="151.7" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (16 samples, 0.19%)</title><rect x="152.2" y="675.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (9 samples, 0.11%)</title><rect x="152.4" y="659.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (2 samples, 0.02%)</title><rect x="152.6" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.06%)</title><rect x="152.9" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.05%)</title><rect x="153.1" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.05%)</title><rect x="153.1" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="153.2" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.02%)</title><rect x="153.3" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.02%)</title><rect x="153.3" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (4 samples, 0.05%)</title><rect x="153.6" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.05%)</title><rect x="153.6" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.05%)</title><rect x="153.6" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="153.7" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="153.7" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.02%)</title><rect x="154.2" y="659.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (23 samples, 0.27%)</title><rect x="154.4" y="739.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (22 samples, 0.26%)</title><rect x="154.6" y="723.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.19%)</title><rect x="155.4" y="707.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.4" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.19%)</title><rect x="155.4" y="691.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="155.5" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="155.5" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.get$Lambda (3 samples, 0.04%)</title><rect x="155.5" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="156.0" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.11%)</title><rect x="156.4" y="675.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (9 samples, 0.11%)</title><rect x="156.4" y="659.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.4" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.11%)</title><rect x="156.4" y="643.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.09%)</title><rect x="156.4" y="627.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.4" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (7 samples, 0.08%)</title><rect x="156.5" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.5" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (7 samples, 0.08%)</title><rect x="156.5" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$28/99347477.test (5 samples, 0.06%)</title><rect x="156.8" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.04%)</title><rect x="157.1" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.1" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.04%)</title><rect x="157.1" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.02%)</title><rect x="157.2" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.02%)</title><rect x="157.2" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.requestBuilder (80 samples, 0.93%)</title><rect x="157.7" y="739.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.13%)</title><rect x="157.7" y="723.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (11 samples, 0.13%)</title><rect x="157.7" y="707.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1923953785.invoke (9 samples, 0.11%)</title><rect x="158.0" y="691.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.11%)</title><rect x="158.0" y="675.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.02%)</title><rect x="158.6" y="659.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.02%)</title><rect x="158.6" y="643.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (2 samples, 0.02%)</title><rect x="158.8" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.8" y="670.0"></text>
</g>
<g>
<title>java/net/URI.create (47 samples, 0.55%)</title><rect x="159.3" y="723.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.3" y="734.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (47 samples, 0.55%)</title><rect x="159.3" y="707.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.3" y="718.0"></text>
</g>
<g>
<title>java/net/URI$Parser.&lt;init&gt; (2 samples, 0.02%)</title><rect x="159.3" y="691.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.3" y="702.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (45 samples, 0.53%)</title><rect x="159.5" y="691.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.5" y="702.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (41 samples, 0.48%)</title><rect x="159.8" y="675.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="686.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.04%)</title><rect x="159.9" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.9" y="670.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="159.9" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.9" y="654.0"></text>
</g>
<g>
<title>java/net/URI.match (2 samples, 0.02%)</title><rect x="160.1" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.1" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (33 samples, 0.39%)</title><rect x="160.4" y="659.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.4" y="670.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (25 samples, 0.29%)</title><rect x="160.8" y="643.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.07%)</title><rect x="161.6" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.6" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (2 samples, 0.02%)</title><rect x="162.4" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (6 samples, 0.07%)</title><rect x="162.8" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.8" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (2 samples, 0.02%)</title><rect x="162.8" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.8" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="163.1" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="163.4" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.4" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="163.8" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="163.9" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="163.9" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="163.9" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.9" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.06%)</title><rect x="164.2" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="164.2" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.2" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="164.9" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="164.9" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="164.9" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="164.9" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.9" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.02%)</title><rect x="165.5" y="675.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="165.5" y="659.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="165.5" y="643.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2 samples, 0.02%)</title><rect x="165.7" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.02%)</title><rect x="165.7" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (17 samples, 0.20%)</title><rect x="166.0" y="723.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (17 samples, 0.20%)</title><rect x="166.0" y="707.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (12 samples, 0.14%)</title><rect x="166.0" y="691.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$28/99347477.test (6 samples, 0.07%)</title><rect x="166.4" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.07%)</title><rect x="166.4" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.4" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.07%)</title><rect x="166.4" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.07%)</title><rect x="166.4" y="627.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.06%)</title><rect x="166.6" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.06%)</title><rect x="166.6" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="166.7" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="167.0" y="563.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (2 samples, 0.02%)</title><rect x="167.4" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (5 samples, 0.06%)</title><rect x="167.7" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.7" y="702.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.02%)</title><rect x="168.1" y="675.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.02%)</title><rect x="168.1" y="659.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.04%)</title><rect x="168.3" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.04%)</title><rect x="168.3" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.04%)</title><rect x="168.3" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.putTimestampResponse (49 samples, 0.57%)</title><rect x="168.8" y="755.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="168.8" y="739.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="168.8" y="723.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$102/2089788199.get$Lambda (2 samples, 0.02%)</title><rect x="168.8" y="707.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (47 samples, 0.55%)</title><rect x="169.0" y="739.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (45 samples, 0.53%)</title><rect x="169.2" y="723.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (43 samples, 0.50%)</title><rect x="169.4" y="707.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (39 samples, 0.46%)</title><rect x="170.0" y="691.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.07%)</title><rect x="170.1" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.04%)</title><rect x="170.5" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.04%)</title><rect x="170.5" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.04%)</title><rect x="171.0" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="171.0" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (29 samples, 0.34%)</title><rect x="171.4" y="675.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.34%)</title><rect x="171.4" y="659.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.34%)</title><rect x="171.4" y="643.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.34%)</title><rect x="171.4" y="627.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.34%)</title><rect x="171.4" y="611.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.05%)</title><rect x="171.6" y="595.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="174.6" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 0.27%)</title><rect x="172.2" y="595.0" width="3.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="175.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.25%)</title><rect x="172.5" y="579.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.5" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.25%)</title><rect x="172.5" y="563.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="175.5" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.25%)</title><rect x="172.5" y="547.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.5" y="558.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.25%)</title><rect x="172.5" y="531.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="175.5" y="542.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.25%)</title><rect x="172.5" y="515.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="175.5" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="172.7" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="175.7" y="510.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.20%)</title><rect x="173.0" y="499.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.0" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.20%)</title><rect x="173.0" y="483.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.0" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.20%)</title><rect x="173.0" y="467.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="176.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.replicaNettyFactor (24 samples, 0.28%)</title><rect x="175.6" y="787.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.parser (23 samples, 0.27%)</title><rect x="175.8" y="771.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.replace (5 samples, 0.06%)</title><rect x="176.2" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="176.6" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="176.6" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="176.6" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.split (14 samples, 0.16%)</title><rect x="176.9" y="755.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.split (14 samples, 0.16%)</title><rect x="176.9" y="739.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.toArray (5 samples, 0.06%)</title><rect x="177.8" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.8" y="734.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (2 samples, 0.02%)</title><rect x="178.1" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="181.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (2 samples, 0.02%)</title><rect x="178.5" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.5" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="178.5" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.5" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (7 samples, 0.08%)</title><rect x="179.1" y="867.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.1" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (3 samples, 0.04%)</title><rect x="179.2" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.2" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.touch (2 samples, 0.02%)</title><rect x="179.4" y="835.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.4" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.touch (2 samples, 0.02%)</title><rect x="179.4" y="819.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.4" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.touch (2 samples, 0.02%)</title><rect x="179.4" y="803.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.4" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.touch (2 samples, 0.02%)</title><rect x="179.4" y="787.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.4" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.touch (2 samples, 0.02%)</title><rect x="179.4" y="771.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.4" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2 samples, 0.02%)</title><rect x="179.4" y="755.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.4" y="766.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2 samples, 0.02%)</title><rect x="179.4" y="739.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.4" y="750.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="179.4" y="723.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="179.4" y="707.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="179.4" y="691.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="179.4" y="675.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.4" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="179.4" y="659.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="182.4" y="670.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="179.4" y="643.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="182.4" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="179.4" y="627.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="182.4" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="179.4" y="611.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="182.4" y="622.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="179.4" y="595.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="182.4" y="606.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="179.6" y="851.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="182.6" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.recycle (2 samples, 0.02%)</title><rect x="180.3" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.3" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.size (4 samples, 0.05%)</title><rect x="180.6" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.6" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpContent.release (2 samples, 0.02%)</title><rect x="180.6" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.6" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="180.9" y="883.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="183.9" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.acceptInboundMessage (4 samples, 0.05%)</title><rect x="181.1" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.1" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.acceptInboundMessage (3 samples, 0.04%)</title><rect x="181.1" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.1" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (85 samples, 0.99%)</title><rect x="181.7" y="899.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.7" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (2 samples, 0.02%)</title><rect x="183.1" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.1" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (2 samples, 0.02%)</title><rect x="183.1" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.1" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (2 samples, 0.02%)</title><rect x="183.1" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.1" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (2 samples, 0.02%)</title><rect x="183.1" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.1" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (2 samples, 0.02%)</title><rect x="183.1" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.1" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (2 samples, 0.02%)</title><rect x="183.1" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.1" y="814.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="183.1" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="183.1" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="183.1" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="183.1" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.1" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="183.1" y="723.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="186.1" y="734.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="183.1" y="707.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="186.1" y="718.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="183.1" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="186.1" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="183.1" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="186.1" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.add (4 samples, 0.05%)</title><rect x="183.6" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.6" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.insert (2 samples, 0.02%)</title><rect x="183.9" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.9" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.appendPartialContent (39 samples, 0.46%)</title><rect x="184.2" y="883.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.2" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.retain (2 samples, 0.02%)</title><rect x="184.6" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.6" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponent (33 samples, 0.39%)</title><rect x="184.9" y="867.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.9" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponent (31 samples, 0.36%)</title><rect x="185.1" y="851.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.1" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponent0 (30 samples, 0.35%)</title><rect x="185.3" y="835.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.3" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComp (2 samples, 0.02%)</title><rect x="185.4" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.4" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.shiftComps (2 samples, 0.02%)</title><rect x="185.4" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.4" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.capacity (3 samples, 0.04%)</title><rect x="185.7" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.7" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.checkComponentIndex (3 samples, 0.04%)</title><rect x="186.1" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.1" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (3 samples, 0.04%)</title><rect x="186.1" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.1" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.isAccessible (2 samples, 0.02%)</title><rect x="186.2" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.2" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.checkForOverflow (2 samples, 0.02%)</title><rect x="186.5" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.5" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.ensureAccessible (3 samples, 0.04%)</title><rect x="186.8" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.8" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.checkComponentIndex (2 samples, 0.02%)</title><rect x="186.8" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.8" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newComponent (16 samples, 0.19%)</title><rect x="187.2" y="819.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.2" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.order (6 samples, 0.07%)</title><rect x="187.9" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.9" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractPooledDerivedByteBuf.order (5 samples, 0.06%)</title><rect x="188.0" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.0" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.&lt;init&gt; (4 samples, 0.05%)</title><rect x="188.7" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.7" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.finishAggregation0 (11 samples, 0.13%)</title><rect x="189.5" y="883.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.5" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.finishAggregation (8 samples, 0.09%)</title><rect x="190.0" y="867.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.0" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.finishAggregation (7 samples, 0.08%)</title><rect x="190.1" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.1" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isContentLengthSet (7 samples, 0.08%)</title><rect x="190.1" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.1" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (6 samples, 0.07%)</title><rect x="190.2" y="819.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.2" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.contains (5 samples, 0.06%)</title><rect x="190.4" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.4" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (4 samples, 0.05%)</title><rect x="190.5" y="787.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.5" y="798.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (2 samples, 0.02%)</title><rect x="190.6" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.6" y="782.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (2 samples, 0.02%)</title><rect x="190.6" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="766.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.contentEqualsIgnoreCase (2 samples, 0.02%)</title><rect x="190.6" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.6" y="750.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.contentEqualsIgnoreCase (2 samples, 0.02%)</title><rect x="190.6" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.6" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.aggregate (3 samples, 0.04%)</title><rect x="191.1" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.1" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.aggregate (2 samples, 0.02%)</title><rect x="191.2" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.2" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (3 samples, 0.04%)</title><rect x="191.5" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.5" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (3 samples, 0.04%)</title><rect x="191.5" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.5" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.newContinueResponse (3 samples, 0.04%)</title><rect x="192.4" y="883.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.4" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.newContinueResponse (2 samples, 0.02%)</title><rect x="192.6" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.6" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.continueResponse (2 samples, 0.02%)</title><rect x="192.6" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.6" y="862.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="192.9" y="883.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="195.9" y="894.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (5 samples, 0.06%)</title><rect x="193.5" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.5" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpContent.release (3 samples, 0.04%)</title><rect x="193.8" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.8" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultLastHttpContent.touch (2 samples, 0.02%)</title><rect x="194.4" y="915.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.4" y="926.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultLastHttpContent.touch (2 samples, 0.02%)</title><rect x="194.4" y="899.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.4" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpContent.touch (2 samples, 0.02%)</title><rect x="194.4" y="883.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.4" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (2 samples, 0.02%)</title><rect x="194.4" y="867.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (4 samples, 0.05%)</title><rect x="194.6" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.6" y="942.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="194.6" y="915.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="197.6" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (5 samples, 0.06%)</title><rect x="195.2" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.2" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (2 samples, 0.02%)</title><rect x="195.5" y="1011.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.5" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (4 samples, 0.05%)</title><rect x="195.9" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.9" y="1086.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.recycle (2 samples, 0.02%)</title><rect x="196.4" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.4" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="196.8" y="1123.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="199.8" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (7 samples, 0.08%)</title><rect x="197.1" y="1171.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.1" y="1182.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.touch (2 samples, 0.02%)</title><rect x="197.1" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.1" y="1166.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (5 samples, 0.06%)</title><rect x="197.4" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.4" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (2 samples, 0.02%)</title><rect x="197.5" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.5" y="1150.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="197.8" y="1139.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="200.8" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelReadComplete (63 samples, 0.74%)</title><rect x="198.1" y="1203.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.1" y="1214.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (62 samples, 0.72%)</title><rect x="198.2" y="1187.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.2" y="1198.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (61 samples, 0.71%)</title><rect x="198.4" y="1171.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.4" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (57 samples, 0.67%)</title><rect x="198.8" y="1155.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.8" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (32 samples, 0.37%)</title><rect x="199.3" y="1139.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.3" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (30 samples, 0.35%)</title><rect x="199.5" y="1123.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.5" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (30 samples, 0.35%)</title><rect x="199.5" y="1107.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.5" y="1118.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelReadComplete (30 samples, 0.35%)</title><rect x="199.5" y="1091.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.5" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (27 samples, 0.32%)</title><rect x="199.5" y="1075.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.5" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (26 samples, 0.30%)</title><rect x="199.6" y="1059.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.6" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (26 samples, 0.30%)</title><rect x="199.6" y="1043.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.6" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelReadComplete (26 samples, 0.30%)</title><rect x="199.6" y="1027.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.6" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelReadComplete (25 samples, 0.29%)</title><rect x="199.7" y="1011.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.7" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelReadComplete (23 samples, 0.27%)</title><rect x="199.9" y="995.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.9" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (23 samples, 0.27%)</title><rect x="199.9" y="979.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.9" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (22 samples, 0.26%)</title><rect x="200.0" y="963.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.0" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (21 samples, 0.25%)</title><rect x="200.1" y="947.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.1" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.channelReadComplete (21 samples, 0.25%)</title><rect x="200.1" y="931.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.1" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (21 samples, 0.25%)</title><rect x="200.1" y="915.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.1" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (17 samples, 0.20%)</title><rect x="200.6" y="899.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.6" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (17 samples, 0.20%)</title><rect x="200.6" y="883.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelReadComplete (17 samples, 0.20%)</title><rect x="200.6" y="867.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (17 samples, 0.20%)</title><rect x="200.6" y="851.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (14 samples, 0.16%)</title><rect x="200.7" y="835.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.7" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (14 samples, 0.16%)</title><rect x="200.7" y="819.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.7" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.flush (14 samples, 0.16%)</title><rect x="200.7" y="803.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.7" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.doFlush (13 samples, 0.15%)</title><rect x="200.8" y="787.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (8 samples, 0.09%)</title><rect x="201.3" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.3" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (8 samples, 0.09%)</title><rect x="201.3" y="755.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.3" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (7 samples, 0.08%)</title><rect x="201.3" y="739.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.3" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (6 samples, 0.07%)</title><rect x="201.4" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (6 samples, 0.07%)</title><rect x="201.4" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (6 samples, 0.07%)</title><rect x="201.4" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (5 samples, 0.06%)</title><rect x="201.5" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (2 samples, 0.02%)</title><rect x="201.7" y="659.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.7" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (2 samples, 0.02%)</title><rect x="201.7" y="643.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.7" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (2 samples, 0.02%)</title><rect x="201.7" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.7" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (2 samples, 0.02%)</title><rect x="201.7" y="611.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.7" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.flush (2 samples, 0.02%)</title><rect x="202.6" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelReadComplete (2 samples, 0.02%)</title><rect x="203.2" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.2" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (2 samples, 0.02%)</title><rect x="203.2" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.2" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (20 samples, 0.23%)</title><rect x="203.9" y="1139.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.9" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.read (16 samples, 0.19%)</title><rect x="203.9" y="1123.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.9" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.read (16 samples, 0.19%)</title><rect x="203.9" y="1107.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.9" y="1118.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (16 samples, 0.19%)</title><rect x="203.9" y="1091.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.9" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (4 samples, 0.05%)</title><rect x="204.1" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.1" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (2 samples, 0.02%)</title><rect x="204.4" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.4" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (10 samples, 0.12%)</title><rect x="204.7" y="1075.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.7" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.read (7 samples, 0.08%)</title><rect x="205.0" y="1059.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.0" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.read (7 samples, 0.08%)</title><rect x="205.0" y="1043.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.0" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.read (6 samples, 0.07%)</title><rect x="205.0" y="1027.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.0" y="1038.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (6 samples, 0.07%)</title><rect x="205.0" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.0" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (2 samples, 0.02%)</title><rect x="205.0" y="995.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.0" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (2 samples, 0.02%)</title><rect x="205.0" y="979.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.0" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (2 samples, 0.02%)</title><rect x="205.0" y="963.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.0" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (4 samples, 0.05%)</title><rect x="205.2" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.2" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.read (2 samples, 0.02%)</title><rect x="205.5" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.5" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.config (2 samples, 0.02%)</title><rect x="206.1" y="1123.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.1" y="1134.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="206.3" y="1123.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="209.3" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (51 samples, 0.60%)</title><rect x="206.8" y="1203.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.8" y="1214.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (47 samples, 0.55%)</title><rect x="207.2" y="1187.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.2" y="1198.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (47 samples, 0.55%)</title><rect x="207.2" y="1171.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.2" y="1182.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (47 samples, 0.55%)</title><rect x="207.2" y="1155.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.2" y="1166.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (45 samples, 0.53%)</title><rect x="207.4" y="1139.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.4" y="1150.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (9 samples, 0.11%)</title><rect x="208.1" y="1123.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.1" y="1134.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.getLevel (2 samples, 0.02%)</title><rect x="208.4" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.4" y="1118.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (5 samples, 0.06%)</title><rect x="208.7" y="1107.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.7" y="1118.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (4 samples, 0.05%)</title><rect x="208.8" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.8" y="1102.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (4 samples, 0.05%)</title><rect x="208.8" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.8" y="1086.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3 samples, 0.04%)</title><rect x="208.8" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.04%)</title><rect x="208.8" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="208.8" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="208.8" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.8" y="1022.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.04%)</title><rect x="208.8" y="995.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="211.8" y="1006.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.04%)</title><rect x="208.8" y="979.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="211.8" y="990.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.04%)</title><rect x="208.8" y="963.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="211.8" y="974.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.04%)</title><rect x="208.8" y="947.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="211.8" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (28 samples, 0.33%)</title><rect x="209.4" y="1123.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.4" y="1134.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (3 samples, 0.04%)</title><rect x="209.4" y="1107.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.4" y="1118.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (3 samples, 0.04%)</title><rect x="209.4" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.4" y="1102.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.reuse (2 samples, 0.02%)</title><rect x="209.4" y="1075.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.4" y="1086.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (25 samples, 0.29%)</title><rect x="209.8" y="1107.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.8" y="1118.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.tcacheAllocateSmall (25 samples, 0.29%)</title><rect x="209.8" y="1091.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.8" y="1102.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateSmall (24 samples, 0.28%)</title><rect x="209.9" y="1075.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.9" y="1086.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (23 samples, 0.27%)</title><rect x="209.9" y="1059.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.9" y="1070.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (20 samples, 0.23%)</title><rect x="210.3" y="1043.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.3" y="1054.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle (4 samples, 0.05%)</title><rect x="210.5" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.5" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (3 samples, 0.04%)</title><rect x="210.5" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.5" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (2 samples, 0.02%)</title><rect x="210.6" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pushNow (2 samples, 0.02%)</title><rect x="210.6" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.6" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (9 samples, 0.11%)</title><rect x="211.0" y="1027.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.0" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (9 samples, 0.11%)</title><rect x="211.0" y="1011.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.0" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (7 samples, 0.08%)</title><rect x="211.3" y="995.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.3" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (3 samples, 0.04%)</title><rect x="211.7" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.7" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (3 samples, 0.04%)</title><rect x="211.7" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.7" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (6 samples, 0.07%)</title><rect x="212.3" y="1027.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.3" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.spRefElement (3 samples, 0.04%)</title><rect x="212.7" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.7" y="1022.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putObject (3 samples, 0.04%)</title><rect x="212.7" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.7" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (3 samples, 0.04%)</title><rect x="213.2" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.2" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.handleReadException (4 samples, 0.05%)</title><rect x="213.8" y="1203.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.8" y="1214.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.8" y="1198.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.8" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1155.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.8" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.exceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.8" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.8" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.8" y="1118.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.8" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.exceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.8" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.exceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.8" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$1.fireExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.8" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelHandlerAdapter.exceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.8" y="1038.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.8" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.8" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.8" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="963.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.8" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.exceptionCaught (4 samples, 0.05%)</title><rect x="213.8" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.8" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.onUnhandledInboundException (4 samples, 0.05%)</title><rect x="213.8" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.8" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/LocationAwareSlf4JLogger.warn (4 samples, 0.05%)</title><rect x="213.8" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.8" y="926.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/LocationAwareSlf4JLogger.log (4 samples, 0.05%)</title><rect x="213.8" y="899.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.8" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.log (4 samples, 0.05%)</title><rect x="213.8" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.8" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (4 samples, 0.05%)</title><rect x="213.8" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.8" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.05%)</title><rect x="213.8" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.8" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.02%)</title><rect x="213.8" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.8" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.02%)</title><rect x="213.8" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.8" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.02%)</title><rect x="213.8" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.8" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.02%)</title><rect x="213.8" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.8" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.02%)</title><rect x="213.8" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.8" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.02%)</title><rect x="213.8" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.8" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.02%)</title><rect x="213.8" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.8" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.02%)</title><rect x="213.8" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.02%)</title><rect x="213.8" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.8" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (2 samples, 0.02%)</title><rect x="214.1" y="835.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.shouldBreakReadReady (13 samples, 0.15%)</title><rect x="214.3" y="1203.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.3" y="1214.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown0 (13 samples, 0.15%)</title><rect x="214.3" y="1187.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.3" y="1198.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown (10 samples, 0.12%)</title><rect x="214.7" y="1171.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.7" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.javaChannel (3 samples, 0.04%)</title><rect x="214.9" y="1155.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.9" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.isInputShutdown (3 samples, 0.04%)</title><rect x="215.3" y="1155.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.3" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (3 samples, 0.04%)</title><rect x="215.7" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.7" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (176 samples, 2.05%)</title><rect x="216.1" y="1203.0" width="24.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.1" y="1214.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writableBytes (2 samples, 0.02%)</title><rect x="216.5" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.5" y="1198.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (167 samples, 1.95%)</title><rect x="216.8" y="1187.0" width="23.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.8" y="1198.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (3 samples, 0.04%)</title><rect x="217.2" y="1171.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.2" y="1182.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (2 samples, 0.02%)</title><rect x="217.4" y="1155.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.4" y="1166.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.setBytes (161 samples, 1.88%)</title><rect x="217.6" y="1171.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.6" y="1182.0">i..</text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (6 samples, 0.07%)</title><rect x="217.8" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.8" y="1166.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (2 samples, 0.02%)</title><rect x="217.8" y="1139.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.8" y="1150.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (2 samples, 0.02%)</title><rect x="217.8" y="1123.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.8" y="1134.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (2 samples, 0.02%)</title><rect x="217.8" y="1107.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.8" y="1118.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (4 samples, 0.05%)</title><rect x="218.0" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.0" y="1150.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (2 samples, 0.02%)</title><rect x="218.0" y="1123.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.02%)</title><rect x="218.3" y="1123.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (154 samples, 1.80%)</title><rect x="218.6" y="1155.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.6" y="1166.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.06%)</title><rect x="218.9" y="1139.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.06%)</title><rect x="218.9" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.04%)</title><rect x="219.2" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.04%)</title><rect x="219.2" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.2" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (146 samples, 1.70%)</title><rect x="219.7" y="1139.0" width="20.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.7" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (146 samples, 1.70%)</title><rect x="219.7" y="1123.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.7" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (144 samples, 1.68%)</title><rect x="219.8" y="1107.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (143 samples, 1.67%)</title><rect x="220.0" y="1091.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (141 samples, 1.65%)</title><rect x="220.3" y="1075.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.3" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="221.1" y="1059.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="224.1" y="1070.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (2 samples, 0.02%)</title><rect x="221.4" y="1059.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="224.4" y="1070.0"></text>
</g>
<g>
<title>read (131 samples, 1.53%)</title><rect x="221.6" y="1059.0" width="18.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="224.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 1.51%)</title><rect x="221.9" y="1043.0" width="17.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="224.9" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (129 samples, 1.51%)</title><rect x="221.9" y="1027.0" width="17.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="224.9" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (128 samples, 1.49%)</title><rect x="222.0" y="1011.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="225.0" y="1022.0"></text>
</g>
<g>
<title>ksys_read (128 samples, 1.49%)</title><rect x="222.0" y="995.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="225.0" y="1006.0"></text>
</g>
<g>
<title>vfs_read (124 samples, 1.45%)</title><rect x="222.6" y="979.0" width="17.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="225.6" y="990.0"></text>
</g>
<g>
<title>__vfs_read (119 samples, 1.39%)</title><rect x="222.6" y="963.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="225.6" y="974.0"></text>
</g>
<g>
<title>new_sync_read (119 samples, 1.39%)</title><rect x="222.6" y="947.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.6" y="958.0"></text>
</g>
<g>
<title>sock_read_iter (119 samples, 1.39%)</title><rect x="222.6" y="931.0" width="16.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="225.6" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (117 samples, 1.37%)</title><rect x="222.9" y="915.0" width="16.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="225.9" y="926.0"></text>
</g>
<g>
<title>inet6_recvmsg (108 samples, 1.26%)</title><rect x="223.1" y="899.0" width="14.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.1" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (105 samples, 1.23%)</title><rect x="223.6" y="883.0" width="14.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.6" y="894.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.08%)</title><rect x="224.4" y="867.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="227.4" y="878.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.08%)</title><rect x="224.4" y="851.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.4" y="862.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="224.4" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="227.4" y="846.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="224.7" y="835.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="227.7" y="846.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="224.7" y="819.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="227.7" y="830.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.04%)</title><rect x="224.9" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="227.9" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.08%)</title><rect x="225.9" y="867.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="228.9" y="878.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.08%)</title><rect x="225.9" y="851.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="228.9" y="862.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.04%)</title><rect x="226.4" y="835.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="229.4" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.04%)</title><rect x="226.4" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="229.4" y="830.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="226.6" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="229.6" y="814.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (78 samples, 0.91%)</title><rect x="226.9" y="867.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="229.9" y="878.0"></text>
</g>
<g>
<title>tcp_send_ack (77 samples, 0.90%)</title><rect x="227.0" y="851.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="230.0" y="862.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (77 samples, 0.90%)</title><rect x="227.0" y="835.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.0" y="846.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.09%)</title><rect x="227.3" y="819.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="230.3" y="830.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.04%)</title><rect x="227.4" y="803.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="230.4" y="814.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="227.4" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.4" y="798.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.02%)</title><rect x="227.5" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="230.5" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.05%)</title><rect x="227.8" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="230.8" y="814.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (67 samples, 0.78%)</title><rect x="228.4" y="819.0" width="9.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="231.4" y="830.0"></text>
</g>
<g>
<title>ip_queue_xmit (64 samples, 0.75%)</title><rect x="228.7" y="803.0" width="8.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="231.7" y="814.0"></text>
</g>
<g>
<title>__ip_queue_xmit (64 samples, 0.75%)</title><rect x="228.7" y="787.0" width="8.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="231.7" y="798.0"></text>
</g>
<g>
<title>ip_local_out (64 samples, 0.75%)</title><rect x="228.7" y="771.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.7" y="782.0"></text>
</g>
<g>
<title>ip_output (64 samples, 0.75%)</title><rect x="228.7" y="755.0" width="8.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="231.7" y="766.0"></text>
</g>
<g>
<title>ip_finish_output (62 samples, 0.72%)</title><rect x="228.9" y="739.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.9" y="750.0"></text>
</g>
<g>
<title>__ip_finish_output (61 samples, 0.71%)</title><rect x="229.1" y="723.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="232.1" y="734.0"></text>
</g>
<g>
<title>ip_finish_output2 (60 samples, 0.70%)</title><rect x="229.1" y="707.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.1" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (49 samples, 0.57%)</title><rect x="229.3" y="691.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.3" y="702.0"></text>
</g>
<g>
<title>do_softirq.part.0 (49 samples, 0.57%)</title><rect x="229.3" y="675.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.3" y="686.0"></text>
</g>
<g>
<title>do_softirq_own_stack (46 samples, 0.54%)</title><rect x="229.8" y="659.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="232.8" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (46 samples, 0.54%)</title><rect x="229.8" y="643.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.8" y="654.0"></text>
</g>
<g>
<title>net_rx_action (44 samples, 0.51%)</title><rect x="230.0" y="627.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.0" y="638.0"></text>
</g>
<g>
<title>process_backlog (44 samples, 0.51%)</title><rect x="230.0" y="611.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="233.0" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (43 samples, 0.50%)</title><rect x="230.2" y="595.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.2" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 0.50%)</title><rect x="230.2" y="579.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="233.2" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.02%)</title><rect x="230.2" y="563.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="233.2" y="574.0"></text>
</g>
<g>
<title>ip_rcv (41 samples, 0.48%)</title><rect x="230.4" y="563.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="233.4" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (41 samples, 0.48%)</title><rect x="230.4" y="547.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.4" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 0.48%)</title><rect x="230.4" y="531.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="233.4" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (41 samples, 0.48%)</title><rect x="230.4" y="515.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="233.4" y="526.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (40 samples, 0.47%)</title><rect x="230.4" y="499.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 0.46%)</title><rect x="230.6" y="483.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="233.6" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.02%)</title><rect x="231.0" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.0" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (32 samples, 0.37%)</title><rect x="231.3" y="467.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="234.3" y="478.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="231.4" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.4" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 0.34%)</title><rect x="231.7" y="451.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.7" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.02%)</title><rect x="231.8" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.8" y="446.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 0.28%)</title><rect x="232.2" y="435.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="235.2" y="446.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (20 samples, 0.23%)</title><rect x="232.8" y="419.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="235.8" y="430.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.14%)</title><rect x="233.1" y="403.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.1" y="414.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="233.1" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="236.1" y="398.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="233.1" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="236.1" y="382.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="233.1" y="355.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="236.1" y="366.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.11%)</title><rect x="233.5" y="387.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="236.5" y="398.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.11%)</title><rect x="233.5" y="371.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.5" y="382.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.05%)</title><rect x="234.2" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.2" y="366.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.05%)</title><rect x="234.2" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="237.2" y="350.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="234.4" y="323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.4" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.04%)</title><rect x="234.8" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.8" y="414.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.02%)</title><rect x="235.3" y="403.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="238.3" y="414.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.02%)</title><rect x="235.7" y="467.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="238.7" y="478.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.11%)</title><rect x="236.1" y="691.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="239.1" y="702.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.11%)</title><rect x="236.1" y="675.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="239.1" y="686.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.04%)</title><rect x="236.4" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="239.4" y="670.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.02%)</title><rect x="236.8" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="239.8" y="670.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="237.1" y="659.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.1" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.04%)</title><rect x="237.6" y="867.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.6" y="878.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.07%)</title><rect x="238.0" y="899.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="241.0" y="910.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.06%)</title><rect x="238.2" y="883.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.2" y="894.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.05%)</title><rect x="238.3" y="867.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.3" y="878.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (4 samples, 0.05%)</title><rect x="238.3" y="851.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="241.3" y="862.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.04%)</title><rect x="238.4" y="835.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.4" y="846.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="239.0" y="963.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="242.0" y="974.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="239.1" y="947.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="242.1" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (2 samples, 0.02%)</title><rect x="239.8" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.8" y="1198.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.writeBytes (2 samples, 0.02%)</title><rect x="239.8" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.8" y="1182.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (2 samples, 0.02%)</title><rect x="239.8" y="1155.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.8" y="1166.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.setBytes (2 samples, 0.02%)</title><rect x="239.8" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.8" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (2 samples, 0.02%)</title><rect x="239.8" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.8" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.02%)</title><rect x="239.8" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.02%)</title><rect x="239.8" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.8" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.02%)</title><rect x="239.8" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.02%)</title><rect x="239.8" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.02%)</title><rect x="239.8" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.8" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (11 samples, 0.13%)</title><rect x="240.4" y="1219.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.4" y="1230.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (4 samples, 0.05%)</title><rect x="240.4" y="1203.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="1214.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 0.05%)</title><rect x="240.4" y="1187.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.4" y="1198.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 0.05%)</title><rect x="240.4" y="1171.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.4" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (4 samples, 0.05%)</title><rect x="240.4" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.4" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (4 samples, 0.05%)</title><rect x="240.4" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.4" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 0.05%)</title><rect x="240.4" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.4" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 0.05%)</title><rect x="240.4" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.4" y="1118.0"></text>
</g>
<g>
<title>io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor.channelRead (4 samples, 0.05%)</title><rect x="240.4" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.4" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/MultithreadEventLoopGroup.register (2 samples, 0.02%)</title><rect x="240.6" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.6" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (2 samples, 0.02%)</title><rect x="240.6" y="1059.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.6" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (2 samples, 0.02%)</title><rect x="240.6" y="1043.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.6" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register (2 samples, 0.02%)</title><rect x="240.6" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.6" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.02%)</title><rect x="240.6" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.6" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.02%)</title><rect x="240.6" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (2 samples, 0.02%)</title><rect x="240.6" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.6" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioServerSocketChannel.doReadMessages (7 samples, 0.08%)</title><rect x="240.9" y="1203.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.9" y="1214.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.&lt;init&gt; (2 samples, 0.02%)</title><rect x="240.9" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.9" y="1198.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.&lt;init&gt; (2 samples, 0.02%)</title><rect x="240.9" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.9" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.&lt;init&gt; (2 samples, 0.02%)</title><rect x="240.9" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.9" y="1166.0"></text>
</g>
<g>
<title>io/netty/util/internal/SocketUtils.accept (5 samples, 0.06%)</title><rect x="241.2" y="1187.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.2" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.05%)</title><rect x="241.3" y="1171.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.3" y="1182.0"></text>
</g>
<g>
<title>io/netty/util/internal/SocketUtils$5.run (4 samples, 0.05%)</title><rect x="241.3" y="1155.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.3" y="1166.0"></text>
</g>
<g>
<title>io/netty/util/internal/SocketUtils$5.run (4 samples, 0.05%)</title><rect x="241.3" y="1139.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.3" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (4 samples, 0.05%)</title><rect x="241.3" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (3 samples, 0.04%)</title><rect x="241.3" y="1107.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.3" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (3 samples, 0.04%)</title><rect x="241.3" y="1091.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.readyOps (3 samples, 0.04%)</title><rect x="242.1" y="1219.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.1" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attachment (2 samples, 0.02%)</title><rect x="242.6" y="1235.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.6" y="1246.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (211 samples, 2.46%)</title><rect x="242.8" y="1267.0" width="29.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.8" y="1278.0">io..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.select (207 samples, 2.42%)</title><rect x="243.4" y="1251.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.4" y="1262.0">io..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.reset (3 samples, 0.04%)</title><rect x="243.8" y="1235.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.8" y="1246.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.reset (3 samples, 0.04%)</title><rect x="243.8" y="1219.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.8" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (3 samples, 0.04%)</title><rect x="243.8" y="1203.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.8" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (201 samples, 2.35%)</title><rect x="244.2" y="1235.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.2" y="1246.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (200 samples, 2.33%)</title><rect x="244.3" y="1219.0" width="27.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.3" y="1230.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (195 samples, 2.28%)</title><rect x="245.0" y="1203.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.0" y="1214.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (89 samples, 1.04%)</title><rect x="245.7" y="1187.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.7" y="1198.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="246.7" y="1171.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="249.7" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (77 samples, 0.90%)</title><rect x="247.4" y="1171.0" width="10.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="250.4" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.70%)</title><rect x="249.7" y="1155.0" width="8.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="252.7" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 0.70%)</title><rect x="249.7" y="1139.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.7" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (56 samples, 0.65%)</title><rect x="250.3" y="1123.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.3" y="1134.0"></text>
</g>
<g>
<title>do_epoll_wait (55 samples, 0.64%)</title><rect x="250.4" y="1107.0" width="7.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="253.4" y="1118.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="250.5" y="1091.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.5" y="1102.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="250.5" y="1075.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.5" y="1086.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="250.5" y="1059.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.5" y="1070.0"></text>
</g>
<g>
<title>ep_poll (48 samples, 0.56%)</title><rect x="251.1" y="1091.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="254.1" y="1102.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (28 samples, 0.33%)</title><rect x="251.8" y="1075.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="254.8" y="1086.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.27%)</title><rect x="252.5" y="1059.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="255.5" y="1070.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (20 samples, 0.23%)</title><rect x="252.9" y="1043.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="255.9" y="1054.0"></text>
</g>
<g>
<title>pipe_poll (4 samples, 0.05%)</title><rect x="253.3" y="1027.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.3" y="1038.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.15%)</title><rect x="253.8" y="1027.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.8" y="1038.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.06%)</title><rect x="254.8" y="1011.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.8" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="255.6" y="1075.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="258.6" y="1086.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="256.1" y="1075.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="259.1" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.11%)</title><rect x="256.5" y="1075.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="259.5" y="1086.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="256.5" y="1059.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="259.5" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.08%)</title><rect x="256.7" y="1059.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="259.7" y="1070.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.08%)</title><rect x="256.7" y="1043.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="259.7" y="1054.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.08%)</title><rect x="256.7" y="1027.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.7" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.07%)</title><rect x="256.9" y="1011.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="259.9" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.04%)</title><rect x="257.3" y="995.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.3" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="257.3" y="979.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.3" y="990.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.04%)</title><rect x="257.3" y="963.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.3" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.04%)</title><rect x="257.3" y="947.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.3" y="958.0"></text>
</g>
<g>
<title>run_timer_softirq (2 samples, 0.02%)</title><rect x="257.4" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="260.4" y="942.0"></text>
</g>
<g>
<title>__run_timers.part.0 (2 samples, 0.02%)</title><rect x="257.4" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="260.4" y="926.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="257.7" y="1091.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (75 samples, 0.88%)</title><rect x="258.0" y="1187.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.05%)</title><rect x="258.4" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.4" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="258.5" y="1155.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="261.5" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="258.5" y="1139.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="261.5" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="258.5" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="261.5" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="258.5" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="261.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.09%)</title><rect x="258.9" y="1171.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.9" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.08%)</title><rect x="258.9" y="1155.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (2 samples, 0.02%)</title><rect x="259.6" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.6" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (46 samples, 0.54%)</title><rect x="260.3" y="1171.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.3" y="1182.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (3 samples, 0.04%)</title><rect x="260.6" y="1155.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="263.6" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (41 samples, 0.48%)</title><rect x="261.0" y="1155.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.0" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="261.3" y="1139.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="264.3" y="1150.0"></text>
</g>
<g>
<title>read (37 samples, 0.43%)</title><rect x="261.6" y="1139.0" width="5.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="264.6" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.41%)</title><rect x="261.8" y="1123.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.8" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.41%)</title><rect x="261.8" y="1107.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.8" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_read (35 samples, 0.41%)</title><rect x="261.8" y="1091.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="264.8" y="1102.0"></text>
</g>
<g>
<title>ksys_read (35 samples, 0.41%)</title><rect x="261.8" y="1075.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.8" y="1086.0"></text>
</g>
<g>
<title>vfs_read (33 samples, 0.39%)</title><rect x="262.1" y="1059.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.1" y="1070.0"></text>
</g>
<g>
<title>__vfs_read (25 samples, 0.29%)</title><rect x="262.4" y="1043.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="265.4" y="1054.0"></text>
</g>
<g>
<title>new_sync_read (24 samples, 0.28%)</title><rect x="262.5" y="1027.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="265.5" y="1038.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.02%)</title><rect x="262.5" y="1011.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="265.5" y="1022.0"></text>
</g>
<g>
<title>pipe_read (19 samples, 0.22%)</title><rect x="263.2" y="1011.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="266.2" y="1022.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.07%)</title><rect x="263.6" y="995.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.6" y="1006.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.07%)</title><rect x="263.6" y="979.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="266.6" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.07%)</title><rect x="263.6" y="963.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="266.6" y="974.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="264.5" y="995.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="267.5" y="1006.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="264.5" y="979.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="267.5" y="990.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.07%)</title><rect x="265.0" y="995.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="268.0" y="1006.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.02%)</title><rect x="265.1" y="979.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="268.1" y="990.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="265.4" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.4" y="990.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.02%)</title><rect x="265.4" y="963.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="268.4" y="974.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.07%)</title><rect x="265.8" y="1043.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="268.8" y="1054.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.06%)</title><rect x="266.0" y="1027.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="269.0" y="1038.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="266.0" y="1011.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="269.0" y="1022.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="266.0" y="995.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="269.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (12 samples, 0.14%)</title><rect x="266.7" y="1171.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.7" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.add (2 samples, 0.02%)</title><rect x="266.7" y="1155.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.7" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.add (2 samples, 0.02%)</title><rect x="266.7" y="1139.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.7" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (6 samples, 0.07%)</title><rect x="267.1" y="1155.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.1" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (6 samples, 0.07%)</title><rect x="267.1" y="1139.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.1" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (5 samples, 0.06%)</title><rect x="267.2" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.2" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (3 samples, 0.04%)</title><rect x="267.9" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.9" y="1166.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="268.0" y="1139.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="271.0" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (6 samples, 0.07%)</title><rect x="268.3" y="1187.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.3" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (14 samples, 0.16%)</title><rect x="269.1" y="1187.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.1" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (14 samples, 0.16%)</title><rect x="269.1" y="1171.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.05%)</title><rect x="269.1" y="1155.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.05%)</title><rect x="269.1" y="1139.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.1" y="1150.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.04%)</title><rect x="269.1" y="1123.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="272.1" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="269.1" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="272.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.11%)</title><rect x="269.7" y="1155.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.08%)</title><rect x="270.0" y="1139.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.08%)</title><rect x="270.0" y="1123.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.0" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.06%)</title><rect x="271.1" y="1187.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.1" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.06%)</title><rect x="271.1" y="1171.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.1" y="1182.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.06%)</title><rect x="271.1" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="271.2" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.05%)</title><rect x="271.2" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.2" y="1134.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.nextScheduledTaskDeadlineNanos (8 samples, 0.09%)</title><rect x="271.9" y="1267.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.9" y="1278.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.peekScheduledTask (2 samples, 0.02%)</title><rect x="272.7" y="1251.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.7" y="1262.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.isShuttingDown (2 samples, 0.02%)</title><rect x="273.0" y="1267.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.0" y="1278.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (621 samples, 7.25%)</title><rect x="273.3" y="1267.0" width="85.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.3" y="1278.0">io/netty/u..</text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.afterRunningAllTasks (6 samples, 0.07%)</title><rect x="274.2" y="1251.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.2" y="1262.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasksFrom (5 samples, 0.06%)</title><rect x="274.4" y="1235.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.4" y="1246.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTaskFrom (5 samples, 0.06%)</title><rect x="274.4" y="1219.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.4" y="1230.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.poll (2 samples, 0.02%)</title><rect x="274.8" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.8" y="1214.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.poll (2 samples, 0.02%)</title><rect x="274.8" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.8" y="1198.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (600 samples, 7.00%)</title><rect x="275.1" y="1251.0" width="82.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.1" y="1262.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$1.run (11 samples, 0.13%)</title><rect x="275.3" y="1235.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.3" y="1246.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.access$200 (11 samples, 0.13%)</title><rect x="275.3" y="1219.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.3" y="1230.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register0 (11 samples, 0.13%)</title><rect x="275.3" y="1203.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.3" y="1214.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.invokeHandlerAddedIfNeeded (7 samples, 0.08%)</title><rect x="275.7" y="1187.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.7" y="1198.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.callHandlerAddedForAllHandlers (7 samples, 0.08%)</title><rect x="275.7" y="1171.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.7" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$PendingHandlerAddedTask.execute (7 samples, 0.08%)</title><rect x="275.7" y="1155.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.7" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.access$100 (7 samples, 0.08%)</title><rect x="275.7" y="1139.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.7" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.callHandlerAdded0 (7 samples, 0.08%)</title><rect x="275.7" y="1123.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.7" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.callHandlerAdded (7 samples, 0.08%)</title><rect x="275.7" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.7" y="1118.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInitializer.handlerAdded (7 samples, 0.08%)</title><rect x="275.7" y="1091.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.7" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInitializer.initChannel (7 samples, 0.08%)</title><rect x="275.7" y="1075.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.7" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.remove (2 samples, 0.02%)</title><rect x="275.7" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.7" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.remove (2 samples, 0.02%)</title><rect x="275.7" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyInit.initChannel (5 samples, 0.06%)</title><rect x="276.0" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyInit.initChannel (5 samples, 0.06%)</title><rect x="276.0" y="1043.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.0" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec.&lt;init&gt; (3 samples, 0.04%)</title><rect x="276.2" y="1027.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.2" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec.&lt;init&gt; (2 samples, 0.02%)</title><rect x="276.3" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$8.run (2 samples, 0.02%)</title><rect x="276.8" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.8" y="1246.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.run (584 samples, 6.81%)</title><rect x="277.1" y="1235.0" width="80.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.1" y="1246.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.decrementPendingOutboundBytes (11 samples, 0.13%)</title><rect x="277.4" y="1219.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.4" y="1230.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.decrementPendingOutboundBytes (10 samples, 0.12%)</title><rect x="277.5" y="1203.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.5" y="1214.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes (8 samples, 0.09%)</title><rect x="277.7" y="1187.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="280.7" y="1198.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes (7 samples, 0.08%)</title><rect x="277.8" y="1171.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.8" y="1182.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.setWritable (5 samples, 0.06%)</title><rect x="277.9" y="1155.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (2 samples, 0.02%)</title><rect x="278.4" y="1139.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.4" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.recycle (15 samples, 0.18%)</title><rect x="278.9" y="1219.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.9" y="1230.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (11 samples, 0.13%)</title><rect x="279.5" y="1203.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.5" y="1214.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (9 samples, 0.11%)</title><rect x="279.6" y="1187.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.6" y="1198.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pushLater (9 samples, 0.11%)</title><rect x="279.6" y="1171.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.6" y="1182.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$WeakOrderQueue.add (4 samples, 0.05%)</title><rect x="279.7" y="1155.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.7" y="1166.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.04%)</title><rect x="280.4" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.4" y="1166.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.02%)</title><rect x="280.4" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.4" y="1150.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (556 samples, 6.49%)</title><rect x="281.0" y="1219.0" width="76.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.0" y="1230.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (545 samples, 6.36%)</title><rect x="281.0" y="1203.0" width="75.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.0" y="1214.0">io/netty..</text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.flush (545 samples, 6.36%)</title><rect x="281.0" y="1187.0" width="75.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.0" y="1198.0">io/netty..</text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.doFlush (545 samples, 6.36%)</title><rect x="281.0" y="1171.0" width="75.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.0" y="1182.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (339 samples, 3.96%)</title><rect x="281.9" y="1155.0" width="46.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.9" y="1166.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (338 samples, 3.94%)</title><rect x="281.9" y="1139.0" width="46.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.9" y="1150.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (338 samples, 3.94%)</title><rect x="281.9" y="1123.0" width="46.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.9" y="1134.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (337 samples, 3.93%)</title><rect x="282.1" y="1107.0" width="46.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.1" y="1118.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (336 samples, 3.92%)</title><rect x="282.2" y="1091.0" width="46.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.2" y="1102.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (335 samples, 3.91%)</title><rect x="282.2" y="1075.0" width="46.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.2" y="1086.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (334 samples, 3.90%)</title><rect x="282.4" y="1059.0" width="45.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.4" y="1070.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (334 samples, 3.90%)</title><rect x="282.4" y="1043.0" width="45.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.4" y="1054.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (334 samples, 3.90%)</title><rect x="282.4" y="1027.0" width="45.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.4" y="1038.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (334 samples, 3.90%)</title><rect x="282.4" y="1011.0" width="45.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.4" y="1022.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (334 samples, 3.90%)</title><rect x="282.4" y="995.0" width="45.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.4" y="1006.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addFlush (2 samples, 0.02%)</title><rect x="282.4" y="979.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.4" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (332 samples, 3.87%)</title><rect x="282.6" y="979.0" width="45.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.6" y="990.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (330 samples, 3.85%)</title><rect x="282.6" y="963.0" width="45.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.6" y="974.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (324 samples, 3.78%)</title><rect x="283.3" y="947.0" width="44.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.3" y="958.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (10 samples, 0.12%)</title><rect x="283.6" y="931.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.6" y="942.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (5 samples, 0.06%)</title><rect x="284.0" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.0" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (3 samples, 0.04%)</title><rect x="284.3" y="899.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.3" y="910.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (2 samples, 0.02%)</title><rect x="284.7" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.7" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (44 samples, 0.51%)</title><rect x="285.0" y="931.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.0" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.clearNioBuffers (3 samples, 0.04%)</title><rect x="285.4" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.4" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.progress (2 samples, 0.02%)</title><rect x="285.8" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.8" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (36 samples, 0.42%)</title><rect x="286.1" y="915.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.1" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.recycle (3 samples, 0.04%)</title><rect x="286.2" y="899.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.2" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes (5 samples, 0.06%)</title><rect x="286.6" y="899.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.setWritable (4 samples, 0.05%)</title><rect x="286.8" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (4 samples, 0.05%)</title><rect x="286.8" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.8" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.safeSuccess (5 samples, 0.06%)</title><rect x="287.3" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.3" y="910.0"></text>
</g>
<g>
<title>io/netty/util/internal/PromiseNotificationUtil.trySuccess (5 samples, 0.06%)</title><rect x="287.3" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.3" y="894.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.trySuccess (5 samples, 0.06%)</title><rect x="287.3" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.3" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (5 samples, 0.06%)</title><rect x="287.3" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.3" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (5 samples, 0.06%)</title><rect x="287.3" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet (2 samples, 0.02%)</title><rect x="287.7" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.7" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (22 samples, 0.26%)</title><rect x="288.0" y="899.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.0" y="910.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (20 samples, 0.23%)</title><rect x="288.0" y="883.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.0" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (15 samples, 0.18%)</title><rect x="288.0" y="867.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.0" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (15 samples, 0.18%)</title><rect x="288.0" y="851.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.0" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (12 samples, 0.14%)</title><rect x="288.3" y="835.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.3" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (10 samples, 0.12%)</title><rect x="288.3" y="819.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.3" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (9 samples, 0.11%)</title><rect x="288.4" y="803.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.4" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (9 samples, 0.11%)</title><rect x="288.4" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.4" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (4 samples, 0.05%)</title><rect x="288.4" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.4" y="782.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (3 samples, 0.04%)</title><rect x="288.5" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.5" y="766.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (3 samples, 0.04%)</title><rect x="288.5" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.5" y="750.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (5 samples, 0.06%)</title><rect x="289.0" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.0" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (2 samples, 0.02%)</title><rect x="289.6" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.6" y="830.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (2 samples, 0.02%)</title><rect x="289.6" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.6" y="814.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (2 samples, 0.02%)</title><rect x="289.6" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.6" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (5 samples, 0.06%)</title><rect x="290.1" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.1" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareByteBuf.release (3 samples, 0.04%)</title><rect x="290.1" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.1" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareByteBuf.closeLeak (2 samples, 0.02%)</title><rect x="290.1" y="835.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.1" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (2 samples, 0.02%)</title><rect x="290.1" y="819.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.1" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2 samples, 0.02%)</title><rect x="290.5" y="851.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.5" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2 samples, 0.02%)</title><rect x="290.5" y="835.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.5" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="290.5" y="819.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="290.5" y="803.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="290.5" y="787.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="290.5" y="771.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.5" y="782.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="290.5" y="755.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="293.5" y="766.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="290.5" y="739.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="293.5" y="750.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="290.5" y="723.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="293.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="290.5" y="707.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="293.5" y="718.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="290.7" y="883.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="293.7" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.clearOpWrite (2 samples, 0.02%)</title><rect x="291.0" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (265 samples, 3.09%)</title><rect x="291.4" y="931.0" width="36.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.4" y="942.0">sun..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (18 samples, 0.21%)</title><rect x="291.7" y="915.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (18 samples, 0.21%)</title><rect x="291.7" y="899.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (18 samples, 0.21%)</title><rect x="291.7" y="883.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (18 samples, 0.21%)</title><rect x="291.7" y="867.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (18 samples, 0.21%)</title><rect x="291.7" y="851.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.7" y="862.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (2 samples, 0.02%)</title><rect x="293.4" y="835.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.4" y="846.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="293.6" y="835.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="296.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="293.9" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (244 samples, 2.85%)</title><rect x="294.3" y="915.0" width="33.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.3" y="926.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (243 samples, 2.84%)</title><rect x="294.5" y="899.0" width="33.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.5" y="910.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (243 samples, 2.84%)</title><rect x="294.5" y="883.0" width="33.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.5" y="894.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (239 samples, 2.79%)</title><rect x="295.0" y="867.0" width="32.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.0" y="878.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (239 samples, 2.79%)</title><rect x="295.0" y="851.0" width="32.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.0" y="862.0">su..</text>
</g>
<g>
<title>__write (229 samples, 2.67%)</title><rect x="296.3" y="835.0" width="31.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="299.3" y="846.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (224 samples, 2.61%)</title><rect x="296.9" y="819.0" width="30.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="299.9" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (224 samples, 2.61%)</title><rect x="296.9" y="803.0" width="30.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.9" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_write (215 samples, 2.51%)</title><rect x="297.6" y="787.0" width="29.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="300.6" y="798.0">__..</text>
</g>
<g>
<title>ksys_write (215 samples, 2.51%)</title><rect x="297.6" y="771.0" width="29.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.6" y="782.0">ks..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.04%)</title><rect x="297.8" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="300.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="297.8" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="300.8" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="297.8" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.8" y="734.0"></text>
</g>
<g>
<title>vfs_write (210 samples, 2.45%)</title><rect x="298.3" y="755.0" width="28.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="301.3" y="766.0">vf..</text>
</g>
<g>
<title>__vfs_write (199 samples, 2.32%)</title><rect x="298.7" y="739.0" width="27.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="301.7" y="750.0">_..</text>
</g>
<g>
<title>new_sync_write (198 samples, 2.31%)</title><rect x="298.7" y="723.0" width="27.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.7" y="734.0">n..</text>
</g>
<g>
<title>sock_write_iter (198 samples, 2.31%)</title><rect x="298.7" y="707.0" width="27.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="301.7" y="718.0">s..</text>
</g>
<g>
<title>sock_sendmsg (198 samples, 2.31%)</title><rect x="298.7" y="691.0" width="27.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="301.7" y="702.0">s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="299.0" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.0" y="686.0"></text>
</g>
<g>
<title>inet6_sendmsg (187 samples, 2.18%)</title><rect x="299.4" y="675.0" width="25.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="302.4" y="686.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (184 samples, 2.15%)</title><rect x="299.7" y="659.0" width="25.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.7" y="670.0">t..</text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="299.7" y="643.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="302.7" y="654.0"></text>
</g>
<g>
<title>__release_sock (4 samples, 0.05%)</title><rect x="299.7" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="302.7" y="638.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.05%)</title><rect x="299.7" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="302.7" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.04%)</title><rect x="299.8" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="302.8" y="606.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="299.8" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="302.8" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.04%)</title><rect x="300.7" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.7" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (172 samples, 2.01%)</title><rect x="301.2" y="643.0" width="23.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.2" y="654.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.04%)</title><rect x="301.6" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="304.6" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.02%)</title><rect x="302.3" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="305.3" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="302.3" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="305.3" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.21%)</title><rect x="302.6" y="627.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="305.6" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.16%)</title><rect x="302.9" y="611.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="305.9" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.08%)</title><rect x="303.1" y="595.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="306.1" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="303.3" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.3" y="590.0"></text>
</g>
<g>
<title>memset (2 samples, 0.02%)</title><rect x="303.8" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="306.8" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="304.1" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="307.1" y="606.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="304.8" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.8" y="622.0"></text>
</g>
<g>
<title>tcp_push (143 samples, 1.67%)</title><rect x="305.1" y="627.0" width="19.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="308.1" y="638.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (143 samples, 1.67%)</title><rect x="305.1" y="611.0" width="19.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.1" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (141 samples, 1.65%)</title><rect x="305.3" y="595.0" width="19.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="308.3" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (118 samples, 1.38%)</title><rect x="306.4" y="579.0" width="16.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="309.4" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (108 samples, 1.26%)</title><rect x="307.0" y="563.0" width="14.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="310.0" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (108 samples, 1.26%)</title><rect x="307.0" y="547.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.0" y="558.0"></text>
</g>
<g>
<title>ip_local_out (105 samples, 1.23%)</title><rect x="307.3" y="531.0" width="14.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="310.3" y="542.0"></text>
</g>
<g>
<title>ip_output (105 samples, 1.23%)</title><rect x="307.3" y="515.0" width="14.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="310.3" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (104 samples, 1.21%)</title><rect x="307.4" y="499.0" width="14.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="310.4" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (102 samples, 1.19%)</title><rect x="307.5" y="483.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="310.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (101 samples, 1.18%)</title><rect x="307.7" y="467.0" width="13.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="310.7" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (84 samples, 0.98%)</title><rect x="308.1" y="451.0" width="11.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="311.1" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (84 samples, 0.98%)</title><rect x="308.1" y="435.0" width="11.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="311.1" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (84 samples, 0.98%)</title><rect x="308.1" y="419.0" width="11.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="311.1" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (82 samples, 0.96%)</title><rect x="308.1" y="403.0" width="11.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="311.1" y="414.0"></text>
</g>
<g>
<title>net_rx_action (80 samples, 0.93%)</title><rect x="308.4" y="387.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.4" y="398.0"></text>
</g>
<g>
<title>process_backlog (78 samples, 0.91%)</title><rect x="308.6" y="371.0" width="10.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="311.6" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (77 samples, 0.90%)</title><rect x="308.8" y="355.0" width="10.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="311.8" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (77 samples, 0.90%)</title><rect x="308.8" y="339.0" width="10.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="311.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (76 samples, 0.89%)</title><rect x="308.9" y="323.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (74 samples, 0.86%)</title><rect x="309.2" y="307.0" width="10.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="312.2" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (74 samples, 0.86%)</title><rect x="309.2" y="291.0" width="10.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="312.2" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (73 samples, 0.85%)</title><rect x="309.2" y="275.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="312.2" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (73 samples, 0.85%)</title><rect x="309.2" y="259.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="312.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (71 samples, 0.83%)</title><rect x="309.5" y="243.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="312.5" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="309.8" y="227.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="312.8" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.05%)</title><rect x="310.0" y="227.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.0" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.02%)</title><rect x="310.6" y="227.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="313.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (61 samples, 0.71%)</title><rect x="310.9" y="227.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="313.9" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (60 samples, 0.70%)</title><rect x="311.0" y="211.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="314.0" y="222.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.15%)</title><rect x="311.0" y="195.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.0" y="206.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.04%)</title><rect x="311.3" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="314.3" y="190.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (3 samples, 0.04%)</title><rect x="311.3" y="163.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="314.3" y="174.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.02%)</title><rect x="311.3" y="147.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.09%)</title><rect x="311.7" y="179.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="314.7" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.08%)</title><rect x="311.8" y="163.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.8" y="174.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.08%)</title><rect x="311.8" y="147.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="314.8" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="312.0" y="131.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="315.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="312.9" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.9" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.02%)</title><rect x="312.9" y="179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="315.9" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.02%)</title><rect x="312.9" y="163.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="315.9" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (41 samples, 0.48%)</title><rect x="313.3" y="195.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.3" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (41 samples, 0.48%)</title><rect x="313.3" y="179.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="316.3" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (38 samples, 0.44%)</title><rect x="313.7" y="163.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="316.7" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (38 samples, 0.44%)</title><rect x="313.7" y="147.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="316.7" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (38 samples, 0.44%)</title><rect x="313.7" y="131.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="316.7" y="142.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.02%)</title><rect x="319.4" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="322.4" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.16%)</title><rect x="319.7" y="451.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.7" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.15%)</title><rect x="319.7" y="435.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="322.7" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.11%)</title><rect x="319.8" y="419.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="322.8" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.08%)</title><rect x="320.1" y="403.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.1" y="414.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="320.5" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="323.5" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="320.5" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="323.5" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="320.5" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="323.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="321.0" y="419.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="324.0" y="430.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="321.9" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="324.9" y="574.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="322.0" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.0" y="558.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="322.1" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="325.1" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.07%)</title><rect x="323.1" y="579.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.1" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.06%)</title><rect x="323.2" y="563.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.2" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="323.4" y="547.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="326.4" y="558.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="323.4" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.4" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="323.4" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="326.4" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.02%)</title><rect x="323.9" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="326.9" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="324.2" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="327.2" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.06%)</title><rect x="325.2" y="675.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="328.2" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.05%)</title><rect x="325.3" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.3" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.05%)</title><rect x="325.3" y="643.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.3" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.02%)</title><rect x="325.6" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.6" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.07%)</title><rect x="326.4" y="739.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="329.4" y="750.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="326.8" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.8" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="327.0" y="707.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.0" y="718.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="327.0" y="691.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="330.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.05%)</title><rect x="327.2" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="330.2" y="798.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="327.2" y="771.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.2" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.05%)</title><rect x="327.2" y="755.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="330.2" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="327.4" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="330.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.isFlushPending (2 samples, 0.02%)</title><rect x="328.1" y="963.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.1" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (196 samples, 2.29%)</title><rect x="328.6" y="1155.0" width="27.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.6" y="1166.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (196 samples, 2.29%)</title><rect x="328.6" y="1139.0" width="27.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="1150.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (7 samples, 0.08%)</title><rect x="328.6" y="1123.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.6" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (5 samples, 0.06%)</title><rect x="328.9" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.9" y="1118.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (3 samples, 0.04%)</title><rect x="329.2" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.2" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (2 samples, 0.02%)</title><rect x="329.2" y="1075.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.2" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (187 samples, 2.18%)</title><rect x="329.6" y="1123.0" width="25.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.6" y="1134.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (187 samples, 2.18%)</title><rect x="329.6" y="1107.0" width="25.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.6" y="1118.0">i..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (185 samples, 2.16%)</title><rect x="329.9" y="1091.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.9" y="1102.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (180 samples, 2.10%)</title><rect x="330.5" y="1075.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.5" y="1086.0">i..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (30 samples, 0.35%)</title><rect x="331.1" y="1059.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.1" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (29 samples, 0.34%)</title><rect x="331.2" y="1043.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.2" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (29 samples, 0.34%)</title><rect x="331.2" y="1027.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.2" y="1038.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (2 samples, 0.02%)</title><rect x="331.2" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="334.2" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (3 samples, 0.04%)</title><rect x="331.5" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.5" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (2 samples, 0.02%)</title><rect x="331.6" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (18 samples, 0.21%)</title><rect x="331.9" y="1011.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.9" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (15 samples, 0.18%)</title><rect x="332.1" y="995.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (13 samples, 0.15%)</title><rect x="332.1" y="979.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.1" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.write (12 samples, 0.14%)</title><rect x="332.2" y="963.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.2" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addMessage (9 samples, 0.11%)</title><rect x="332.2" y="947.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.2" y="958.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (2 samples, 0.02%)</title><rect x="332.5" y="931.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="335.5" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.newInstance (3 samples, 0.04%)</title><rect x="332.7" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.7" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (2 samples, 0.02%)</title><rect x="332.9" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.9" y="926.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (2 samples, 0.02%)</title><rect x="332.9" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.9" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.filterOutboundMessage (2 samples, 0.02%)</title><rect x="333.6" y="947.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.6" y="958.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="333.6" y="931.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="336.6" y="942.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="333.8" y="979.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="336.8" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.02%)</title><rect x="334.1" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.1" y="1006.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="334.1" y="979.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="337.1" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (6 samples, 0.07%)</title><rect x="334.4" y="1011.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.4" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (5 samples, 0.06%)</title><rect x="334.4" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.4" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (3 samples, 0.04%)</title><rect x="334.7" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.7" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (3 samples, 0.04%)</title><rect x="334.7" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.7" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (3 samples, 0.04%)</title><rect x="334.7" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.7" y="958.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (3 samples, 0.04%)</title><rect x="334.7" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.7" y="942.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3 samples, 0.04%)</title><rect x="334.7" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.04%)</title><rect x="334.7" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="334.7" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="334.7" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.7" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.04%)</title><rect x="334.7" y="851.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="337.7" y="862.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.04%)</title><rect x="334.7" y="835.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="337.7" y="846.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.04%)</title><rect x="334.7" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="337.7" y="830.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="334.8" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="337.8" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (2 samples, 0.02%)</title><rect x="335.4" y="1059.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.4" y="1070.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (2 samples, 0.02%)</title><rect x="335.4" y="1043.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.4" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.recycle (3 samples, 0.04%)</title><rect x="335.6" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.6" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (132 samples, 1.54%)</title><rect x="336.2" y="1059.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.2" y="1070.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (26 samples, 0.30%)</title><rect x="337.3" y="1043.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.3" y="1054.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (26 samples, 0.30%)</title><rect x="337.3" y="1027.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.3" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (26 samples, 0.30%)</title><rect x="337.3" y="1011.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (26 samples, 0.30%)</title><rect x="337.3" y="995.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.3" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (7 samples, 0.08%)</title><rect x="337.6" y="979.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.6" y="990.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (5 samples, 0.06%)</title><rect x="337.8" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.8" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (5 samples, 0.06%)</title><rect x="337.8" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.8" y="958.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (2 samples, 0.02%)</title><rect x="337.8" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.8" y="942.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="337.8" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="337.8" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="337.8" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="337.8" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.8" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="337.8" y="851.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="340.8" y="862.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="337.8" y="835.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="340.8" y="846.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="337.8" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="340.8" y="830.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="337.8" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="340.8" y="814.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.threadLocalRandom (3 samples, 0.04%)</title><rect x="338.1" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.1" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent$2.current (3 samples, 0.04%)</title><rect x="338.1" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.current (3 samples, 0.04%)</title><rect x="338.1" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.1" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (16 samples, 0.19%)</title><rect x="338.5" y="979.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="341.5" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (2 samples, 0.02%)</title><rect x="338.5" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.5" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (14 samples, 0.16%)</title><rect x="338.8" y="963.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.8" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.tcacheAllocateSmall (13 samples, 0.15%)</title><rect x="338.9" y="947.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.9" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateSmall (13 samples, 0.15%)</title><rect x="338.9" y="931.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.9" y="942.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (12 samples, 0.14%)</title><rect x="339.1" y="915.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.1" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (9 samples, 0.11%)</title><rect x="339.4" y="899.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.4" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (3 samples, 0.04%)</title><rect x="339.6" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.6" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (2 samples, 0.02%)</title><rect x="339.8" y="867.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.8" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (2 samples, 0.02%)</title><rect x="339.8" y="851.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.8" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (2 samples, 0.02%)</title><rect x="339.8" y="835.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (2 samples, 0.02%)</title><rect x="339.8" y="819.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="830.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (2 samples, 0.02%)</title><rect x="339.8" y="803.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="342.8" y="814.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (4 samples, 0.05%)</title><rect x="340.0" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.0" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (2 samples, 0.02%)</title><rect x="341.0" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.0" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.add (3 samples, 0.04%)</title><rect x="341.4" y="1043.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.4" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.contentLength (5 samples, 0.06%)</title><rect x="341.8" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.8" y="1054.0"></text>
</g>
<g>
<title>io/netty/buffer/EmptyByteBuf.readableBytes (2 samples, 0.02%)</title><rect x="342.0" y="1027.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.0" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.content (2 samples, 0.02%)</title><rect x="342.2" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.2" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encodeHeaders (41 samples, 0.48%)</title><rect x="342.5" y="1043.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.5" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders$HeaderIterator.next (3 samples, 0.04%)</title><rect x="343.3" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.3" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders$HeaderIterator.next (2 samples, 0.02%)</title><rect x="343.5" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.5" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.iteratorCharSequence (2 samples, 0.02%)</title><rect x="343.8" y="1027.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.8" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.encoderHeader (30 samples, 0.35%)</title><rect x="344.0" y="1027.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.0" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writerIndex (2 samples, 0.02%)</title><rect x="344.3" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.ensureWritable (2 samples, 0.02%)</title><rect x="344.6" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.6" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (2 samples, 0.02%)</title><rect x="344.6" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2 samples, 0.02%)</title><rect x="344.6" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.6" y="990.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2 samples, 0.02%)</title><rect x="344.6" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.6" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2 samples, 0.02%)</title><rect x="344.6" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.02%)</title><rect x="344.6" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="344.6" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.6" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.02%)</title><rect x="344.6" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.6" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.02%)</title><rect x="344.6" y="883.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="347.6" y="894.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.02%)</title><rect x="344.6" y="867.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="347.6" y="878.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="344.6" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="347.6" y="862.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.02%)</title><rect x="344.6" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="347.6" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.setShortBE (7 samples, 0.08%)</title><rect x="344.9" y="1011.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.9" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeAscii (15 samples, 0.18%)</title><rect x="345.8" y="1011.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.8" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.copy (13 samples, 0.15%)</title><rect x="346.1" y="995.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setBytes (6 samples, 0.07%)</title><rect x="346.2" y="979.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.2" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (5 samples, 0.06%)</title><rect x="346.4" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.4" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (5 samples, 0.06%)</title><rect x="346.4" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.4" y="958.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (5 samples, 0.06%)</title><rect x="346.4" y="931.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.4" y="942.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (5 samples, 0.06%)</title><rect x="346.4" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.4" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.06%)</title><rect x="346.4" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.4" y="910.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.06%)</title><rect x="346.4" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.4" y="894.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.05%)</title><rect x="346.5" y="867.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.5" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.05%)</title><rect x="346.5" y="851.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="349.5" y="862.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.04%)</title><rect x="346.7" y="835.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="349.7" y="846.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.04%)</title><rect x="346.7" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="349.7" y="830.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.04%)</title><rect x="346.7" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="349.7" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (6 samples, 0.07%)</title><rect x="347.1" y="979.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.1" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (6 samples, 0.07%)</title><rect x="347.1" y="963.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.1" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (5 samples, 0.06%)</title><rect x="347.2" y="947.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.2" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (5 samples, 0.06%)</title><rect x="347.2" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.2" y="942.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.copyMemory (5 samples, 0.06%)</title><rect x="347.2" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.06%)</title><rect x="347.2" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.06%)</title><rect x="347.2" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (5 samples, 0.06%)</title><rect x="347.2" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (5 samples, 0.06%)</title><rect x="347.2" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.2" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (3 samples, 0.04%)</title><rect x="347.5" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (3 samples, 0.04%)</title><rect x="347.5" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.5" y="830.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="347.9" y="1011.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="350.9" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (33 samples, 0.39%)</title><rect x="348.3" y="1043.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.3" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (33 samples, 0.39%)</title><rect x="348.3" y="1027.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.3" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeByte (4 samples, 0.05%)</title><rect x="348.9" y="1011.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.9" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (5 samples, 0.06%)</title><rect x="349.7" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.7" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeShort (2 samples, 0.02%)</title><rect x="349.7" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.7" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.order (2 samples, 0.02%)</title><rect x="350.1" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseStatus.encode (6 samples, 0.07%)</title><rect x="350.4" y="1011.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.4" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (4 samples, 0.05%)</title><rect x="350.5" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.5" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (4 samples, 0.05%)</title><rect x="350.5" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.5" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.encode (10 samples, 0.12%)</title><rect x="351.2" y="1011.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.2" y="1022.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (10 samples, 0.12%)</title><rect x="351.2" y="995.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.2" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (10 samples, 0.12%)</title><rect x="351.2" y="979.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.2" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (3 samples, 0.04%)</title><rect x="351.3" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.3" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectUtil.checkPositiveOrZero (2 samples, 0.02%)</title><rect x="351.5" y="947.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.5" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (5 samples, 0.06%)</title><rect x="351.7" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.7" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (4 samples, 0.05%)</title><rect x="351.9" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.9" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (3 samples, 0.04%)</title><rect x="352.0" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.0" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (3 samples, 0.04%)</title><rect x="352.0" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.0" y="926.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.copyMemory (3 samples, 0.04%)</title><rect x="352.0" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.04%)</title><rect x="352.0" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.04%)</title><rect x="352.0" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="355.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.04%)</title><rect x="352.0" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.04%)</title><rect x="352.0" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (3 samples, 0.04%)</title><rect x="352.0" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.0" y="830.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="352.6" y="1011.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="355.6" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec$HttpServerResponseEncoder.isContentAlwaysEmpty (6 samples, 0.07%)</title><rect x="352.8" y="1043.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.8" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec$HttpServerResponseEncoder.isContentAlwaysEmpty (5 samples, 0.06%)</title><rect x="353.0" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.0" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec$HttpServerResponseEncoder.sanitizeHeadersBeforeEncode (2 samples, 0.02%)</title><rect x="353.7" y="1043.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.7" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec$HttpServerResponseEncoder.sanitizeHeadersBeforeEncode (2 samples, 0.02%)</title><rect x="353.7" y="1027.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.7" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isTransferEncodingChunked (3 samples, 0.04%)</title><rect x="353.9" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.9" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.headers (3 samples, 0.04%)</title><rect x="353.9" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.9" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.acceptOutboundMessage (4 samples, 0.05%)</title><rect x="354.4" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.4" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.acceptOutboundMessage (2 samples, 0.02%)</title><rect x="354.6" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.6" y="1054.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (3 samples, 0.04%)</title><rect x="354.9" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.9" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (2 samples, 0.02%)</title><rect x="355.1" y="1043.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.1" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (2 samples, 0.02%)</title><rect x="355.3" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.3" y="1134.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (2 samples, 0.02%)</title><rect x="355.3" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.peek (2 samples, 0.02%)</title><rect x="355.6" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.6" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.peekFirst (2 samples, 0.02%)</title><rect x="355.6" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.6" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (2 samples, 0.02%)</title><rect x="355.6" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.6" y="1134.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.touch (2 samples, 0.02%)</title><rect x="355.6" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.6" y="1118.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (11 samples, 0.13%)</title><rect x="356.0" y="1203.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.0" y="1214.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.write (11 samples, 0.13%)</title><rect x="356.0" y="1187.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.0" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (8 samples, 0.09%)</title><rect x="356.4" y="1171.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.4" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (4 samples, 0.05%)</title><rect x="357.0" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.0" y="1166.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTask (8 samples, 0.09%)</title><rect x="357.7" y="1251.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.7" y="1262.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTaskFrom (8 samples, 0.09%)</title><rect x="357.7" y="1235.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.7" y="1246.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.poll (4 samples, 0.05%)</title><rect x="358.2" y="1219.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.2" y="1230.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.poll (4 samples, 0.05%)</title><rect x="358.2" y="1203.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/System.nanoTime (2 samples, 0.02%)</title><rect x="358.8" y="1267.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.8" y="1278.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="358.8" y="1251.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="361.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.lazySet (5 samples, 0.06%)</title><rect x="359.0" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,641 samples, 30.82%)</title><rect x="359.7" y="1331.0" width="363.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.7" y="1342.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,641 samples, 30.82%)</title><rect x="359.7" y="1315.0" width="363.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.7" y="1326.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.04%)</title><rect x="363.0" y="1299.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.0" y="1310.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="363.4" y="1299.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="366.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (26 samples, 0.30%)</title><rect x="363.7" y="1299.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (23 samples, 0.27%)</title><rect x="364.1" y="1283.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.1" y="1294.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (17 samples, 0.20%)</title><rect x="364.7" y="1267.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="367.7" y="1278.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="365.0" y="1251.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="368.0" y="1262.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="365.4" y="1251.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="368.4" y="1262.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="365.7" y="1251.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="368.7" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="366.5" y="1251.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="369.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (973 samples, 11.35%)</title><rect x="367.4" y="1299.0" width="134.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.4" y="1310.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.05%)</title><rect x="367.9" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.05%)</title><rect x="367.9" y="1267.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.05%)</title><rect x="367.9" y="1251.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.cast (4 samples, 0.05%)</title><rect x="367.9" y="1235.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (539 samples, 6.29%)</title><rect x="368.4" y="1283.0" width="74.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.4" y="1294.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (504 samples, 5.88%)</title><rect x="368.7" y="1267.0" width="69.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.7" y="1278.0">java/ut..</text>
</g>
<g>
<title>itable stub (6 samples, 0.07%)</title><rect x="368.8" y="1251.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="371.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="369.6" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.02%)</title><rect x="369.6" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$206/839333168.apply (2 samples, 0.02%)</title><rect x="369.9" y="1251.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$0 (2 samples, 0.02%)</title><rect x="369.9" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.finishConnect (2 samples, 0.02%)</title><rect x="369.9" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1891287327.apply (492 samples, 5.74%)</title><rect x="370.3" y="1251.0" width="67.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.3" y="1262.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (492 samples, 5.74%)</title><rect x="370.3" y="1235.0" width="67.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.3" y="1246.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (492 samples, 5.74%)</title><rect x="370.3" y="1219.0" width="67.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.3" y="1230.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="370.7" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="370.7" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$215/706959530.get$Lambda (2 samples, 0.02%)</title><rect x="370.7" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$215/706959530.&lt;init&gt; (2 samples, 0.02%)</title><rect x="370.7" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="371.0" y="1203.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.02%)</title><rect x="371.2" y="1187.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="374.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="371.2" y="1171.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="371.2" y="1155.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (461 samples, 5.38%)</title><rect x="371.4" y="1203.0" width="63.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.4" y="1214.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (461 samples, 5.38%)</title><rect x="371.4" y="1187.0" width="63.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.4" y="1198.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkPermissions (2 samples, 0.02%)</title><rect x="371.4" y="1171.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (459 samples, 5.36%)</title><rect x="371.7" y="1171.0" width="63.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.7" y="1182.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (285 samples, 3.33%)</title><rect x="372.0" y="1155.0" width="39.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.0" y="1166.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (285 samples, 3.33%)</title><rect x="372.0" y="1139.0" width="39.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.0" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (284 samples, 3.31%)</title><rect x="372.1" y="1123.0" width="39.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.1" y="1134.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$186/1345975117.apply (284 samples, 3.31%)</title><rect x="372.1" y="1107.0" width="39.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.1" y="1118.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (284 samples, 3.31%)</title><rect x="372.1" y="1091.0" width="39.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.1" y="1102.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (284 samples, 3.31%)</title><rect x="372.1" y="1075.0" width="39.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.1" y="1086.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/1938438090.apply (283 samples, 3.30%)</title><rect x="372.3" y="1059.0" width="38.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.3" y="1070.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (282 samples, 3.29%)</title><rect x="372.4" y="1043.0" width="38.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.4" y="1054.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.05%)</title><rect x="372.5" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.05%)</title><rect x="372.5" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (276 samples, 3.22%)</title><rect x="373.2" y="1027.0" width="38.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.2" y="1038.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="373.9" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="373.9" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$209/1445627487.get$Lambda (2 samples, 0.02%)</title><rect x="373.9" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.04%)</title><rect x="374.2" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.04%)</title><rect x="374.2" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="374.2" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="374.2" y="963.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Class.cast (2 samples, 0.02%)</title><rect x="374.3" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (230 samples, 2.68%)</title><rect x="374.6" y="1011.0" width="31.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.6" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (230 samples, 2.68%)</title><rect x="374.6" y="995.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.6" y="1006.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$207/17085738.apply (225 samples, 2.63%)</title><rect x="375.0" y="979.0" width="31.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.0" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (225 samples, 2.63%)</title><rect x="375.0" y="963.0" width="31.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.0" y="974.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="375.3" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="375.3" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="375.3" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="375.3" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (13 samples, 0.15%)</title><rect x="375.6" y="947.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="378.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.14%)</title><rect x="375.7" y="931.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="378.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.04%)</title><rect x="376.0" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.04%)</title><rect x="376.0" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.02%)</title><rect x="376.1" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.08%)</title><rect x="376.4" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.07%)</title><rect x="376.5" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.06%)</title><rect x="376.7" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.06%)</title><rect x="376.7" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.02%)</title><rect x="376.8" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.02%)</title><rect x="376.8" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.02%)</title><rect x="376.8" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="376.8" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="376.8" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.02%)</title><rect x="376.8" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.02%)</title><rect x="377.1" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.02%)</title><rect x="377.1" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (46 samples, 0.54%)</title><rect x="377.4" y="947.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (45 samples, 0.53%)</title><rect x="377.5" y="931.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (14 samples, 0.16%)</title><rect x="377.8" y="915.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12 samples, 0.14%)</title><rect x="378.0" y="899.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (11 samples, 0.13%)</title><rect x="378.2" y="883.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.08%)</title><rect x="378.2" y="867.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.08%)</title><rect x="378.2" y="851.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.2" y="862.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (3 samples, 0.04%)</title><rect x="378.5" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="381.5" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="378.5" y="819.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="381.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (4 samples, 0.05%)</title><rect x="379.1" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (29 samples, 0.34%)</title><rect x="379.7" y="915.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (29 samples, 0.34%)</title><rect x="379.7" y="899.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (24 samples, 0.28%)</title><rect x="380.1" y="883.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (23 samples, 0.27%)</title><rect x="380.1" y="867.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (23 samples, 0.27%)</title><rect x="380.1" y="851.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.1" y="862.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (9 samples, 0.11%)</title><rect x="380.4" y="835.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="383.4" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.05%)</title><rect x="380.8" y="819.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="383.8" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.04%)</title><rect x="380.8" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="383.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (12 samples, 0.14%)</title><rect x="381.6" y="835.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 0.12%)</title><rect x="381.9" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.9" y="830.0"></text>
</g>
<g>
<title>__write (10 samples, 0.12%)</title><rect x="381.9" y="803.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="384.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.12%)</title><rect x="381.9" y="787.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="384.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.12%)</title><rect x="381.9" y="771.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="384.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.12%)</title><rect x="381.9" y="755.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="384.9" y="766.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.12%)</title><rect x="381.9" y="739.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.9" y="750.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.12%)</title><rect x="381.9" y="723.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.9" y="734.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.12%)</title><rect x="381.9" y="707.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.9" y="718.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.12%)</title><rect x="381.9" y="691.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="384.9" y="702.0"></text>
</g>
<g>
<title>pipe_write (9 samples, 0.11%)</title><rect x="382.0" y="675.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="385.0" y="686.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.08%)</title><rect x="382.0" y="659.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="385.0" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.08%)</title><rect x="382.0" y="643.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="385.0" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.07%)</title><rect x="382.0" y="627.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.0" y="638.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.02%)</title><rect x="383.0" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.02%)</title><rect x="383.4" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (161 samples, 1.88%)</title><rect x="383.7" y="947.0" width="22.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.7" y="958.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (52 samples, 0.61%)</title><rect x="384.4" y="931.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (50 samples, 0.58%)</title><rect x="384.4" y="915.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (48 samples, 0.56%)</title><rect x="384.7" y="899.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.7" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (4 samples, 0.05%)</title><rect x="390.3" y="883.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="393.3" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (4 samples, 0.05%)</title><rect x="390.3" y="867.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="393.3" y="878.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (4 samples, 0.05%)</title><rect x="390.3" y="851.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="393.3" y="862.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (4 samples, 0.05%)</title><rect x="390.3" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="393.3" y="846.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(Method*, CompLevel, JavaThread*) (2 samples, 0.02%)</title><rect x="390.3" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="393.3" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (3 samples, 0.04%)</title><rect x="390.8" y="883.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="393.8" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="391.0" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="394.0" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="391.0" y="851.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="394.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="391.0" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="394.0" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="391.3" y="915.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.02%)</title><rect x="391.3" y="899.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.3" y="910.0"></text>
</g>
<g>
<title>Interpreter (2 samples, 0.02%)</title><rect x="391.3" y="883.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="394.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.06%)</title><rect x="391.7" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.7" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.06%)</title><rect x="391.7" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.7" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.05%)</title><rect x="391.8" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.8" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="391.8" y="883.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="394.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.05%)</title><rect x="392.4" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="392.4" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="392.4" y="899.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.4" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="392.6" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.6" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="392.9" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.9" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="392.9" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.9" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="393.1" y="899.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (56 samples, 0.65%)</title><rect x="393.3" y="931.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.3" y="942.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (2 samples, 0.02%)</title><rect x="393.6" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.07%)</title><rect x="393.9" y="915.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="393.9" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.9" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="393.9" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.04%)</title><rect x="393.9" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.9" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="393.9" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.9" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.04%)</title><rect x="393.9" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="394.0" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.0" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.02%)</title><rect x="394.3" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (19 samples, 0.22%)</title><rect x="394.7" y="915.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.07%)</title><rect x="395.0" y="899.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.0" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.06%)</title><rect x="395.1" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.1" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="395.3" y="867.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.3" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.02%)</title><rect x="395.5" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.5" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (2 samples, 0.02%)</title><rect x="396.1" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.1" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (2 samples, 0.02%)</title><rect x="396.1" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.02%)</title><rect x="396.1" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.1" y="878.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$225/1428148214.test (7 samples, 0.08%)</title><rect x="396.4" y="899.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.4" y="910.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (7 samples, 0.08%)</title><rect x="396.4" y="883.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$42/998351292.test (6 samples, 0.07%)</title><rect x="396.5" y="867.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.06%)</title><rect x="396.5" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.5" y="862.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$31/2052915500.test (5 samples, 0.06%)</title><rect x="396.5" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.5" y="846.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.06%)</title><rect x="396.5" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$30/1720435669.test (5 samples, 0.06%)</title><rect x="396.5" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.06%)</title><rect x="396.5" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="396.5" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="396.5" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="396.5" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.02%)</title><rect x="396.8" y="723.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (3 samples, 0.04%)</title><rect x="397.3" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (24 samples, 0.28%)</title><rect x="397.7" y="915.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.7" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.27%)</title><rect x="397.9" y="899.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.9" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.27%)</title><rect x="397.9" y="883.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="398.0" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.0" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (20 samples, 0.23%)</title><rect x="398.3" y="867.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (18 samples, 0.21%)</title><rect x="398.4" y="851.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.4" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 0.20%)</title><rect x="398.6" y="835.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.6" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.02%)</title><rect x="398.6" y="819.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.6" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.06%)</title><rect x="398.8" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.8" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (5 samples, 0.06%)</title><rect x="398.8" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.8" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="399.0" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.05%)</title><rect x="399.0" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.05%)</title><rect x="399.0" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.0" y="766.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3 samples, 0.04%)</title><rect x="399.5" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.5" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3 samples, 0.04%)</title><rect x="399.5" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.5" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.02%)</title><rect x="399.5" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.5" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="399.5" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.08%)</title><rect x="399.9" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.05%)</title><rect x="400.2" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="400.4" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="400.4" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.02%)</title><rect x="400.5" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (2 samples, 0.02%)</title><rect x="400.5" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (11 samples, 0.13%)</title><rect x="401.0" y="931.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (5 samples, 0.06%)</title><rect x="401.2" y="915.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (3 samples, 0.04%)</title><rect x="401.5" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="401.9" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.05%)</title><rect x="401.9" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1923953785.invoke (4 samples, 0.05%)</title><rect x="401.9" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="402.0" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.02%)</title><rect x="402.1" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2 samples, 0.02%)</title><rect x="402.1" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (12 samples, 0.14%)</title><rect x="402.6" y="931.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (11 samples, 0.13%)</title><rect x="402.7" y="915.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.7" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="403.0" y="899.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.05%)</title><rect x="403.0" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.0" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1923953785.invoke (4 samples, 0.05%)</title><rect x="403.0" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.0" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="403.0" y="851.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.02%)</title><rect x="403.0" y="835.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.02%)</title><rect x="403.0" y="819.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1072591677.invoke (2 samples, 0.02%)</title><rect x="403.2" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="403.2" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.02%)</title><rect x="403.2" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (4 samples, 0.05%)</title><rect x="403.7" y="899.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (12 samples, 0.14%)</title><rect x="404.2" y="931.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.2" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="404.3" y="915.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.3" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="404.5" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="407.5" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.09%)</title><rect x="404.8" y="915.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="405.3" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="405.3" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.02%)</title><rect x="405.3" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.3" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.02%)</title><rect x="405.6" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="405.6" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="405.6" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (28 samples, 0.33%)</title><rect x="406.3" y="1011.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="407.6" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="407.6" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (15 samples, 0.18%)</title><rect x="407.9" y="995.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.15%)</title><rect x="408.2" y="979.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="411.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.13%)</title><rect x="408.5" y="963.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.12%)</title><rect x="408.6" y="947.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.12%)</title><rect x="408.6" y="931.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.07%)</title><rect x="408.7" y="915.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$179/1097014556.run (6 samples, 0.07%)</title><rect x="408.7" y="899.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.07%)</title><rect x="408.7" y="883.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.05%)</title><rect x="409.0" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.04%)</title><rect x="409.6" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.04%)</title><rect x="409.6" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.02%)</title><rect x="409.7" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.02%)</title><rect x="409.7" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (7 samples, 0.08%)</title><rect x="410.1" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.1" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.06%)</title><rect x="410.3" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$204/771313885.run (5 samples, 0.06%)</title><rect x="410.3" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.lambda$connectAsync$0 (5 samples, 0.06%)</title><rect x="410.3" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (5 samples, 0.06%)</title><rect x="410.3" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.3" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (5 samples, 0.06%)</title><rect x="410.3" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (5 samples, 0.06%)</title><rect x="410.3" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (5 samples, 0.06%)</title><rect x="410.3" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.3" y="910.0"></text>
</g>
<g>
<title>connect (5 samples, 0.06%)</title><rect x="410.3" y="883.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="413.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="410.3" y="867.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="410.3" y="851.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_connect (5 samples, 0.06%)</title><rect x="410.3" y="835.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="413.3" y="846.0"></text>
</g>
<g>
<title>__sys_connect (5 samples, 0.06%)</title><rect x="410.3" y="819.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.3" y="830.0"></text>
</g>
<g>
<title>inet_stream_connect (5 samples, 0.06%)</title><rect x="410.3" y="803.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="413.3" y="814.0"></text>
</g>
<g>
<title>__inet_stream_connect (2 samples, 0.02%)</title><rect x="410.3" y="787.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="413.3" y="798.0"></text>
</g>
<g>
<title>tcp_v6_connect (2 samples, 0.02%)</title><rect x="410.3" y="771.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.3" y="782.0"></text>
</g>
<g>
<title>tcp_v4_connect (2 samples, 0.02%)</title><rect x="410.3" y="755.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.3" y="766.0"></text>
</g>
<g>
<title>tcp_connect (2 samples, 0.02%)</title><rect x="410.3" y="739.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="413.3" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="410.3" y="723.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.3" y="734.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.02%)</title><rect x="410.3" y="707.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="413.3" y="718.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="410.3" y="691.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.3" y="702.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.02%)</title><rect x="410.3" y="675.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="413.3" y="686.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.02%)</title><rect x="410.3" y="659.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.3" y="670.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.02%)</title><rect x="410.3" y="643.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.3" y="654.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.02%)</title><rect x="410.3" y="627.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.3" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="410.3" y="611.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="413.3" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="410.5" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.5" y="798.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.04%)</title><rect x="410.5" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="413.5" y="782.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.04%)</title><rect x="410.5" y="755.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.5" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (3 samples, 0.04%)</title><rect x="410.5" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.5" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_synsent_state_process (3 samples, 0.04%)</title><rect x="410.5" y="723.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.5" y="734.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.04%)</title><rect x="410.5" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="413.5" y="718.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (3 samples, 0.04%)</title><rect x="410.5" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.5" y="702.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.04%)</title><rect x="410.5" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.5" y="686.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="410.5" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="413.5" y="670.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.04%)</title><rect x="410.5" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="413.5" y="654.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.04%)</title><rect x="410.5" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="413.5" y="638.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.04%)</title><rect x="410.5" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.5" y="622.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.04%)</title><rect x="410.5" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.5" y="606.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.04%)</title><rect x="410.5" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.5" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.04%)</title><rect x="410.5" y="563.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="413.5" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="410.5" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.5" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.04%)</title><rect x="410.5" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.5" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.04%)</title><rect x="410.5" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="413.5" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.04%)</title><rect x="410.5" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.5" y="510.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.04%)</title><rect x="410.5" y="483.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.5" y="494.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.04%)</title><rect x="410.5" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="413.5" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.04%)</title><rect x="410.5" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.5" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.04%)</title><rect x="410.5" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.5" y="446.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.04%)</title><rect x="410.5" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.5" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="410.5" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="413.5" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.04%)</title><rect x="410.5" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.5" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.04%)</title><rect x="410.5" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.5" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.04%)</title><rect x="410.5" y="355.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="413.5" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.04%)</title><rect x="410.5" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.5" y="350.0"></text>
</g>
<g>
<title>tcp_check_req (3 samples, 0.04%)</title><rect x="410.5" y="323.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="413.5" y="334.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (3 samples, 0.04%)</title><rect x="410.5" y="307.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="413.5" y="318.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (3 samples, 0.04%)</title><rect x="410.5" y="291.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.5" y="302.0"></text>
</g>
<g>
<title>tcp_create_openreq_child (2 samples, 0.02%)</title><rect x="410.7" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="413.7" y="286.0"></text>
</g>
<g>
<title>inet_csk_clone_lock (2 samples, 0.02%)</title><rect x="410.7" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.7" y="270.0"></text>
</g>
<g>
<title>sk_clone_lock (2 samples, 0.02%)</title><rect x="410.7" y="243.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="413.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.02%)</title><rect x="411.2" y="1155.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.02%)</title><rect x="411.2" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (168 samples, 1.96%)</title><rect x="411.8" y="1155.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.8" y="1166.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="412.3" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="412.3" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1226591929.get$Lambda (3 samples, 0.04%)</title><rect x="412.3" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.06%)</title><rect x="412.7" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.06%)</title><rect x="412.7" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/487368165.apply (3 samples, 0.04%)</title><rect x="412.9" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (2 samples, 0.02%)</title><rect x="413.0" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="413.4" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="413.4" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.02%)</title><rect x="413.6" y="1107.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1226591929.accept (2 samples, 0.02%)</title><rect x="413.6" y="1091.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (2 samples, 0.02%)</title><rect x="413.6" y="1075.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.getCancelCause (3 samples, 0.04%)</title><rect x="414.0" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (149 samples, 1.74%)</title><rect x="414.4" y="1139.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (2 samples, 0.02%)</title><rect x="414.5" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (2 samples, 0.02%)</title><rect x="414.5" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (146 samples, 1.70%)</title><rect x="414.8" y="1123.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (146 samples, 1.70%)</title><rect x="414.8" y="1107.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="417.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.02%)</title><rect x="415.8" y="1091.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (14 samples, 0.16%)</title><rect x="416.0" y="1091.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.0" y="1102.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (2 samples, 0.02%)</title><rect x="416.9" y="1075.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="419.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.02%)</title><rect x="417.3" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3 samples, 0.04%)</title><rect x="417.6" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.04%)</title><rect x="417.6" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.6" y="1070.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (3 samples, 0.04%)</title><rect x="417.6" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (5 samples, 0.06%)</title><rect x="418.0" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="418.2" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="418.2" y="1059.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$153/1114298297.get$Lambda (2 samples, 0.02%)</title><rect x="418.2" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (5 samples, 0.06%)</title><rect x="418.7" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="419.1" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="419.1" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$175/155279430.get$Lambda (2 samples, 0.02%)</title><rect x="419.1" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (37 samples, 0.43%)</title><rect x="419.4" y="1091.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (26 samples, 0.30%)</title><rect x="419.5" y="1075.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.5" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (2 samples, 0.02%)</title><rect x="419.8" y="1059.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="422.8" y="1070.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.02%)</title><rect x="420.2" y="1059.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="423.2" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="420.2" y="1043.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="423.2" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.02%)</title><rect x="420.2" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="423.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (19 samples, 0.22%)</title><rect x="420.5" y="1059.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.11%)</title><rect x="420.6" y="1043.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="420.6" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.07%)</title><rect x="421.0" y="1027.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (6 samples, 0.07%)</title><rect x="421.0" y="1011.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Objects.hash (5 samples, 0.06%)</title><rect x="421.1" y="995.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.1" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (5 samples, 0.06%)</title><rect x="421.1" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.1" y="990.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (4 samples, 0.05%)</title><rect x="421.3" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (9 samples, 0.11%)</title><rect x="421.8" y="1043.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.8" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (6 samples, 0.07%)</title><rect x="422.1" y="1027.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (3 samples, 0.04%)</title><rect x="423.1" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (3 samples, 0.04%)</title><rect x="423.1" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.getReceiveBufferSize (2 samples, 0.02%)</title><rect x="423.1" y="1043.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.02%)</title><rect x="423.1" y="1027.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (7 samples, 0.08%)</title><rect x="423.5" y="1075.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (4 samples, 0.05%)</title><rect x="423.9" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (75 samples, 0.88%)</title><rect x="424.4" y="1091.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.4" y="1102.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (72 samples, 0.84%)</title><rect x="424.9" y="1075.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.9" y="1086.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (30 samples, 0.35%)</title><rect x="425.0" y="1059.0" width="4.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="428.0" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.02%)</title><rect x="425.5" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="428.5" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="425.5" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="428.5" y="1038.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.08%)</title><rect x="426.0" y="1043.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="429.0" y="1054.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.05%)</title><rect x="426.4" y="1027.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="429.4" y="1038.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.11%)</title><rect x="427.1" y="1043.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="430.1" y="1054.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="427.2" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="430.2" y="1038.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.06%)</title><rect x="427.6" y="1027.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="430.6" y="1038.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.05%)</title><rect x="427.8" y="1011.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="430.8" y="1022.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.07%)</title><rect x="428.3" y="1043.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="431.3" y="1054.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.02%)</title><rect x="428.3" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="431.3" y="1038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.04%)</title><rect x="428.7" y="1027.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="431.7" y="1038.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.04%)</title><rect x="428.7" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="431.7" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="428.9" y="995.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="431.9" y="1006.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (2 samples, 0.02%)</title><rect x="429.3" y="1059.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="432.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$156/1559998260.run (36 samples, 0.42%)</title><rect x="429.5" y="1059.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (35 samples, 0.41%)</title><rect x="429.7" y="1043.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.7" y="1054.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (35 samples, 0.41%)</title><rect x="429.7" y="1027.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.7" y="1038.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (33 samples, 0.39%)</title><rect x="429.8" y="1011.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.8" y="1022.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.37%)</title><rect x="430.0" y="995.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.0" y="1006.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (31 samples, 0.36%)</title><rect x="430.1" y="979.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.1" y="990.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (31 samples, 0.36%)</title><rect x="430.1" y="963.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.1" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.clone (19 samples, 0.22%)</title><rect x="430.4" y="947.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.4" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="430.8" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="433.8" y="942.0"></text>
</g>
<g>
<title>JVM_Clone (12 samples, 0.14%)</title><rect x="431.1" y="931.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="434.1" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.07%)</title><rect x="431.7" y="915.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="434.7" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.07%)</title><rect x="431.7" y="899.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="434.7" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="432.0" y="883.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="435.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (6 samples, 0.07%)</title><rect x="433.5" y="947.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (6 samples, 0.07%)</title><rect x="433.5" y="931.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (4 samples, 0.05%)</title><rect x="433.8" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (4 samples, 0.05%)</title><rect x="433.8" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.8" y="910.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.02%)</title><rect x="434.5" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="437.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (23 samples, 0.27%)</title><rect x="434.9" y="1203.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.9" y="1214.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.02%)</title><rect x="435.7" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.7" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.02%)</title><rect x="435.7" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.7" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.02%)</title><rect x="435.7" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.7" y="1166.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (2 samples, 0.02%)</title><rect x="436.0" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.11%)</title><rect x="436.4" y="1187.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (3 samples, 0.04%)</title><rect x="436.7" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (4 samples, 0.05%)</title><rect x="437.1" y="1171.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.1" y="1182.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.02%)</title><rect x="437.4" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (3 samples, 0.04%)</title><rect x="437.7" y="1187.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32 samples, 0.37%)</title><rect x="438.1" y="1267.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (30 samples, 0.35%)</title><rect x="438.4" y="1251.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (28 samples, 0.33%)</title><rect x="438.5" y="1235.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.32%)</title><rect x="438.6" y="1219.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (26 samples, 0.30%)</title><rect x="438.6" y="1203.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.04%)</title><rect x="438.6" y="1187.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.05%)</title><rect x="439.0" y="1187.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.05%)</title><rect x="439.0" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.22%)</title><rect x="439.6" y="1187.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.22%)</title><rect x="439.6" y="1171.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.22%)</title><rect x="439.6" y="1155.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.22%)</title><rect x="439.6" y="1139.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.22%)</title><rect x="439.6" y="1123.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.6" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="439.6" y="1107.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="442.6" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.19%)</title><rect x="440.0" y="1107.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="443.0" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.18%)</title><rect x="440.1" y="1091.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.1" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.18%)</title><rect x="440.1" y="1075.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.1" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.16%)</title><rect x="440.3" y="1059.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.3" y="1070.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.16%)</title><rect x="440.3" y="1043.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="443.3" y="1054.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.15%)</title><rect x="440.4" y="1027.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.4" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.12%)</title><rect x="440.8" y="1011.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.8" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.12%)</title><rect x="440.8" y="995.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.8" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.12%)</title><rect x="440.8" y="979.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$102/2089788199.get (426 samples, 4.97%)</title><rect x="442.8" y="1283.0" width="58.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.8" y="1294.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$putTimestampResponse$4 (426 samples, 4.97%)</title><rect x="442.8" y="1267.0" width="58.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.8" y="1278.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="442.9" y="1251.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.9" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="442.9" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="445.9" y="1246.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="443.2" y="1219.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.2" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="443.2" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.2" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="443.2" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.2" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsertTimestampRecord (400 samples, 4.67%)</title><rect x="443.6" y="1251.0" width="55.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.6" y="1262.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (372 samples, 4.34%)</title><rect x="444.1" y="1235.0" width="51.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.1" y="1246.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (372 samples, 4.34%)</title><rect x="444.1" y="1219.0" width="51.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.1" y="1230.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (345 samples, 4.03%)</title><rect x="445.0" y="1203.0" width="47.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="448.0" y="1214.0">Java..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.02%)</title><rect x="445.2" y="1187.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="448.2" y="1198.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="445.6" y="1187.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="448.6" y="1198.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (4 samples, 0.05%)</title><rect x="445.9" y="1187.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="448.9" y="1198.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="446.5" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="449.5" y="1198.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (331 samples, 3.86%)</title><rect x="446.9" y="1187.0" width="45.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="449.9" y="1198.0">rock..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="447.0" y="1171.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="450.0" y="1182.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="447.3" y="1171.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="450.3" y="1182.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.13%)</title><rect x="447.7" y="1171.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="450.7" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.05%)</title><rect x="448.1" y="1155.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="451.1" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="448.7" y="1155.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="451.7" y="1166.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (312 samples, 3.64%)</title><rect x="449.2" y="1171.0" width="43.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="452.2" y="1182.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (310 samples, 3.62%)</title><rect x="449.5" y="1155.0" width="42.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="452.5" y="1166.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (304 samples, 3.55%)</title><rect x="449.5" y="1139.0" width="41.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="452.5" y="1150.0">roc..</text>
</g>
<g>
<title>cfree (3 samples, 0.04%)</title><rect x="449.8" y="1123.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="452.8" y="1134.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (276 samples, 3.22%)</title><rect x="450.2" y="1123.0" width="38.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="453.2" y="1134.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (262 samples, 3.06%)</title><rect x="450.9" y="1107.0" width="36.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="453.9" y="1118.0">roc..</text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="454.0" y="1091.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="457.0" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="454.5" y="1091.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="457.5" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.02%)</title><rect x="455.0" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="458.0" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.02%)</title><rect x="455.3" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="458.3" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (133 samples, 1.55%)</title><rect x="455.6" y="1091.0" width="18.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="458.6" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (130 samples, 1.52%)</title><rect x="455.8" y="1075.0" width="17.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="458.8" y="1086.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (125 samples, 1.46%)</title><rect x="456.3" y="1059.0" width="17.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="459.3" y="1070.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17340238638144608911.so (7 samples, 0.08%)</title><rect x="456.7" y="1043.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="459.7" y="1054.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (107 samples, 1.25%)</title><rect x="457.6" y="1043.0" width="14.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="460.6" y="1054.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.02%)</title><rect x="458.0" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="461.0" y="1038.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (102 samples, 1.19%)</title><rect x="458.3" y="1027.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="461.3" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="458.5" y="1011.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="461.5" y="1022.0"></text>
</g>
<g>
<title>__write (99 samples, 1.16%)</title><rect x="458.7" y="1011.0" width="13.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="461.7" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 1.12%)</title><rect x="459.1" y="995.0" width="13.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.1" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 1.12%)</title><rect x="459.1" y="979.0" width="13.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.1" y="990.0"></text>
</g>
<g>
<title>__x64_sys_write (96 samples, 1.12%)</title><rect x="459.1" y="963.0" width="13.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.1" y="974.0"></text>
</g>
<g>
<title>ksys_write (96 samples, 1.12%)</title><rect x="459.1" y="947.0" width="13.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.1" y="958.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="459.4" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.4" y="942.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="459.4" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="462.4" y="926.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="459.4" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="462.4" y="910.0"></text>
</g>
<g>
<title>vfs_write (90 samples, 1.05%)</title><rect x="460.0" y="931.0" width="12.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="463.0" y="942.0"></text>
</g>
<g>
<title>__vfs_write (87 samples, 1.02%)</title><rect x="460.0" y="915.0" width="11.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.0" y="926.0"></text>
</g>
<g>
<title>new_sync_write (87 samples, 1.02%)</title><rect x="460.0" y="899.0" width="11.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.0" y="910.0"></text>
</g>
<g>
<title>ext4_file_write_iter (85 samples, 0.99%)</title><rect x="460.0" y="883.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.0" y="894.0"></text>
</g>
<g>
<title>__generic_file_write_iter (81 samples, 0.95%)</title><rect x="460.2" y="867.0" width="11.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.2" y="878.0"></text>
</g>
<g>
<title>file_update_time (15 samples, 0.18%)</title><rect x="460.5" y="851.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="463.5" y="862.0"></text>
</g>
<g>
<title>generic_update_time (15 samples, 0.18%)</title><rect x="460.5" y="835.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.5" y="846.0"></text>
</g>
<g>
<title>__mark_inode_dirty (15 samples, 0.18%)</title><rect x="460.5" y="819.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="463.5" y="830.0"></text>
</g>
<g>
<title>ext4_dirty_inode (14 samples, 0.16%)</title><rect x="460.7" y="803.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.7" y="814.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.06%)</title><rect x="460.7" y="787.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.7" y="798.0"></text>
</g>
<g>
<title>jbd2__journal_start (5 samples, 0.06%)</title><rect x="460.7" y="771.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="463.7" y="782.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (9 samples, 0.11%)</title><rect x="461.3" y="787.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="464.3" y="798.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.05%)</title><rect x="461.3" y="771.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="464.3" y="782.0"></text>
</g>
<g>
<title>__brelse (2 samples, 0.02%)</title><rect x="461.3" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.3" y="766.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.02%)</title><rect x="461.6" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="464.6" y="766.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.06%)</title><rect x="461.9" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.9" y="782.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.05%)</title><rect x="461.9" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.9" y="766.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.02%)</title><rect x="462.2" y="739.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.2" y="750.0"></text>
</g>
<g>
<title>generic_perform_write (63 samples, 0.74%)</title><rect x="462.6" y="851.0" width="8.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.6" y="862.0"></text>
</g>
<g>
<title>ext4_da_write_begin (22 samples, 0.26%)</title><rect x="462.7" y="835.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.7" y="846.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (9 samples, 0.11%)</title><rect x="462.9" y="819.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.9" y="830.0"></text>
</g>
<g>
<title>jbd2__journal_start (8 samples, 0.09%)</title><rect x="463.0" y="803.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.0" y="814.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.05%)</title><rect x="463.3" y="787.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="466.3" y="798.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.02%)</title><rect x="463.8" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="466.8" y="798.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.04%)</title><rect x="464.1" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.1" y="830.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (9 samples, 0.11%)</title><rect x="464.5" y="819.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.5" y="830.0"></text>
</g>
<g>
<title>pagecache_get_page (8 samples, 0.09%)</title><rect x="464.5" y="803.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="467.5" y="814.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="464.9" y="787.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="467.9" y="798.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="465.2" y="771.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.2" y="782.0"></text>
</g>
<g>
<title>ext4_da_write_end (38 samples, 0.44%)</title><rect x="465.8" y="835.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="468.8" y="846.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.06%)</title><rect x="465.9" y="819.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="468.9" y="830.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.06%)</title><rect x="465.9" y="803.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.9" y="814.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.04%)</title><rect x="466.0" y="787.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.0" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.04%)</title><rect x="466.0" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="469.0" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="466.2" y="755.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="469.2" y="766.0"></text>
</g>
<g>
<title>generic_write_end (32 samples, 0.37%)</title><rect x="466.6" y="819.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.6" y="830.0"></text>
</g>
<g>
<title>__mark_inode_dirty (24 samples, 0.28%)</title><rect x="466.7" y="803.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.7" y="814.0"></text>
</g>
<g>
<title>ext4_dirty_inode (23 samples, 0.27%)</title><rect x="466.9" y="787.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.9" y="798.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (22 samples, 0.26%)</title><rect x="467.0" y="771.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.0" y="782.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (19 samples, 0.22%)</title><rect x="467.0" y="755.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.0" y="766.0"></text>
</g>
<g>
<title>ext4_do_update_inode (18 samples, 0.21%)</title><rect x="467.1" y="739.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="470.1" y="750.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (13 samples, 0.15%)</title><rect x="467.8" y="723.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.8" y="734.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (10 samples, 0.12%)</title><rect x="468.2" y="707.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.2" y="718.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.02%)</title><rect x="468.4" y="691.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.4" y="702.0"></text>
</g>
<g>
<title>crypto_shash_update (7 samples, 0.08%)</title><rect x="468.6" y="691.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.6" y="702.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (7 samples, 0.08%)</title><rect x="468.6" y="675.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.6" y="686.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.04%)</title><rect x="469.6" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="472.6" y="766.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.04%)</title><rect x="469.6" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="472.6" y="750.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.04%)</title><rect x="469.6" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.6" y="734.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.04%)</title><rect x="469.6" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.6" y="718.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="469.7" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.7" y="702.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.05%)</title><rect x="470.0" y="803.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.0" y="814.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (3 samples, 0.04%)</title><rect x="470.2" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.2" y="798.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.02%)</title><rect x="470.3" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.3" y="782.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.04%)</title><rect x="470.6" y="803.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="473.6" y="814.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.02%)</title><rect x="471.7" y="883.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="474.7" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.04%)</title><rect x="471.9" y="915.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="474.9" y="926.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="471.9" y="899.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.9" y="910.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="471.9" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.9" y="894.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="471.9" y="867.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="474.9" y="878.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="472.1" y="851.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (7 samples, 0.08%)</title><rect x="472.5" y="1043.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="475.5" y="1054.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="472.8" y="1027.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="475.8" y="1038.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="473.2" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="476.2" y="1038.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.02%)</title><rect x="473.5" y="1059.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="476.5" y="1070.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.04%)</title><rect x="473.9" y="1091.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="476.9" y="1102.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="474.0" y="1075.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="477.0" y="1086.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (83 samples, 0.97%)</title><rect x="474.8" y="1091.0" width="11.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="477.8" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (81 samples, 0.95%)</title><rect x="475.0" y="1075.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="478.0" y="1086.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="475.0" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="478.0" y="1070.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (78 samples, 0.91%)</title><rect x="475.4" y="1059.0" width="10.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="478.4" y="1070.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (72 samples, 0.84%)</title><rect x="475.7" y="1043.0" width="9.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="478.7" y="1054.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.02%)</title><rect x="475.8" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="478.8" y="1038.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (69 samples, 0.81%)</title><rect x="476.1" y="1027.0" width="9.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="479.1" y="1038.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.02%)</title><rect x="476.1" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="479.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.04%)</title><rect x="476.5" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="479.5" y="1022.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (63 samples, 0.74%)</title><rect x="476.9" y="1011.0" width="8.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="479.9" y="1022.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17340238638144608911.so (4 samples, 0.05%)</title><rect x="477.5" y="995.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="480.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.02%)</title><rect x="477.7" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="480.7" y="990.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (44 samples, 0.51%)</title><rect x="478.0" y="995.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="481.0" y="1006.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17340238638144608911.so (37 samples, 0.43%)</title><rect x="478.4" y="979.0" width="5.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="481.4" y="990.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17340238638144608911.so (14 samples, 0.16%)</title><rect x="480.9" y="963.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="483.9" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="481.2" y="947.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="484.2" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.02%)</title><rect x="481.4" y="947.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="484.4" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.09%)</title><rect x="481.7" y="947.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="484.7" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="482.3" y="931.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="485.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.05%)</title><rect x="483.0" y="963.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="486.0" y="974.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="483.1" y="947.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="486.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.05%)</title><rect x="483.5" y="979.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="486.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.02%)</title><rect x="484.3" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="487.3" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (6 samples, 0.07%)</title><rect x="484.6" y="995.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="487.6" y="1006.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17340238638144608911.so (2 samples, 0.02%)</title><rect x="484.8" y="979.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="487.8" y="990.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.04%)</title><rect x="485.0" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="488.0" y="990.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="485.7" y="1043.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="488.7" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.04%)</title><rect x="487.0" y="1107.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="490.0" y="1118.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (4 samples, 0.05%)</title><rect x="488.2" y="1123.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="491.2" y="1134.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.14%)</title><rect x="488.9" y="1123.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="491.9" y="1134.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.02%)</title><rect x="489.2" y="1107.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="492.2" y="1118.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.06%)</title><rect x="489.6" y="1107.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.6" y="1118.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.04%)</title><rect x="489.8" y="1091.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="492.8" y="1102.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.02%)</title><rect x="490.3" y="1107.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="493.3" y="1118.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="491.4" y="1139.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="494.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.13%)</title><rect x="492.5" y="1203.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="495.5" y="1214.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.02%)</title><rect x="492.6" y="1187.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="495.6" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.02%)</title><rect x="492.9" y="1187.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="495.9" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="492.9" y="1171.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.9" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="492.9" y="1155.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="495.9" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="492.9" y="1139.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.9" y="1150.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="492.9" y="1123.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.9" y="1134.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="492.9" y="1107.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="495.9" y="1118.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.04%)</title><rect x="493.6" y="1187.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="496.6" y="1198.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="493.6" y="1171.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="496.6" y="1182.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.05%)</title><rect x="494.0" y="1203.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="497.0" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.07%)</title><rect x="494.5" y="1203.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="497.5" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="494.7" y="1187.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="497.7" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="494.7" y="1171.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="497.7" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.06%)</title><rect x="494.7" y="1155.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="497.7" y="1166.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.06%)</title><rect x="494.7" y="1139.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.7" y="1150.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.06%)</title><rect x="494.7" y="1123.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="497.7" y="1134.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.06%)</title><rect x="494.7" y="1107.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="497.7" y="1118.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.06%)</title><rect x="494.7" y="1091.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="497.7" y="1102.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="494.7" y="1075.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="497.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (9 samples, 0.11%)</title><rect x="495.5" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.5" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.06%)</title><rect x="496.0" y="1219.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.0" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.06%)</title><rect x="496.0" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.0" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="496.2" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.2" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="496.5" y="1187.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.5" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.toBytes (13 samples, 0.15%)</title><rect x="496.9" y="1235.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.9" y="1246.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.08%)</title><rect x="497.0" y="1219.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.0" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.04%)</title><rect x="497.6" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.6" y="1214.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (4 samples, 0.05%)</title><rect x="498.0" y="1219.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putLongUnaligned (2 samples, 0.02%)</title><rect x="498.2" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.2" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (20 samples, 0.23%)</title><rect x="498.7" y="1251.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.7" y="1262.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (6 samples, 0.07%)</title><rect x="498.7" y="1235.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.7" y="1246.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (6 samples, 0.07%)</title><rect x="498.7" y="1219.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.7" y="1230.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (6 samples, 0.07%)</title><rect x="498.7" y="1203.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.7" y="1214.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="498.7" y="1187.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.7" y="1198.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="498.7" y="1171.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.7" y="1182.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (2 samples, 0.02%)</title><rect x="498.7" y="1155.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.7" y="1166.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="498.7" y="1139.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.7" y="1150.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (4 samples, 0.05%)</title><rect x="498.9" y="1187.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.9" y="1198.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (4 samples, 0.05%)</title><rect x="498.9" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.9" y="1182.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="499.1" y="1155.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.1" y="1166.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="499.1" y="1139.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.1" y="1150.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (2 samples, 0.02%)</title><rect x="499.1" y="1123.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.1" y="1134.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="499.1" y="1107.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.1" y="1118.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="499.1" y="1091.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.1" y="1102.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (14 samples, 0.16%)</title><rect x="499.5" y="1235.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.5" y="1246.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (13 samples, 0.15%)</title><rect x="499.6" y="1219.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.6" y="1230.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (5 samples, 0.06%)</title><rect x="499.9" y="1203.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.9" y="1214.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (2 samples, 0.02%)</title><rect x="499.9" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.9" y="1198.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (2 samples, 0.02%)</title><rect x="499.9" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.9" y="1182.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (3 samples, 0.04%)</title><rect x="500.2" y="1187.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.2" y="1198.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (3 samples, 0.04%)</title><rect x="500.2" y="1171.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.2" y="1182.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.forEachByte (3 samples, 0.04%)</title><rect x="500.2" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.2" y="1166.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.forEachByte0 (3 samples, 0.04%)</title><rect x="500.2" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.2" y="1150.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (6 samples, 0.07%)</title><rect x="500.6" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.6" y="1214.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (6 samples, 0.07%)</title><rect x="500.6" y="1187.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.6" y="1198.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter.convertObject (2 samples, 0.02%)</title><rect x="500.6" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="500.9" y="1171.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (239 samples, 2.79%)</title><rect x="501.4" y="1299.0" width="32.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.4" y="1310.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19 samples, 0.22%)</title><rect x="501.8" y="1283.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.04%)</title><rect x="502.0" y="1267.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="502.0" y="1251.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="502.0" y="1235.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="502.4" y="1267.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="502.4" y="1251.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.05%)</title><rect x="502.4" y="1235.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.04%)</title><rect x="502.5" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="502.5" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="502.5" y="1187.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.04%)</title><rect x="502.5" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="502.7" y="1155.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="502.7" y="1139.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$137/104775403.apply (11 samples, 0.13%)</title><rect x="502.9" y="1267.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.9" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$putProxyResponse$7 (9 samples, 0.11%)</title><rect x="503.2" y="1251.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.2" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (9 samples, 0.11%)</title><rect x="503.2" y="1235.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.2" y="1246.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (6 samples, 0.07%)</title><rect x="503.3" y="1219.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.3" y="1230.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (6 samples, 0.07%)</title><rect x="503.3" y="1203.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.3" y="1214.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (6 samples, 0.07%)</title><rect x="503.3" y="1187.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.3" y="1198.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (5 samples, 0.06%)</title><rect x="503.5" y="1171.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.5" y="1182.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (5 samples, 0.06%)</title><rect x="503.5" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.5" y="1166.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (5 samples, 0.06%)</title><rect x="503.5" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.5" y="1150.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (5 samples, 0.06%)</title><rect x="503.5" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.5" y="1134.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (5 samples, 0.06%)</title><rect x="503.5" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.5" y="1118.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (5 samples, 0.06%)</title><rect x="503.5" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.5" y="1102.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (5 samples, 0.06%)</title><rect x="503.5" y="1075.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.5" y="1086.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (2 samples, 0.02%)</title><rect x="504.2" y="1219.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.2" y="1230.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (2 samples, 0.02%)</title><rect x="504.2" y="1203.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (216 samples, 2.52%)</title><rect x="504.4" y="1283.0" width="29.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.4" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="504.9" y="1267.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (211 samples, 2.46%)</title><rect x="505.1" y="1267.0" width="29.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.1" y="1278.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$140/326552115.accept (211 samples, 2.46%)</title><rect x="505.1" y="1251.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.1" y="1262.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$atLeastAsync$8 (210 samples, 2.45%)</title><rect x="505.3" y="1235.0" width="28.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.3" y="1246.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (196 samples, 2.29%)</title><rect x="505.8" y="1219.0" width="27.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.8" y="1230.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.04%)</title><rect x="505.8" y="1203.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="506.0" y="1187.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="506.0" y="1171.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (193 samples, 2.25%)</title><rect x="506.2" y="1203.0" width="26.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.2" y="1214.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (24 samples, 0.28%)</title><rect x="506.4" y="1187.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (18 samples, 0.21%)</title><rect x="507.2" y="1171.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="507.2" y="1155.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.05%)</title><rect x="507.2" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="507.3" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.02%)</title><rect x="507.3" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.02%)</title><rect x="507.7" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="507.7" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="507.7" y="1123.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.cast (2 samples, 0.02%)</title><rect x="507.7" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests$$Lambda$143/336063720.apply (12 samples, 0.14%)</title><rect x="508.0" y="1155.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.lambda$respond$1 (11 samples, 0.13%)</title><rect x="508.2" y="1139.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (11 samples, 0.13%)</title><rect x="508.2" y="1123.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.2" y="1134.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (10 samples, 0.12%)</title><rect x="508.2" y="1107.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.2" y="1118.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (9 samples, 0.11%)</title><rect x="508.3" y="1091.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.3" y="1102.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (9 samples, 0.11%)</title><rect x="508.3" y="1075.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.3" y="1086.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (8 samples, 0.09%)</title><rect x="508.4" y="1059.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.4" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (7 samples, 0.08%)</title><rect x="508.6" y="1043.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.6" y="1054.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (5 samples, 0.06%)</title><rect x="508.7" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.7" y="1038.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (5 samples, 0.06%)</title><rect x="508.7" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.7" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (5 samples, 0.06%)</title><rect x="508.7" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.7" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (5 samples, 0.06%)</title><rect x="508.7" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.7" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (3 samples, 0.04%)</title><rect x="509.0" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (168 samples, 1.96%)</title><rect x="509.7" y="1187.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.7" y="1198.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (168 samples, 1.96%)</title><rect x="509.7" y="1171.0" width="23.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.7" y="1182.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="510.0" y="1155.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$145/1327492977.accept (164 samples, 1.91%)</title><rect x="510.2" y="1155.0" width="22.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.2" y="1166.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$respond$10 (162 samples, 1.89%)</title><rect x="510.5" y="1139.0" width="22.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.5" y="1150.0">r..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (147 samples, 1.72%)</title><rect x="510.9" y="1123.0" width="20.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.9" y="1134.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.newPromise (6 samples, 0.07%)</title><rect x="511.3" y="1107.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.3" y="1118.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.&lt;init&gt; (2 samples, 0.02%)</title><rect x="511.6" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.6" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (2 samples, 0.02%)</title><rect x="511.9" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.9" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (138 samples, 1.61%)</title><rect x="512.2" y="1107.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.2" y="1118.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (138 samples, 1.61%)</title><rect x="512.2" y="1091.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.2" y="1102.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.newInstance (40 samples, 0.47%)</title><rect x="512.6" y="1075.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.6" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.init (11 samples, 0.13%)</title><rect x="512.6" y="1059.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.6" y="1070.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.incrementPendingOutboundBytes (3 samples, 0.04%)</title><rect x="513.0" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.0" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.incrementPendingOutboundBytes (2 samples, 0.02%)</title><rect x="513.1" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.1" y="1038.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.incrementPendingOutboundBytes (2 samples, 0.02%)</title><rect x="513.1" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.1" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMessageSizeEstimator$HandleImpl.size (5 samples, 0.06%)</title><rect x="513.4" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.4" y="1054.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (29 samples, 0.34%)</title><rect x="514.1" y="1059.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.1" y="1070.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (29 samples, 0.34%)</title><rect x="514.1" y="1043.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.1" y="1054.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.newHandle (3 samples, 0.04%)</title><rect x="514.4" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.4" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (20 samples, 0.23%)</title><rect x="514.8" y="1027.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.8" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavenge (20 samples, 0.23%)</title><rect x="514.8" y="1011.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.8" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavengeSome (19 samples, 0.22%)</title><rect x="514.9" y="995.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.9" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$WeakOrderQueue.transfer (11 samples, 0.13%)</title><rect x="516.0" y="979.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.0" y="990.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (4 samples, 0.05%)</title><rect x="517.5" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.5" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (4 samples, 0.05%)</title><rect x="517.5" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.5" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask$1.newObject (2 samples, 0.02%)</title><rect x="517.7" y="995.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.7" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (4 samples, 0.05%)</title><rect x="518.1" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.1" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.isNotValidPromise (2 samples, 0.02%)</title><rect x="518.6" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.6" y="1086.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (86 samples, 1.00%)</title><rect x="518.9" y="1075.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.9" y="1086.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (85 samples, 0.99%)</title><rect x="519.0" y="1059.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.0" y="1070.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (83 samples, 0.97%)</title><rect x="519.3" y="1043.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.3" y="1054.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (79 samples, 0.92%)</title><rect x="519.3" y="1027.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.3" y="1038.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.wakeup (76 samples, 0.89%)</title><rect x="519.7" y="1011.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.7" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (76 samples, 0.89%)</title><rect x="519.7" y="995.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.7" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="520.1" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="523.1" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (71 samples, 0.83%)</title><rect x="520.4" y="979.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.4" y="990.0"></text>
</g>
<g>
<title>__write (69 samples, 0.81%)</title><rect x="520.7" y="963.0" width="9.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="523.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.76%)</title><rect x="521.2" y="947.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.76%)</title><rect x="521.2" y="931.0" width="9.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="524.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_write (64 samples, 0.75%)</title><rect x="521.4" y="915.0" width="8.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.4" y="926.0"></text>
</g>
<g>
<title>ksys_write (64 samples, 0.75%)</title><rect x="521.4" y="899.0" width="8.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.4" y="910.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="521.4" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="524.4" y="894.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="521.4" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.4" y="878.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="521.4" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.4" y="862.0"></text>
</g>
<g>
<title>vfs_write (62 samples, 0.72%)</title><rect x="521.7" y="883.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.7" y="894.0"></text>
</g>
<g>
<title>__vfs_write (57 samples, 0.67%)</title><rect x="521.8" y="867.0" width="7.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.8" y="878.0"></text>
</g>
<g>
<title>new_sync_write (56 samples, 0.65%)</title><rect x="521.8" y="851.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.8" y="862.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="522.1" y="835.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.1" y="846.0"></text>
</g>
<g>
<title>pipe_write (51 samples, 0.60%)</title><rect x="522.5" y="835.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.5" y="846.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 0.51%)</title><rect x="522.8" y="819.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="525.8" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 0.51%)</title><rect x="522.8" y="803.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.8" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (44 samples, 0.51%)</title><rect x="522.8" y="787.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="525.8" y="798.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.02%)</title><rect x="529.1" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="532.1" y="830.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="529.6" y="867.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="532.6" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (4 samples, 0.05%)</title><rect x="530.2" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.2" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (4 samples, 0.05%)</title><rect x="530.2" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.2" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (4 samples, 0.05%)</title><rect x="530.2" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.2" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (4 samples, 0.05%)</title><rect x="530.2" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.2" y="990.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (2 samples, 0.02%)</title><rect x="530.9" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.9" y="1086.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (2 samples, 0.02%)</title><rect x="531.2" y="1123.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.2" y="1134.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (2 samples, 0.02%)</title><rect x="531.2" y="1107.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.2" y="1118.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isKeepAlive (8 samples, 0.09%)</title><rect x="531.4" y="1123.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="1134.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeaders.containsValue (5 samples, 0.06%)</title><rect x="531.4" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.4" y="1118.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.valueCharSequenceIterator (4 samples, 0.05%)</title><rect x="531.6" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.6" y="1102.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.valueIterator (4 samples, 0.05%)</title><rect x="531.6" y="1075.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.6" y="1086.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders$ValueIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="531.7" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.7" y="1070.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.headers (2 samples, 0.02%)</title><rect x="532.1" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.1" y="1118.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.isCancelled (2 samples, 0.02%)</title><rect x="532.5" y="1123.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (10 samples, 0.12%)</title><rect x="532.8" y="1219.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.8" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="533.9" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (10 samples, 0.12%)</title><rect x="534.3" y="1299.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.12%)</title><rect x="534.3" y="1283.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (10 samples, 0.12%)</title><rect x="534.3" y="1267.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (9 samples, 0.11%)</title><rect x="534.5" y="1251.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (9 samples, 0.11%)</title><rect x="534.5" y="1235.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (9 samples, 0.11%)</title><rect x="534.5" y="1219.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (14 samples, 0.16%)</title><rect x="535.7" y="1299.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.06%)</title><rect x="536.8" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (4 samples, 0.05%)</title><rect x="536.8" y="1267.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.02%)</title><rect x="536.8" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.02%)</title><rect x="537.1" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (182 samples, 2.12%)</title><rect x="537.6" y="1299.0" width="25.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.6" y="1310.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (162 samples, 1.89%)</title><rect x="540.4" y="1283.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.4" y="1294.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (4 samples, 0.05%)</title><rect x="540.7" y="1267.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (115 samples, 1.34%)</title><rect x="541.2" y="1267.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.05%)</title><rect x="541.5" y="1251.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (3 samples, 0.04%)</title><rect x="542.0" y="1251.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.04%)</title><rect x="542.0" y="1235.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.04%)</title><rect x="542.0" y="1219.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.0" y="1230.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.02%)</title><rect x="542.0" y="1203.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="545.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.02%)</title><rect x="542.4" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (24 samples, 0.28%)</title><rect x="542.7" y="1251.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.27%)</title><rect x="542.9" y="1235.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.23%)</title><rect x="543.1" y="1219.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.23%)</title><rect x="543.1" y="1203.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.23%)</title><rect x="543.1" y="1187.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.1" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="543.1" y="1171.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="546.1" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.20%)</title><rect x="543.5" y="1171.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="546.5" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.19%)</title><rect x="543.7" y="1155.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.7" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.19%)</title><rect x="543.7" y="1139.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="546.7" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.19%)</title><rect x="543.7" y="1123.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="546.7" y="1134.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.19%)</title><rect x="543.7" y="1107.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.7" y="1118.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.19%)</title><rect x="543.7" y="1091.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="546.7" y="1102.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="544.2" y="1075.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="547.2" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.12%)</title><rect x="544.5" y="1075.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="547.5" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.12%)</title><rect x="544.5" y="1059.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="547.5" y="1070.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.11%)</title><rect x="544.5" y="1043.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="547.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (80 samples, 0.93%)</title><rect x="546.0" y="1251.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (78 samples, 0.91%)</title><rect x="546.3" y="1235.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.3" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Park (37 samples, 0.43%)</title><rect x="546.6" y="1219.0" width="5.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="549.6" y="1230.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="546.9" y="1203.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="549.9" y="1214.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.12%)</title><rect x="547.1" y="1203.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="550.1" y="1214.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="548.0" y="1187.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="551.0" y="1198.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (17 samples, 0.20%)</title><rect x="548.9" y="1203.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="551.9" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.15%)</title><rect x="549.5" y="1187.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="552.5" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.15%)</title><rect x="549.5" y="1171.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="552.5" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.13%)</title><rect x="549.7" y="1155.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="552.7" y="1166.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.13%)</title><rect x="549.7" y="1139.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="552.7" y="1150.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.11%)</title><rect x="549.7" y="1123.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="552.7" y="1134.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="550.6" y="1107.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.6" y="1118.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="551.0" y="1123.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.0" y="1134.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="551.4" y="1203.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="554.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.46%)</title><rect x="551.7" y="1219.0" width="5.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="554.7" y="1230.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.02%)</title><rect x="551.7" y="1203.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="554.7" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_wait (27 samples, 0.32%)</title><rect x="551.9" y="1203.0" width="3.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="554.9" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="554.7" y="1187.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="557.7" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="554.7" y="1171.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="557.7" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.07%)</title><rect x="554.8" y="1155.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.8" y="1166.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.07%)</title><rect x="554.8" y="1139.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="557.8" y="1150.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.07%)</title><rect x="554.8" y="1123.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="557.8" y="1134.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.05%)</title><rect x="555.0" y="1107.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.0" y="1118.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="555.0" y="1091.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.0" y="1102.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="555.1" y="1075.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="558.1" y="1086.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.08%)</title><rect x="555.7" y="1203.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="558.7" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.02%)</title><rect x="556.8" y="1203.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="559.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (26 samples, 0.30%)</title><rect x="557.0" y="1267.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (26 samples, 0.30%)</title><rect x="557.0" y="1251.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (13 samples, 0.15%)</title><rect x="557.0" y="1235.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (13 samples, 0.15%)</title><rect x="557.0" y="1219.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.0" y="1230.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (11 samples, 0.13%)</title><rect x="557.0" y="1203.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="560.0" y="1214.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="557.2" y="1187.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="560.2" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="557.7" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="560.7" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="558.1" y="1187.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="561.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10 samples, 0.12%)</title><rect x="558.8" y="1235.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.02%)</title><rect x="559.2" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.02%)</title><rect x="559.2" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.04%)</title><rect x="559.5" y="1219.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.04%)</title><rect x="560.2" y="1235.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.02%)</title><rect x="560.3" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.18%)</title><rect x="560.6" y="1267.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.18%)</title><rect x="560.6" y="1251.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.15%)</title><rect x="560.6" y="1235.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.14%)</title><rect x="560.6" y="1219.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.14%)</title><rect x="560.6" y="1203.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.6" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.12%)</title><rect x="560.9" y="1187.0" width="1.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="563.9" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.12%)</title><rect x="560.9" y="1171.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="563.9" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.12%)</title><rect x="560.9" y="1155.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.9" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.12%)</title><rect x="560.9" y="1139.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.9" y="1150.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.12%)</title><rect x="560.9" y="1123.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="563.9" y="1134.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.12%)</title><rect x="560.9" y="1107.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="563.9" y="1118.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="561.0" y="1091.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="564.0" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.08%)</title><rect x="561.3" y="1091.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.3" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.08%)</title><rect x="561.3" y="1075.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.3" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.08%)</title><rect x="561.3" y="1059.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.02%)</title><rect x="562.4" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$224/1128521182.run (518 samples, 6.04%)</title><rect x="563.0" y="1299.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.0" y="1310.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (515 samples, 6.01%)</title><rect x="563.4" y="1283.0" width="70.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.4" y="1294.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (513 samples, 5.99%)</title><rect x="563.6" y="1267.0" width="70.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.6" y="1278.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (508 samples, 5.93%)</title><rect x="564.3" y="1251.0" width="70.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.3" y="1262.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (507 samples, 5.92%)</title><rect x="564.5" y="1235.0" width="69.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.5" y="1246.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (507 samples, 5.92%)</title><rect x="564.5" y="1219.0" width="69.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.5" y="1230.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (506 samples, 5.90%)</title><rect x="564.5" y="1203.0" width="69.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.5" y="1214.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (506 samples, 5.90%)</title><rect x="564.5" y="1187.0" width="69.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.5" y="1198.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (506 samples, 5.90%)</title><rect x="564.5" y="1171.0" width="69.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.5" y="1182.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.02%)</title><rect x="564.5" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (504 samples, 5.88%)</title><rect x="564.8" y="1155.0" width="69.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.8" y="1166.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (504 samples, 5.88%)</title><rect x="564.8" y="1139.0" width="69.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.8" y="1150.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (129 samples, 1.51%)</title><rect x="565.6" y="1123.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="566.1" y="1107.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="566.1" y="1091.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$229/367096501.get$Lambda (4 samples, 0.05%)</title><rect x="566.1" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$242/1556043569.get$Lambda (2 samples, 0.02%)</title><rect x="566.7" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (99 samples, 1.16%)</title><rect x="567.1" y="1107.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (97 samples, 1.13%)</title><rect x="567.4" y="1091.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (96 samples, 1.12%)</title><rect x="567.5" y="1075.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.04%)</title><rect x="567.6" y="1059.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="567.6" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="567.6" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.cast (3 samples, 0.04%)</title><rect x="567.6" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (89 samples, 1.04%)</title><rect x="568.1" y="1059.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10 samples, 0.12%)</title><rect x="568.2" y="1043.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="568.3" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.02%)</title><rect x="568.3" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$240/494233187.apply (6 samples, 0.07%)</title><rect x="568.6" y="1027.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (6 samples, 0.07%)</title><rect x="568.6" y="1011.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (6 samples, 0.07%)</title><rect x="568.6" y="995.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.04%)</title><rect x="569.0" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (74 samples, 0.86%)</title><rect x="569.6" y="1043.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (73 samples, 0.85%)</title><rect x="569.7" y="1027.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/84871828.apply (71 samples, 0.83%)</title><rect x="570.0" y="1011.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (70 samples, 0.82%)</title><rect x="570.1" y="995.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (69 samples, 0.81%)</title><rect x="570.3" y="979.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$147/914931583.apply (69 samples, 0.81%)</title><rect x="570.3" y="963.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (68 samples, 0.79%)</title><rect x="570.4" y="947.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.02%)</title><rect x="570.7" y="931.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.02%)</title><rect x="570.7" y="915.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="570.7" y="899.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="570.7" y="883.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (64 samples, 0.75%)</title><rect x="570.9" y="931.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (29 samples, 0.34%)</title><rect x="571.8" y="915.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (29 samples, 0.34%)</title><rect x="571.8" y="899.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (29 samples, 0.34%)</title><rect x="571.8" y="883.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$230/1131668274.accept (5 samples, 0.06%)</title><rect x="572.5" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (5 samples, 0.06%)</title><rect x="572.5" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (4 samples, 0.05%)</title><rect x="572.6" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.05%)</title><rect x="572.6" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="572.7" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.02%)</title><rect x="572.9" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.02%)</title><rect x="572.9" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$234/150281006.accept (15 samples, 0.18%)</title><rect x="573.2" y="867.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (15 samples, 0.18%)</title><rect x="573.2" y="851.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (14 samples, 0.16%)</title><rect x="573.3" y="835.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (13 samples, 0.15%)</title><rect x="573.4" y="819.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (11 samples, 0.13%)</title><rect x="573.6" y="803.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.13%)</title><rect x="573.6" y="787.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.13%)</title><rect x="573.6" y="771.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.06%)</title><rect x="573.6" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.06%)</title><rect x="573.6" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.06%)</title><rect x="573.6" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.06%)</title><rect x="573.6" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.06%)</title><rect x="573.6" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.06%)</title><rect x="573.6" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.6" y="686.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="573.6" y="659.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="576.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.07%)</title><rect x="574.3" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.07%)</title><rect x="574.3" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (6 samples, 0.07%)</title><rect x="574.3" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.06%)</title><rect x="574.4" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.06%)</title><rect x="574.4" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="574.8" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="574.8" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="575.2" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="575.2" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (29 samples, 0.34%)</title><rect x="575.8" y="915.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.02%)</title><rect x="575.9" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.02%)</title><rect x="576.2" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (24 samples, 0.28%)</title><rect x="576.5" y="899.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.&lt;init&gt; (2 samples, 0.02%)</title><rect x="577.0" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.&lt;init&gt; (2 samples, 0.02%)</title><rect x="577.0" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (6 samples, 0.07%)</title><rect x="577.3" y="883.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (5 samples, 0.06%)</title><rect x="577.4" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.02%)</title><rect x="577.8" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (12 samples, 0.14%)</title><rect x="578.1" y="883.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="578.2" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="578.4" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.4" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="578.4" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.4" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="578.4" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.02%)</title><rect x="578.7" y="867.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="578.9" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.9" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.02%)</title><rect x="578.9" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.9" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="579.3" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="579.3" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.04%)</title><rect x="579.8" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$243/959062952.get (3 samples, 0.04%)</title><rect x="580.3" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (12 samples, 0.14%)</title><rect x="580.7" y="1107.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (5 samples, 0.06%)</title><rect x="581.7" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.07%)</title><rect x="582.5" y="1107.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$242/1556043569.run (4 samples, 0.05%)</title><rect x="582.7" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.02%)</title><rect x="582.9" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.02%)</title><rect x="582.9" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.02%)</title><rect x="583.3" y="1123.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.02%)</title><rect x="583.3" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (364 samples, 4.25%)</title><rect x="583.6" y="1123.0" width="50.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.6" y="1134.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (364 samples, 4.25%)</title><rect x="583.6" y="1107.0" width="50.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.6" y="1118.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (364 samples, 4.25%)</title><rect x="583.6" y="1091.0" width="50.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.6" y="1102.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (361 samples, 4.21%)</title><rect x="584.0" y="1075.0" width="49.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.0" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$241/1791980149.run (8 samples, 0.09%)</title><rect x="584.3" y="1059.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (8 samples, 0.09%)</title><rect x="584.3" y="1043.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (8 samples, 0.09%)</title><rect x="584.3" y="1027.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (3 samples, 0.04%)</title><rect x="584.9" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.theExecutor (2 samples, 0.02%)</title><rect x="584.9" y="995.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (346 samples, 4.04%)</title><rect x="585.5" y="1059.0" width="47.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.5" y="1070.0">jdk/..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (312 samples, 3.64%)</title><rect x="585.8" y="1043.0" width="43.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.8" y="1054.0">java..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (311 samples, 3.63%)</title><rect x="586.0" y="1027.0" width="42.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.0" y="1038.0">sun/..</text>
</g>
<g>
<title>java/util/Objects.checkFromIndexSize (2 samples, 0.02%)</title><rect x="586.1" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (301 samples, 3.51%)</title><rect x="586.8" y="1011.0" width="41.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.8" y="1022.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (301 samples, 3.51%)</title><rect x="586.8" y="995.0" width="41.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.8" y="1006.0">sun..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (19 samples, 0.22%)</title><rect x="587.9" y="979.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.9" y="990.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (15 samples, 0.18%)</title><rect x="588.4" y="963.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (14 samples, 0.16%)</title><rect x="588.6" y="947.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory0 (4 samples, 0.05%)</title><rect x="588.6" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.6" y="942.0"></text>
</g>
<g>
<title>Unsafe_CopyMemory0 (2 samples, 0.02%)</title><rect x="588.7" y="915.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="591.7" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="588.7" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="591.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (10 samples, 0.12%)</title><rect x="589.1" y="931.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (8 samples, 0.09%)</title><rect x="589.4" y="915.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (7 samples, 0.08%)</title><rect x="589.5" y="899.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (7 samples, 0.08%)</title><rect x="589.5" y="883.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (4 samples, 0.05%)</title><rect x="589.8" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.8" y="878.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (3 samples, 0.04%)</title><rect x="589.9" y="851.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="592.9" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="589.9" y="835.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="592.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.clearRefs (2 samples, 0.02%)</title><rect x="590.5" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.5" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (3 samples, 0.04%)</title><rect x="590.8" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.8" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="590.8" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.8" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.04%)</title><rect x="590.8" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.8" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.02%)</title><rect x="590.8" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (7 samples, 0.08%)</title><rect x="591.3" y="979.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (254 samples, 2.96%)</title><rect x="592.3" y="979.0" width="35.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.3" y="990.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (253 samples, 2.95%)</title><rect x="592.4" y="963.0" width="34.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.4" y="974.0">su..</text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="593.4" y="947.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="596.4" y="958.0"></text>
</g>
<g>
<title>writev (244 samples, 2.85%)</title><rect x="593.7" y="947.0" width="33.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="596.7" y="958.0">wr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (238 samples, 2.78%)</title><rect x="594.5" y="931.0" width="32.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="597.5" y="942.0">en..</text>
</g>
<g>
<title>do_syscall_64 (238 samples, 2.78%)</title><rect x="594.5" y="915.0" width="32.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="597.5" y="926.0">do..</text>
</g>
<g>
<title>__x64_sys_writev (238 samples, 2.78%)</title><rect x="594.5" y="899.0" width="32.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="597.5" y="910.0">__..</text>
</g>
<g>
<title>do_writev (238 samples, 2.78%)</title><rect x="594.5" y="883.0" width="32.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.5" y="894.0">do..</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.06%)</title><rect x="594.6" y="867.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="597.6" y="878.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="594.6" y="851.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="597.6" y="862.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="594.6" y="835.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="597.6" y="846.0"></text>
</g>
<g>
<title>vfs_writev (232 samples, 2.71%)</title><rect x="595.3" y="867.0" width="32.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="598.3" y="878.0">vf..</text>
</g>
<g>
<title>do_iter_write (230 samples, 2.68%)</title><rect x="595.5" y="851.0" width="31.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="598.5" y="862.0">do..</text>
</g>
<g>
<title>do_iter_readv_writev (223 samples, 2.60%)</title><rect x="595.7" y="835.0" width="30.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="598.7" y="846.0">do..</text>
</g>
<g>
<title>sock_write_iter (222 samples, 2.59%)</title><rect x="595.9" y="819.0" width="30.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="598.9" y="830.0">so..</text>
</g>
<g>
<title>sock_sendmsg (222 samples, 2.59%)</title><rect x="595.9" y="803.0" width="30.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="598.9" y="814.0">so..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="596.0" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="599.0" y="798.0"></text>
</g>
<g>
<title>inet6_sendmsg (215 samples, 2.51%)</title><rect x="596.4" y="787.0" width="29.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.4" y="798.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (213 samples, 2.49%)</title><rect x="596.7" y="771.0" width="29.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="599.7" y="782.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (208 samples, 2.43%)</title><rect x="597.4" y="755.0" width="28.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="600.4" y="766.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.02%)</title><rect x="598.1" y="739.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.1" y="750.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.02%)</title><rect x="598.8" y="739.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.8" y="750.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="598.8" y="723.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="601.8" y="734.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (21 samples, 0.25%)</title><rect x="599.0" y="739.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="602.0" y="750.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.25%)</title><rect x="599.0" y="723.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="602.0" y="734.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.08%)</title><rect x="599.3" y="707.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="602.3" y="718.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.06%)</title><rect x="599.4" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.4" y="702.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.07%)</title><rect x="600.6" y="707.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.6" y="718.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.06%)</title><rect x="600.7" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.7" y="702.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.02%)</title><rect x="601.1" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.1" y="686.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.02%)</title><rect x="601.1" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="604.1" y="670.0"></text>
</g>
<g>
<title>allocate_slab (2 samples, 0.02%)</title><rect x="601.1" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.1" y="654.0"></text>
</g>
<g>
<title>alloc_slab_page (2 samples, 0.02%)</title><rect x="601.1" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.1" y="638.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.02%)</title><rect x="601.1" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.1" y="622.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="601.1" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="604.1" y="606.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="601.1" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.1" y="590.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.04%)</title><rect x="601.4" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="604.4" y="718.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.04%)</title><rect x="601.4" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="604.4" y="702.0"></text>
</g>
<g>
<title>tcp_push (171 samples, 2.00%)</title><rect x="601.9" y="739.0" width="23.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.9" y="750.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (171 samples, 2.00%)</title><rect x="601.9" y="723.0" width="23.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="604.9" y="734.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (171 samples, 2.00%)</title><rect x="601.9" y="707.0" width="23.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="604.9" y="718.0">t..</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.04%)</title><rect x="602.9" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="605.9" y="702.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (143 samples, 1.67%)</title><rect x="603.3" y="691.0" width="19.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="606.3" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="603.6" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="606.6" y="686.0"></text>
</g>
<g>
<title>ip_queue_xmit (137 samples, 1.60%)</title><rect x="603.9" y="675.0" width="18.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.9" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (135 samples, 1.58%)</title><rect x="603.9" y="659.0" width="18.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="606.9" y="670.0"></text>
</g>
<g>
<title>ip_local_out (132 samples, 1.54%)</title><rect x="604.3" y="643.0" width="18.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="607.3" y="654.0"></text>
</g>
<g>
<title>ip_output (131 samples, 1.53%)</title><rect x="604.4" y="627.0" width="18.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="607.4" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (130 samples, 1.52%)</title><rect x="604.5" y="611.0" width="17.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="607.5" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (130 samples, 1.52%)</title><rect x="604.5" y="595.0" width="17.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="607.5" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (130 samples, 1.52%)</title><rect x="604.5" y="579.0" width="17.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="607.5" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (116 samples, 1.35%)</title><rect x="604.8" y="563.0" width="16.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.8" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (116 samples, 1.35%)</title><rect x="604.8" y="547.0" width="16.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="607.8" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (114 samples, 1.33%)</title><rect x="605.1" y="531.0" width="15.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="608.1" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (114 samples, 1.33%)</title><rect x="605.1" y="515.0" width="15.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.1" y="526.0"></text>
</g>
<g>
<title>net_rx_action (111 samples, 1.30%)</title><rect x="605.4" y="499.0" width="15.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.4" y="510.0"></text>
</g>
<g>
<title>process_backlog (105 samples, 1.23%)</title><rect x="606.2" y="483.0" width="14.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="609.2" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (103 samples, 1.20%)</title><rect x="606.5" y="467.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="609.5" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (102 samples, 1.19%)</title><rect x="606.5" y="451.0" width="14.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="609.5" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="606.5" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.5" y="446.0"></text>
</g>
<g>
<title>ip_rcv (99 samples, 1.16%)</title><rect x="606.9" y="435.0" width="13.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="609.9" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (99 samples, 1.16%)</title><rect x="606.9" y="419.0" width="13.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.9" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (95 samples, 1.11%)</title><rect x="607.0" y="403.0" width="13.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="610.0" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (95 samples, 1.11%)</title><rect x="607.0" y="387.0" width="13.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.0" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (93 samples, 1.09%)</title><rect x="607.0" y="371.0" width="12.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="610.0" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (91 samples, 1.06%)</title><rect x="607.3" y="355.0" width="12.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="610.3" y="366.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.09%)</title><rect x="607.7" y="339.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="610.7" y="350.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.02%)</title><rect x="608.5" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="611.5" y="334.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.06%)</title><rect x="608.8" y="339.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="611.8" y="350.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="609.2" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="612.2" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (74 samples, 0.86%)</title><rect x="609.5" y="339.0" width="10.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="612.5" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (72 samples, 0.84%)</title><rect x="609.8" y="323.0" width="9.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="612.8" y="334.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.05%)</title><rect x="610.1" y="307.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="613.1" y="318.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.04%)</title><rect x="610.2" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="613.2" y="302.0"></text>
</g>
<g>
<title>tcp_data_ready (59 samples, 0.69%)</title><rect x="610.7" y="307.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="613.7" y="318.0"></text>
</g>
<g>
<title>sock_def_readable (59 samples, 0.69%)</title><rect x="610.7" y="291.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="613.7" y="302.0"></text>
</g>
<g>
<title>__wake_up_sync_key (59 samples, 0.69%)</title><rect x="610.7" y="275.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.7" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (59 samples, 0.69%)</title><rect x="610.7" y="259.0" width="8.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.7" y="270.0"></text>
</g>
<g>
<title>__lock_text_start (58 samples, 0.68%)</title><rect x="610.7" y="243.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="613.7" y="254.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="618.9" y="307.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.9" y="318.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="619.1" y="307.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="622.1" y="318.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="619.3" y="291.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="622.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.02%)</title><rect x="620.2" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="623.2" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.14%)</title><rect x="620.8" y="563.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.8" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.14%)</title><rect x="620.8" y="547.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.8" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.05%)</title><rect x="621.5" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="624.5" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.04%)</title><rect x="621.6" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="624.6" y="526.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="621.6" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.6" y="510.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="621.6" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="624.6" y="494.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="621.6" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="624.6" y="478.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="622.0" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="625.0" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.07%)</title><rect x="623.3" y="691.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="626.3" y="702.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="623.7" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="626.7" y="686.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="623.7" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.7" y="670.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="623.7" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="626.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="623.7" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="626.7" y="638.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.08%)</title><rect x="624.4" y="691.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.4" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="624.9" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="627.9" y="686.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="624.9" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.9" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="624.9" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="627.9" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.05%)</title><rect x="625.5" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="628.5" y="750.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="625.5" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="628.5" y="734.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.02%)</title><rect x="625.7" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.7" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.04%)</title><rect x="626.0" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="629.0" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="626.0" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="629.0" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="626.0" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="629.0" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.04%)</title><rect x="626.0" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="629.0" y="750.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="626.4" y="835.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="629.4" y="846.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="626.6" y="819.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="629.6" y="830.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="626.7" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="629.7" y="814.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="626.7" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.7" y="798.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="626.7" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="629.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.05%)</title><rect x="627.3" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="627.8" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.8" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (3 samples, 0.04%)</title><rect x="628.4" y="1011.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.4" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (31 samples, 0.36%)</title><rect x="628.8" y="1043.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (3 samples, 0.04%)</title><rect x="630.8" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (2 samples, 0.02%)</title><rect x="631.0" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (11 samples, 0.13%)</title><rect x="631.3" y="1027.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (11 samples, 0.13%)</title><rect x="631.3" y="1011.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.3" y="1022.0"></text>
</g>
<g>
<title>JVM_NewArray (9 samples, 0.11%)</title><rect x="631.3" y="995.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="634.3" y="1006.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, Thread*) (7 samples, 0.08%)</title><rect x="631.5" y="979.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="634.5" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.05%)</title><rect x="631.7" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="634.7" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="631.7" y="947.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="634.7" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="631.7" y="931.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="634.7" y="942.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (2 samples, 0.02%)</title><rect x="632.2" y="963.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="635.2" y="974.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.02%)</title><rect x="632.8" y="1027.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.8" y="1038.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListN.get (2 samples, 0.02%)</title><rect x="632.8" y="1011.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (3 samples, 0.04%)</title><rect x="633.3" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.04%)</title><rect x="633.7" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.04%)</title><rect x="633.7" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (3 samples, 0.04%)</title><rect x="633.7" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (647 samples, 7.55%)</title><rect x="634.3" y="1299.0" width="89.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.3" y="1310.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (647 samples, 7.55%)</title><rect x="634.3" y="1283.0" width="89.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.3" y="1294.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.05%)</title><rect x="634.3" y="1267.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.05%)</title><rect x="634.3" y="1251.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.05%)</title><rect x="634.3" y="1235.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.05%)</title><rect x="634.3" y="1219.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.05%)</title><rect x="634.3" y="1203.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.05%)</title><rect x="634.3" y="1187.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (299 samples, 3.49%)</title><rect x="634.8" y="1267.0" width="41.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.8" y="1278.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$179/1097014556.run (298 samples, 3.48%)</title><rect x="635.0" y="1251.0" width="41.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.0" y="1262.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (298 samples, 3.48%)</title><rect x="635.0" y="1235.0" width="41.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.0" y="1246.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (23 samples, 0.27%)</title><rect x="635.4" y="1219.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (22 samples, 0.26%)</title><rect x="635.4" y="1203.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (19 samples, 0.22%)</title><rect x="635.8" y="1187.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (19 samples, 0.22%)</title><rect x="635.8" y="1171.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (18 samples, 0.21%)</title><rect x="635.9" y="1155.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (18 samples, 0.21%)</title><rect x="635.9" y="1139.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (16 samples, 0.19%)</title><rect x="636.2" y="1123.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (16 samples, 0.19%)</title><rect x="636.2" y="1107.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.2" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="636.2" y="1091.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="639.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (14 samples, 0.16%)</title><rect x="636.5" y="1091.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.13%)</title><rect x="636.9" y="1075.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.13%)</title><rect x="636.9" y="1059.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.9" y="1070.0"></text>
</g>
<g>
<title>__write (11 samples, 0.13%)</title><rect x="636.9" y="1043.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="639.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.12%)</title><rect x="637.0" y="1027.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="640.0" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.12%)</title><rect x="637.0" y="1011.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.0" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.12%)</title><rect x="637.0" y="995.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="640.0" y="1006.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.12%)</title><rect x="637.0" y="979.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="640.0" y="990.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="637.0" y="963.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="640.0" y="974.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="637.0" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.0" y="958.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="637.0" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.0" y="942.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 0.07%)</title><rect x="637.6" y="963.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="640.6" y="974.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.07%)</title><rect x="637.6" y="947.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="640.6" y="958.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.07%)</title><rect x="637.6" y="931.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="640.6" y="942.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.06%)</title><rect x="637.7" y="915.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.7" y="926.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.06%)</title><rect x="637.7" y="899.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.7" y="910.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.06%)</title><rect x="637.7" y="883.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.7" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="637.7" y="867.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="640.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.05%)</title><rect x="638.6" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.02%)</title><rect x="638.7" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.02%)</title><rect x="638.7" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (267 samples, 3.12%)</title><rect x="639.2" y="1219.0" width="36.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.2" y="1230.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (267 samples, 3.12%)</title><rect x="639.2" y="1203.0" width="36.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.2" y="1214.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (267 samples, 3.12%)</title><rect x="639.2" y="1187.0" width="36.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.2" y="1198.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (267 samples, 3.12%)</title><rect x="639.2" y="1171.0" width="36.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.2" y="1182.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (195 samples, 2.28%)</title><rect x="639.2" y="1155.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.2" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.02%)</title><rect x="639.2" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="639.2" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="639.2" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (193 samples, 2.25%)</title><rect x="639.5" y="1139.0" width="26.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.5" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (193 samples, 2.25%)</title><rect x="639.5" y="1123.0" width="26.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.5" y="1134.0">j..</text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="639.7" y="1107.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="642.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (188 samples, 2.19%)</title><rect x="640.1" y="1107.0" width="25.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.1" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (187 samples, 2.18%)</title><rect x="640.2" y="1091.0" width="25.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.2" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (186 samples, 2.17%)</title><rect x="640.3" y="1075.0" width="25.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.3" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (186 samples, 2.17%)</title><rect x="640.3" y="1059.0" width="25.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.3" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.06%)</title><rect x="640.3" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.06%)</title><rect x="640.3" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.06%)</title><rect x="640.3" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (165 samples, 1.93%)</title><rect x="641.0" y="1043.0" width="22.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.0" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (164 samples, 1.91%)</title><rect x="641.2" y="1027.0" width="22.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.2" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (146 samples, 1.70%)</title><rect x="641.4" y="1011.0" width="20.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.4" y="1022.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="641.6" y="995.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="644.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (2 samples, 0.02%)</title><rect x="642.1" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/271392623.apply (110 samples, 1.28%)</title><rect x="642.5" y="995.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (108 samples, 1.26%)</title><rect x="642.8" y="979.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4 samples, 0.05%)</title><rect x="643.0" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.05%)</title><rect x="643.0" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (103 samples, 1.20%)</title><rect x="643.5" y="963.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="643.9" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="643.9" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (98 samples, 1.14%)</title><rect x="644.2" y="947.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (93 samples, 1.09%)</title><rect x="644.7" y="931.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.7" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (31 samples, 0.36%)</title><rect x="644.9" y="915.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="645.3" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.3" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.06%)</title><rect x="645.7" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.7" y="910.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.04%)</title><rect x="645.9" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (18 samples, 0.21%)</title><rect x="646.4" y="899.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.21%)</title><rect x="646.4" y="883.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (17 samples, 0.20%)</title><rect x="646.5" y="867.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.13%)</title><rect x="646.8" y="851.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.09%)</title><rect x="647.0" y="835.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (6 samples, 0.07%)</title><rect x="647.1" y="819.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.04%)</title><rect x="647.5" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.5" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.02%)</title><rect x="647.5" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (2 samples, 0.02%)</title><rect x="647.5" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.5" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$247/909228707.applyAsLong (2 samples, 0.02%)</title><rect x="647.5" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="647.5" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.02%)</title><rect x="647.5" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="648.1" y="835.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$250/1029547188.get (3 samples, 0.04%)</title><rect x="648.3" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.02%)</title><rect x="648.9" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="649.2" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="649.3" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="649.3" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.reset (3 samples, 0.04%)</title><rect x="649.7" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (53 samples, 0.62%)</title><rect x="650.1" y="915.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1751710296.run (52 samples, 0.61%)</title><rect x="650.3" y="899.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (52 samples, 0.61%)</title><rect x="650.3" y="883.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="650.8" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="650.8" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.06%)</title><rect x="651.2" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (3 samples, 0.04%)</title><rect x="652.0" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (2 samples, 0.02%)</title><rect x="652.2" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (17 samples, 0.20%)</title><rect x="652.7" y="867.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (17 samples, 0.20%)</title><rect x="652.7" y="851.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.7" y="862.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (14 samples, 0.16%)</title><rect x="653.0" y="835.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.0" y="846.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (2 samples, 0.02%)</title><rect x="653.3" y="819.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="656.3" y="830.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (10 samples, 0.12%)</title><rect x="653.6" y="819.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.6" y="830.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (10 samples, 0.12%)</title><rect x="653.6" y="803.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libjava.so (2 samples, 0.02%)</title><rect x="653.6" y="787.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="656.6" y="798.0"></text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.09%)</title><rect x="653.8" y="787.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="656.8" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.04%)</title><rect x="654.0" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="657.0" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="654.4" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="657.4" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="654.7" y="771.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="657.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (5 samples, 0.06%)</title><rect x="655.1" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="655.1" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.1" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1997408166.invoke (4 samples, 0.05%)</title><rect x="655.1" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.1" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="655.1" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.02%)</title><rect x="655.4" y="803.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (12 samples, 0.14%)</title><rect x="655.8" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (10 samples, 0.12%)</title><rect x="655.9" y="851.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="658.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.07%)</title><rect x="656.0" y="835.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1997408166.invoke (5 samples, 0.06%)</title><rect x="656.2" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="656.2" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1072591677.invoke (2 samples, 0.02%)</title><rect x="656.6" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="656.6" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.02%)</title><rect x="656.6" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="657.0" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="657.0" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.02%)</title><rect x="657.0" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.02%)</title><rect x="657.0" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (2 samples, 0.02%)</title><rect x="657.0" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$215/706959530.apply (28 samples, 0.33%)</title><rect x="657.7" y="995.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (26 samples, 0.30%)</title><rect x="658.0" y="979.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (25 samples, 0.29%)</title><rect x="658.0" y="963.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.0" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.hasNext (2 samples, 0.02%)</title><rect x="658.8" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.8" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (3 samples, 0.04%)</title><rect x="659.1" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.1" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (3 samples, 0.04%)</title><rect x="659.1" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.1" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2 samples, 0.02%)</title><rect x="659.5" y="947.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (9 samples, 0.11%)</title><rect x="659.8" y="947.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (9 samples, 0.11%)</title><rect x="659.8" y="931.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.8" y="942.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (3 samples, 0.04%)</title><rect x="660.2" y="915.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="663.2" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.04%)</title><rect x="660.6" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.6" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.02%)</title><rect x="660.7" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (2 samples, 0.02%)</title><rect x="661.0" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.09%)</title><rect x="661.5" y="1011.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.08%)</title><rect x="661.7" y="995.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="661.7" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.04%)</title><rect x="661.8" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$217/674839503.apply (3 samples, 0.04%)</title><rect x="662.2" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3 samples, 0.04%)</title><rect x="662.2" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="662.2" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.02%)</title><rect x="662.4" y="931.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (7 samples, 0.08%)</title><rect x="662.6" y="1011.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (4 samples, 0.05%)</title><rect x="663.1" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="663.2" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="663.2" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$244/461996469.apply (16 samples, 0.19%)</title><rect x="663.8" y="1043.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (16 samples, 0.19%)</title><rect x="663.8" y="1027.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (3 samples, 0.04%)</title><rect x="664.2" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (9 samples, 0.11%)</title><rect x="664.6" y="1011.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (9 samples, 0.11%)</title><rect x="664.6" y="995.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (4 samples, 0.05%)</title><rect x="665.3" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (67 samples, 0.78%)</title><rect x="666.1" y="1155.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.02%)</title><rect x="666.4" y="1139.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (5 samples, 0.06%)</title><rect x="666.6" y="1139.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.02%)</title><rect x="666.6" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="666.6" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="667.1" y="1123.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (9 samples, 0.11%)</title><rect x="667.3" y="1139.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="670.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.02%)</title><rect x="668.2" y="1123.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="668.2" y="1107.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="668.2" y="1091.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (16 samples, 0.19%)</title><rect x="668.6" y="1139.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.6" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.19%)</title><rect x="668.6" y="1123.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.6" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.19%)</title><rect x="668.6" y="1107.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (15 samples, 0.18%)</title><rect x="668.7" y="1091.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.7" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (13 samples, 0.15%)</title><rect x="669.0" y="1075.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.0" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.15%)</title><rect x="669.0" y="1059.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.0" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.07%)</title><rect x="669.4" y="1043.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.4" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (6 samples, 0.07%)</title><rect x="669.4" y="1027.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.4" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.06%)</title><rect x="669.5" y="1011.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.5" y="1022.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="669.7" y="995.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="672.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.04%)</title><rect x="670.4" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (33 samples, 0.39%)</title><rect x="670.8" y="1139.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (18 samples, 0.21%)</title><rect x="672.6" y="1123.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="673.3" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="673.3" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.02%)</title><rect x="673.7" y="1107.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.05%)</title><rect x="673.9" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.02%)</title><rect x="674.1" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.04%)</title><rect x="674.6" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$192/611183955.accept (5 samples, 0.06%)</title><rect x="675.3" y="1155.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.05%)</title><rect x="675.5" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.02%)</title><rect x="675.7" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (344 samples, 4.01%)</title><rect x="676.0" y="1267.0" width="47.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.0" y="1278.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.02%)</title><rect x="676.0" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (342 samples, 3.99%)</title><rect x="676.3" y="1251.0" width="47.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.3" y="1262.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (342 samples, 3.99%)</title><rect x="676.3" y="1235.0" width="47.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.3" y="1246.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$179/1097014556.run (342 samples, 3.99%)</title><rect x="676.3" y="1219.0" width="47.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.3" y="1230.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (342 samples, 3.99%)</title><rect x="676.3" y="1203.0" width="47.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.3" y="1214.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.remove (2 samples, 0.02%)</title><rect x="676.8" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.removeFirst (2 samples, 0.02%)</title><rect x="676.8" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (320 samples, 3.73%)</title><rect x="677.2" y="1187.0" width="44.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.2" y="1198.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="677.5" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="677.5" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/1595805389.get$Lambda (2 samples, 0.02%)</title><rect x="677.5" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/1595805389.&lt;init&gt; (2 samples, 0.02%)</title><rect x="677.5" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (4 samples, 0.05%)</title><rect x="677.8" y="1171.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (4 samples, 0.05%)</title><rect x="677.8" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (4 samples, 0.05%)</title><rect x="677.8" y="1139.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (3 samples, 0.04%)</title><rect x="677.9" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (3 samples, 0.04%)</title><rect x="677.9" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (312 samples, 3.64%)</title><rect x="678.3" y="1171.0" width="43.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.3" y="1182.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (311 samples, 3.63%)</title><rect x="678.5" y="1155.0" width="42.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.5" y="1166.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$259/1465883244.run (188 samples, 2.19%)</title><rect x="678.6" y="1139.0" width="25.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.6" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (187 samples, 2.18%)</title><rect x="678.8" y="1123.0" width="25.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.8" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (183 samples, 2.14%)</title><rect x="679.3" y="1107.0" width="25.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.3" y="1118.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (12 samples, 0.14%)</title><rect x="679.3" y="1091.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.3" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.06%)</title><rect x="679.3" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.3" y="1086.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.06%)</title><rect x="679.3" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.3" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.06%)</title><rect x="679.3" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.3" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.06%)</title><rect x="679.3" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="679.4" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="679.4" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="679.6" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="679.6" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.6" y="974.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.02%)</title><rect x="680.0" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.0" y="1086.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.02%)</title><rect x="680.0" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.0" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.06%)</title><rect x="680.3" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.3" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.06%)</title><rect x="680.3" y="1059.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.05%)</title><rect x="680.4" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.4" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.04%)</title><rect x="680.4" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.4" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.02%)</title><rect x="680.5" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.5" y="1022.0"></text>
</g>
<g>
<title>java/util/Optional.map (5 samples, 0.06%)</title><rect x="681.0" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$274/356281330.apply (5 samples, 0.06%)</title><rect x="681.0" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (5 samples, 0.06%)</title><rect x="681.0" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.06%)</title><rect x="681.0" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="681.1" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (165 samples, 1.93%)</title><rect x="681.6" y="1091.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.6" y="1102.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.08%)</title><rect x="681.6" y="1075.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.6" y="1086.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.08%)</title><rect x="681.6" y="1059.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.6" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.02%)</title><rect x="681.6" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.06%)</title><rect x="681.9" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.9" y="1054.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.06%)</title><rect x="681.9" y="1027.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="684.9" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="681.9" y="1011.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="684.9" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.02%)</title><rect x="682.3" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="685.3" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="682.3" y="995.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="685.3" y="1006.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="682.3" y="979.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="685.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (158 samples, 1.84%)</title><rect x="682.6" y="1075.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.6" y="1086.0">j..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.02%)</title><rect x="683.2" y="1059.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="686.2" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="683.2" y="1043.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="686.2" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.02%)</title><rect x="683.2" y="1027.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="686.2" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.08%)</title><rect x="683.4" y="1059.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="686.4" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.08%)</title><rect x="683.4" y="1043.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="686.4" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 0.08%)</title><rect x="683.4" y="1027.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="686.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (90 samples, 1.05%)</title><rect x="684.4" y="1059.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.4" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (6 samples, 0.07%)</title><rect x="688.0" y="1043.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.0" y="1054.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (6 samples, 0.07%)</title><rect x="688.0" y="1027.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.0" y="1038.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (2 samples, 0.02%)</title><rect x="688.8" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.8" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (11 samples, 0.13%)</title><rect x="689.1" y="1043.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.1" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (11 samples, 0.13%)</title><rect x="689.1" y="1027.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.1" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (11 samples, 0.13%)</title><rect x="689.1" y="1011.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.1" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (43 samples, 0.50%)</title><rect x="690.6" y="1043.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.6" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (2 samples, 0.02%)</title><rect x="696.1" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (15 samples, 0.18%)</title><rect x="696.8" y="1059.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.15%)</title><rect x="696.8" y="1043.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.08%)</title><rect x="696.8" y="1027.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (5 samples, 0.06%)</title><rect x="697.1" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.1" y="1022.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.05%)</title><rect x="697.2" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.2" y="1006.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.05%)</title><rect x="697.2" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.2" y="990.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.05%)</title><rect x="697.2" y="963.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.2" y="974.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (2 samples, 0.02%)</title><rect x="697.5" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.07%)</title><rect x="697.8" y="1027.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.05%)</title><rect x="697.9" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.9" y="1022.0"></text>
</g>
<g>
<title>java/util/Objects.hash (3 samples, 0.04%)</title><rect x="698.0" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.0" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (3 samples, 0.04%)</title><rect x="698.0" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (40 samples, 0.47%)</title><rect x="698.9" y="1059.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (40 samples, 0.47%)</title><rect x="698.9" y="1043.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (10 samples, 0.12%)</title><rect x="698.9" y="1027.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (10 samples, 0.12%)</title><rect x="698.9" y="1011.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (10 samples, 0.12%)</title><rect x="698.9" y="995.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.09%)</title><rect x="699.0" y="979.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.09%)</title><rect x="699.0" y="963.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.0" y="974.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.02%)</title><rect x="699.0" y="947.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="702.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.06%)</title><rect x="699.4" y="947.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.04%)</title><rect x="699.7" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.7" y="942.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="699.7" y="915.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="702.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="699.7" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="702.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="699.7" y="883.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.04%)</title><rect x="699.7" y="867.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="702.7" y="878.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.04%)</title><rect x="699.7" y="851.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.7" y="862.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.04%)</title><rect x="699.7" y="835.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="702.7" y="846.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.04%)</title><rect x="699.7" y="819.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="702.7" y="830.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.04%)</title><rect x="699.7" y="803.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.7" y="814.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.04%)</title><rect x="699.7" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="702.7" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.02%)</title><rect x="699.7" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.7" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="699.7" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.7" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="699.7" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="702.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.35%)</title><rect x="700.2" y="1027.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (29 samples, 0.34%)</title><rect x="700.4" y="1011.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (19 samples, 0.22%)</title><rect x="700.7" y="995.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (18 samples, 0.21%)</title><rect x="700.8" y="979.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.20%)</title><rect x="700.9" y="963.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.9" y="974.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (3 samples, 0.04%)</title><rect x="701.2" y="947.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="704.2" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="701.3" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="704.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.13%)</title><rect x="701.8" y="947.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 0.12%)</title><rect x="701.9" y="931.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.9" y="942.0"></text>
</g>
<g>
<title>__write (10 samples, 0.12%)</title><rect x="701.9" y="915.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="704.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.12%)</title><rect x="701.9" y="899.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.12%)</title><rect x="701.9" y="883.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.9" y="894.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.12%)</title><rect x="701.9" y="867.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="704.9" y="878.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.12%)</title><rect x="701.9" y="851.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.9" y="862.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.09%)</title><rect x="702.2" y="835.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="705.2" y="846.0"></text>
</g>
<g>
<title>__vfs_write (7 samples, 0.08%)</title><rect x="702.3" y="819.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="705.3" y="830.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.08%)</title><rect x="702.3" y="803.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.3" y="814.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.08%)</title><rect x="702.3" y="787.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="705.3" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.07%)</title><rect x="702.3" y="771.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="705.3" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.07%)</title><rect x="702.3" y="755.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="705.3" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.07%)</title><rect x="702.3" y="739.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (7 samples, 0.08%)</title><rect x="703.3" y="995.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube$TubeSubscriber.supportsRecycling (3 samples, 0.04%)</title><rect x="703.8" y="979.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$260/727887028.accept (13 samples, 0.15%)</title><rect x="704.5" y="1139.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (13 samples, 0.15%)</title><rect x="704.5" y="1123.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (12 samples, 0.14%)</title><rect x="704.6" y="1107.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.14%)</title><rect x="704.6" y="1091.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.14%)</title><rect x="704.6" y="1075.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.14%)</title><rect x="704.6" y="1059.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.14%)</title><rect x="704.6" y="1043.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$263/8005800.accept (6 samples, 0.07%)</title><rect x="704.8" y="1027.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (4 samples, 0.05%)</title><rect x="705.1" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (3 samples, 0.04%)</title><rect x="705.1" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.02%)</title><rect x="705.1" y="979.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$265/1229273246.accept (5 samples, 0.06%)</title><rect x="705.6" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.04%)</title><rect x="705.9" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.04%)</title><rect x="705.9" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.9" y="1006.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.02%)</title><rect x="706.0" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.0" y="990.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (2 samples, 0.02%)</title><rect x="706.0" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (106 samples, 1.24%)</title><rect x="706.3" y="1139.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (106 samples, 1.24%)</title><rect x="706.3" y="1123.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (105 samples, 1.23%)</title><rect x="706.4" y="1107.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (105 samples, 1.23%)</title><rect x="706.4" y="1091.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (105 samples, 1.23%)</title><rect x="706.4" y="1075.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (105 samples, 1.23%)</title><rect x="706.4" y="1059.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (104 samples, 1.21%)</title><rect x="706.6" y="1043.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="706.8" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$268/1316869369.accept (100 samples, 1.17%)</title><rect x="707.1" y="1027.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (99 samples, 1.16%)</title><rect x="707.3" y="1011.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (98 samples, 1.14%)</title><rect x="707.4" y="995.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 1.13%)</title><rect x="707.5" y="979.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10 samples, 0.12%)</title><rect x="707.5" y="963.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$273/902212527.apply (6 samples, 0.07%)</title><rect x="708.1" y="947.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (5 samples, 0.06%)</title><rect x="708.2" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (3 samples, 0.04%)</title><rect x="708.5" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (85 samples, 0.99%)</title><rect x="709.1" y="963.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (83 samples, 0.97%)</title><rect x="709.2" y="947.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.2" y="958.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="709.2" y="931.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="712.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (71 samples, 0.83%)</title><rect x="709.7" y="931.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (69 samples, 0.81%)</title><rect x="710.0" y="915.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (66 samples, 0.77%)</title><rect x="710.3" y="899.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (66 samples, 0.77%)</title><rect x="710.3" y="883.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (63 samples, 0.74%)</title><rect x="710.7" y="867.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.7" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (2 samples, 0.02%)</title><rect x="711.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="711.0" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.69%)</title><rect x="711.3" y="851.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 0.69%)</title><rect x="711.3" y="835.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.3" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.13%)</title><rect x="711.5" y="819.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="714.5" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="711.9" y="803.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="714.9" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="712.8" y="803.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="715.8" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 0.51%)</title><rect x="713.0" y="819.0" width="6.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="716.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.44%)</title><rect x="713.9" y="803.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="716.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.44%)</title><rect x="713.9" y="787.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (35 samples, 0.41%)</title><rect x="714.0" y="771.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.0" y="782.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.41%)</title><rect x="714.0" y="755.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="717.0" y="766.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.40%)</title><rect x="714.0" y="739.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="717.0" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="714.3" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="717.3" y="734.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.35%)</title><rect x="714.6" y="723.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="717.6" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.35%)</title><rect x="714.6" y="707.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="717.6" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 0.35%)</title><rect x="714.6" y="691.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.6" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="718.8" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.8" y="782.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="718.8" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="721.8" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="718.8" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="721.8" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="719.1" y="819.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="722.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$272/953748663.accept (3 samples, 0.04%)</title><rect x="719.7" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.02%)</title><rect x="719.8" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.completed (2 samples, 0.02%)</title><rect x="719.8" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.completed (2 samples, 0.02%)</title><rect x="719.8" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$132/1664362363.accept (3 samples, 0.04%)</title><rect x="720.2" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.02%)</title><rect x="720.9" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2 samples, 0.02%)</title><rect x="721.4" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.02%)</title><rect x="721.4" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (12 samples, 0.14%)</title><rect x="721.7" y="1187.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (12 samples, 0.14%)</title><rect x="721.7" y="1171.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12 samples, 0.14%)</title><rect x="721.7" y="1155.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12 samples, 0.14%)</title><rect x="721.7" y="1139.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.04%)</title><rect x="721.7" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="721.7" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.04%)</title><rect x="721.7" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="721.7" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.04%)</title><rect x="721.7" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.04%)</title><rect x="721.7" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.04%)</title><rect x="721.7" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.04%)</title><rect x="721.7" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="721.7" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.04%)</title><rect x="721.7" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/271392623.apply (3 samples, 0.04%)</title><rect x="721.7" y="963.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3 samples, 0.04%)</title><rect x="721.7" y="947.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3 samples, 0.04%)</title><rect x="721.7" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3 samples, 0.04%)</title><rect x="721.7" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.02%)</title><rect x="721.9" y="899.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (9 samples, 0.11%)</title><rect x="722.1" y="1123.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (9 samples, 0.11%)</title><rect x="722.1" y="1107.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (107 samples, 1.25%)</title><rect x="723.5" y="1347.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.5" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (107 samples, 1.25%)</title><rect x="723.5" y="1331.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.05%)</title><rect x="726.4" y="1315.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.04%)</title><rect x="726.5" y="1299.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (5 samples, 0.06%)</title><rect x="726.9" y="1315.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet (5 samples, 0.06%)</title><rect x="726.9" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.cast (5 samples, 0.06%)</title><rect x="726.9" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (28 samples, 0.33%)</title><rect x="727.6" y="1315.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (20 samples, 0.23%)</title><rect x="728.3" y="1299.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (2 samples, 0.02%)</title><rect x="728.6" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (15 samples, 0.18%)</title><rect x="729.0" y="1283.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (14 samples, 0.16%)</title><rect x="729.2" y="1267.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 0.15%)</title><rect x="729.3" y="1251.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (11 samples, 0.13%)</title><rect x="729.4" y="1235.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.13%)</title><rect x="729.4" y="1219.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.11%)</title><rect x="729.6" y="1203.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.08%)</title><rect x="729.7" y="1187.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.07%)</title><rect x="729.8" y="1171.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.07%)</title><rect x="729.8" y="1155.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.05%)</title><rect x="729.8" y="1139.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="730.0" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.02%)</title><rect x="730.4" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="730.4" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="730.4" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.04%)</title><rect x="731.1" y="1299.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="731.1" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.04%)</title><rect x="731.1" y="1267.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.1" y="1278.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="731.1" y="1251.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="734.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.12%)</title><rect x="731.5" y="1315.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.12%)</title><rect x="731.5" y="1299.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="734.5" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.06%)</title><rect x="731.5" y="1283.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="734.5" y="1294.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.02%)</title><rect x="731.6" y="1267.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="734.6" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="731.9" y="1267.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="734.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="732.2" y="1283.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="735.2" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.05%)</title><rect x="732.2" y="1267.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="735.2" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="732.2" y="1251.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.2" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="732.2" y="1235.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.2" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.04%)</title><rect x="732.3" y="1219.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="735.3" y="1230.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="732.5" y="1203.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="735.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (39 samples, 0.46%)</title><rect x="732.9" y="1315.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.44%)</title><rect x="733.0" y="1299.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.0" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Park (17 samples, 0.20%)</title><rect x="733.1" y="1283.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="736.1" y="1294.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.05%)</title><rect x="733.6" y="1267.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="736.6" y="1278.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="733.7" y="1251.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="736.7" y="1262.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.09%)</title><rect x="734.2" y="1267.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="737.2" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="734.7" y="1251.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="737.7" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="734.7" y="1235.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="737.7" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="734.7" y="1219.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="737.7" y="1230.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="734.7" y="1203.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="737.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.23%)</title><rect x="735.5" y="1283.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="738.5" y="1294.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (17 samples, 0.20%)</title><rect x="735.9" y="1267.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="738.9" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.15%)</title><rect x="736.5" y="1251.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="739.5" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.14%)</title><rect x="736.6" y="1235.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.6" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.13%)</title><rect x="736.7" y="1219.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.7" y="1230.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.13%)</title><rect x="736.7" y="1203.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.7" y="1214.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.11%)</title><rect x="736.9" y="1187.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.9" y="1198.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.04%)</title><rect x="737.3" y="1171.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="740.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (388 samples, 4.53%)</title><rect x="738.2" y="1347.0" width="53.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.2" y="1358.0">jdk/i..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (6 samples, 0.07%)</title><rect x="743.6" y="1331.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="746.6" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.07%)</title><rect x="743.6" y="1315.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="746.6" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.07%)</title><rect x="743.6" y="1299.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="746.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.05%)</title><rect x="744.4" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.05%)</title><rect x="744.4" y="1315.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.4" y="1326.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.02%)</title><rect x="744.7" y="1299.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="747.7" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (176 samples, 2.05%)</title><rect x="745.3" y="1331.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.3" y="1342.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$218/1474124633.accept (164 samples, 1.91%)</title><rect x="745.3" y="1315.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.3" y="1326.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (162 samples, 1.89%)</title><rect x="745.5" y="1299.0" width="22.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.5" y="1310.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (162 samples, 1.89%)</title><rect x="745.5" y="1283.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.5" y="1294.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (162 samples, 1.89%)</title><rect x="745.5" y="1267.0" width="22.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.5" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (161 samples, 1.88%)</title><rect x="745.5" y="1251.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.5" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.07%)</title><rect x="745.7" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.07%)</title><rect x="745.7" y="1219.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.7" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.02%)</title><rect x="746.0" y="1203.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.02%)</title><rect x="746.2" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.2" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.02%)</title><rect x="746.2" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.2" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.02%)</title><rect x="746.2" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.2" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.02%)</title><rect x="746.2" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (154 samples, 1.80%)</title><rect x="746.5" y="1235.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.5" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (154 samples, 1.80%)</title><rect x="746.5" y="1219.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.5" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (154 samples, 1.80%)</title><rect x="746.5" y="1203.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.5" y="1214.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (153 samples, 1.79%)</title><rect x="746.6" y="1187.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.6" y="1198.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (153 samples, 1.79%)</title><rect x="746.6" y="1171.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.6" y="1182.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$169/985842944.run (150 samples, 1.75%)</title><rect x="747.1" y="1155.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (149 samples, 1.74%)</title><rect x="747.2" y="1139.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.11%)</title><rect x="747.6" y="1123.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.11%)</title><rect x="747.6" y="1107.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (8 samples, 0.09%)</title><rect x="747.7" y="1091.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (3 samples, 0.04%)</title><rect x="748.2" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.04%)</title><rect x="748.2" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.04%)</title><rect x="748.2" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="748.6" y="1075.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="748.6" y="1059.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.02%)</title><rect x="748.6" y="1043.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.02%)</title><rect x="748.6" y="1027.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.02%)</title><rect x="748.6" y="1011.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.02%)</title><rect x="748.6" y="995.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="748.6" y="979.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="748.6" y="963.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.06%)</title><rect x="749.0" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.06%)</title><rect x="749.0" y="1107.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.05%)</title><rect x="749.0" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.04%)</title><rect x="749.1" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (128 samples, 1.49%)</title><rect x="749.7" y="1123.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (4 samples, 0.05%)</title><rect x="749.9" y="1107.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.9" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (2 samples, 0.02%)</title><rect x="750.1" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="750.1" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="750.1" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.1" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="750.1" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.02%)</title><rect x="750.5" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (120 samples, 1.40%)</title><rect x="750.8" y="1107.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.06%)</title><rect x="750.9" y="1091.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.06%)</title><rect x="750.9" y="1075.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.02%)</title><rect x="751.2" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (112 samples, 1.31%)</title><rect x="751.7" y="1091.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (111 samples, 1.30%)</title><rect x="751.9" y="1075.0" width="15.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.07%)</title><rect x="751.9" y="1059.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.06%)</title><rect x="752.0" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.06%)</title><rect x="752.0" y="1027.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.05%)</title><rect x="752.1" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.05%)</title><rect x="752.1" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.04%)</title><rect x="752.3" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.3" y="990.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.02%)</title><rect x="752.4" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (100 samples, 1.17%)</title><rect x="752.7" y="1059.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (99 samples, 1.16%)</title><rect x="752.8" y="1043.0" width="13.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (99 samples, 1.16%)</title><rect x="752.8" y="1027.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.8" y="1038.0"></text>
</g>
<g>
<title>read (91 samples, 1.06%)</title><rect x="753.9" y="1011.0" width="12.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="756.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 1.03%)</title><rect x="754.4" y="995.0" width="12.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="757.4" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 1.02%)</title><rect x="754.5" y="979.0" width="12.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="757.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_read (85 samples, 0.99%)</title><rect x="754.8" y="963.0" width="11.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.8" y="974.0"></text>
</g>
<g>
<title>ksys_read (85 samples, 0.99%)</title><rect x="754.8" y="947.0" width="11.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.8" y="958.0"></text>
</g>
<g>
<title>vfs_read (85 samples, 0.99%)</title><rect x="754.8" y="931.0" width="11.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="757.8" y="942.0"></text>
</g>
<g>
<title>__vfs_read (75 samples, 0.88%)</title><rect x="754.9" y="915.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="757.9" y="926.0"></text>
</g>
<g>
<title>new_sync_read (75 samples, 0.88%)</title><rect x="754.9" y="899.0" width="10.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="757.9" y="910.0"></text>
</g>
<g>
<title>sock_read_iter (75 samples, 0.88%)</title><rect x="754.9" y="883.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="757.9" y="894.0"></text>
</g>
<g>
<title>sock_recvmsg (74 samples, 0.86%)</title><rect x="755.0" y="867.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="758.0" y="878.0"></text>
</g>
<g>
<title>inet6_recvmsg (70 samples, 0.82%)</title><rect x="755.0" y="851.0" width="9.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="758.0" y="862.0"></text>
</g>
<g>
<title>tcp_recvmsg (68 samples, 0.79%)</title><rect x="755.3" y="835.0" width="9.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="758.3" y="846.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.05%)</title><rect x="755.7" y="819.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="758.7" y="830.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="755.7" y="803.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="758.7" y="814.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.02%)</title><rect x="756.0" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="759.0" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.08%)</title><rect x="756.3" y="819.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="759.3" y="830.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.07%)</title><rect x="756.4" y="803.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="759.4" y="814.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.04%)</title><rect x="756.8" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="759.8" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.02%)</title><rect x="757.0" y="771.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="760.0" y="782.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="757.0" y="755.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.0" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (54 samples, 0.63%)</title><rect x="757.2" y="819.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.2" y="830.0"></text>
</g>
<g>
<title>tcp_send_ack (54 samples, 0.63%)</title><rect x="757.2" y="803.0" width="7.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="760.2" y="814.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (54 samples, 0.63%)</title><rect x="757.2" y="787.0" width="7.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="760.2" y="798.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.02%)</title><rect x="757.2" y="771.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.2" y="782.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (51 samples, 0.60%)</title><rect x="757.5" y="771.0" width="7.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="760.5" y="782.0"></text>
</g>
<g>
<title>ip_queue_xmit (48 samples, 0.56%)</title><rect x="757.9" y="755.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="760.9" y="766.0"></text>
</g>
<g>
<title>__ip_queue_xmit (47 samples, 0.55%)</title><rect x="757.9" y="739.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="760.9" y="750.0"></text>
</g>
<g>
<title>ip_local_out (45 samples, 0.53%)</title><rect x="758.2" y="723.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="761.2" y="734.0"></text>
</g>
<g>
<title>ip_output (44 samples, 0.51%)</title><rect x="758.3" y="707.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.3" y="718.0"></text>
</g>
<g>
<title>ip_finish_output (44 samples, 0.51%)</title><rect x="758.3" y="691.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.3" y="702.0"></text>
</g>
<g>
<title>__ip_finish_output (44 samples, 0.51%)</title><rect x="758.3" y="675.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="761.3" y="686.0"></text>
</g>
<g>
<title>ip_finish_output2 (41 samples, 0.48%)</title><rect x="758.6" y="659.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="761.6" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (34 samples, 0.40%)</title><rect x="758.8" y="643.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="761.8" y="654.0"></text>
</g>
<g>
<title>do_softirq.part.0 (34 samples, 0.40%)</title><rect x="758.8" y="627.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="761.8" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (34 samples, 0.40%)</title><rect x="758.8" y="611.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.8" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (34 samples, 0.40%)</title><rect x="758.8" y="595.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="761.8" y="606.0"></text>
</g>
<g>
<title>net_rx_action (33 samples, 0.39%)</title><rect x="758.9" y="579.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="761.9" y="590.0"></text>
</g>
<g>
<title>process_backlog (33 samples, 0.39%)</title><rect x="758.9" y="563.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="761.9" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb (32 samples, 0.37%)</title><rect x="759.0" y="547.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="762.0" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 0.37%)</title><rect x="759.0" y="531.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="762.0" y="542.0"></text>
</g>
<g>
<title>ip_rcv (32 samples, 0.37%)</title><rect x="759.0" y="515.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="762.0" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (31 samples, 0.36%)</title><rect x="759.2" y="499.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="762.2" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver (30 samples, 0.35%)</title><rect x="759.2" y="483.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.2" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 0.35%)</title><rect x="759.2" y="467.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="762.2" y="478.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 0.35%)</title><rect x="759.2" y="451.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="762.2" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (29 samples, 0.34%)</title><rect x="759.3" y="435.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="762.3" y="446.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.05%)</title><rect x="760.3" y="419.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="763.3" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.19%)</title><rect x="760.8" y="419.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="763.8" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.19%)</title><rect x="760.8" y="403.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="763.8" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="760.8" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.8" y="398.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="761.0" y="371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="764.0" y="382.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.14%)</title><rect x="761.4" y="387.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="764.4" y="398.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.09%)</title><rect x="761.6" y="371.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="764.6" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.06%)</title><rect x="761.9" y="355.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="764.9" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="761.9" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="764.9" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="761.9" y="323.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="764.9" y="334.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="762.2" y="339.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="765.2" y="350.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.04%)</title><rect x="762.2" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="765.2" y="334.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.04%)</title><rect x="762.2" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.2" y="318.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="762.2" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="765.2" y="302.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.02%)</title><rect x="763.0" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.0" y="430.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.06%)</title><rect x="763.4" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="766.4" y="654.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.06%)</title><rect x="763.4" y="627.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.4" y="638.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="763.6" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="766.6" y="622.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="763.9" y="611.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="766.9" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.05%)</title><rect x="764.7" y="851.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.7" y="862.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.05%)</title><rect x="764.7" y="835.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="767.7" y="846.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.05%)</title><rect x="764.7" y="819.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="767.7" y="830.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.04%)</title><rect x="764.8" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="767.8" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.11%)</title><rect x="765.2" y="915.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="768.2" y="926.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="765.6" y="899.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.6" y="910.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="765.9" y="899.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="768.9" y="910.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="766.1" y="883.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="769.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.05%)</title><rect x="766.5" y="1059.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="766.6" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.02%)</title><rect x="766.7" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.02%)</title><rect x="767.4" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$221/910452606.accept (12 samples, 0.14%)</title><rect x="767.8" y="1315.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (10 samples, 0.12%)</title><rect x="768.1" y="1299.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$216/1422982210.run (10 samples, 0.12%)</title><rect x="768.1" y="1283.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (10 samples, 0.12%)</title><rect x="768.1" y="1267.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (10 samples, 0.12%)</title><rect x="768.1" y="1251.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.1" y="1262.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.02%)</title><rect x="768.4" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.4" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.02%)</title><rect x="768.7" y="1235.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.7" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.02%)</title><rect x="768.7" y="1219.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.7" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (3 samples, 0.04%)</title><rect x="769.1" y="1235.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.1" y="1246.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.02%)</title><rect x="769.2" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.2" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (8 samples, 0.09%)</title><rect x="769.6" y="1331.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.6" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.09%)</title><rect x="769.6" y="1315.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.6" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (6 samples, 0.07%)</title><rect x="769.9" y="1299.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.9" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.05%)</title><rect x="770.2" y="1283.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.2" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.05%)</title><rect x="770.2" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.2" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.05%)</title><rect x="770.2" y="1251.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.2" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.02%)</title><rect x="770.3" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.3" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.02%)</title><rect x="770.3" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (45 samples, 0.53%)</title><rect x="770.7" y="1331.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171/1682704029.run (38 samples, 0.44%)</title><rect x="770.9" y="1315.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (38 samples, 0.44%)</title><rect x="770.9" y="1299.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.42%)</title><rect x="771.1" y="1283.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.42%)</title><rect x="771.1" y="1267.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.02%)</title><rect x="771.3" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.02%)</title><rect x="771.3" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.02%)</title><rect x="771.3" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (33 samples, 0.39%)</title><rect x="771.6" y="1251.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (33 samples, 0.39%)</title><rect x="771.6" y="1235.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$169/985842944.run (31 samples, 0.36%)</title><rect x="771.7" y="1219.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (31 samples, 0.36%)</title><rect x="771.7" y="1203.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (31 samples, 0.36%)</title><rect x="771.7" y="1187.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (2 samples, 0.02%)</title><rect x="773.2" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (18 samples, 0.21%)</title><rect x="773.5" y="1171.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (15 samples, 0.18%)</title><rect x="773.5" y="1155.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.16%)</title><rect x="773.6" y="1139.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (14 samples, 0.16%)</title><rect x="773.6" y="1123.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13 samples, 0.15%)</title><rect x="773.8" y="1107.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (11 samples, 0.13%)</title><rect x="773.9" y="1091.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.05%)</title><rect x="774.2" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.05%)</title><rect x="774.2" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.05%)</title><rect x="774.2" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (3 samples, 0.04%)</title><rect x="774.3" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.06%)</title><rect x="774.7" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (3 samples, 0.04%)</title><rect x="775.6" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="775.6" y="1139.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="775.6" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.04%)</title><rect x="775.6" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="775.6" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.04%)</title><rect x="775.6" y="1075.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.02%)</title><rect x="775.7" y="1059.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="775.7" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="775.7" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$173/2084076958.run (6 samples, 0.07%)</title><rect x="776.1" y="1315.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (6 samples, 0.07%)</title><rect x="776.1" y="1299.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.04%)</title><rect x="776.2" y="1283.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="776.2" y="1267.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.04%)</title><rect x="776.2" y="1251.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="776.2" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="776.2" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.02%)</title><rect x="776.7" y="1283.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (20 samples, 0.23%)</title><rect x="776.9" y="1331.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.9" y="1342.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.05%)</title><rect x="777.1" y="1315.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.1" y="1326.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.05%)</title><rect x="777.1" y="1299.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="777.2" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.2" y="1294.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="777.2" y="1267.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="780.2" y="1278.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.04%)</title><rect x="777.2" y="1251.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="780.2" y="1262.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="777.2" y="1235.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="780.2" y="1246.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="777.2" y="1219.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="780.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15 samples, 0.18%)</title><rect x="777.6" y="1315.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.6" y="1326.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (5 samples, 0.06%)</title><rect x="778.0" y="1299.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="781.0" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.04%)</title><rect x="778.2" y="1283.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="781.2" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.02%)</title><rect x="778.3" y="1267.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="781.3" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="778.7" y="1299.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="781.7" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="778.7" y="1283.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="781.7" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.02%)</title><rect x="778.7" y="1267.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="781.7" y="1278.0"></text>
</g>
<g>
<title>java/time/Instant.until (2 samples, 0.02%)</title><rect x="779.0" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.0" y="1310.0"></text>
</g>
<g>
<title>java/time/Instant.toEpochMilli (2 samples, 0.02%)</title><rect x="779.0" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/Math.multiplyExact (2 samples, 0.02%)</title><rect x="779.0" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3 samples, 0.04%)</title><rect x="779.3" y="1299.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (5 samples, 0.06%)</title><rect x="779.7" y="1331.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.7" y="1342.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.05%)</title><rect x="779.7" y="1315.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.7" y="1326.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (2 samples, 0.02%)</title><rect x="779.7" y="1299.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.7" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="779.7" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.7" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="779.7" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.7" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.02%)</title><rect x="780.0" y="1299.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (4 samples, 0.05%)</title><rect x="780.5" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.04%)</title><rect x="780.6" y="1315.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5 samples, 0.06%)</title><rect x="781.1" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.1" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (62 samples, 0.72%)</title><rect x="781.9" y="1331.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.9" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (62 samples, 0.72%)</title><rect x="781.9" y="1315.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (61 samples, 0.71%)</title><rect x="782.0" y="1299.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (23 samples, 0.27%)</title><rect x="782.0" y="1283.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.0" y="1294.0"></text>
</g>
<g>
<title>epoll_wait (21 samples, 0.25%)</title><rect x="782.3" y="1267.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="785.3" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.23%)</title><rect x="782.4" y="1251.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="785.4" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.23%)</title><rect x="782.4" y="1235.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="785.4" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.22%)</title><rect x="782.6" y="1219.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="785.6" y="1230.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.22%)</title><rect x="782.6" y="1203.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="785.6" y="1214.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="782.7" y="1187.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="785.7" y="1198.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="782.7" y="1171.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="785.7" y="1182.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="782.7" y="1155.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="785.7" y="1166.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.16%)</title><rect x="783.1" y="1187.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="786.1" y="1198.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.12%)</title><rect x="783.1" y="1171.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="786.1" y="1182.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.09%)</title><rect x="783.4" y="1155.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.4" y="1166.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.07%)</title><rect x="783.7" y="1139.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="786.7" y="1150.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.04%)</title><rect x="784.1" y="1123.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="787.1" y="1134.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.02%)</title><rect x="784.5" y="1171.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="787.5" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (26 samples, 0.30%)</title><rect x="785.2" y="1283.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.2" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="785.5" y="1267.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.5" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="785.5" y="1251.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (15 samples, 0.18%)</title><rect x="785.7" y="1267.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (14 samples, 0.16%)</title><rect x="785.9" y="1251.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.9" y="1262.0"></text>
</g>
<g>
<title>read (11 samples, 0.13%)</title><rect x="786.3" y="1235.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="789.3" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.13%)</title><rect x="786.3" y="1219.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="789.3" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.13%)</title><rect x="786.3" y="1203.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.3" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_read (10 samples, 0.12%)</title><rect x="786.4" y="1187.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.4" y="1198.0"></text>
</g>
<g>
<title>ksys_read (10 samples, 0.12%)</title><rect x="786.4" y="1171.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.4" y="1182.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.12%)</title><rect x="786.4" y="1155.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.4" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.09%)</title><rect x="786.4" y="1139.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="789.4" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.09%)</title><rect x="786.4" y="1123.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="789.4" y="1134.0"></text>
</g>
<g>
<title>pipe_read (7 samples, 0.08%)</title><rect x="786.6" y="1107.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="789.6" y="1118.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="787.0" y="1091.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="790.0" y="1102.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="787.0" y="1075.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="790.0" y="1086.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="787.3" y="1091.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="790.3" y="1102.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="787.5" y="1139.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="790.5" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="787.5" y="1123.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="790.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.08%)</title><rect x="787.8" y="1267.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (3 samples, 0.04%)</title><rect x="788.1" y="1251.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.1" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (3 samples, 0.04%)</title><rect x="788.1" y="1235.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.1" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (3 samples, 0.04%)</title><rect x="788.1" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.1" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (2 samples, 0.02%)</title><rect x="788.5" y="1251.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.02%)</title><rect x="788.8" y="1283.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.05%)</title><rect x="789.0" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.0" y="1294.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.05%)</title><rect x="789.0" y="1267.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.0" y="1278.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="789.2" y="1251.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.04%)</title><rect x="789.2" y="1235.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="789.2" y="1219.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.2" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.05%)</title><rect x="789.6" y="1283.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.6" y="1294.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.05%)</title><rect x="789.6" y="1267.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.6" y="1278.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.05%)</title><rect x="789.6" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="789.6" y="1235.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="789.7" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.7" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.02%)</title><rect x="790.1" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.1" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (5 samples, 0.06%)</title><rect x="790.4" y="1331.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.4" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.06%)</title><rect x="790.4" y="1315.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5 samples, 0.06%)</title><rect x="790.4" y="1299.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.4" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (2 samples, 0.02%)</title><rect x="790.4" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.4" y="1294.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.02%)</title><rect x="790.4" y="1267.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="793.4" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="790.4" y="1251.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.4" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="790.4" y="1235.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.4" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.02%)</title><rect x="790.4" y="1219.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.4" y="1230.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.02%)</title><rect x="790.4" y="1203.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="793.4" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.02%)</title><rect x="790.7" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (3 samples, 0.04%)</title><rect x="791.1" y="1331.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.1" y="1342.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.02%)</title><rect x="791.3" y="1315.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.3" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (2 samples, 0.02%)</title><rect x="791.3" y="1299.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.3" y="1310.0"></text>
</g>
<g>
<title>start_thread (2,890 samples, 33.72%)</title><rect x="791.9" y="1347.0" width="398.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="794.9" y="1358.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2,890 samples, 33.72%)</title><rect x="791.9" y="1331.0" width="398.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="794.9" y="1342.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (2,890 samples, 33.72%)</title><rect x="791.9" y="1315.0" width="398.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="794.9" y="1326.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (59 samples, 0.69%)</title><rect x="791.9" y="1299.0" width="8.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="794.9" y="1310.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (56 samples, 0.65%)</title><rect x="792.1" y="1283.0" width="7.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="795.1" y="1294.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.07%)</title><rect x="792.1" y="1267.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="795.1" y="1278.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.05%)</title><rect x="792.4" y="1251.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="795.4" y="1262.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (43 samples, 0.50%)</title><rect x="792.9" y="1267.0" width="5.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="795.9" y="1278.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (43 samples, 0.50%)</title><rect x="792.9" y="1251.0" width="5.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="795.9" y="1262.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (43 samples, 0.50%)</title><rect x="792.9" y="1235.0" width="5.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="795.9" y="1246.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (43 samples, 0.50%)</title><rect x="792.9" y="1219.0" width="5.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="795.9" y="1230.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (42 samples, 0.49%)</title><rect x="792.9" y="1203.0" width="5.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="795.9" y="1214.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (31 samples, 0.36%)</title><rect x="792.9" y="1187.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="795.9" y="1198.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (21 samples, 0.25%)</title><rect x="794.1" y="1171.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="797.1" y="1182.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.08%)</title><rect x="795.9" y="1155.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="798.9" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (11 samples, 0.13%)</title><rect x="797.2" y="1187.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="800.2" y="1198.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (11 samples, 0.13%)</title><rect x="797.2" y="1171.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="800.2" y="1182.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.02%)</title><rect x="797.9" y="1155.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="800.9" y="1166.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="798.3" y="1155.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="801.3" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="798.8" y="1267.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="801.8" y="1278.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.02%)</title><rect x="798.8" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="801.8" y="1262.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="798.8" y="1235.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="801.8" y="1246.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.06%)</title><rect x="799.1" y="1267.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="802.1" y="1278.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (5 samples, 0.06%)</title><rect x="799.1" y="1251.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="802.1" y="1262.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.05%)</title><rect x="799.2" y="1235.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="802.2" y="1246.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.05%)</title><rect x="799.2" y="1219.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="802.2" y="1230.0"></text>
</g>
<g>
<title>metadata_Relocation::unpack_data() (2 samples, 0.02%)</title><rect x="799.4" y="1203.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="802.4" y="1214.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="799.8" y="1283.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="802.8" y="1294.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.02%)</title><rect x="799.8" y="1267.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="802.8" y="1278.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2,827 samples, 32.99%)</title><rect x="800.1" y="1299.0" width="389.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="803.1" y="1310.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2,800 samples, 32.67%)</title><rect x="800.1" y="1283.0" width="385.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="803.1" y="1294.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2,787 samples, 32.52%)</title><rect x="800.1" y="1267.0" width="383.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="803.1" y="1278.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2,593 samples, 30.26%)</title><rect x="800.1" y="1251.0" width="357.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="803.1" y="1262.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2,593 samples, 30.26%)</title><rect x="800.1" y="1235.0" width="357.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="803.1" y="1246.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, ..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.02%)</title><rect x="800.3" y="1219.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="803.3" y="1230.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.02%)</title><rect x="800.3" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="803.3" y="1214.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.02%)</title><rect x="800.3" y="1187.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="803.3" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.02%)</title><rect x="800.3" y="1171.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="803.3" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.02%)</title><rect x="800.3" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="803.3" y="1166.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1,568 samples, 18.30%)</title><rect x="800.6" y="1219.0" width="215.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="803.6" y="1230.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (64 samples, 0.75%)</title><rect x="801.0" y="1203.0" width="8.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="804.0" y="1214.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.13%)</title><rect x="801.0" y="1187.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="804.0" y="1198.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (33 samples, 0.39%)</title><rect x="802.5" y="1187.0" width="4.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="805.5" y="1198.0"></text>
</g>
<g>
<title>Node::jvms() const (2 samples, 0.02%)</title><rect x="805.4" y="1171.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="808.4" y="1182.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (10 samples, 0.12%)</title><rect x="805.7" y="1171.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="808.7" y="1182.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (5 samples, 0.06%)</title><rect x="806.4" y="1155.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="809.4" y="1166.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (18 samples, 0.21%)</title><rect x="807.1" y="1187.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="810.1" y="1198.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (15 samples, 0.18%)</title><rect x="807.4" y="1171.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="810.4" y="1182.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (9 samples, 0.11%)</title><rect x="808.2" y="1155.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="811.2" y="1166.0"></text>
</g>
<g>
<title>CodeBuffer::~CodeBuffer() (3 samples, 0.04%)</title><rect x="808.2" y="1139.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="811.2" y="1150.0"></text>
</g>
<g>
<title>CodeBuffer::verify_section_allocation() (3 samples, 0.04%)</title><rect x="808.2" y="1123.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="811.2" y="1134.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (3 samples, 0.04%)</title><rect x="808.6" y="1139.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="811.6" y="1150.0"></text>
</g>
<g>
<title>Node::jvms() const (2 samples, 0.02%)</title><rect x="809.6" y="1187.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="812.6" y="1198.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (35 samples, 0.41%)</title><rect x="809.8" y="1203.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="812.8" y="1214.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (11 samples, 0.13%)</title><rect x="810.5" y="1187.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="813.5" y="1198.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.02%)</title><rect x="810.5" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="813.5" y="1182.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (5 samples, 0.06%)</title><rect x="810.8" y="1171.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="813.8" y="1182.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.02%)</title><rect x="811.1" y="1155.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="814.1" y="1166.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.04%)</title><rect x="811.5" y="1171.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="814.5" y="1182.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.02%)</title><rect x="811.6" y="1155.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="814.6" y="1166.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (11 samples, 0.13%)</title><rect x="812.5" y="1187.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="815.5" y="1198.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (11 samples, 0.13%)</title><rect x="812.5" y="1171.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="815.5" y="1182.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="812.6" y="1155.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="815.6" y="1166.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (6 samples, 0.07%)</title><rect x="812.9" y="1155.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="815.9" y="1166.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (2 samples, 0.02%)</title><rect x="813.7" y="1155.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="816.7" y="1166.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (4 samples, 0.05%)</title><rect x="814.7" y="1203.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="817.7" y="1214.0"></text>
</g>
<g>
<title>JVMState::same_calls_as(JVMState const*) const (3 samples, 0.04%)</title><rect x="815.2" y="1203.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="818.2" y="1214.0"></text>
</g>
<g>
<title>Matcher::match() (159 samples, 1.86%)</title><rect x="815.6" y="1203.0" width="21.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="818.6" y="1214.0">M..</text>
</g>
<g>
<title>AddPNode::Opcode() const (2 samples, 0.02%)</title><rect x="815.6" y="1187.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="818.6" y="1198.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (47 samples, 0.55%)</title><rect x="815.9" y="1187.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="818.9" y="1198.0"></text>
</g>
<g>
<title>ConNode::Opcode() const (2 samples, 0.02%)</title><rect x="822.6" y="1187.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="825.6" y="1198.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (14 samples, 0.16%)</title><rect x="823.1" y="1187.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="826.1" y="1198.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (89 samples, 1.04%)</title><rect x="825.1" y="1187.0" width="12.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="828.1" y="1198.0"></text>
</g>
<g>
<title>Matcher::collect_null_checks(Node*, Node*) (2 samples, 0.02%)</title><rect x="827.5" y="1171.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="830.5" y="1182.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (8 samples, 0.09%)</title><rect x="827.7" y="1171.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="830.7" y="1182.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (5 samples, 0.06%)</title><rect x="828.0" y="1155.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="831.0" y="1166.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (54 samples, 0.63%)</title><rect x="828.8" y="1171.0" width="7.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="831.8" y="1182.0"></text>
</g>
<g>
<title>Chunk::next_chop() (2 samples, 0.02%)</title><rect x="830.2" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="833.2" y="1166.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (22 samples, 0.26%)</title><rect x="830.6" y="1155.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="833.6" y="1166.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (14 samples, 0.16%)</title><rect x="831.3" y="1139.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="834.3" y="1150.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (3 samples, 0.04%)</title><rect x="832.0" y="1123.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="835.0" y="1134.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.02%)</title><rect x="832.0" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="835.0" y="1118.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (5 samples, 0.06%)</title><rect x="832.4" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="835.4" y="1134.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (5 samples, 0.06%)</title><rect x="832.4" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="835.4" y="1118.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (2 samples, 0.02%)</title><rect x="833.2" y="1139.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="836.2" y="1150.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (16 samples, 0.19%)</title><rect x="833.7" y="1155.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="836.7" y="1166.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (7 samples, 0.08%)</title><rect x="833.8" y="1139.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.8" y="1150.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.04%)</title><rect x="833.8" y="1123.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="836.8" y="1134.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.02%)</title><rect x="833.8" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="836.8" y="1118.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.02%)</title><rect x="833.8" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="836.8" y="1102.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (3 samples, 0.04%)</title><rect x="834.2" y="1123.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="837.2" y="1134.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (2 samples, 0.02%)</title><rect x="834.2" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="837.2" y="1118.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (3 samples, 0.04%)</title><rect x="834.9" y="1139.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="837.9" y="1150.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (2 samples, 0.02%)</title><rect x="835.4" y="1139.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="838.4" y="1150.0"></text>
</g>
<g>
<title>Node::clone() const (3 samples, 0.04%)</title><rect x="836.3" y="1171.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="839.3" y="1182.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (4 samples, 0.05%)</title><rect x="836.8" y="1171.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="839.8" y="1182.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="837.0" y="1155.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="840.0" y="1166.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (9 samples, 0.11%)</title><rect x="837.7" y="1203.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="840.7" y="1214.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (6 samples, 0.07%)</title><rect x="837.7" y="1187.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="840.7" y="1198.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.02%)</title><rect x="837.9" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="840.9" y="1182.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (2 samples, 0.02%)</title><rect x="838.6" y="1187.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="841.6" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (4 samples, 0.05%)</title><rect x="838.9" y="1203.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="841.9" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (4 samples, 0.05%)</title><rect x="838.9" y="1187.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="841.9" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (168 samples, 1.96%)</title><rect x="839.4" y="1203.0" width="23.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="842.4" y="1214.0">P..</text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (2 samples, 0.02%)</title><rect x="839.9" y="1187.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="842.9" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (163 samples, 1.90%)</title><rect x="840.1" y="1187.0" width="22.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="843.1" y="1198.0">P..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="840.1" y="1171.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="843.1" y="1182.0"></text>
</g>
<g>
<title>Chunk::next_chop() (2 samples, 0.02%)</title><rect x="840.5" y="1171.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="843.5" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (3 samples, 0.04%)</title><rect x="841.4" y="1171.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="844.4" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (9 samples, 0.11%)</title><rect x="841.8" y="1171.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="844.8" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (2 samples, 0.02%)</title><rect x="842.6" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="845.6" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (37 samples, 0.43%)</title><rect x="843.0" y="1171.0" width="5.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="846.0" y="1182.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.02%)</title><rect x="843.8" y="1155.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="846.8" y="1166.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (6 samples, 0.07%)</title><rect x="844.3" y="1155.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="847.3" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (7 samples, 0.08%)</title><rect x="845.1" y="1155.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="848.1" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (11 samples, 0.13%)</title><rect x="846.1" y="1155.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="849.1" y="1166.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (5 samples, 0.06%)</title><rect x="846.7" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="849.7" y="1150.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (3 samples, 0.04%)</title><rect x="846.7" y="1123.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="849.7" y="1134.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (2 samples, 0.02%)</title><rect x="846.9" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="849.9" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (2 samples, 0.02%)</title><rect x="847.6" y="1155.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="850.6" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (32 samples, 0.37%)</title><rect x="848.1" y="1171.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="851.1" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (4 samples, 0.05%)</title><rect x="849.9" y="1155.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="852.9" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (4 samples, 0.05%)</title><rect x="850.5" y="1155.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="853.5" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (6 samples, 0.07%)</title><rect x="851.1" y="1155.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="854.1" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="851.6" y="1139.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="854.6" y="1150.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.02%)</title><rect x="852.0" y="1155.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="855.0" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (8 samples, 0.09%)</title><rect x="852.5" y="1171.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="855.5" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (7 samples, 0.08%)</title><rect x="853.6" y="1171.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="856.6" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (7 samples, 0.08%)</title><rect x="854.6" y="1171.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="857.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (8 samples, 0.09%)</title><rect x="855.6" y="1171.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="858.6" y="1182.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (7 samples, 0.08%)</title><rect x="855.7" y="1155.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="858.7" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (34 samples, 0.40%)</title><rect x="856.7" y="1171.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="859.7" y="1182.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.04%)</title><rect x="858.3" y="1155.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="861.3" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::add_livein(Block*, IndexSet*) (2 samples, 0.02%)</title><rect x="858.9" y="1155.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="861.9" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (15 samples, 0.18%)</title><rect x="859.1" y="1155.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="862.1" y="1166.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.02%)</title><rect x="860.5" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="863.5" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.02%)</title><rect x="860.9" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="863.9" y="1150.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (2 samples, 0.02%)</title><rect x="861.3" y="1171.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="864.3" y="1182.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.04%)</title><rect x="861.6" y="1171.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="864.6" y="1182.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (2 samples, 0.02%)</title><rect x="862.0" y="1171.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="865.0" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (2 samples, 0.02%)</title><rect x="862.6" y="1203.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="865.6" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1,114 samples, 13.00%)</title><rect x="862.8" y="1203.0" width="153.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="865.8" y="1214.0">PhaseChaitin::Regis..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.13%)</title><rect x="863.0" y="1187.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="866.0" y="1198.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.02%)</title><rect x="864.5" y="1187.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="867.5" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (3 samples, 0.04%)</title><rect x="865.1" y="1187.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="868.1" y="1198.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (2 samples, 0.02%)</title><rect x="865.9" y="1187.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="868.9" y="1198.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.02%)</title><rect x="866.2" y="1187.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.2" y="1198.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (3 samples, 0.04%)</title><rect x="866.4" y="1187.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="869.4" y="1198.0"></text>
</g>
<g>
<title>Node::jvms() const (3 samples, 0.04%)</title><rect x="866.8" y="1187.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.8" y="1198.0"></text>
</g>
<g>
<title>Node::rematerialize() const (7 samples, 0.08%)</title><rect x="867.3" y="1187.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="870.3" y="1198.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (27 samples, 0.32%)</title><rect x="868.2" y="1187.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="871.2" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (54 samples, 0.63%)</title><rect x="871.9" y="1187.0" width="7.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="874.9" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.06%)</title><rect x="875.1" y="1171.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="878.1" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (5 samples, 0.06%)</title><rect x="875.8" y="1171.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="878.8" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (18 samples, 0.21%)</title><rect x="876.5" y="1171.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="879.5" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.07%)</title><rect x="878.1" y="1155.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="881.1" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (32 samples, 0.37%)</title><rect x="879.4" y="1187.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="882.4" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.08%)</title><rect x="879.6" y="1171.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="882.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (23 samples, 0.27%)</title><rect x="880.6" y="1171.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="883.6" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.09%)</title><rect x="882.5" y="1155.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="885.5" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (119 samples, 1.39%)</title><rect x="883.8" y="1187.0" width="16.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="886.8" y="1198.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (8 samples, 0.09%)</title><rect x="896.0" y="1171.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="899.0" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int) (2 samples, 0.02%)</title><rect x="897.3" y="1171.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="900.3" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (3 samples, 0.04%)</title><rect x="897.7" y="1171.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="900.7" y="1182.0"></text>
</g>
<g>
<title>Node::clone() const (3 samples, 0.04%)</title><rect x="897.7" y="1155.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="900.7" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (4 samples, 0.05%)</title><rect x="898.1" y="1171.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="901.1" y="1182.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (3 samples, 0.04%)</title><rect x="898.2" y="1155.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="901.2" y="1166.0"></text>
</g>
<g>
<title>decodeKlass_not_nullNode::rule() const (2 samples, 0.02%)</title><rect x="899.1" y="1171.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.1" y="1182.0"></text>
</g>
<g>
<title>loadNNode::rule() const (2 samples, 0.02%)</title><rect x="899.8" y="1171.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.8" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (265 samples, 3.09%)</title><rect x="900.3" y="1187.0" width="36.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="903.3" y="1198.0">Pha..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (12 samples, 0.14%)</title><rect x="906.1" y="1171.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="909.1" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (15 samples, 0.18%)</title><rect x="907.9" y="1171.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="910.9" y="1182.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (2 samples, 0.02%)</title><rect x="909.9" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="912.9" y="1182.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (4 samples, 0.05%)</title><rect x="910.4" y="1171.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="913.4" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (22 samples, 0.26%)</title><rect x="911.2" y="1171.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="914.2" y="1182.0"></text>
</g>
<g>
<title>MachNode::oper_input_base() const (2 samples, 0.02%)</title><rect x="913.1" y="1155.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="916.1" y="1166.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (3 samples, 0.04%)</title><rect x="913.4" y="1155.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="916.4" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::adjust_high_pressure_index(Block*, unsigned int&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.04%)</title><rect x="914.2" y="1171.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="917.2" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (100 samples, 1.17%)</title><rect x="914.8" y="1171.0" width="13.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="917.8" y="1182.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (4 samples, 0.05%)</title><rect x="924.1" y="1155.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="927.1" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (24 samples, 0.28%)</title><rect x="924.7" y="1155.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="927.7" y="1166.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="928.0" y="1155.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="931.0" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (19 samples, 0.22%)</title><rect x="928.5" y="1171.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="931.5" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.09%)</title><rect x="930.0" y="1155.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="933.0" y="1166.0"></text>
</g>
<g>
<title>RegMask::Size() const (14 samples, 0.16%)</title><rect x="931.3" y="1171.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="934.3" y="1182.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (4 samples, 0.05%)</title><rect x="933.2" y="1171.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="936.2" y="1182.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (21 samples, 0.25%)</title><rect x="933.8" y="1171.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="936.8" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (23 samples, 0.27%)</title><rect x="936.8" y="1187.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="939.8" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (16 samples, 0.19%)</title><rect x="937.8" y="1171.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="940.8" y="1182.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.06%)</title><rect x="938.7" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="941.7" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.05%)</title><rect x="939.4" y="1155.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="942.4" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (2 samples, 0.02%)</title><rect x="940.0" y="1187.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="943.0" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (4 samples, 0.05%)</title><rect x="940.4" y="1187.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="943.4" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (3 samples, 0.04%)</title><rect x="941.1" y="1187.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="944.1" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (69 samples, 0.81%)</title><rect x="941.5" y="1187.0" width="9.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="944.5" y="1198.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (4 samples, 0.05%)</title><rect x="949.5" y="1171.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="952.5" y="1182.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (2 samples, 0.02%)</title><rect x="950.1" y="1171.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="953.1" y="1182.0"></text>
</g>
<g>
<title>Type::hashcons() (2 samples, 0.02%)</title><rect x="950.4" y="1171.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="953.4" y="1182.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (2 samples, 0.02%)</title><rect x="950.4" y="1155.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="953.4" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.0] (12 samples, 0.14%)</title><rect x="951.0" y="1187.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="954.0" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (20 samples, 0.23%)</title><rect x="952.6" y="1187.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="955.6" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (131 samples, 1.53%)</title><rect x="955.4" y="1187.0" width="18.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="958.4" y="1198.0"></text>
</g>
<g>
<title>Chunk::next_chop() (2 samples, 0.02%)</title><rect x="962.5" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="965.5" y="1182.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="962.5" y="1155.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="965.5" y="1166.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (2 samples, 0.02%)</title><rect x="962.8" y="1171.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="965.8" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (71 samples, 0.83%)</title><rect x="963.2" y="1171.0" width="9.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="966.2" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (2 samples, 0.02%)</title><rect x="971.8" y="1155.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="974.8" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.0] (4 samples, 0.05%)</title><rect x="972.0" y="1155.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="975.0" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::yank(Node*, Block*, Node_List*, Node_List*) (2 samples, 0.02%)</title><rect x="972.2" y="1139.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="975.2" y="1150.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.02%)</title><rect x="972.6" y="1155.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="975.6" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::skip_copies(Node*) (3 samples, 0.04%)</title><rect x="973.0" y="1171.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="976.0" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (10 samples, 0.12%)</title><rect x="973.6" y="1187.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.6" y="1198.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (3 samples, 0.04%)</title><rect x="974.5" y="1171.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="977.5" y="1182.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (27 samples, 0.32%)</title><rect x="974.9" y="1187.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.9" y="1198.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (7 samples, 0.08%)</title><rect x="975.1" y="1171.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="978.1" y="1182.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (19 samples, 0.22%)</title><rect x="976.0" y="1171.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="979.0" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (3 samples, 0.04%)</title><rect x="976.3" y="1155.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="979.3" y="1166.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) [clone .part.0] (14 samples, 0.16%)</title><rect x="976.7" y="1155.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="979.7" y="1166.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (7 samples, 0.08%)</title><rect x="977.0" y="1139.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="980.0" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.02%)</title><rect x="977.7" y="1123.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.7" y="1134.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (4 samples, 0.05%)</title><rect x="978.1" y="1139.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="981.1" y="1150.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (32 samples, 0.37%)</title><rect x="978.8" y="1187.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.8" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (19 samples, 0.22%)</title><rect x="980.6" y="1171.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="983.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (24 samples, 0.28%)</title><rect x="983.2" y="1187.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="986.2" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (13 samples, 0.15%)</title><rect x="984.6" y="1171.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="987.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (13 samples, 0.15%)</title><rect x="986.5" y="1187.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="989.5" y="1198.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (11 samples, 0.13%)</title><rect x="986.8" y="1171.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="989.8" y="1182.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (101 samples, 1.18%)</title><rect x="988.3" y="1187.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="991.3" y="1198.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (5 samples, 0.06%)</title><rect x="995.2" y="1171.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="998.2" y="1182.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (41 samples, 0.48%)</title><rect x="996.1" y="1171.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="999.1" y="1182.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (10 samples, 0.12%)</title><rect x="998.6" y="1155.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1001.6" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (11 samples, 0.13%)</title><rect x="1000.1" y="1155.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1003.1" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (2 samples, 0.02%)</title><rect x="1001.8" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1004.8" y="1182.0"></text>
</g>
<g>
<title>RegMask::Size() const (36 samples, 0.42%)</title><rect x="1002.2" y="1187.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1005.2" y="1198.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (8 samples, 0.09%)</title><rect x="1007.1" y="1187.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.1" y="1198.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (7 samples, 0.08%)</title><rect x="1008.2" y="1187.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.2" y="1198.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (4 samples, 0.05%)</title><rect x="1009.2" y="1187.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1012.2" y="1198.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (7 samples, 0.08%)</title><rect x="1009.8" y="1187.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1012.8" y="1198.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (6 samples, 0.07%)</title><rect x="1010.7" y="1187.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1013.7" y="1198.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (19 samples, 0.22%)</title><rect x="1012.0" y="1187.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1015.0" y="1198.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (5 samples, 0.06%)</title><rect x="1014.7" y="1187.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.7" y="1198.0"></text>
</g>
<g>
<title>Compile::Optimize() (750 samples, 8.75%)</title><rect x="1016.6" y="1219.0" width="103.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1019.6" y="1230.0">Compile::Opt..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (12 samples, 0.14%)</title><rect x="1017.5" y="1203.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1020.5" y="1214.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (12 samples, 0.14%)</title><rect x="1017.5" y="1187.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.5" y="1198.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.0] (2 samples, 0.02%)</title><rect x="1018.6" y="1171.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1021.6" y="1182.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (6 samples, 0.07%)</title><rect x="1019.1" y="1203.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1022.1" y="1214.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (4 samples, 0.05%)</title><rect x="1019.1" y="1187.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1022.1" y="1198.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.04%)</title><rect x="1019.3" y="1171.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1022.3" y="1182.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.02%)</title><rect x="1019.4" y="1155.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1022.4" y="1166.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (258 samples, 3.01%)</title><rect x="1020.0" y="1203.0" width="35.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.0" y="1214.0">Com..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (257 samples, 3.00%)</title><rect x="1020.1" y="1187.0" width="35.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1023.1" y="1198.0">Pha..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="1020.1" y="1171.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1023.1" y="1182.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (3 samples, 0.04%)</title><rect x="1020.4" y="1171.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1023.4" y="1182.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.05%)</title><rect x="1020.9" y="1171.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1023.9" y="1182.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.02%)</title><rect x="1020.9" y="1155.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1023.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.0] (2 samples, 0.02%)</title><rect x="1021.2" y="1155.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1024.2" y="1166.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (2 samples, 0.02%)</title><rect x="1021.7" y="1171.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1024.7" y="1182.0"></text>
</g>
<g>
<title>Node::pinned() const (3 samples, 0.04%)</title><rect x="1022.0" y="1171.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1025.0" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (15 samples, 0.18%)</title><rect x="1022.4" y="1171.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1025.4" y="1182.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (6 samples, 0.07%)</title><rect x="1023.5" y="1155.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1026.5" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (22 samples, 0.26%)</title><rect x="1024.5" y="1171.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1027.5" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (7 samples, 0.08%)</title><rect x="1026.6" y="1155.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1029.6" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (125 samples, 1.46%)</title><rect x="1027.5" y="1171.0" width="17.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.5" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (109 samples, 1.27%)</title><rect x="1029.6" y="1155.0" width="15.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1032.6" y="1166.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (2 samples, 0.02%)</title><rect x="1031.0" y="1139.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1034.0" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (96 samples, 1.12%)</title><rect x="1031.2" y="1139.0" width="13.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1034.2" y="1150.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (2 samples, 0.02%)</title><rect x="1032.5" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1035.5" y="1134.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (6 samples, 0.07%)</title><rect x="1032.8" y="1123.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1035.8" y="1134.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (5 samples, 0.06%)</title><rect x="1032.9" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1035.9" y="1118.0"></text>
</g>
<g>
<title>Type::hashcons() (2 samples, 0.02%)</title><rect x="1032.9" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1035.9" y="1102.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (2 samples, 0.02%)</title><rect x="1032.9" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1035.9" y="1086.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (3 samples, 0.04%)</title><rect x="1033.2" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1036.2" y="1102.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (3 samples, 0.04%)</title><rect x="1033.2" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1036.2" y="1086.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (2 samples, 0.02%)</title><rect x="1033.3" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1036.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (9 samples, 0.11%)</title><rect x="1033.6" y="1123.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1036.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (6 samples, 0.07%)</title><rect x="1034.0" y="1107.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1037.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (3 samples, 0.04%)</title><rect x="1034.8" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1037.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (65 samples, 0.76%)</title><rect x="1035.4" y="1123.0" width="8.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1038.4" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (21 samples, 0.25%)</title><rect x="1044.7" y="1171.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1047.7" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (2 samples, 0.02%)</title><rect x="1046.9" y="1155.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.9" y="1166.0"></text>
</g>
<g>
<title>ProjNode::Opcode() const (2 samples, 0.02%)</title><rect x="1047.2" y="1155.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.2" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (36 samples, 0.42%)</title><rect x="1047.6" y="1171.0" width="5.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (3 samples, 0.04%)</title><rect x="1049.8" y="1155.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1052.8" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (15 samples, 0.18%)</title><rect x="1050.2" y="1155.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1053.2" y="1166.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (3 samples, 0.04%)</title><rect x="1051.1" y="1139.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1054.1" y="1150.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (2 samples, 0.02%)</title><rect x="1051.2" y="1123.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1054.2" y="1134.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (2 samples, 0.02%)</title><rect x="1051.2" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1054.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.02%)</title><rect x="1051.5" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.5" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (2 samples, 0.02%)</title><rect x="1051.9" y="1139.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.9" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (15 samples, 0.18%)</title><rect x="1052.7" y="1171.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.7" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (13 samples, 0.15%)</title><rect x="1052.9" y="1155.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1055.9" y="1166.0"></text>
</g>
<g>
<title>ConNode::hash() const (2 samples, 0.02%)</title><rect x="1053.3" y="1139.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.3" y="1150.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (3 samples, 0.04%)</title><rect x="1054.8" y="1171.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1057.8" y="1182.0"></text>
</g>
<g>
<title>Compile::remove_range_check_casts(PhaseIterGVN&amp;) (2 samples, 0.02%)</title><rect x="1055.5" y="1203.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.5" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.02%)</title><rect x="1055.5" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.5" y="1198.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.0] (9 samples, 0.11%)</title><rect x="1055.8" y="1203.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1058.8" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.05%)</title><rect x="1056.4" y="1187.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1059.4" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.04%)</title><rect x="1056.4" y="1171.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1059.4" y="1182.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.02%)</title><rect x="1056.6" y="1155.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1059.6" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.0] (2 samples, 0.02%)</title><rect x="1056.6" y="1139.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1059.6" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1056.6" y="1123.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1059.6" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1056.6" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1059.6" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (29 samples, 0.34%)</title><rect x="1057.0" y="1203.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1060.0" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (29 samples, 0.34%)</title><rect x="1057.0" y="1187.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.0" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (2 samples, 0.02%)</title><rect x="1057.3" y="1171.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1060.3" y="1182.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (2 samples, 0.02%)</title><rect x="1057.3" y="1155.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1060.3" y="1166.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (2 samples, 0.02%)</title><rect x="1057.3" y="1139.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.3" y="1150.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (2 samples, 0.02%)</title><rect x="1057.3" y="1123.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.3" y="1134.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (2 samples, 0.02%)</title><rect x="1057.3" y="1107.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.3" y="1118.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1057.3" y="1091.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1060.3" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::add_node_to_connection_graph(Node*, Unique_Node_List*) (3 samples, 0.04%)</title><rect x="1057.7" y="1171.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.7" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) [clone .part.0] (5 samples, 0.06%)</title><rect x="1058.2" y="1171.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1061.2" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.0] (5 samples, 0.06%)</title><rect x="1058.2" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.2" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (3 samples, 0.04%)</title><rect x="1058.5" y="1139.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1061.5" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (3 samples, 0.04%)</title><rect x="1058.9" y="1171.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1061.9" y="1182.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (2 samples, 0.02%)</title><rect x="1059.1" y="1155.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1062.1" y="1166.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (2 samples, 0.02%)</title><rect x="1059.1" y="1139.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1062.1" y="1150.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (2 samples, 0.02%)</title><rect x="1059.1" y="1123.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.1" y="1134.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (2 samples, 0.02%)</title><rect x="1059.1" y="1107.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1062.1" y="1118.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1059.1" y="1091.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1062.1" y="1102.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (2 samples, 0.02%)</title><rect x="1059.1" y="1075.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1062.1" y="1086.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (2 samples, 0.02%)</title><rect x="1059.1" y="1059.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1062.1" y="1070.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (2 samples, 0.02%)</title><rect x="1059.1" y="1043.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1062.1" y="1054.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (2 samples, 0.02%)</title><rect x="1059.1" y="1027.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1062.1" y="1038.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1059.1" y="1011.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1062.1" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.02%)</title><rect x="1059.1" y="995.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.1" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1059.1" y="979.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1062.1" y="990.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.02%)</title><rect x="1059.1" y="963.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1062.1" y="974.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.02%)</title><rect x="1059.1" y="947.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1062.1" y="958.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1059.1" y="931.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1062.1" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (11 samples, 0.13%)</title><rect x="1059.3" y="1171.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.3" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (8 samples, 0.09%)</title><rect x="1059.3" y="1155.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.3" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (6 samples, 0.07%)</title><rect x="1059.6" y="1139.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1062.6" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (5 samples, 0.06%)</title><rect x="1059.7" y="1123.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1062.7" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="1059.7" y="1107.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1062.7" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1059.9" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1062.9" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1059.9" y="1075.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1062.9" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1059.9" y="1059.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1062.9" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1060.2" y="1107.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1063.2" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1060.2" y="1091.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.2" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1060.2" y="1075.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1063.2" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1060.2" y="1059.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1063.2" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1060.2" y="1043.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1063.2" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1060.2" y="1027.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1063.2" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1060.2" y="1011.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1063.2" y="1022.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (16 samples, 0.19%)</title><rect x="1061.3" y="1203.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1064.3" y="1214.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (9 samples, 0.11%)</title><rect x="1063.5" y="1203.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1066.5" y="1214.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (9 samples, 0.11%)</title><rect x="1063.5" y="1187.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1066.5" y="1198.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (4 samples, 0.05%)</title><rect x="1064.2" y="1171.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1067.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (256 samples, 2.99%)</title><rect x="1064.7" y="1203.0" width="35.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1067.7" y="1214.0">Pha..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.05%)</title><rect x="1064.8" y="1187.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1067.8" y="1198.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1064.8" y="1171.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1067.8" y="1182.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.02%)</title><rect x="1065.0" y="1155.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1068.0" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (7 samples, 0.08%)</title><rect x="1065.4" y="1187.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1068.4" y="1198.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.05%)</title><rect x="1065.4" y="1171.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.4" y="1182.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.05%)</title><rect x="1065.4" y="1155.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1068.4" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (3 samples, 0.04%)</title><rect x="1065.4" y="1139.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1068.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.0] (2 samples, 0.02%)</title><rect x="1065.5" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1068.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.0] (3 samples, 0.04%)</title><rect x="1065.9" y="1171.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1068.9" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1065.9" y="1155.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1068.9" y="1166.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_proj(Deoptimization::DeoptReason) (2 samples, 0.02%)</title><rect x="1066.1" y="1139.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.1" y="1150.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (2 samples, 0.02%)</title><rect x="1066.5" y="1187.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.5" y="1198.0"></text>
</g>
<g>
<title>NTarjan::LINK(NTarjan*, NTarjan*) (2 samples, 0.02%)</title><rect x="1066.8" y="1187.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.8" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (27 samples, 0.32%)</title><rect x="1067.3" y="1187.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1070.3" y="1198.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (12 samples, 0.14%)</title><rect x="1069.2" y="1171.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1072.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (28 samples, 0.33%)</title><rect x="1071.0" y="1187.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1074.0" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (4 samples, 0.05%)</title><rect x="1074.2" y="1171.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1077.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (116 samples, 1.35%)</title><rect x="1074.9" y="1187.0" width="16.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1077.9" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (87 samples, 1.02%)</title><rect x="1078.7" y="1171.0" width="12.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1081.7" y="1182.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (4 samples, 0.05%)</title><rect x="1080.9" y="1155.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1083.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.02%)</title><rect x="1081.8" y="1155.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.8" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (62 samples, 0.72%)</title><rect x="1082.1" y="1155.0" width="8.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1085.1" y="1166.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (2 samples, 0.02%)</title><rect x="1083.2" y="1139.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.2" y="1150.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (2 samples, 0.02%)</title><rect x="1083.4" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1086.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (6 samples, 0.07%)</title><rect x="1083.8" y="1139.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (4 samples, 0.05%)</title><rect x="1084.1" y="1123.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1087.1" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.02%)</title><rect x="1084.7" y="1139.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1087.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (41 samples, 0.48%)</title><rect x="1084.9" y="1139.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1087.9" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (16 samples, 0.19%)</title><rect x="1090.9" y="1187.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1093.9" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (3 samples, 0.04%)</title><rect x="1092.2" y="1171.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1095.2" y="1182.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (2 samples, 0.02%)</title><rect x="1092.7" y="1171.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1095.7" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (21 samples, 0.25%)</title><rect x="1093.1" y="1187.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (2 samples, 0.02%)</title><rect x="1094.2" y="1171.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1097.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (4 samples, 0.05%)</title><rect x="1094.4" y="1171.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (5 samples, 0.06%)</title><rect x="1095.0" y="1171.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1098.0" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (3 samples, 0.04%)</title><rect x="1095.3" y="1155.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.3" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (25 samples, 0.29%)</title><rect x="1096.0" y="1187.0" width="3.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1099.0" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (23 samples, 0.27%)</title><rect x="1096.0" y="1171.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1099.0" y="1182.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (4 samples, 0.05%)</title><rect x="1096.5" y="1155.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1099.5" y="1166.0"></text>
</g>
<g>
<title>NodeHash::grow() (3 samples, 0.04%)</title><rect x="1096.6" y="1139.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1099.6" y="1150.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (3 samples, 0.04%)</title><rect x="1097.2" y="1155.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.2" y="1166.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (2 samples, 0.02%)</title><rect x="1097.6" y="1155.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.6" y="1166.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (8 samples, 0.09%)</title><rect x="1097.9" y="1155.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1100.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.04%)</title><rect x="1098.2" y="1139.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1101.2" y="1150.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (3 samples, 0.04%)</title><rect x="1098.6" y="1139.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.6" y="1150.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (2 samples, 0.02%)</title><rect x="1099.5" y="1187.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1102.5" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (6 samples, 0.07%)</title><rect x="1100.0" y="1203.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.0" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (3 samples, 0.04%)</title><rect x="1100.4" y="1187.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.4" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::operator=(PhaseIterGVN const&amp;) (3 samples, 0.04%)</title><rect x="1100.8" y="1203.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.8" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (101 samples, 1.18%)</title><rect x="1101.2" y="1203.0" width="13.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1104.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (91 samples, 1.06%)</title><rect x="1102.3" y="1187.0" width="12.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1105.3" y="1198.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (11 samples, 0.13%)</title><rect x="1103.9" y="1171.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1106.9" y="1182.0"></text>
</g>
<g>
<title>IfNode::search_identical(int) (5 samples, 0.06%)</title><rect x="1104.1" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1107.1" y="1166.0"></text>
</g>
<g>
<title>MultiNode::proj_out(unsigned int) const (2 samples, 0.02%)</title><rect x="1104.8" y="1155.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.8" y="1166.0"></text>
</g>
<g>
<title>idealize_test(PhaseGVN*, IfNode*) (2 samples, 0.02%)</title><rect x="1105.0" y="1155.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1108.0" y="1166.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (5 samples, 0.06%)</title><rect x="1105.6" y="1171.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1108.6" y="1182.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (2 samples, 0.02%)</title><rect x="1105.6" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.6" y="1166.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (3 samples, 0.04%)</title><rect x="1105.9" y="1155.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.9" y="1166.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (3 samples, 0.04%)</title><rect x="1105.9" y="1139.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1108.9" y="1150.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.02%)</title><rect x="1106.0" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1109.0" y="1134.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (2 samples, 0.02%)</title><rect x="1106.3" y="1171.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1109.3" y="1182.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (3 samples, 0.04%)</title><rect x="1106.8" y="1171.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1109.8" y="1182.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (8 samples, 0.09%)</title><rect x="1107.4" y="1171.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1110.4" y="1182.0"></text>
</g>
<g>
<title>NodeHash::grow() (3 samples, 0.04%)</title><rect x="1107.9" y="1155.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1110.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (2 samples, 0.02%)</title><rect x="1108.5" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.5" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (7 samples, 0.08%)</title><rect x="1108.8" y="1171.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1111.8" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.02%)</title><rect x="1109.5" y="1155.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1112.5" y="1166.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (6 samples, 0.07%)</title><rect x="1109.7" y="1171.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1112.7" y="1182.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (4 samples, 0.05%)</title><rect x="1109.7" y="1155.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.7" y="1166.0"></text>
</g>
<g>
<title>Compile::start() const (2 samples, 0.02%)</title><rect x="1109.7" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1112.7" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::allocation() (2 samples, 0.02%)</title><rect x="1110.0" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1113.0" y="1150.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (17 samples, 0.20%)</title><rect x="1111.1" y="1171.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1114.1" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (5 samples, 0.06%)</title><rect x="1111.5" y="1155.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1114.5" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (3 samples, 0.04%)</title><rect x="1111.8" y="1139.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.8" y="1150.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.02%)</title><rect x="1111.9" y="1123.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1114.9" y="1134.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (8 samples, 0.09%)</title><rect x="1112.3" y="1155.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.3" y="1166.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (7 samples, 0.08%)</title><rect x="1113.4" y="1171.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1116.4" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.0] (5 samples, 0.06%)</title><rect x="1113.4" y="1155.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.4" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.06%)</title><rect x="1113.4" y="1139.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.4" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.06%)</title><rect x="1113.4" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1116.4" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1113.4" y="1107.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.4" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1113.4" y="1091.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1116.4" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1113.4" y="1075.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1116.4" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1113.4" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.4" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1113.4" y="1043.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1116.4" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1113.4" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.4" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1113.4" y="1011.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.4" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1113.4" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1116.4" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1113.4" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1116.4" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1113.4" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1116.4" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1113.4" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1116.4" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1113.4" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.4" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1113.4" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.4" y="926.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (2 samples, 0.02%)</title><rect x="1113.9" y="1107.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.9" y="1118.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.02%)</title><rect x="1113.9" y="1091.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1116.9" y="1102.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (2 samples, 0.02%)</title><rect x="1114.1" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.1" y="1166.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (18 samples, 0.21%)</title><rect x="1115.2" y="1203.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1118.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 0.11%)</title><rect x="1115.2" y="1187.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.11%)</title><rect x="1115.2" y="1171.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.2" y="1182.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (2 samples, 0.02%)</title><rect x="1115.5" y="1155.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1118.5" y="1166.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (3 samples, 0.04%)</title><rect x="1116.5" y="1187.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1119.5" y="1198.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_arraycopy_node(ArrayCopyNode*) (3 samples, 0.04%)</title><rect x="1116.9" y="1187.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.9" y="1198.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_arraycopy(ArrayCopyNode*, AllocateArrayNode*, Node**, MergeMemNode*, Node**, TypePtr const*, BasicType, Node*, Node*, Node*, Node*, Node*, bool, bool, RegionNode*) (3 samples, 0.04%)</title><rect x="1116.9" y="1171.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1119.9" y="1182.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_unlock_node(UnlockNode*) (2 samples, 0.02%)</title><rect x="1117.3" y="1187.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.3" y="1198.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (10 samples, 0.12%)</title><rect x="1117.7" y="1203.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1120.7" y="1214.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (6 samples, 0.07%)</title><rect x="1118.3" y="1187.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1121.3" y="1198.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (4 samples, 0.05%)</title><rect x="1118.4" y="1171.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.4" y="1182.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (2 samples, 0.02%)</title><rect x="1119.5" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1122.5" y="1214.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (2 samples, 0.02%)</title><rect x="1119.9" y="1219.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1122.9" y="1230.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (2 samples, 0.02%)</title><rect x="1119.9" y="1203.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1122.9" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1119.9" y="1187.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1122.9" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1119.9" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1122.9" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1119.9" y="1155.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1122.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1119.9" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1122.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1119.9" y="1123.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1119.9" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1122.9" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1119.9" y="1091.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1122.9" y="1102.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (8 samples, 0.09%)</title><rect x="1120.2" y="1219.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.2" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (247 samples, 2.88%)</title><rect x="1121.4" y="1219.0" width="34.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.4" y="1230.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (247 samples, 2.88%)</title><rect x="1121.4" y="1203.0" width="34.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1124.4" y="1214.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (243 samples, 2.84%)</title><rect x="1121.6" y="1187.0" width="33.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.6" y="1198.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (242 samples, 2.82%)</title><rect x="1121.7" y="1171.0" width="33.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.7" y="1182.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (242 samples, 2.82%)</title><rect x="1121.7" y="1155.0" width="33.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.7" y="1166.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (233 samples, 2.72%)</title><rect x="1122.0" y="1139.0" width="32.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.0" y="1150.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (5 samples, 0.06%)</title><rect x="1122.0" y="1123.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1125.0" y="1134.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.04%)</title><rect x="1122.1" y="1107.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1125.1" y="1118.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1122.1" y="1091.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.1" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1122.1" y="1075.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1125.1" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1122.1" y="1059.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1125.1" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1122.1" y="1043.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.1" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1122.1" y="1027.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.1" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.04%)</title><rect x="1122.1" y="1011.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.1" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (3 samples, 0.04%)</title><rect x="1122.1" y="995.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.1" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (3 samples, 0.04%)</title><rect x="1122.1" y="979.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.1" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (3 samples, 0.04%)</title><rect x="1122.1" y="963.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.1" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (3 samples, 0.04%)</title><rect x="1122.1" y="947.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.1" y="958.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (2 samples, 0.02%)</title><rect x="1122.8" y="1123.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.8" y="1134.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (2 samples, 0.02%)</title><rect x="1122.8" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.8" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (150 samples, 1.75%)</title><rect x="1123.1" y="1123.0" width="20.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.1" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (150 samples, 1.75%)</title><rect x="1123.1" y="1107.0" width="20.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (146 samples, 1.70%)</title><rect x="1123.5" y="1091.0" width="20.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1126.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (143 samples, 1.67%)</title><rect x="1123.5" y="1075.0" width="19.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1126.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (141 samples, 1.65%)</title><rect x="1123.8" y="1059.0" width="19.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.8" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (134 samples, 1.56%)</title><rect x="1123.8" y="1043.0" width="18.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1126.8" y="1054.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (8 samples, 0.09%)</title><rect x="1123.8" y="1027.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1126.8" y="1038.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (7 samples, 0.08%)</title><rect x="1123.9" y="1011.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.9" y="1022.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (7 samples, 0.08%)</title><rect x="1123.9" y="995.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.9" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (6 samples, 0.07%)</title><rect x="1124.0" y="979.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.0" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (6 samples, 0.07%)</title><rect x="1124.0" y="963.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.0" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.07%)</title><rect x="1124.0" y="947.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1127.0" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.05%)</title><rect x="1124.3" y="931.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1127.3" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.04%)</title><rect x="1124.5" y="915.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.5" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (3 samples, 0.04%)</title><rect x="1124.5" y="899.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.5" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.04%)</title><rect x="1124.5" y="883.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.5" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1124.5" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.5" y="878.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.02%)</title><rect x="1124.6" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1127.6" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.02%)</title><rect x="1124.6" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.6" y="846.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1124.6" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1127.6" y="830.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.02%)</title><rect x="1124.6" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1127.6" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.02%)</title><rect x="1124.6" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.6" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (84 samples, 0.98%)</title><rect x="1125.1" y="1027.0" width="11.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1128.1" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (84 samples, 0.98%)</title><rect x="1125.1" y="1011.0" width="11.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (81 samples, 0.95%)</title><rect x="1125.4" y="995.0" width="11.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (80 samples, 0.93%)</title><rect x="1125.4" y="979.0" width="11.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1128.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (80 samples, 0.93%)</title><rect x="1125.4" y="963.0" width="11.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.4" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (70 samples, 0.82%)</title><rect x="1126.0" y="947.0" width="9.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.0" y="958.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (6 samples, 0.07%)</title><rect x="1126.0" y="931.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1129.0" y="942.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (4 samples, 0.05%)</title><rect x="1126.1" y="915.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.1" y="926.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.05%)</title><rect x="1126.1" y="899.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.1" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (4 samples, 0.05%)</title><rect x="1126.1" y="883.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.1" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (4 samples, 0.05%)</title><rect x="1126.1" y="867.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.1" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1126.4" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.4" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1126.4" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.4" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.02%)</title><rect x="1126.4" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (49 samples, 0.57%)</title><rect x="1127.1" y="931.0" width="6.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.1" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (49 samples, 0.57%)</title><rect x="1127.1" y="915.0" width="6.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.1" y="926.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.02%)</title><rect x="1127.2" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.2" y="910.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (2 samples, 0.02%)</title><rect x="1127.2" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.2" y="894.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.02%)</title><rect x="1127.2" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.2" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1127.2" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (45 samples, 0.53%)</title><rect x="1127.5" y="899.0" width="6.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (45 samples, 0.53%)</title><rect x="1127.5" y="883.0" width="6.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (45 samples, 0.53%)</title><rect x="1127.5" y="867.0" width="6.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (39 samples, 0.46%)</title><rect x="1127.6" y="851.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.6" y="862.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (8 samples, 0.09%)</title><rect x="1127.6" y="835.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.6" y="846.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (7 samples, 0.08%)</title><rect x="1127.8" y="819.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.8" y="830.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1128.3" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.3" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1128.3" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.3" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1128.3" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.3" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1128.3" y="755.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.3" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1128.5" y="739.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.5" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.02%)</title><rect x="1128.5" y="723.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.5" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (24 samples, 0.28%)</title><rect x="1129.0" y="835.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.0" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (24 samples, 0.28%)</title><rect x="1129.0" y="819.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.0" y="830.0"></text>
</g>
<g>
<title>Parse::build_exits() (2 samples, 0.02%)</title><rect x="1129.0" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 0.23%)</title><rect x="1129.4" y="803.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1132.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.23%)</title><rect x="1129.4" y="787.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (20 samples, 0.23%)</title><rect x="1129.4" y="771.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.21%)</title><rect x="1129.6" y="755.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.6" y="766.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1129.6" y="739.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.6" y="750.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (2 samples, 0.02%)</title><rect x="1129.6" y="723.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1132.6" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.15%)</title><rect x="1129.8" y="739.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1132.8" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.15%)</title><rect x="1129.8" y="723.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.14%)</title><rect x="1130.0" y="707.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.14%)</title><rect x="1130.0" y="691.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.14%)</title><rect x="1130.0" y="675.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1133.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.12%)</title><rect x="1130.0" y="659.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.0" y="670.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.02%)</title><rect x="1130.0" y="643.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.0" y="654.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.02%)</title><rect x="1130.0" y="627.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1133.0" y="638.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.02%)</title><rect x="1130.0" y="611.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1133.0" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.02%)</title><rect x="1130.0" y="595.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.0" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.02%)</title><rect x="1130.0" y="579.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1133.0" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1130.0" y="563.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.0" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1130.0" y="547.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1133.0" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.02%)</title><rect x="1130.0" y="531.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.0" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.02%)</title><rect x="1130.0" y="515.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.0" y="526.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.02%)</title><rect x="1130.0" y="499.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.0" y="510.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1130.0" y="483.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.0" y="494.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.02%)</title><rect x="1130.0" y="467.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1133.0" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1130.5" y="643.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1130.5" y="627.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1133.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1130.5" y="611.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1133.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1130.5" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1130.5" y="579.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1133.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1130.5" y="563.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.5" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1130.5" y="547.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.5" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1130.5" y="531.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1130.5" y="515.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1133.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1130.5" y="499.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1130.5" y="483.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1133.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1130.5" y="467.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.5" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1130.5" y="451.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.5" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1130.5" y="435.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1130.5" y="419.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1130.5" y="403.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1133.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1130.5" y="387.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1133.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1130.5" y="371.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.5" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1130.5" y="355.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1133.5" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1130.5" y="339.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.02%)</title><rect x="1131.3" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.3" y="670.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1131.6" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.6" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1132.3" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.3" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1132.3" y="819.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1135.3" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1132.3" y="803.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1132.3" y="787.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1132.3" y="771.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1132.3" y="755.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1132.3" y="739.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.3" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1132.3" y="723.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1132.3" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1132.3" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1132.3" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1132.3" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1132.3" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1135.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (4 samples, 0.05%)</title><rect x="1133.0" y="851.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1136.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (4 samples, 0.05%)</title><rect x="1133.0" y="835.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.0" y="846.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (3 samples, 0.04%)</title><rect x="1133.1" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.1" y="830.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (3 samples, 0.04%)</title><rect x="1133.1" y="803.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.1" y="814.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.02%)</title><rect x="1133.1" y="787.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.1" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (11 samples, 0.13%)</title><rect x="1133.8" y="931.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.8" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.11%)</title><rect x="1133.8" y="915.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.11%)</title><rect x="1133.8" y="899.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.11%)</title><rect x="1133.8" y="883.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.11%)</title><rect x="1133.8" y="867.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.11%)</title><rect x="1133.8" y="851.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.11%)</title><rect x="1133.8" y="835.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1136.8" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.09%)</title><rect x="1133.8" y="819.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.8" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.09%)</title><rect x="1133.8" y="803.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.09%)</title><rect x="1133.8" y="787.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.09%)</title><rect x="1133.8" y="771.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1136.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.09%)</title><rect x="1133.8" y="755.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.09%)</title><rect x="1133.8" y="739.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.8" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.08%)</title><rect x="1133.8" y="723.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.8" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.08%)</title><rect x="1133.8" y="707.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.08%)</title><rect x="1133.8" y="691.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.08%)</title><rect x="1133.8" y="675.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.08%)</title><rect x="1133.8" y="659.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.08%)</title><rect x="1133.8" y="643.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.8" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1134.0" y="627.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.0" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.07%)</title><rect x="1134.0" y="611.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1134.1" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1134.1" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1134.1" y="563.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.06%)</title><rect x="1134.1" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.1" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1134.2" y="531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.2" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1134.2" y="515.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1134.4" y="499.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1137.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1134.4" y="483.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1137.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1134.4" y="467.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.4" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1135.1" y="915.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.1" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1135.1" y="899.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.1" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1135.1" y="883.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1135.1" y="867.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1135.1" y="851.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1135.1" y="835.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (3 samples, 0.04%)</title><rect x="1135.6" y="947.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1138.6" y="958.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (3 samples, 0.04%)</title><rect x="1135.6" y="931.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1138.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.02%)</title><rect x="1136.0" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.0" y="958.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (40 samples, 0.47%)</title><rect x="1136.7" y="1027.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.7" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (29 samples, 0.34%)</title><rect x="1136.7" y="1011.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.7" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (29 samples, 0.34%)</title><rect x="1136.7" y="995.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (28 samples, 0.33%)</title><rect x="1136.9" y="979.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (28 samples, 0.33%)</title><rect x="1136.9" y="963.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.9" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (28 samples, 0.33%)</title><rect x="1136.9" y="947.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (28 samples, 0.33%)</title><rect x="1136.9" y="931.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.9" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (27 samples, 0.32%)</title><rect x="1137.0" y="915.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.0" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (27 samples, 0.32%)</title><rect x="1137.0" y="899.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (26 samples, 0.30%)</title><rect x="1137.1" y="883.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (26 samples, 0.30%)</title><rect x="1137.1" y="867.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (25 samples, 0.29%)</title><rect x="1137.3" y="851.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (25 samples, 0.29%)</title><rect x="1137.3" y="835.0" width="3.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.3" y="846.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.04%)</title><rect x="1137.3" y="819.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.3" y="830.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.02%)</title><rect x="1137.4" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.4" y="814.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.02%)</title><rect x="1137.4" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.4" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.21%)</title><rect x="1137.7" y="819.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.7" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.21%)</title><rect x="1137.7" y="803.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 0.21%)</title><rect x="1137.7" y="787.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 0.21%)</title><rect x="1137.7" y="771.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 0.21%)</title><rect x="1137.7" y="755.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (17 samples, 0.20%)</title><rect x="1137.7" y="739.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.7" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.16%)</title><rect x="1137.8" y="723.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.8" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.16%)</title><rect x="1137.8" y="707.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.15%)</title><rect x="1137.8" y="691.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.15%)</title><rect x="1137.8" y="675.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.15%)</title><rect x="1137.8" y="659.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.13%)</title><rect x="1137.8" y="643.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.8" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.09%)</title><rect x="1138.0" y="627.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.0" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.09%)</title><rect x="1138.0" y="611.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1141.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.09%)</title><rect x="1138.0" y="595.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.09%)</title><rect x="1138.0" y="579.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.09%)</title><rect x="1138.0" y="563.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1138.0" y="547.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1141.0" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1138.0" y="531.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.0" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1138.0" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1138.0" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1138.0" y="483.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1138.0" y="467.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1138.0" y="451.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.0" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1138.1" y="435.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.1" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1138.1" y="419.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1138.1" y="403.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1138.1" y="387.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1138.1" y="371.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1138.1" y="355.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.02%)</title><rect x="1139.3" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1142.3" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1139.7" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1142.7" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1139.7" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.7" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1139.7" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1139.7" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1142.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1139.7" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1139.7" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1139.7" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.7" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1139.7" y="611.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1142.7" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1139.7" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1142.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1139.7" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1142.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1139.7" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1139.7" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.7" y="558.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1140.2" y="819.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.2" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1140.2" y="803.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.2" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1140.2" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1140.2" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1140.2" y="755.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1140.2" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1140.2" y="723.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1140.2" y="707.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1140.2" y="691.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1143.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1140.2" y="675.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1140.2" y="659.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1140.2" y="643.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1140.2" y="627.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1143.2" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1140.2" y="611.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.2" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1140.2" y="595.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1140.2" y="579.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1140.2" y="563.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1140.2" y="547.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.2" y="558.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (11 samples, 0.13%)</title><rect x="1140.7" y="1011.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.7" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.13%)</title><rect x="1140.7" y="995.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.7" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.13%)</title><rect x="1140.7" y="979.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.13%)</title><rect x="1140.7" y="963.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.13%)</title><rect x="1140.7" y="947.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.13%)</title><rect x="1140.7" y="931.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.12%)</title><rect x="1140.7" y="915.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.7" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1140.8" y="899.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1143.8" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1140.8" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1140.8" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1143.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1140.8" y="851.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1140.8" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1143.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1140.8" y="819.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.0" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.0" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.0" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.0" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.0" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.0" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.0" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.0" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.0" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.0" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.0" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.0" y="675.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.0" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.0" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.0" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.0" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.0" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.0" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.0" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.0" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.0" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.0" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.0" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.0" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.0" y="515.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.0" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.0" y="499.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.0" y="483.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.0" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.0" y="451.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.0" y="435.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.0" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.0" y="419.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.0" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.0" y="403.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.0" y="387.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.0" y="371.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.0" y="355.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.0" y="339.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.0" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.0" y="323.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.0" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.0" y="307.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.0" y="291.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.0" y="275.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.0" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.0" y="259.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.0" y="270.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1141.3" y="899.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.3" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1141.3" y="883.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.3" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.07%)</title><rect x="1141.3" y="867.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.07%)</title><rect x="1141.3" y="851.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.07%)</title><rect x="1141.3" y="835.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.07%)</title><rect x="1141.3" y="819.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1141.3" y="803.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.3" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.3" y="787.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.3" y="771.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.3" y="755.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.3" y="739.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.3" y="723.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.3" y="707.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.3" y="718.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.3" y="691.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.3" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.3" y="675.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1144.3" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.3" y="659.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.3" y="643.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.3" y="627.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.3" y="611.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.3" y="595.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.3" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.3" y="579.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.3" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.3" y="563.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.3" y="547.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.3" y="531.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.3" y="515.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.3" y="499.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.3" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1141.5" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.5" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1141.5" y="771.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.5" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1141.5" y="755.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1141.5" y="739.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1141.5" y="723.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1141.5" y="707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1141.5" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.5" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1141.5" y="675.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.5" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1141.5" y="659.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1141.5" y="643.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1141.5" y="627.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1141.5" y="611.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1141.5" y="595.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.5" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1141.5" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.5" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1141.5" y="563.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1141.5" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1141.5" y="531.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1141.5" y="515.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1141.5" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.5" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1141.5" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.5" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1141.5" y="467.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1141.5" y="451.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1141.5" y="435.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1141.5" y="419.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.7" y="403.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.7" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1141.7" y="387.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.7" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1141.7" y="371.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.7" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1141.7" y="355.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1141.7" y="339.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1141.7" y="323.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1141.7" y="307.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.06%)</title><rect x="1142.2" y="1043.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.2" y="1054.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.0] (2 samples, 0.02%)</title><rect x="1142.2" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.2" y="1038.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) [clone .part.0] (2 samples, 0.02%)</title><rect x="1142.2" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.02%)</title><rect x="1142.6" y="1027.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1145.6" y="1038.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.02%)</title><rect x="1142.6" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.6" y="1022.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.02%)</title><rect x="1142.6" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.6" y="1006.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.02%)</title><rect x="1142.9" y="1043.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.9" y="1054.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (70 samples, 0.82%)</title><rect x="1143.7" y="1123.0" width="9.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.7" y="1134.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.0] (2 samples, 0.02%)</title><rect x="1143.9" y="1107.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.9" y="1118.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (2 samples, 0.02%)</title><rect x="1144.1" y="1107.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.1" y="1118.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (2 samples, 0.02%)</title><rect x="1144.1" y="1091.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.1" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (54 samples, 0.63%)</title><rect x="1144.4" y="1107.0" width="7.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1147.4" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (54 samples, 0.63%)</title><rect x="1144.4" y="1091.0" width="7.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (53 samples, 0.62%)</title><rect x="1144.6" y="1075.0" width="7.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (53 samples, 0.62%)</title><rect x="1144.6" y="1059.0" width="7.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (53 samples, 0.62%)</title><rect x="1144.6" y="1043.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1147.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (51 samples, 0.60%)</title><rect x="1144.6" y="1027.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1147.6" y="1038.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.02%)</title><rect x="1144.6" y="1011.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.6" y="1022.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.02%)</title><rect x="1144.6" y="995.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.6" y="1006.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.02%)</title><rect x="1144.6" y="979.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.6" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (42 samples, 0.49%)</title><rect x="1145.0" y="1011.0" width="5.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.0" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (42 samples, 0.49%)</title><rect x="1145.0" y="995.0" width="5.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (42 samples, 0.49%)</title><rect x="1145.0" y="979.0" width="5.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (41 samples, 0.48%)</title><rect x="1145.0" y="963.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (41 samples, 0.48%)</title><rect x="1145.0" y="947.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (40 samples, 0.47%)</title><rect x="1145.0" y="931.0" width="5.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.0" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (34 samples, 0.40%)</title><rect x="1145.3" y="915.0" width="4.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.3" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (33 samples, 0.39%)</title><rect x="1145.3" y="899.0" width="4.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (33 samples, 0.39%)</title><rect x="1145.3" y="883.0" width="4.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (33 samples, 0.39%)</title><rect x="1145.3" y="867.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (33 samples, 0.39%)</title><rect x="1145.3" y="851.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (33 samples, 0.39%)</title><rect x="1145.3" y="835.0" width="4.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.3" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (24 samples, 0.28%)</title><rect x="1145.4" y="819.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.4" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (24 samples, 0.28%)</title><rect x="1145.4" y="803.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.4" y="814.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.02%)</title><rect x="1145.4" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 0.26%)</title><rect x="1145.7" y="787.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 0.26%)</title><rect x="1145.7" y="771.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.26%)</title><rect x="1145.7" y="755.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 0.23%)</title><rect x="1145.8" y="739.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.8" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.16%)</title><rect x="1145.9" y="723.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.9" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.16%)</title><rect x="1145.9" y="707.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.16%)</title><rect x="1145.9" y="691.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.16%)</title><rect x="1145.9" y="675.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.16%)</title><rect x="1145.9" y="659.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.15%)</title><rect x="1145.9" y="643.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.9" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.11%)</title><rect x="1146.1" y="627.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.1" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.11%)</title><rect x="1146.1" y="611.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.08%)</title><rect x="1146.2" y="595.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.08%)</title><rect x="1146.2" y="579.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.08%)</title><rect x="1146.2" y="563.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1146.2" y="547.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.2" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1146.4" y="531.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.4" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1146.4" y="515.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1146.4" y="499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1146.4" y="483.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1146.4" y="467.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1146.4" y="451.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.4" y="462.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1147.3" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.3" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1147.3" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.3" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1147.3" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1147.3" y="579.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1147.3" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1147.3" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1147.3" y="531.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.3" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1147.3" y="515.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.3" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1147.3" y="499.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1147.3" y="483.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1147.3" y="467.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1147.3" y="451.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1147.3" y="435.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.3" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1147.3" y="419.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.3" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1147.3" y="403.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1147.3" y="387.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1150.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1147.3" y="371.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1147.3" y="355.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1147.3" y="339.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.3" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1147.3" y="323.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.3" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1147.3" y="307.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1147.3" y="291.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.3" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1147.3" y="275.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.3" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1147.3" y="259.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.3" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1147.3" y="243.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.3" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1147.3" y="227.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.3" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1147.3" y="211.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.3" y="222.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1147.9" y="723.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.9" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1147.9" y="707.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.9" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1147.9" y="691.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1147.9" y="675.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1147.9" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1147.9" y="643.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.06%)</title><rect x="1147.9" y="627.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.9" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1147.9" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.9" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1147.9" y="595.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1147.9" y="579.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1147.9" y="563.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1147.9" y="547.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.06%)</title><rect x="1147.9" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.9" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1147.9" y="515.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.9" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1147.9" y="499.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1147.9" y="483.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1147.9" y="467.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1147.9" y="451.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1147.9" y="435.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.9" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1148.1" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.1" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1148.1" y="403.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1148.1" y="387.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1148.1" y="371.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1148.1" y="355.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1148.1" y="339.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.1" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1148.1" y="323.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.1" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1148.1" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1148.1" y="291.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1148.1" y="275.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.1" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.09%)</title><rect x="1148.7" y="819.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.7" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.09%)</title><rect x="1148.7" y="803.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.7" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.09%)</title><rect x="1148.7" y="787.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.09%)</title><rect x="1148.7" y="771.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.09%)</title><rect x="1148.7" y="755.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.09%)</title><rect x="1148.7" y="739.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.09%)</title><rect x="1148.7" y="723.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.7" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1148.8" y="707.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.8" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.07%)</title><rect x="1148.8" y="691.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.07%)</title><rect x="1148.8" y="675.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.07%)</title><rect x="1148.8" y="659.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.07%)</title><rect x="1148.8" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1148.8" y="627.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.8" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1148.8" y="611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.8" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1148.8" y="595.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1148.8" y="579.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1148.8" y="563.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1148.8" y="547.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1148.8" y="531.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.8" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1148.8" y="515.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.8" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1148.8" y="499.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1148.8" y="483.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1148.8" y="467.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1148.8" y="451.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1148.8" y="435.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.8" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1148.8" y="419.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.8" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1148.8" y="403.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1148.8" y="387.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1148.8" y="371.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1148.8" y="355.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1148.8" y="339.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.8" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1148.8" y="323.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.8" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1148.8" y="307.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.8" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1148.8" y="291.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.8" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1148.8" y="275.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1148.8" y="259.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1149.0" y="243.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.0" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1149.0" y="227.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.0" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1149.0" y="211.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1149.0" y="195.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1149.0" y="179.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.0" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1149.0" y="163.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.0" y="174.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (2 samples, 0.02%)</title><rect x="1149.0" y="147.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.0" y="158.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.02%)</title><rect x="1149.0" y="131.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.0" y="142.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1149.0" y="115.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.0" y="126.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1149.0" y="99.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.0" y="110.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1149.0" y="83.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.0" y="94.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (2 samples, 0.02%)</title><rect x="1149.0" y="67.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.0" y="78.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (2 samples, 0.02%)</title><rect x="1149.0" y="51.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.0" y="62.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.02%)</title><rect x="1149.0" y="35.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.0" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1149.9" y="915.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.9" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1149.9" y="899.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.9" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1149.9" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1149.9" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.9" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1149.9" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1149.9" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.9" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1150.8" y="1011.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.8" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1150.8" y="995.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.8" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1150.8" y="979.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1150.8" y="963.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1150.8" y="947.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1150.8" y="931.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.06%)</title><rect x="1150.8" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.8" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1150.8" y="899.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.8" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1150.8" y="883.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1150.8" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1150.8" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1150.8" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1150.8" y="819.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1150.8" y="803.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.8" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1150.8" y="787.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1150.8" y="771.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1150.8" y="755.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1150.8" y="739.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1150.8" y="723.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.8" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1150.8" y="707.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.8" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1150.8" y="691.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1150.8" y="675.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1150.8" y="659.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1150.8" y="643.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1150.8" y="627.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.8" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1151.2" y="899.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.02%)</title><rect x="1151.6" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.02%)</title><rect x="1151.6" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.6" y="1022.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.02%)</title><rect x="1151.6" y="995.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.6" y="1006.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1151.6" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.6" y="990.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1151.6" y="963.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.6" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1151.6" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.6" y="958.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (2 samples, 0.02%)</title><rect x="1151.6" y="931.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.6" y="942.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (11 samples, 0.13%)</title><rect x="1151.9" y="1107.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.9" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.13%)</title><rect x="1151.9" y="1091.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.9" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.13%)</title><rect x="1151.9" y="1075.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.9" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.13%)</title><rect x="1151.9" y="1059.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.9" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.13%)</title><rect x="1151.9" y="1043.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.13%)</title><rect x="1151.9" y="1027.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.12%)</title><rect x="1152.0" y="1011.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.0" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1152.0" y="995.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.0" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1152.0" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1152.0" y="963.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1152.0" y="947.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1152.0" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1152.0" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.0" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1152.0" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.0" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1152.0" y="883.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1152.0" y="867.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1152.0" y="851.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1152.0" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1152.0" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.0" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1152.0" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.0" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1152.0" y="787.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1152.0" y="771.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1152.0" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1152.0" y="739.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1152.0" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.0" y="734.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1152.5" y="995.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.5" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1152.5" y="979.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.5" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.07%)</title><rect x="1152.5" y="963.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.07%)</title><rect x="1152.5" y="947.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.07%)</title><rect x="1152.5" y="931.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.07%)</title><rect x="1152.5" y="915.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1152.5" y="899.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.5" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1152.5" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.5" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1152.5" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1152.5" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1152.5" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1152.5" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1152.5" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.5" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1152.8" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.8" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1152.8" y="867.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.8" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1152.8" y="851.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1152.8" y="835.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1152.8" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1152.8" y="803.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1152.8" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.8" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1152.8" y="771.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.8" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1152.8" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1152.8" y="739.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1152.8" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1152.8" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1152.8" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.8" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1152.8" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.8" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1152.8" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1152.8" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1152.8" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1152.8" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1152.8" y="595.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.8" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1152.8" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.8" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1152.8" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1152.8" y="547.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1152.8" y="531.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1152.8" y="515.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1152.8" y="499.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.8" y="510.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.04%)</title><rect x="1153.5" y="1123.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.04%)</title><rect x="1154.1" y="1139.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.02%)</title><rect x="1154.1" y="1123.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.1" y="1134.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.02%)</title><rect x="1154.1" y="1107.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.1" y="1118.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1154.1" y="1091.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.1" y="1102.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1154.1" y="1075.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.1" y="1086.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.02%)</title><rect x="1154.1" y="1059.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.1" y="1070.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (2 samples, 0.02%)</title><rect x="1154.1" y="1043.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.1" y="1054.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (2 samples, 0.02%)</title><rect x="1154.1" y="1027.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.1" y="1038.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.02%)</title><rect x="1154.1" y="1011.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.1" y="1022.0"></text>
</g>
<g>
<title>Parse::load_interpreter_state(Node*) (2 samples, 0.02%)</title><rect x="1155.2" y="1187.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.2" y="1198.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (5 samples, 0.06%)</title><rect x="1155.6" y="1219.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.6" y="1230.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 0.04%)</title><rect x="1155.9" y="1203.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.9" y="1214.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (6 samples, 0.07%)</title><rect x="1156.3" y="1219.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.3" y="1230.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (5 samples, 0.06%)</title><rect x="1156.4" y="1203.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.4" y="1214.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (3 samples, 0.04%)</title><rect x="1156.4" y="1187.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.4" y="1198.0"></text>
</g>
<g>
<title>CompileBroker::post_compile(CompilerThread*, CompileTask*, bool, ciEnv*, int, char const*) (3 samples, 0.04%)</title><rect x="1157.4" y="1251.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.4" y="1262.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (181 samples, 2.11%)</title><rect x="1157.8" y="1251.0" width="24.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.8" y="1262.0">C..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (181 samples, 2.11%)</title><rect x="1157.8" y="1235.0" width="24.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.8" y="1246.0">C..</text>
</g>
<g>
<title>Compilation::compile_method() (181 samples, 2.11%)</title><rect x="1157.8" y="1219.0" width="24.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.8" y="1230.0">C..</text>
</g>
<g>
<title>Compilation::compile_java_method() (167 samples, 1.95%)</title><rect x="1157.8" y="1203.0" width="23.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.8" y="1214.0">C..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.0] (85 samples, 0.99%)</title><rect x="1158.1" y="1187.0" width="11.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.1" y="1198.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (6 samples, 0.07%)</title><rect x="1158.1" y="1171.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.1" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1155.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.1" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1139.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.1" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1123.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.1" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1107.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.1" y="1118.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1091.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.1" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1075.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.1" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.1" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.1" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.1" y="1054.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="1027.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.1" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="1011.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.1" y="1022.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="995.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.1" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="979.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.1" y="990.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="963.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.1" y="974.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="947.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.1" y="958.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="931.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.1" y="942.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="915.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.1" y="926.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.1" y="899.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.1" y="910.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (67 samples, 0.78%)</title><rect x="1158.9" y="1171.0" width="9.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.9" y="1182.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (67 samples, 0.78%)</title><rect x="1158.9" y="1155.0" width="9.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.9" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (67 samples, 0.78%)</title><rect x="1158.9" y="1139.0" width="9.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.9" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1123.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.9" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1107.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.9" y="1118.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1091.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.9" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1075.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.9" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1059.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.9" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1043.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.9" y="1054.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1027.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.9" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="1011.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.9" y="1022.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1158.9" y="995.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.9" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.9" y="990.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.9" y="974.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="947.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.9" y="958.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="931.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.9" y="942.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.9" y="926.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.9" y="910.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="883.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.9" y="894.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="867.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.9" y="878.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1158.9" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.9" y="862.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.02%)</title><rect x="1159.4" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.4" y="1134.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.02%)</title><rect x="1159.4" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.4" y="1118.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.02%)</title><rect x="1159.4" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.4" y="1102.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.02%)</title><rect x="1159.4" y="1075.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.4" y="1086.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.02%)</title><rect x="1159.4" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.4" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (2 samples, 0.02%)</title><rect x="1159.4" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.4" y="1054.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (2 samples, 0.02%)</title><rect x="1159.4" y="1027.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.4" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (60 samples, 0.70%)</title><rect x="1159.8" y="1123.0" width="8.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.8" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (60 samples, 0.70%)</title><rect x="1159.8" y="1107.0" width="8.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.8" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (5 samples, 0.06%)</title><rect x="1160.0" y="1091.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.0" y="1102.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (4 samples, 0.05%)</title><rect x="1160.0" y="1075.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.0" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (4 samples, 0.05%)</title><rect x="1160.0" y="1059.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.0" y="1070.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (4 samples, 0.05%)</title><rect x="1160.0" y="1043.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.0" y="1054.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (4 samples, 0.05%)</title><rect x="1160.0" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.0" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1160.1" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.1" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.02%)</title><rect x="1160.1" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.1" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.02%)</title><rect x="1160.1" y="979.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.1" y="990.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (2 samples, 0.02%)</title><rect x="1160.1" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.1" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (52 samples, 0.61%)</title><rect x="1160.7" y="1091.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.7" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (2 samples, 0.02%)</title><rect x="1160.8" y="1075.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.8" y="1086.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.02%)</title><rect x="1160.8" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.8" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (41 samples, 0.48%)</title><rect x="1161.1" y="1075.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.1" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.0] (41 samples, 0.48%)</title><rect x="1161.1" y="1059.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.1" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (37 samples, 0.43%)</title><rect x="1161.4" y="1043.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (37 samples, 0.43%)</title><rect x="1161.4" y="1027.0" width="5.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.4" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (34 samples, 0.40%)</title><rect x="1161.8" y="1011.0" width="4.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.8" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (24 samples, 0.28%)</title><rect x="1162.0" y="995.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.0" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.0] (18 samples, 0.21%)</title><rect x="1162.0" y="979.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.0" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (16 samples, 0.19%)</title><rect x="1162.2" y="963.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.2" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (16 samples, 0.19%)</title><rect x="1162.2" y="947.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.2" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.02%)</title><rect x="1162.3" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.3" y="942.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.02%)</title><rect x="1162.3" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.3" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.02%)</title><rect x="1162.3" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.3" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (2 samples, 0.02%)</title><rect x="1162.3" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.3" y="894.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.02%)</title><rect x="1162.3" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.3" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (13 samples, 0.15%)</title><rect x="1162.6" y="931.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.6" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (9 samples, 0.11%)</title><rect x="1162.6" y="915.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.6" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.0] (8 samples, 0.09%)</title><rect x="1162.6" y="899.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.6" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (7 samples, 0.08%)</title><rect x="1162.7" y="883.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.7" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (7 samples, 0.08%)</title><rect x="1162.7" y="867.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.7" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.06%)</title><rect x="1162.9" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.9" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.05%)</title><rect x="1163.0" y="835.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.0" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.0] (3 samples, 0.04%)</title><rect x="1163.0" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.0" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.02%)</title><rect x="1163.2" y="803.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.2" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.02%)</title><rect x="1163.2" y="787.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.2" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.02%)</title><rect x="1163.2" y="771.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.2" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.02%)</title><rect x="1163.2" y="755.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.2" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.0] (2 samples, 0.02%)</title><rect x="1163.2" y="739.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.2" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.02%)</title><rect x="1163.2" y="723.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.2" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.02%)</title><rect x="1163.2" y="707.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.2" y="718.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.05%)</title><rect x="1163.8" y="915.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.8" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.05%)</title><rect x="1163.8" y="899.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.8" y="910.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (4 samples, 0.05%)</title><rect x="1163.8" y="883.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.8" y="894.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (4 samples, 0.05%)</title><rect x="1163.8" y="867.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.8" y="878.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1164.1" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.1" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (6 samples, 0.07%)</title><rect x="1164.5" y="979.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.5" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.07%)</title><rect x="1164.5" y="963.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.5" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.0] (6 samples, 0.07%)</title><rect x="1164.5" y="947.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.5" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.06%)</title><rect x="1164.5" y="931.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.5" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.06%)</title><rect x="1164.5" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.5" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.06%)</title><rect x="1164.5" y="899.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.5" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.06%)</title><rect x="1164.5" y="883.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.5" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (4 samples, 0.05%)</title><rect x="1164.7" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1167.7" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="1164.7" y="851.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.7" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.0] (3 samples, 0.04%)</title><rect x="1164.7" y="835.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.7" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.04%)</title><rect x="1164.7" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.7" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.02%)</title><rect x="1164.7" y="803.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.7" y="814.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (2 samples, 0.02%)</title><rect x="1165.4" y="995.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.4" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1165.4" y="979.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.4" y="990.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (6 samples, 0.07%)</title><rect x="1165.6" y="995.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.6" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (5 samples, 0.06%)</title><rect x="1165.6" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.6" y="990.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (4 samples, 0.05%)</title><rect x="1165.8" y="963.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.8" y="974.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (4 samples, 0.05%)</title><rect x="1165.8" y="947.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.8" y="958.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (4 samples, 0.05%)</title><rect x="1165.8" y="931.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.8" y="942.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (3 samples, 0.04%)</title><rect x="1165.9" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.9" y="926.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (2 samples, 0.02%)</title><rect x="1166.0" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.0" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (7 samples, 0.08%)</title><rect x="1166.7" y="1075.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.7" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.08%)</title><rect x="1166.7" y="1059.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.7" y="1070.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (6 samples, 0.07%)</title><rect x="1166.9" y="1043.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.9" y="1054.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (6 samples, 0.07%)</title><rect x="1166.9" y="1027.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.9" y="1038.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (5 samples, 0.06%)</title><rect x="1167.0" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.0" y="1022.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (3 samples, 0.04%)</title><rect x="1167.1" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.1" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::load_constant() (2 samples, 0.02%)</title><rect x="1167.8" y="1091.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.8" y="1102.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (3 samples, 0.04%)</title><rect x="1168.4" y="1171.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.4" y="1182.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (3 samples, 0.04%)</title><rect x="1168.4" y="1155.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.4" y="1166.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (3 samples, 0.04%)</title><rect x="1168.4" y="1139.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.4" y="1150.0"></text>
</g>
<g>
<title>NullCheckEliminator::visit(Instruction**) (2 samples, 0.02%)</title><rect x="1168.5" y="1123.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.5" y="1134.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (4 samples, 0.05%)</title><rect x="1168.8" y="1171.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.8" y="1182.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (4 samples, 0.05%)</title><rect x="1168.8" y="1155.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.8" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (4 samples, 0.05%)</title><rect x="1168.8" y="1139.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.8" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.05%)</title><rect x="1168.8" y="1123.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.8" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.05%)</title><rect x="1168.8" y="1107.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.8" y="1118.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.05%)</title><rect x="1168.8" y="1091.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.8" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.05%)</title><rect x="1168.8" y="1075.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.8" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.05%)</title><rect x="1168.8" y="1059.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.8" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.05%)</title><rect x="1168.8" y="1043.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.8" y="1054.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="1027.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="1011.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.8" y="1022.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="995.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.8" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.8" y="990.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="963.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.8" y="974.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.8" y="958.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="931.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="942.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="915.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.8" y="926.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="899.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.8" y="910.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1168.8" y="883.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.8" y="894.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.8" y="878.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.8" y="862.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.8" y="846.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.8" y="830.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="814.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.8" y="798.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.8" y="782.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1168.8" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.8" y="766.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (3 samples, 0.04%)</title><rect x="1169.3" y="1171.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.3" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.02%)</title><rect x="1169.3" y="1155.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.3" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1169.3" y="1139.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.3" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.02%)</title><rect x="1169.3" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.3" y="1134.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (21 samples, 0.25%)</title><rect x="1169.8" y="1187.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.8" y="1198.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (16 samples, 0.19%)</title><rect x="1169.8" y="1171.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.8" y="1182.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (16 samples, 0.19%)</title><rect x="1169.8" y="1155.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.8" y="1166.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (2 samples, 0.02%)</title><rect x="1170.0" y="1139.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.0" y="1150.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (4 samples, 0.05%)</title><rect x="1170.4" y="1139.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.4" y="1150.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (5 samples, 0.06%)</title><rect x="1171.1" y="1139.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.1" y="1150.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (4 samples, 0.05%)</title><rect x="1171.3" y="1123.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.3" y="1134.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.04%)</title><rect x="1171.4" y="1107.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.4" y="1118.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.02%)</title><rect x="1171.5" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.5" y="1102.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (3 samples, 0.04%)</title><rect x="1172.2" y="1171.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.2" y="1182.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (2 samples, 0.02%)</title><rect x="1172.2" y="1155.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.2" y="1166.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.02%)</title><rect x="1172.2" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.2" y="1150.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.02%)</title><rect x="1172.2" y="1123.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.2" y="1134.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.02%)</title><rect x="1172.2" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.2" y="1118.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (57 samples, 0.67%)</title><rect x="1172.7" y="1187.0" width="7.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.7" y="1198.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (20 samples, 0.23%)</title><rect x="1172.7" y="1171.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.7" y="1182.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (19 samples, 0.22%)</title><rect x="1172.8" y="1155.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.8" y="1166.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (4 samples, 0.05%)</title><rect x="1172.9" y="1139.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.9" y="1150.0"></text>
</g>
<g>
<title>LIRGenerator::increment_event_counter(CodeEmitInfo*, LIR_OprDesc*, int, bool) (3 samples, 0.04%)</title><rect x="1173.1" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.1" y="1134.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (7 samples, 0.08%)</title><rect x="1173.5" y="1139.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.5" y="1150.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (7 samples, 0.08%)</title><rect x="1173.5" y="1123.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.5" y="1134.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (6 samples, 0.07%)</title><rect x="1173.6" y="1107.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.6" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (2 samples, 0.02%)</title><rect x="1174.4" y="1139.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.4" y="1150.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_visit_arguments(Invoke*) (2 samples, 0.02%)</title><rect x="1174.4" y="1123.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.4" y="1134.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (2 samples, 0.02%)</title><rect x="1174.9" y="1139.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.9" y="1150.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (37 samples, 0.43%)</title><rect x="1175.4" y="1171.0" width="5.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.4" y="1182.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (8 samples, 0.09%)</title><rect x="1175.7" y="1155.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.7" y="1166.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.0] (6 samples, 0.07%)</title><rect x="1175.8" y="1139.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.8" y="1150.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.0] (2 samples, 0.02%)</title><rect x="1175.8" y="1123.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.8" y="1134.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (3 samples, 0.04%)</title><rect x="1176.2" y="1123.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.2" y="1134.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.02%)</title><rect x="1176.2" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.2" y="1118.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (2 samples, 0.02%)</title><rect x="1176.2" y="1091.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.2" y="1102.0"></text>
</g>
<g>
<title>Interval::split(int) (2 samples, 0.02%)</title><rect x="1176.2" y="1075.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.2" y="1086.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (12 samples, 0.14%)</title><rect x="1176.8" y="1155.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.8" y="1166.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (7 samples, 0.08%)</title><rect x="1176.9" y="1139.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.9" y="1150.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.02%)</title><rect x="1177.1" y="1123.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.1" y="1134.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (2 samples, 0.02%)</title><rect x="1177.1" y="1107.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.1" y="1118.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (4 samples, 0.05%)</title><rect x="1177.3" y="1123.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.3" y="1134.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (4 samples, 0.05%)</title><rect x="1177.3" y="1107.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.3" y="1118.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.04%)</title><rect x="1177.5" y="1091.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="1102.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (4 samples, 0.05%)</title><rect x="1177.9" y="1139.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.9" y="1150.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (3 samples, 0.04%)</title><rect x="1177.9" y="1123.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.9" y="1134.0"></text>
</g>
<g>
<title>OopMap::OopMap(int, int) (2 samples, 0.02%)</title><rect x="1178.0" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.0" y="1118.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (7 samples, 0.08%)</title><rect x="1178.4" y="1155.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.4" y="1166.0"></text>
</g>
<g>
<title>Interval::Interval(int) (2 samples, 0.02%)</title><rect x="1178.7" y="1139.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.7" y="1150.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (2 samples, 0.02%)</title><rect x="1179.5" y="1155.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.5" y="1166.0"></text>
</g>
<g>
<title>LinearScan::sort_intervals_before_allocation() (2 samples, 0.02%)</title><rect x="1180.1" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.1" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.02%)</title><rect x="1180.5" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.5" y="1198.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (2 samples, 0.02%)</title><rect x="1180.5" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.5" y="1182.0"></text>
</g>
<g>
<title>Compilation::initialize() (2 samples, 0.02%)</title><rect x="1180.8" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.8" y="1214.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (12 samples, 0.14%)</title><rect x="1181.1" y="1203.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.1" y="1214.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (10 samples, 0.12%)</title><rect x="1181.2" y="1187.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.2" y="1198.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (8 samples, 0.09%)</title><rect x="1181.5" y="1171.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.5" y="1182.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (3 samples, 0.04%)</title><rect x="1181.6" y="1155.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="1181.6" y="1139.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1184.6" y="1150.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (2 samples, 0.02%)</title><rect x="1182.2" y="1155.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.2" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (2 samples, 0.02%)</title><rect x="1182.8" y="1251.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.8" y="1262.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.02%)</title><rect x="1182.8" y="1235.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.8" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.02%)</title><rect x="1182.8" y="1219.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="1230.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.02%)</title><rect x="1182.8" y="1203.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.8" y="1214.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.02%)</title><rect x="1182.8" y="1187.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.8" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.02%)</title><rect x="1182.8" y="1171.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.8" y="1182.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (5 samples, 0.06%)</title><rect x="1183.1" y="1251.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.1" y="1262.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (3 samples, 0.04%)</title><rect x="1183.1" y="1235.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.1" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (2 samples, 0.02%)</title><rect x="1183.5" y="1235.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.5" y="1246.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (3 samples, 0.04%)</title><rect x="1183.8" y="1267.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.8" y="1278.0"></text>
</g>
<g>
<title>sysinfo (3 samples, 0.04%)</title><rect x="1183.8" y="1251.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1186.8" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="1183.8" y="1235.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.8" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="1183.8" y="1219.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1186.8" y="1230.0"></text>
</g>
<g>
<title>__x64_sys_sysinfo (2 samples, 0.02%)</title><rect x="1183.9" y="1203.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.9" y="1214.0"></text>
</g>
<g>
<title>__do_sys_sysinfo (2 samples, 0.02%)</title><rect x="1183.9" y="1187.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1186.9" y="1198.0"></text>
</g>
<g>
<title>do_sysinfo (2 samples, 0.02%)</title><rect x="1183.9" y="1171.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.9" y="1182.0"></text>
</g>
<g>
<title>CompileQueue::get() (10 samples, 0.12%)</title><rect x="1184.2" y="1267.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="1278.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::select_task(CompileQueue*) (6 samples, 0.07%)</title><rect x="1184.8" y="1251.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.8" y="1262.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (2 samples, 0.02%)</title><rect x="1185.6" y="1283.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.6" y="1294.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.02%)</title><rect x="1185.6" y="1267.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="1278.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (25 samples, 0.29%)</title><rect x="1185.9" y="1283.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.9" y="1294.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (25 samples, 0.29%)</title><rect x="1185.9" y="1267.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="1278.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (25 samples, 0.29%)</title><rect x="1185.9" y="1251.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.9" y="1262.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (5 samples, 0.06%)</title><rect x="1185.9" y="1235.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="1246.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.02%)</title><rect x="1186.0" y="1219.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.0" y="1230.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.02%)</title><rect x="1186.3" y="1219.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.3" y="1230.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (18 samples, 0.21%)</title><rect x="1186.8" y="1235.0" width="2.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1189.8" y="1246.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (13 samples, 0.15%)</title><rect x="1187.4" y="1219.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="1230.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (9 samples, 0.11%)</title><rect x="1187.5" y="1203.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.5" y="1214.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.02%)</title><rect x="1188.5" y="1187.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.5" y="1198.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.02%)</title><rect x="1188.9" y="1203.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="1214.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.05%)</title><rect x="1189.3" y="1299.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="1310.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.05%)</title><rect x="1189.3" y="1283.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.3" y="1294.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.02%)</title><rect x="1189.3" y="1267.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.3" y="1278.0"></text>
</g>
</g>
</svg>
