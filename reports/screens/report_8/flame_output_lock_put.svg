<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (16,149 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (14,160 samples, 87.68%)</title><rect x="10.0" y="867.0" width="1034.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (12,098 samples, 74.91%)</title><rect x="10.0" y="851.0" width="884.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="862.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (12,098 samples, 74.91%)</title><rect x="10.0" y="835.0" width="884.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="846.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (12,098 samples, 74.91%)</title><rect x="10.0" y="819.0" width="884.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="830.0">io/netty/util/concurrent/SingleThreadEventExecutor$4.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (12,098 samples, 74.91%)</title><rect x="10.0" y="803.0" width="884.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="814.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (340 samples, 2.11%)</title><rect x="10.0" y="787.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="798.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (340 samples, 2.11%)</title><rect x="10.0" y="771.0" width="24.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="782.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (340 samples, 2.11%)</title><rect x="10.0" y="755.0" width="24.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="766.0">i..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (340 samples, 2.11%)</title><rect x="10.0" y="739.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="750.0">i..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="723.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="734.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="707.0" width="24.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="718.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="691.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="702.0">i..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (340 samples, 2.11%)</title><rect x="10.0" y="675.0" width="24.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="686.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="659.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="670.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="643.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="627.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="638.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (340 samples, 2.11%)</title><rect x="10.0" y="611.0" width="24.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="622.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="595.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="606.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="579.0" width="24.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="590.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="563.0" width="24.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="574.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="547.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="558.0">i..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (340 samples, 2.11%)</title><rect x="10.0" y="531.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="542.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (340 samples, 2.11%)</title><rect x="10.0" y="515.0" width="24.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="526.0">i..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="499.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="510.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="483.0" width="24.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="494.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="467.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="478.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="451.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="462.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (340 samples, 2.11%)</title><rect x="10.0" y="435.0" width="24.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="446.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="419.0" width="24.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="430.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="403.0" width="24.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="414.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (340 samples, 2.11%)</title><rect x="10.0" y="387.0" width="24.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="398.0">i..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (340 samples, 2.11%)</title><rect x="10.0" y="371.0" width="24.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="382.0">i..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (340 samples, 2.11%)</title><rect x="10.0" y="355.0" width="24.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (340 samples, 2.11%)</title><rect x="10.0" y="339.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.entityHandler (340 samples, 2.11%)</title><rect x="10.0" y="323.0" width="24.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.putRequest (340 samples, 2.11%)</title><rect x="10.0" y="307.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="318.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.multiPut (340 samples, 2.11%)</title><rect x="10.0" y="291.0" width="24.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.putProxyResponse (170 samples, 1.05%)</title><rect x="10.0" y="275.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (170 samples, 1.05%)</title><rect x="10.0" y="259.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (170 samples, 1.05%)</title><rect x="10.0" y="243.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (170 samples, 1.05%)</title><rect x="10.0" y="227.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (170 samples, 1.05%)</title><rect x="10.0" y="211.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (170 samples, 1.05%)</title><rect x="10.0" y="195.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (170 samples, 1.05%)</title><rect x="10.0" y="179.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (170 samples, 1.05%)</title><rect x="10.0" y="163.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (170 samples, 1.05%)</title><rect x="10.0" y="147.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (170 samples, 1.05%)</title><rect x="10.0" y="131.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (170 samples, 1.05%)</title><rect x="10.0" y="115.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (170 samples, 1.05%)</title><rect x="10.0" y="99.0" width="12.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (170 samples, 1.05%)</title><rect x="10.0" y="83.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (170 samples, 1.05%)</title><rect x="10.0" y="67.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (170 samples, 1.05%)</title><rect x="10.0" y="51.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (170 samples, 1.05%)</title><rect x="10.0" y="35.0" width="12.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.putTimestampResponse (170 samples, 1.05%)</title><rect x="22.4" y="275.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (170 samples, 1.05%)</title><rect x="22.4" y="259.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (170 samples, 1.05%)</title><rect x="22.4" y="243.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (170 samples, 1.05%)</title><rect x="22.4" y="227.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (170 samples, 1.05%)</title><rect x="22.4" y="211.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (170 samples, 1.05%)</title><rect x="22.4" y="195.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (170 samples, 1.05%)</title><rect x="22.4" y="179.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (170 samples, 1.05%)</title><rect x="22.4" y="163.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (170 samples, 1.05%)</title><rect x="22.4" y="147.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (170 samples, 1.05%)</title><rect x="22.4" y="131.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (170 samples, 1.05%)</title><rect x="22.4" y="115.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (170 samples, 1.05%)</title><rect x="22.4" y="99.0" width="12.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="25.4" y="110.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (11,758 samples, 72.81%)</title><rect x="34.8" y="787.0" width="859.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.8" y="798.0">io/netty/channel/nio/NioEventLoop.select</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.select (11,758 samples, 72.81%)</title><rect x="34.8" y="771.0" width="859.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.8" y="782.0">io/netty/channel/nio/SelectedSelectionKeySetSelector.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (11,758 samples, 72.81%)</title><rect x="34.8" y="755.0" width="859.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.8" y="766.0">sun/nio/ch/SelectorImpl.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11,758 samples, 72.81%)</title><rect x="34.8" y="739.0" width="859.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.8" y="750.0">sun/nio/ch/SelectorImpl.lockAndDoSelect</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11,758 samples, 72.81%)</title><rect x="34.8" y="723.0" width="859.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.8" y="734.0">sun/nio/ch/EPollSelectorImpl.doSelect</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (11,758 samples, 72.81%)</title><rect x="34.8" y="707.0" width="859.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.8" y="718.0">sun/nio/ch/EPollSelectorImpl.processEvents</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11,758 samples, 72.81%)</title><rect x="34.8" y="691.0" width="859.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.8" y="702.0">sun/nio/ch/EPollSelectorImpl.clearInterrupt</text>
</g>
<g>
<title>java.lang.Object (11,758 samples, 72.81%)</title><rect x="34.8" y="675.0" width="859.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="37.8" y="686.0">java.lang.Object</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,062 samples, 12.77%)</title><rect x="894.0" y="851.0" width="150.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.0" y="862.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,062 samples, 12.77%)</title><rect x="894.0" y="835.0" width="150.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.0" y="846.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (766 samples, 4.74%)</title><rect x="894.0" y="819.0" width="56.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.0" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (766 samples, 4.74%)</title><rect x="894.0" y="803.0" width="56.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.0" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (716 samples, 4.43%)</title><rect x="894.0" y="787.0" width="52.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.0" y="798.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/393912176.apply (716 samples, 4.43%)</title><rect x="894.0" y="771.0" width="52.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.0" y="782.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (716 samples, 4.43%)</title><rect x="894.0" y="755.0" width="52.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.0" y="766.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (716 samples, 4.43%)</title><rect x="894.0" y="739.0" width="52.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.0" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (690 samples, 4.27%)</title><rect x="894.0" y="723.0" width="50.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.0" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (690 samples, 4.27%)</title><rect x="894.0" y="707.0" width="50.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.0" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (690 samples, 4.27%)</title><rect x="894.0" y="691.0" width="50.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.0" y="702.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (529 samples, 3.28%)</title><rect x="894.0" y="675.0" width="38.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.0" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (529 samples, 3.28%)</title><rect x="894.0" y="659.0" width="38.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.0" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (529 samples, 3.28%)</title><rect x="894.0" y="643.0" width="38.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.0" y="654.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/2086976000.apply (529 samples, 3.28%)</title><rect x="894.0" y="627.0" width="38.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.0" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (529 samples, 3.28%)</title><rect x="894.0" y="611.0" width="38.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.0" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (529 samples, 3.28%)</title><rect x="894.0" y="595.0" width="38.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.0" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/1185814774.apply (529 samples, 3.28%)</title><rect x="894.0" y="579.0" width="38.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.0" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (529 samples, 3.28%)</title><rect x="894.0" y="563.0" width="38.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.0" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (529 samples, 3.28%)</title><rect x="894.0" y="547.0" width="38.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.0" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (374 samples, 2.32%)</title><rect x="894.0" y="531.0" width="27.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (374 samples, 2.32%)</title><rect x="894.0" y="515.0" width="27.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.0" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$214/584833355.apply (374 samples, 2.32%)</title><rect x="894.0" y="499.0" width="27.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.0" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (374 samples, 2.32%)</title><rect x="894.0" y="483.0" width="27.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.0" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (374 samples, 2.32%)</title><rect x="894.0" y="467.0" width="27.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.0" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (374 samples, 2.32%)</title><rect x="894.0" y="451.0" width="27.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.0" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (65 samples, 0.40%)</title><rect x="894.0" y="435.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (65 samples, 0.40%)</title><rect x="894.0" y="419.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (65 samples, 0.40%)</title><rect x="894.0" y="403.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (65 samples, 0.40%)</title><rect x="894.0" y="387.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (65 samples, 0.40%)</title><rect x="894.0" y="371.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (42 samples, 0.26%)</title><rect x="894.0" y="355.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="897.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.14%)</title><rect x="897.1" y="355.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (23 samples, 0.14%)</title><rect x="897.1" y="339.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="900.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (309 samples, 1.91%)</title><rect x="898.7" y="435.0" width="22.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (309 samples, 1.91%)</title><rect x="898.7" y="419.0" width="22.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.7" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (309 samples, 1.91%)</title><rect x="898.7" y="403.0" width="22.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.7" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (309 samples, 1.91%)</title><rect x="898.7" y="387.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.7" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (309 samples, 1.91%)</title><rect x="898.7" y="371.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.7" y="382.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (304 samples, 1.88%)</title><rect x="898.7" y="355.0" width="22.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="901.7" y="366.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.03%)</title><rect x="921.0" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.03%)</title><rect x="921.0" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="924.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (155 samples, 0.96%)</title><rect x="921.3" y="531.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (14 samples, 0.09%)</title><rect x="921.3" y="515.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (14 samples, 0.09%)</title><rect x="921.3" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (14 samples, 0.09%)</title><rect x="921.3" y="483.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="924.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (141 samples, 0.87%)</title><rect x="922.3" y="515.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (140 samples, 0.87%)</title><rect x="922.3" y="499.0" width="10.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="925.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (161 samples, 1.00%)</title><rect x="932.6" y="675.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (161 samples, 1.00%)</title><rect x="932.6" y="659.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="935.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (161 samples, 1.00%)</title><rect x="932.6" y="643.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (161 samples, 1.00%)</title><rect x="932.6" y="627.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (161 samples, 1.00%)</title><rect x="932.6" y="611.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (158 samples, 0.98%)</title><rect x="932.6" y="595.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (158 samples, 0.98%)</title><rect x="932.6" y="579.0" width="11.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="935.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (26 samples, 0.16%)</title><rect x="944.4" y="723.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (26 samples, 0.16%)</title><rect x="944.4" y="707.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (4 samples, 0.02%)</title><rect x="944.4" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.4" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter$Cache (4 samples, 0.02%)</title><rect x="944.4" y="675.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="947.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (22 samples, 0.14%)</title><rect x="944.7" y="691.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.7" y="702.0"></text>
</g>
<g>
<title>java.lang.Class (22 samples, 0.14%)</title><rect x="944.7" y="675.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="947.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (50 samples, 0.31%)</title><rect x="946.3" y="787.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (50 samples, 0.31%)</title><rect x="946.3" y="771.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (50 samples, 0.31%)</title><rect x="946.3" y="755.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (50 samples, 0.31%)</title><rect x="946.3" y="739.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (50 samples, 0.31%)</title><rect x="946.3" y="723.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (50 samples, 0.31%)</title><rect x="946.3" y="707.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (50 samples, 0.31%)</title><rect x="946.3" y="691.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (50 samples, 0.31%)</title><rect x="946.3" y="675.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (50 samples, 0.31%)</title><rect x="946.3" y="659.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (50 samples, 0.31%)</title><rect x="946.3" y="643.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (50 samples, 0.31%)</title><rect x="946.3" y="627.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (50 samples, 0.31%)</title><rect x="946.3" y="611.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="949.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (11 samples, 0.07%)</title><rect x="950.0" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10 samples, 0.06%)</title><rect x="950.0" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.06%)</title><rect x="950.0" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.06%)</title><rect x="950.0" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.06%)</title><rect x="950.0" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.06%)</title><rect x="950.0" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.06%)</title><rect x="950.0" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.06%)</title><rect x="950.0" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.06%)</title><rect x="950.0" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.06%)</title><rect x="950.0" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.06%)</title><rect x="950.0" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.06%)</title><rect x="950.0" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.06%)</title><rect x="950.0" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.06%)</title><rect x="950.0" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.06%)</title><rect x="950.0" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (10 samples, 0.06%)</title><rect x="950.0" y="579.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="953.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (228 samples, 1.41%)</title><rect x="950.8" y="819.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (228 samples, 1.41%)</title><rect x="950.8" y="803.0" width="16.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.07%)</title><rect x="950.8" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.07%)</title><rect x="950.8" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.07%)</title><rect x="950.8" y="755.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.07%)</title><rect x="950.8" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.07%)</title><rect x="950.8" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.8" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12 samples, 0.07%)</title><rect x="950.8" y="707.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="953.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (216 samples, 1.34%)</title><rect x="951.6" y="787.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (216 samples, 1.34%)</title><rect x="951.6" y="771.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (216 samples, 1.34%)</title><rect x="951.6" y="755.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="954.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (216 samples, 1.34%)</title><rect x="951.6" y="739.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (216 samples, 1.34%)</title><rect x="951.6" y="723.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (216 samples, 1.34%)</title><rect x="951.6" y="707.0" width="15.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (216 samples, 1.34%)</title><rect x="951.6" y="691.0" width="15.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="954.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,056 samples, 6.54%)</title><rect x="967.5" y="819.0" width="77.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.5" y="830.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,056 samples, 6.54%)</title><rect x="967.5" y="803.0" width="77.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.5" y="814.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (246 samples, 1.52%)</title><rect x="967.5" y="787.0" width="18.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/340694266.run (246 samples, 1.52%)</title><rect x="967.5" y="771.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (246 samples, 1.52%)</title><rect x="967.5" y="755.0" width="18.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (244 samples, 1.51%)</title><rect x="967.5" y="739.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (244 samples, 1.51%)</title><rect x="967.5" y="723.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (244 samples, 1.51%)</title><rect x="967.5" y="707.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (244 samples, 1.51%)</title><rect x="967.5" y="691.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (244 samples, 1.51%)</title><rect x="967.5" y="675.0" width="17.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (244 samples, 1.51%)</title><rect x="967.5" y="659.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (244 samples, 1.51%)</title><rect x="967.5" y="643.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (244 samples, 1.51%)</title><rect x="967.5" y="627.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (244 samples, 1.51%)</title><rect x="967.5" y="611.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (238 samples, 1.47%)</title><rect x="967.5" y="595.0" width="17.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="970.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.04%)</title><rect x="984.9" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.9" y="606.0"></text>
</g>
<g>
<title>java.lang.Object (6 samples, 0.04%)</title><rect x="984.9" y="579.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="987.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (810 samples, 5.02%)</title><rect x="985.5" y="787.0" width="59.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.5" y="798.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (810 samples, 5.02%)</title><rect x="985.5" y="771.0" width="59.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.5" y="782.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (810 samples, 5.02%)</title><rect x="985.5" y="755.0" width="59.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.5" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/340694266.run (810 samples, 5.02%)</title><rect x="985.5" y="739.0" width="59.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.5" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (810 samples, 5.02%)</title><rect x="985.5" y="723.0" width="59.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.5" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (810 samples, 5.02%)</title><rect x="985.5" y="707.0" width="59.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.5" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (810 samples, 5.02%)</title><rect x="985.5" y="691.0" width="59.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.5" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (810 samples, 5.02%)</title><rect x="985.5" y="675.0" width="59.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.5" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$263/1721147715.run (810 samples, 5.02%)</title><rect x="985.5" y="659.0" width="59.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.5" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (810 samples, 5.02%)</title><rect x="985.5" y="643.0" width="59.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.5" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (810 samples, 5.02%)</title><rect x="985.5" y="627.0" width="59.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.5" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (810 samples, 5.02%)</title><rect x="985.5" y="611.0" width="59.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.5" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (810 samples, 5.02%)</title><rect x="985.5" y="595.0" width="59.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.5" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (323 samples, 2.00%)</title><rect x="985.5" y="579.0" width="23.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="988.5" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (487 samples, 3.02%)</title><rect x="1009.1" y="579.0" width="35.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1012.1" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (487 samples, 3.02%)</title><rect x="1009.1" y="563.0" width="35.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.1" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (87 samples, 0.54%)</title><rect x="1009.1" y="547.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (87 samples, 0.54%)</title><rect x="1009.1" y="531.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1012.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (87 samples, 0.54%)</title><rect x="1009.1" y="515.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (87 samples, 0.54%)</title><rect x="1009.1" y="499.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (87 samples, 0.54%)</title><rect x="1009.1" y="483.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1012.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (69 samples, 0.43%)</title><rect x="1009.1" y="467.0" width="5.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1012.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (18 samples, 0.11%)</title><rect x="1014.1" y="467.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (18 samples, 0.11%)</title><rect x="1014.1" y="451.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1017.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (400 samples, 2.48%)</title><rect x="1015.4" y="547.0" width="29.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1018.4" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (400 samples, 2.48%)</title><rect x="1015.4" y="531.0" width="29.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1018.4" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (400 samples, 2.48%)</title><rect x="1015.4" y="515.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.4" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (400 samples, 2.48%)</title><rect x="1015.4" y="499.0" width="29.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.4" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (400 samples, 2.48%)</title><rect x="1015.4" y="483.0" width="29.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.4" y="494.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (386 samples, 2.39%)</title><rect x="1015.4" y="467.0" width="28.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1018.4" y="478.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.09%)</title><rect x="1043.6" y="467.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1046.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (14 samples, 0.09%)</title><rect x="1043.6" y="451.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1046.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (17 samples, 0.11%)</title><rect x="1044.7" y="867.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (17 samples, 0.11%)</title><rect x="1044.7" y="851.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (17 samples, 0.11%)</title><rect x="1044.7" y="835.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (17 samples, 0.11%)</title><rect x="1044.7" y="819.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (17 samples, 0.11%)</title><rect x="1044.7" y="803.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (17 samples, 0.11%)</title><rect x="1044.7" y="787.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17 samples, 0.11%)</title><rect x="1044.7" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17 samples, 0.11%)</title><rect x="1044.7" y="755.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.11%)</title><rect x="1044.7" y="739.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.11%)</title><rect x="1044.7" y="723.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17 samples, 0.11%)</title><rect x="1044.7" y="707.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.11%)</title><rect x="1044.7" y="691.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (17 samples, 0.11%)</title><rect x="1044.7" y="675.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (17 samples, 0.11%)</title><rect x="1044.7" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (17 samples, 0.11%)</title><rect x="1044.7" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (17 samples, 0.11%)</title><rect x="1044.7" y="627.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (17 samples, 0.11%)</title><rect x="1044.7" y="611.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.11%)</title><rect x="1044.7" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.11%)</title><rect x="1044.7" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (17 samples, 0.11%)</title><rect x="1044.7" y="563.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1047.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,972 samples, 12.21%)</title><rect x="1045.9" y="867.0" width="144.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.9" y="878.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.06%)</title><rect x="1045.9" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1048.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$228/245985830.accept (10 samples, 0.06%)</title><rect x="1045.9" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (10 samples, 0.06%)</title><rect x="1045.9" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (10 samples, 0.06%)</title><rect x="1045.9" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (10 samples, 0.06%)</title><rect x="1045.9" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (10 samples, 0.06%)</title><rect x="1045.9" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (10 samples, 0.06%)</title><rect x="1045.9" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1045.9" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1045.9" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.06%)</title><rect x="1045.9" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (10 samples, 0.06%)</title><rect x="1045.9" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$172/1260115600.run (10 samples, 0.06%)</title><rect x="1045.9" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (10 samples, 0.06%)</title><rect x="1045.9" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (10 samples, 0.06%)</title><rect x="1045.9" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (10 samples, 0.06%)</title><rect x="1045.9" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (10 samples, 0.06%)</title><rect x="1045.9" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1045.9" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1045.9" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.06%)</title><rect x="1045.9" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.06%)</title><rect x="1045.9" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.06%)</title><rect x="1045.9" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.06%)</title><rect x="1045.9" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.06%)</title><rect x="1045.9" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.06%)</title><rect x="1045.9" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.06%)</title><rect x="1045.9" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.06%)</title><rect x="1045.9" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.06%)</title><rect x="1045.9" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (10 samples, 0.06%)</title><rect x="1045.9" y="419.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1048.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (930 samples, 5.76%)</title><rect x="1046.6" y="851.0" width="68.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1049.6" y="862.0">jdk.int..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (17 samples, 0.11%)</title><rect x="1114.6" y="851.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/1530862808.run (10 samples, 0.06%)</title><rect x="1114.6" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (10 samples, 0.06%)</title><rect x="1114.6" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1114.6" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1114.6" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.06%)</title><rect x="1114.6" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (10 samples, 0.06%)</title><rect x="1114.6" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$172/1260115600.run (10 samples, 0.06%)</title><rect x="1114.6" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (10 samples, 0.06%)</title><rect x="1114.6" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (10 samples, 0.06%)</title><rect x="1114.6" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (10 samples, 0.06%)</title><rect x="1114.6" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (10 samples, 0.06%)</title><rect x="1114.6" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1114.6" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="1114.6" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.06%)</title><rect x="1114.6" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.06%)</title><rect x="1114.6" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.06%)</title><rect x="1114.6" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.06%)</title><rect x="1114.6" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.06%)</title><rect x="1114.6" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.06%)</title><rect x="1114.6" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.06%)</title><rect x="1114.6" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.06%)</title><rect x="1114.6" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.06%)</title><rect x="1114.6" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (10 samples, 0.06%)</title><rect x="1114.6" y="483.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1117.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$184/1301757668.run (7 samples, 0.04%)</title><rect x="1115.3" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (7 samples, 0.04%)</title><rect x="1115.3" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.04%)</title><rect x="1115.3" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.04%)</title><rect x="1115.3" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.04%)</title><rect x="1115.3" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.04%)</title><rect x="1115.3" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.04%)</title><rect x="1115.3" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.04%)</title><rect x="1115.3" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.04%)</title><rect x="1115.3" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.04%)</title><rect x="1115.3" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.04%)</title><rect x="1115.3" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (6 samples, 0.04%)</title><rect x="1115.3" y="659.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1118.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (278 samples, 1.72%)</title><rect x="1115.8" y="851.0" width="20.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (278 samples, 1.72%)</title><rect x="1115.8" y="835.0" width="20.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.8" y="846.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (278 samples, 1.72%)</title><rect x="1115.8" y="819.0" width="20.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1118.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (736 samples, 4.56%)</title><rect x="1136.1" y="851.0" width="53.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.1" y="862.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (736 samples, 4.56%)</title><rect x="1136.1" y="835.0" width="53.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.1" y="846.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (736 samples, 4.56%)</title><rect x="1136.1" y="819.0" width="53.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.1" y="830.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (736 samples, 4.56%)</title><rect x="1136.1" y="803.0" width="53.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.1" y="814.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (736 samples, 4.56%)</title><rect x="1136.1" y="787.0" width="53.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.1" y="798.0">sun/n..</text>
</g>
<g>
<title>java.lang.Object (736 samples, 4.56%)</title><rect x="1136.1" y="771.0" width="53.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1139.1" y="782.0">java...</text>
</g>
</g>
</svg>
