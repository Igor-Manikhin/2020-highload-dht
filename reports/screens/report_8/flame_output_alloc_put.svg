<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (97,692 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (95,787 samples, 98.05%)</title><rect x="10.0" y="947.0" width="1157.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (70,517 samples, 72.18%)</title><rect x="10.0" y="931.0" width="851.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="942.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (70,517 samples, 72.18%)</title><rect x="10.0" y="915.0" width="851.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="926.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (70,517 samples, 72.18%)</title><rect x="10.0" y="899.0" width="851.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="910.0">io/netty/util/concurrent/SingleThreadEventExecutor$4.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (70,517 samples, 72.18%)</title><rect x="10.0" y="883.0" width="851.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="894.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (53,711 samples, 54.98%)</title><rect x="10.0" y="867.0" width="648.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="878.0">io/netty/channel/nio/NioEventLoop.processSelectedKeys</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (53,711 samples, 54.98%)</title><rect x="10.0" y="851.0" width="648.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="862.0">io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (53,711 samples, 54.98%)</title><rect x="10.0" y="835.0" width="648.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="846.0">io/netty/channel/nio/NioEventLoop.processSelectedKey</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (48,624 samples, 49.77%)</title><rect x="10.0" y="819.0" width="587.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="830.0">io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (48,262 samples, 49.40%)</title><rect x="10.1" y="803.0" width="582.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.1" y="814.0">io/netty/channel/DefaultChannelPipeline.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (48,262 samples, 49.40%)</title><rect x="10.1" y="787.0" width="582.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.1" y="798.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (48,120 samples, 49.26%)</title><rect x="10.1" y="771.0" width="581.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.1" y="782.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (48,120 samples, 49.26%)</title><rect x="10.1" y="755.0" width="581.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.1" y="766.0">io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (48,120 samples, 49.26%)</title><rect x="10.1" y="739.0" width="581.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.1" y="750.0">io/netty/channel/AbstractChannelHandlerContext.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (48,120 samples, 49.26%)</title><rect x="10.1" y="723.0" width="581.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.1" y="734.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (47,987 samples, 49.12%)</title><rect x="10.1" y="707.0" width="579.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="718.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (47,987 samples, 49.12%)</title><rect x="10.1" y="691.0" width="579.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="702.0">io/netty/handler/codec/ByteToMessageDecoder.channelRead</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (95 samples, 0.10%)</title><rect x="10.1" y="675.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.1" y="686.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (95 samples, 0.10%)</title><rect x="10.1" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.1" y="670.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (95 samples, 0.10%)</title><rect x="10.1" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.1" y="654.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (88 samples, 0.09%)</title><rect x="10.2" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (88 samples, 0.09%)</title><rect x="10.2" y="611.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (88 samples, 0.09%)</title><rect x="10.2" y="595.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.2" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (88 samples, 0.09%)</title><rect x="10.2" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.2" y="590.0"></text>
</g>
<g>
<title>long[] (29 samples, 0.03%)</title><rect x="10.6" y="563.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.6" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (15,759 samples, 16.13%)</title><rect x="11.3" y="675.0" width="190.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.3" y="686.0">io/netty/handler/codec/By..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (13,912 samples, 14.24%)</title><rect x="11.3" y="659.0" width="168.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.3" y="670.0">io/netty/handler/codec..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.decode (13,912 samples, 14.24%)</title><rect x="11.3" y="643.0" width="168.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.3" y="654.0">io/netty/handler/codec..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpContent (22 samples, 0.02%)</title><rect x="11.3" y="627.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultLastHttpContent (388 samples, 0.40%)</title><rect x="11.5" y="627.0" width="4.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="14.5" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.readRetainedSlice (83 samples, 0.08%)</title><rect x="16.2" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.2" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (83 samples, 0.08%)</title><rect x="16.2" y="611.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.2" y="622.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (83 samples, 0.08%)</title><rect x="16.2" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.2" y="606.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (83 samples, 0.08%)</title><rect x="16.2" y="579.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.2" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (78 samples, 0.08%)</title><rect x="16.3" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (78 samples, 0.08%)</title><rect x="16.3" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (78 samples, 0.08%)</title><rect x="16.3" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.3" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (78 samples, 0.08%)</title><rect x="16.3" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.02%)</title><rect x="16.5" y="499.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="19.5" y="510.0"></text>
</g>
<g>
<title>long[] (24 samples, 0.02%)</title><rect x="16.7" y="499.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="19.7" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultLastHttpContent.&lt;init&gt; (1,936 samples, 1.98%)</title><rect x="17.2" y="627.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.2" y="638.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders (181 samples, 0.19%)</title><rect x="17.2" y="611.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.2" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultLastHttpContent$TrailingHttpHeaders.&lt;init&gt; (1,755 samples, 1.80%)</title><rect x="19.4" y="611.0" width="21.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.4" y="622.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,755 samples, 1.80%)</title><rect x="19.4" y="595.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.4" y="606.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (440 samples, 0.45%)</title><rect x="19.4" y="579.0" width="5.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.4" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (1,315 samples, 1.35%)</title><rect x="24.7" y="579.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.7" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,315 samples, 1.35%)</title><rect x="24.7" y="563.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.7" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,315 samples, 1.35%)</title><rect x="24.7" y="547.0" width="15.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.7" y="558.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (851 samples, 0.87%)</title><rect x="24.7" y="531.0" width="10.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="27.7" y="542.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (459 samples, 0.47%)</title><rect x="35.1" y="531.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="38.1" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$LineParser.parse (60 samples, 0.06%)</title><rect x="40.6" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.6" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (60 samples, 0.06%)</title><rect x="40.6" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.6" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.forEachByte (60 samples, 0.06%)</title><rect x="40.6" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.6" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (60 samples, 0.06%)</title><rect x="40.6" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.6" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (60 samples, 0.06%)</title><rect x="40.6" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.6" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (60 samples, 0.06%)</title><rect x="40.6" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.6" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (56 samples, 0.06%)</title><rect x="40.6" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (56 samples, 0.06%)</title><rect x="40.6" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (56 samples, 0.06%)</title><rect x="40.6" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (56 samples, 0.06%)</title><rect x="40.6" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.02%)</title><rect x="40.8" y="467.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="43.8" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (7,119 samples, 7.29%)</title><rect x="41.3" y="627.0" width="86.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.3" y="638.0">io/netty/h..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1,622 samples, 1.66%)</title><rect x="41.3" y="611.0" width="19.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.3" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1,622 samples, 1.66%)</title><rect x="41.3" y="595.0" width="19.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.3" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (1,622 samples, 1.66%)</title><rect x="41.3" y="579.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.3" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (1,622 samples, 1.66%)</title><rect x="41.3" y="563.0" width="19.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.3" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (1,622 samples, 1.66%)</title><rect x="41.3" y="547.0" width="19.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.3" y="558.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (1,622 samples, 1.66%)</title><rect x="41.3" y="531.0" width="19.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="44.3" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.getAll (637 samples, 0.65%)</title><rect x="60.9" y="611.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.9" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAllAsString (637 samples, 0.65%)</title><rect x="60.9" y="595.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.9" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.getAll (637 samples, 0.65%)</title><rect x="60.9" y="579.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.9" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList (353 samples, 0.36%)</title><rect x="60.9" y="563.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="63.9" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (284 samples, 0.29%)</title><rect x="65.2" y="563.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (284 samples, 0.29%)</title><rect x="65.2" y="547.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.2" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (284 samples, 0.29%)</title><rect x="65.2" y="531.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="68.2" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (318 samples, 0.33%)</title><rect x="68.6" y="611.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.6" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.forEachByte (318 samples, 0.33%)</title><rect x="68.6" y="595.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.6" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (318 samples, 0.33%)</title><rect x="68.6" y="579.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.6" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (318 samples, 0.33%)</title><rect x="68.6" y="563.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.6" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (318 samples, 0.33%)</title><rect x="68.6" y="547.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.6" y="558.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (21 samples, 0.02%)</title><rect x="68.6" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="71.6" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (297 samples, 0.30%)</title><rect x="68.9" y="531.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (297 samples, 0.30%)</title><rect x="68.9" y="515.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (297 samples, 0.30%)</title><rect x="68.9" y="499.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (297 samples, 0.30%)</title><rect x="68.9" y="483.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.9" y="494.0"></text>
</g>
<g>
<title>int[] (49 samples, 0.05%)</title><rect x="68.9" y="467.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="71.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.09%)</title><rect x="69.5" y="467.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="72.5" y="478.0"></text>
</g>
<g>
<title>long[] (88 samples, 0.09%)</title><rect x="70.6" y="467.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="73.6" y="478.0"></text>
</g>
<g>
<title>long[] (22 samples, 0.02%)</title><rect x="71.6" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="74.6" y="478.0"></text>
</g>
<g>
<title>short[] (47 samples, 0.05%)</title><rect x="71.9" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="74.9" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.splitHeader (4,542 samples, 4.65%)</title><rect x="72.4" y="611.0" width="54.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.4" y="622.0">io/ne..</text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.subStringUnsafe (4,542 samples, 4.65%)</title><rect x="72.4" y="595.0" width="54.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.4" y="606.0">io/ne..</text>
</g>
<g>
<title>java.lang.String (1,992 samples, 2.04%)</title><rect x="72.4" y="579.0" width="24.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="75.4" y="590.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,550 samples, 2.61%)</title><rect x="96.5" y="579.0" width="30.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.5" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,550 samples, 2.61%)</title><rect x="96.5" y="563.0" width="30.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.5" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,550 samples, 2.61%)</title><rect x="96.5" y="547.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.5" y="558.0">ja..</text>
</g>
<g>
<title>byte[] (2,550 samples, 2.61%)</title><rect x="96.5" y="531.0" width="30.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="99.5" y="542.0">by..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.splitInitialLine (1,892 samples, 1.94%)</title><rect x="127.3" y="627.0" width="22.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.3" y="638.0">i..</text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.subStringUnsafe (1,892 samples, 1.94%)</title><rect x="127.3" y="611.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.3" y="622.0">i..</text>
</g>
<g>
<title>java.lang.String (841 samples, 0.86%)</title><rect x="127.3" y="595.0" width="10.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="130.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,051 samples, 1.08%)</title><rect x="137.5" y="595.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,051 samples, 1.08%)</title><rect x="137.5" y="579.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,051 samples, 1.08%)</title><rect x="137.5" y="563.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.5" y="574.0"></text>
</g>
<g>
<title>byte[] (1,051 samples, 1.08%)</title><rect x="137.5" y="547.0" width="12.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="140.5" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpRequestDecoder.createMessage (2,412 samples, 2.47%)</title><rect x="150.2" y="627.0" width="29.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.2" y="638.0">io..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpRequest (339 samples, 0.35%)</title><rect x="150.2" y="611.0" width="4.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="153.2" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpRequest.&lt;init&gt; (2,073 samples, 2.12%)</title><rect x="154.3" y="611.0" width="25.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.3" y="622.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (2,073 samples, 2.12%)</title><rect x="154.3" y="595.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.3" y="606.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (176 samples, 0.18%)</title><rect x="154.3" y="579.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="157.3" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,897 samples, 1.94%)</title><rect x="156.4" y="579.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.4" y="590.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,897 samples, 1.94%)</title><rect x="156.4" y="563.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.4" y="574.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (452 samples, 0.46%)</title><rect x="156.4" y="547.0" width="5.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="159.4" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (1,445 samples, 1.48%)</title><rect x="161.8" y="547.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.8" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,445 samples, 1.48%)</title><rect x="161.8" y="531.0" width="17.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.8" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,445 samples, 1.48%)</title><rect x="161.8" y="515.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.8" y="526.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (960 samples, 0.98%)</title><rect x="161.8" y="499.0" width="11.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="164.8" y="510.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (479 samples, 0.49%)</title><rect x="173.5" y="499.0" width="5.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="176.5" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="659.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.3" y="670.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="643.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.3" y="654.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="627.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.3" y="638.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="611.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.3" y="622.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="595.0" width="22.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.3" y="606.0">i..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="579.0" width="22.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.3" y="590.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="563.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.3" y="574.0">i..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="547.0" width="22.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.3" y="558.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="531.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.3" y="542.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="515.0" width="22.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.3" y="526.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="499.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.3" y="510.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (1,847 samples, 1.89%)</title><rect x="179.3" y="483.0" width="22.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.3" y="494.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (1,847 samples, 1.89%)</title><rect x="179.3" y="467.0" width="22.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.3" y="478.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (1,364 samples, 1.40%)</title><rect x="179.3" y="451.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.3" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (1,364 samples, 1.40%)</title><rect x="179.3" y="435.0" width="16.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.3" y="446.0"></text>
</g>
<g>
<title>io.netty.buffer.CompositeByteBuf (545 samples, 0.56%)</title><rect x="179.3" y="419.0" width="6.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="182.3" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (103 samples, 0.11%)</title><rect x="185.9" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.9" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (100 samples, 0.10%)</title><rect x="185.9" y="403.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="188.9" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (100 samples, 0.10%)</title><rect x="185.9" y="387.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.9" y="398.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (99 samples, 0.10%)</title><rect x="185.9" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.9" y="382.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (93 samples, 0.10%)</title><rect x="185.9" y="355.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (93 samples, 0.10%)</title><rect x="185.9" y="339.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.9" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (93 samples, 0.10%)</title><rect x="185.9" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.9" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (93 samples, 0.10%)</title><rect x="185.9" y="307.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.9" y="318.0"></text>
</g>
<g>
<title>int[] (22 samples, 0.02%)</title><rect x="185.9" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="188.9" y="302.0"></text>
</g>
<g>
<title>long[] (26 samples, 0.03%)</title><rect x="186.5" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="189.5" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (715 samples, 0.73%)</title><rect x="187.1" y="419.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="190.1" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (715 samples, 0.73%)</title><rect x="187.1" y="403.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.1" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newCompArray (715 samples, 0.73%)</title><rect x="187.1" y="387.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.1" y="398.0"></text>
</g>
<g>
<title>io.netty.buffer.CompositeByteBuf$Component[] (705 samples, 0.72%)</title><rect x="187.1" y="371.0" width="8.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="190.1" y="382.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (483 samples, 0.49%)</title><rect x="195.8" y="451.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.8" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (483 samples, 0.49%)</title><rect x="195.8" y="435.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.8" y="446.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest (213 samples, 0.22%)</title><rect x="195.8" y="419.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="198.8" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.setTransferEncodingChunked (270 samples, 0.28%)</title><rect x="198.3" y="419.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.3" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.getAll (270 samples, 0.28%)</title><rect x="198.3" y="403.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.3" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAllAsString (270 samples, 0.28%)</title><rect x="198.3" y="387.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.3" y="398.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.getAll (270 samples, 0.28%)</title><rect x="198.3" y="371.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.3" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList (270 samples, 0.28%)</title><rect x="198.3" y="355.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="201.3" y="366.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="675.0" width="388.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.6" y="686.0">io/netty/handler/codec/ByteToMessageDecoder.fireChann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="659.0" width="388.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.6" y="670.0">io/netty/channel/AbstractChannelHandlerContext.fireCh..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="643.0" width="388.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.6" y="654.0">io/netty/channel/AbstractChannelHandlerContext.invoke..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="627.0" width="388.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.6" y="638.0">io/netty/channel/AbstractChannelHandlerContext.invoke..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="611.0" width="388.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.6" y="622.0">io/netty/channel/CombinedChannelDuplexHandler.channel..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="595.0" width="388.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.6" y="606.0">io/netty/handler/codec/ByteToMessageDecoder.channelRead</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="579.0" width="388.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.6" y="590.0">io/netty/channel/CombinedChannelDuplexHandler$Delegat..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="563.0" width="388.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.6" y="574.0">io/netty/channel/AbstractChannelHandlerContext.fireCh..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,131 samples, 32.89%)</title><rect x="201.6" y="547.0" width="388.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.6" y="558.0">io/netty/channel/AbstractChannelHandlerContext.invoke..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,130 samples, 32.89%)</title><rect x="201.6" y="531.0" width="388.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.6" y="542.0">io/netty/channel/AbstractChannelHandlerContext.invoke..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (32,130 samples, 32.89%)</title><rect x="201.6" y="515.0" width="388.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.6" y="526.0">io/netty/handler/codec/MessageToMessageDecoder.channe..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (30,960 samples, 31.69%)</title><rect x="201.6" y="499.0" width="374.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.6" y="510.0">io/netty/channel/AbstractChannelHandlerContext.fire..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (30,960 samples, 31.69%)</title><rect x="201.6" y="483.0" width="374.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.6" y="494.0">io/netty/channel/AbstractChannelHandlerContext.invo..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (30,789 samples, 31.52%)</title><rect x="201.6" y="467.0" width="371.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.6" y="478.0">io/netty/channel/AbstractChannelHandlerContext.invo..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (30,789 samples, 31.52%)</title><rect x="201.6" y="451.0" width="371.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.6" y="462.0">io/netty/channel/SimpleChannelInboundHandler.channe..</text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (261 samples, 0.27%)</title><rect x="201.6" y="435.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.6" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.release (261 samples, 0.27%)</title><rect x="201.6" y="419.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (139 samples, 0.14%)</title><rect x="201.6" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.6" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (139 samples, 0.14%)</title><rect x="201.6" y="387.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.6" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (139 samples, 0.14%)</title><rect x="201.6" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.6" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (139 samples, 0.14%)</title><rect x="201.6" y="355.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.6" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (139 samples, 0.14%)</title><rect x="201.6" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.6" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (139 samples, 0.14%)</title><rect x="201.6" y="323.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.6" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractPooledDerivedByteBuf.deallocate (139 samples, 0.14%)</title><rect x="201.6" y="307.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.6" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (139 samples, 0.14%)</title><rect x="201.6" y="291.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.6" y="302.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (139 samples, 0.14%)</title><rect x="201.6" y="275.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.6" y="286.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (139 samples, 0.14%)</title><rect x="201.6" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.6" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (132 samples, 0.14%)</title><rect x="201.7" y="243.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.7" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (132 samples, 0.14%)</title><rect x="201.7" y="227.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.7" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (132 samples, 0.14%)</title><rect x="201.7" y="211.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.7" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (132 samples, 0.14%)</title><rect x="201.7" y="195.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.7" y="206.0"></text>
</g>
<g>
<title>int[] (23 samples, 0.02%)</title><rect x="201.7" y="179.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="204.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.03%)</title><rect x="202.0" y="179.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="205.0" y="190.0"></text>
</g>
<g>
<title>long[] (33 samples, 0.03%)</title><rect x="202.4" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="205.4" y="190.0"></text>
</g>
<g>
<title>long[] (22 samples, 0.02%)</title><rect x="202.8" y="179.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.8" y="190.0"></text>
</g>
<g>
<title>short[] (22 samples, 0.02%)</title><rect x="203.0" y="179.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="206.0" y="190.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.release (122 samples, 0.12%)</title><rect x="203.3" y="403.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.3" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (122 samples, 0.12%)</title><rect x="203.3" y="387.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.3" y="398.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (122 samples, 0.12%)</title><rect x="203.3" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.3" y="382.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (119 samples, 0.12%)</title><rect x="203.3" y="355.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.3" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (119 samples, 0.12%)</title><rect x="203.3" y="339.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.3" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (119 samples, 0.12%)</title><rect x="203.3" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.3" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (119 samples, 0.12%)</title><rect x="203.3" y="307.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.3" y="318.0"></text>
</g>
<g>
<title>int[] (28 samples, 0.03%)</title><rect x="203.3" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="206.3" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.03%)</title><rect x="203.7" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="206.7" y="302.0"></text>
</g>
<g>
<title>long[] (28 samples, 0.03%)</title><rect x="204.1" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="207.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (30,528 samples, 31.25%)</title><rect x="204.8" y="435.0" width="368.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.8" y="446.0">ru/mail/polis/service/manikhin/NettyRequests.chann..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (30,528 samples, 31.25%)</title><rect x="204.8" y="419.0" width="368.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.8" y="430.0">ru/mail/polis/service/manikhin/NettyRequests.chann..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.entityHandler (30,528 samples, 31.25%)</title><rect x="204.8" y="403.0" width="368.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.8" y="414.0">ru/mail/polis/service/manikhin/NettyRequests.entit..</text>
</g>
<g>
<title>io.netty.handler.codec.http.QueryStringDecoder (50 samples, 0.05%)</title><rect x="204.8" y="387.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="207.8" y="398.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.parameters (4,165 samples, 4.26%)</title><rect x="205.4" y="387.0" width="50.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.4" y="398.0">io/ne..</text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.decodeParams (4,165 samples, 4.26%)</title><rect x="205.4" y="371.0" width="50.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.4" y="382.0">io/ne..</text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.addParam (3,532 samples, 3.62%)</title><rect x="205.4" y="355.0" width="42.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.4" y="366.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.decodeComponent (1,315 samples, 1.35%)</title><rect x="205.4" y="339.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,315 samples, 1.35%)</title><rect x="205.4" y="323.0" width="15.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,315 samples, 1.35%)</title><rect x="205.4" y="307.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (687 samples, 0.70%)</title><rect x="205.4" y="291.0" width="8.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="208.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (628 samples, 0.64%)</title><rect x="213.7" y="291.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.7" y="302.0"></text>
</g>
<g>
<title>byte[] (628 samples, 0.64%)</title><rect x="213.7" y="275.0" width="7.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="216.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (351 samples, 0.36%)</title><rect x="221.2" y="339.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="224.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (352 samples, 0.36%)</title><rect x="225.5" y="339.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (352 samples, 0.36%)</title><rect x="225.5" y="323.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="228.5" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,514 samples, 1.55%)</title><rect x="229.7" y="339.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.7" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,514 samples, 1.55%)</title><rect x="229.7" y="323.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.7" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (972 samples, 0.99%)</title><rect x="229.7" y="307.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.7" y="318.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (962 samples, 0.98%)</title><rect x="229.7" y="291.0" width="11.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="232.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (542 samples, 0.55%)</title><rect x="241.5" y="307.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.5" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap$Entry (542 samples, 0.55%)</title><rect x="241.5" y="291.0" width="6.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="244.5" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap (633 samples, 0.65%)</title><rect x="248.0" y="355.0" width="7.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="251.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.putRequest (25,575 samples, 26.18%)</title><rect x="255.7" y="387.0" width="308.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.7" y="398.0">ru/mail/polis/service/manikhin/NettyReques..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.multiPut (25,575 samples, 26.18%)</title><rect x="255.7" y="371.0" width="308.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.7" y="382.0">ru/mail/polis/service/manikhin/ReplicasNet..</text>
</g>
<g>
<title>java.util.ArrayList (291 samples, 0.30%)</title><rect x="255.7" y="355.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="258.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (262 samples, 0.27%)</title><rect x="259.2" y="355.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (262 samples, 0.27%)</title><rect x="259.2" y="339.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (262 samples, 0.27%)</title><rect x="259.2" y="323.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (262 samples, 0.27%)</title><rect x="259.2" y="307.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.2" y="318.0"></text>
</g>
<g>
<title>byte[] (262 samples, 0.27%)</title><rect x="259.2" y="291.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="262.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (595 samples, 0.61%)</title><rect x="262.3" y="355.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (595 samples, 0.61%)</title><rect x="262.3" y="339.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (595 samples, 0.61%)</title><rect x="262.3" y="323.0" width="7.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="265.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (331 samples, 0.34%)</title><rect x="269.5" y="355.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (331 samples, 0.34%)</title><rect x="269.5" y="339.0" width="4.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="272.5" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonSet.iterator (227 samples, 0.23%)</title><rect x="273.5" y="355.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections.singletonIterator (227 samples, 0.23%)</title><rect x="273.5" y="339.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.5" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$1 (227 samples, 0.23%)</title><rect x="273.5" y="323.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="276.5" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.singleton (142 samples, 0.15%)</title><rect x="276.3" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.3" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$SingletonSet (142 samples, 0.15%)</title><rect x="276.3" y="339.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="279.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (123 samples, 0.13%)</title><rect x="278.0" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (95 samples, 0.10%)</title><rect x="278.0" y="339.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (95 samples, 0.10%)</title><rect x="278.0" y="323.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="281.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (28 samples, 0.03%)</title><rect x="279.1" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (28 samples, 0.03%)</title><rect x="279.1" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="282.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.respond (5,195 samples, 5.32%)</title><rect x="279.5" y="355.0" width="62.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.5" y="366.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (190 samples, 0.19%)</title><rect x="279.5" y="339.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (190 samples, 0.19%)</title><rect x="279.5" y="323.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests$$Lambda$143/336063720.get$Lambda (190 samples, 0.19%)</title><rect x="279.5" y="307.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.5" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.ReplicasNettyRequests$$Lambda$143 (190 samples, 0.19%)</title><rect x="279.5" y="291.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="282.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (719 samples, 0.74%)</title><rect x="281.8" y="339.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (719 samples, 0.74%)</title><rect x="281.8" y="323.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (474 samples, 0.49%)</title><rect x="281.8" y="307.0" width="5.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="284.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (243 samples, 0.25%)</title><rect x="287.5" y="307.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (243 samples, 0.25%)</title><rect x="287.5" y="291.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="290.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.atLeastAsync (3,199 samples, 3.27%)</title><rect x="290.5" y="339.0" width="38.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.5" y="350.0">ru/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (296 samples, 0.30%)</title><rect x="290.5" y="323.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="293.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (270 samples, 0.28%)</title><rect x="294.0" y="323.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="297.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (354 samples, 0.36%)</title><rect x="297.3" y="323.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="300.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/833410809.linkToTargetMethod (77 samples, 0.08%)</title><rect x="301.6" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1234770752.invokeStatic (77 samples, 0.08%)</title><rect x="301.6" y="307.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$138/983769881.get$Lambda (77 samples, 0.08%)</title><rect x="301.6" y="291.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.6" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.utils.ServiceUtils$$Lambda$138 (77 samples, 0.08%)</title><rect x="301.6" y="275.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="304.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,794 samples, 1.84%)</title><rect x="302.5" y="323.0" width="21.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.5" y="334.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$138/983769881.accept (1,794 samples, 1.84%)</title><rect x="302.5" y="307.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.5" y="318.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$atLeastAsync$9 (1,794 samples, 1.84%)</title><rect x="302.5" y="291.0" width="21.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.5" y="302.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/822448041.linkToTargetMethod (720 samples, 0.74%)</title><rect x="302.5" y="275.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1347077609.invokeStatic (720 samples, 0.74%)</title><rect x="302.5" y="259.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$140/326552115.get$Lambda (720 samples, 0.74%)</title><rect x="302.5" y="243.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.5" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.utils.ServiceUtils$$Lambda$140 (720 samples, 0.74%)</title><rect x="302.5" y="227.0" width="8.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="305.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,074 samples, 1.10%)</title><rect x="311.2" y="275.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,074 samples, 1.10%)</title><rect x="311.2" y="259.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (635 samples, 0.65%)</title><rect x="311.2" y="243.0" width="7.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="314.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (290 samples, 0.30%)</title><rect x="318.9" y="243.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (290 samples, 0.30%)</title><rect x="318.9" y="227.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="321.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.15%)</title><rect x="322.4" y="243.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.15%)</title><rect x="322.4" y="227.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (149 samples, 0.15%)</title><rect x="322.4" y="211.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="325.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (408 samples, 0.42%)</title><rect x="324.2" y="323.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (205 samples, 0.21%)</title><rect x="324.2" y="307.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="327.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (203 samples, 0.21%)</title><rect x="326.6" y="307.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="329.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.respond (1,087 samples, 1.11%)</title><rect x="329.1" y="339.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (289 samples, 0.30%)</title><rect x="329.1" y="323.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (289 samples, 0.30%)</title><rect x="329.1" y="307.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$145/1327492977.get$Lambda (289 samples, 0.30%)</title><rect x="329.1" y="291.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.1" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.utils.ServiceUtils$$Lambda$145 (289 samples, 0.30%)</title><rect x="329.1" y="275.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="332.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (798 samples, 0.82%)</title><rect x="332.6" y="323.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (798 samples, 0.82%)</title><rect x="332.6" y="307.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (488 samples, 0.50%)</title><rect x="332.6" y="291.0" width="5.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="335.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (307 samples, 0.31%)</title><rect x="338.5" y="291.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (307 samples, 0.31%)</title><rect x="338.5" y="275.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="341.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Topology.getReplicas (538 samples, 0.55%)</title><rect x="342.2" y="355.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.2" y="366.0"></text>
</g>
<g>
<title>java.util.HashSet (40 samples, 0.04%)</title><rect x="342.2" y="339.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="345.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (107 samples, 0.11%)</title><rect x="342.7" y="339.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="345.7" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (107 samples, 0.11%)</title><rect x="342.7" y="323.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="345.7" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.add (391 samples, 0.40%)</title><rect x="344.0" y="339.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.0" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (391 samples, 0.40%)</title><rect x="344.0" y="323.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (391 samples, 0.40%)</title><rect x="344.0" y="307.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (192 samples, 0.20%)</title><rect x="344.0" y="291.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.0" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (192 samples, 0.20%)</title><rect x="344.0" y="275.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="347.0" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (199 samples, 0.20%)</title><rect x="346.3" y="291.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.3" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (193 samples, 0.20%)</title><rect x="346.3" y="275.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="349.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.getRequestBody (1,726 samples, 1.77%)</title><rect x="348.7" y="355.0" width="20.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.7" y="366.0"></text>
</g>
<g>
<title>byte[] (506 samples, 0.52%)</title><rect x="348.7" y="339.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="351.7" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.retainedDuplicate (651 samples, 0.67%)</title><rect x="354.8" y="339.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.8" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.duplicate (651 samples, 0.67%)</title><rect x="354.8" y="323.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.8" y="334.0"></text>
</g>
<g>
<title>io.netty.buffer.UnpooledDuplicatedByteBuf (651 samples, 0.67%)</title><rect x="354.8" y="307.0" width="7.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="357.8" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.readBytes (177 samples, 0.18%)</title><rect x="362.7" y="339.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.7" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (177 samples, 0.18%)</title><rect x="362.7" y="323.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.7" y="334.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (177 samples, 0.18%)</title><rect x="362.7" y="307.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.7" y="318.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (177 samples, 0.18%)</title><rect x="362.7" y="291.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.7" y="302.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (171 samples, 0.18%)</title><rect x="362.8" y="275.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (171 samples, 0.18%)</title><rect x="362.8" y="259.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (171 samples, 0.18%)</title><rect x="362.8" y="243.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.8" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (171 samples, 0.18%)</title><rect x="362.8" y="227.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.8" y="238.0"></text>
</g>
<g>
<title>int[] (31 samples, 0.03%)</title><rect x="362.8" y="211.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="365.8" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.05%)</title><rect x="363.2" y="211.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="366.2" y="222.0"></text>
</g>
<g>
<title>long[] (42 samples, 0.04%)</title><rect x="363.8" y="211.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="366.8" y="222.0"></text>
</g>
<g>
<title>short[] (30 samples, 0.03%)</title><rect x="364.5" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="367.5" y="222.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.release (197 samples, 0.20%)</title><rect x="364.8" y="339.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.8" y="350.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (197 samples, 0.20%)</title><rect x="364.8" y="323.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.8" y="334.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (197 samples, 0.20%)</title><rect x="364.8" y="307.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.8" y="318.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (191 samples, 0.20%)</title><rect x="364.9" y="291.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.9" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (191 samples, 0.20%)</title><rect x="364.9" y="275.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (191 samples, 0.20%)</title><rect x="364.9" y="259.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.9" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (191 samples, 0.20%)</title><rect x="364.9" y="243.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.9" y="254.0"></text>
</g>
<g>
<title>int[] (46 samples, 0.05%)</title><rect x="364.9" y="227.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="367.9" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.04%)</title><rect x="365.5" y="227.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="368.5" y="238.0"></text>
</g>
<g>
<title>long[] (45 samples, 0.05%)</title><rect x="366.0" y="227.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="369.0" y="238.0"></text>
</g>
<g>
<title>long[] (21 samples, 0.02%)</title><rect x="366.6" y="227.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="369.6" y="238.0"></text>
</g>
<g>
<title>short[] (31 samples, 0.03%)</title><rect x="366.8" y="227.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="369.8" y="238.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.retainedDuplicate (195 samples, 0.20%)</title><rect x="367.2" y="339.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.2" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (193 samples, 0.20%)</title><rect x="367.2" y="323.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.2" y="334.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (193 samples, 0.20%)</title><rect x="367.2" y="307.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.2" y="318.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (193 samples, 0.20%)</title><rect x="367.2" y="291.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.2" y="302.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (185 samples, 0.19%)</title><rect x="367.3" y="275.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (185 samples, 0.19%)</title><rect x="367.3" y="259.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (185 samples, 0.19%)</title><rect x="367.3" y="243.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.3" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (185 samples, 0.19%)</title><rect x="367.3" y="227.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.3" y="238.0"></text>
</g>
<g>
<title>int[] (48 samples, 0.05%)</title><rect x="367.3" y="211.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="370.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.04%)</title><rect x="367.9" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="370.9" y="222.0"></text>
</g>
<g>
<title>long[] (45 samples, 0.05%)</title><rect x="368.4" y="211.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="371.4" y="222.0"></text>
</g>
<g>
<title>long[] (25 samples, 0.03%)</title><rect x="368.9" y="211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="371.9" y="222.0"></text>
</g>
<g>
<title>short[] (25 samples, 0.03%)</title><rect x="369.2" y="211.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="372.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.putProxyResponse (15,303 samples, 15.66%)</title><rect x="369.6" y="355.0" width="184.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.6" y="366.0">ru/mail/polis/service/ma..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (163 samples, 0.17%)</title><rect x="369.6" y="339.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (163 samples, 0.17%)</title><rect x="369.6" y="323.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="372.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (332 samples, 0.34%)</title><rect x="371.5" y="339.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (332 samples, 0.34%)</title><rect x="371.5" y="323.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (205 samples, 0.21%)</title><rect x="371.5" y="307.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="374.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (127 samples, 0.13%)</title><rect x="374.0" y="307.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (127 samples, 0.13%)</title><rect x="374.0" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (127 samples, 0.13%)</title><rect x="374.0" y="275.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="377.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (9,753 samples, 9.98%)</title><rect x="375.6" y="339.0" width="117.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.6" y="350.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (9,753 samples, 9.98%)</title><rect x="375.6" y="323.0" width="117.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.6" y="334.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (9,753 samples, 9.98%)</title><rect x="375.6" y="307.0" width="117.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.6" y="318.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (9,753 samples, 9.98%)</title><rect x="375.6" y="291.0" width="117.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.6" y="302.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.09%)</title><rect x="375.6" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.09%)</title><rect x="375.6" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$132/1664362363.get$Lambda (86 samples, 0.09%)</title><rect x="375.6" y="243.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$132 (86 samples, 0.09%)</title><rect x="375.6" y="227.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="378.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (380 samples, 0.39%)</title><rect x="376.6" y="275.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (380 samples, 0.39%)</title><rect x="376.6" y="259.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (231 samples, 0.24%)</title><rect x="376.6" y="243.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="379.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.15%)</title><rect x="379.4" y="243.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.15%)</title><rect x="379.4" y="227.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (149 samples, 0.15%)</title><rect x="379.4" y="211.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="382.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (292 samples, 0.30%)</title><rect x="381.2" y="275.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (292 samples, 0.30%)</title><rect x="381.2" y="259.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (161 samples, 0.16%)</title><rect x="381.2" y="243.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="384.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.13%)</title><rect x="383.1" y="243.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.13%)</title><rect x="383.1" y="227.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (131 samples, 0.13%)</title><rect x="383.1" y="211.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="386.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (247 samples, 0.25%)</title><rect x="384.7" y="275.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="387.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (433 samples, 0.44%)</title><rect x="387.7" y="275.0" width="5.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="390.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (36 samples, 0.04%)</title><rect x="392.9" y="275.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (4,752 samples, 4.86%)</title><rect x="393.4" y="275.0" width="57.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.4" y="286.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (488 samples, 0.50%)</title><rect x="393.4" y="259.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.4" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (385 samples, 0.39%)</title><rect x="393.4" y="243.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (140 samples, 0.14%)</title><rect x="393.4" y="227.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (140 samples, 0.14%)</title><rect x="393.4" y="211.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="396.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (245 samples, 0.25%)</title><rect x="395.0" y="227.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (245 samples, 0.25%)</title><rect x="395.0" y="211.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="398.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (103 samples, 0.11%)</title><rect x="398.0" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (103 samples, 0.11%)</title><rect x="398.0" y="227.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (103 samples, 0.11%)</title><rect x="398.0" y="211.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$116/265721444.get (103 samples, 0.11%)</title><rect x="398.0" y="195.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.0" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (103 samples, 0.11%)</title><rect x="398.0" y="179.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="401.0" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,880 samples, 1.92%)</title><rect x="399.3" y="259.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.3" y="270.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,880 samples, 1.92%)</title><rect x="399.3" y="243.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.3" y="254.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (75 samples, 0.08%)</title><rect x="399.3" y="227.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="402.3" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (139 samples, 0.14%)</title><rect x="400.2" y="227.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="403.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (250 samples, 0.26%)</title><rect x="401.8" y="227.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="404.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeSet (65 samples, 0.07%)</title><rect x="404.9" y="227.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="407.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (162 samples, 0.17%)</title><rect x="405.6" y="227.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (162 samples, 0.17%)</title><rect x="405.6" y="211.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.get$Lambda (162 samples, 0.17%)</title><rect x="405.6" y="195.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.6" y="206.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (162 samples, 0.17%)</title><rect x="405.6" y="179.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="408.6" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (824 samples, 0.84%)</title><rect x="407.6" y="227.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (824 samples, 0.84%)</title><rect x="407.6" y="211.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (824 samples, 0.84%)</title><rect x="407.6" y="195.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (824 samples, 0.84%)</title><rect x="407.6" y="179.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.6" y="190.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (256 samples, 0.26%)</title><rect x="407.6" y="163.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.6" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (256 samples, 0.26%)</title><rect x="407.6" y="147.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.6" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (256 samples, 0.26%)</title><rect x="407.6" y="131.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (256 samples, 0.26%)</title><rect x="407.6" y="115.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (256 samples, 0.26%)</title><rect x="407.6" y="99.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.6" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (256 samples, 0.26%)</title><rect x="407.6" y="83.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.6" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (256 samples, 0.26%)</title><rect x="407.6" y="67.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (256 samples, 0.26%)</title><rect x="407.6" y="51.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.6" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (256 samples, 0.26%)</title><rect x="407.6" y="35.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="410.6" y="46.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.12%)</title><rect x="410.7" y="163.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.12%)</title><rect x="410.7" y="147.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.get$Lambda (120 samples, 0.12%)</title><rect x="410.7" y="131.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.7" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (120 samples, 0.12%)</title><rect x="410.7" y="115.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="413.7" y="126.0"></text>
</g>
<g>
<title>java/util/List.copyOf (249 samples, 0.25%)</title><rect x="412.1" y="163.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.1" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (249 samples, 0.25%)</title><rect x="412.1" y="147.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (134 samples, 0.14%)</title><rect x="412.1" y="131.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (134 samples, 0.14%)</title><rect x="412.1" y="115.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.14%)</title><rect x="412.1" y="99.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="415.1" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (115 samples, 0.12%)</title><rect x="413.8" y="131.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (115 samples, 0.12%)</title><rect x="413.8" y="115.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="416.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (199 samples, 0.20%)</title><rect x="415.1" y="163.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.1" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (199 samples, 0.20%)</title><rect x="415.1" y="147.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="418.1" y="158.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (140 samples, 0.14%)</title><rect x="417.6" y="227.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.6" y="238.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (140 samples, 0.14%)</title><rect x="417.6" y="211.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="420.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (225 samples, 0.23%)</title><rect x="419.2" y="227.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (225 samples, 0.23%)</title><rect x="419.2" y="211.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="422.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (66 samples, 0.07%)</title><rect x="422.0" y="259.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="425.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,708 samples, 1.75%)</title><rect x="422.8" y="259.0" width="20.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.8" y="270.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,708 samples, 1.75%)</title><rect x="422.8" y="243.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.8" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,529 samples, 1.57%)</title><rect x="422.8" y="227.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.8" y="238.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,529 samples, 1.57%)</title><rect x="422.8" y="211.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.8" y="222.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,529 samples, 1.57%)</title><rect x="422.8" y="195.0" width="18.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.8" y="206.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (324 samples, 0.33%)</title><rect x="422.8" y="179.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="425.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (437 samples, 0.45%)</title><rect x="426.7" y="179.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.7" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (437 samples, 0.45%)</title><rect x="426.7" y="163.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.7" y="174.0"></text>
</g>
<g>
<title>byte[] (437 samples, 0.45%)</title><rect x="426.7" y="147.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="429.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (768 samples, 0.79%)</title><rect x="431.9" y="179.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (768 samples, 0.79%)</title><rect x="431.9" y="163.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (314 samples, 0.32%)</title><rect x="431.9" y="147.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="434.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (454 samples, 0.46%)</title><rect x="435.7" y="147.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.7" y="158.0"></text>
</g>
<g>
<title>byte[] (454 samples, 0.46%)</title><rect x="435.7" y="131.0" width="5.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="438.7" y="142.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (179 samples, 0.18%)</title><rect x="441.2" y="227.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="444.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (213 samples, 0.22%)</title><rect x="443.4" y="259.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.4" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (213 samples, 0.22%)</title><rect x="443.4" y="243.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="446.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (397 samples, 0.41%)</title><rect x="446.0" y="259.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (102 samples, 0.10%)</title><rect x="446.0" y="243.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="449.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (112 samples, 0.11%)</title><rect x="447.2" y="243.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.11%)</title><rect x="447.2" y="227.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="450.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (183 samples, 0.19%)</title><rect x="448.5" y="243.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.5" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (183 samples, 0.19%)</title><rect x="448.5" y="227.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="451.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,480 samples, 2.54%)</title><rect x="450.8" y="275.0" width="29.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.8" y="286.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (88 samples, 0.09%)</title><rect x="450.8" y="259.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="453.8" y="270.0"></text>
</g>
<g>
<title>java/util/Optional.map (222 samples, 0.23%)</title><rect x="451.8" y="259.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/1827784972.apply (218 samples, 0.22%)</title><rect x="451.9" y="243.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (115 samples, 0.12%)</title><rect x="451.9" y="227.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="454.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (103 samples, 0.11%)</title><rect x="453.3" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (103 samples, 0.11%)</title><rect x="453.3" y="211.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="456.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (330 samples, 0.34%)</title><rect x="454.5" y="259.0" width="4.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="457.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (87 samples, 0.09%)</title><rect x="458.5" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (84 samples, 0.09%)</title><rect x="458.6" y="243.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="461.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (77 samples, 0.08%)</title><rect x="459.6" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.6" y="270.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (77 samples, 0.08%)</title><rect x="459.6" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.6" y="254.0"></text>
</g>
<g>
<title>java/util/Optional.of (77 samples, 0.08%)</title><rect x="459.6" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.6" y="238.0"></text>
</g>
<g>
<title>java.util.Optional (77 samples, 0.08%)</title><rect x="459.6" y="211.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="462.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,671 samples, 1.71%)</title><rect x="460.5" y="259.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,671 samples, 1.71%)</title><rect x="460.5" y="243.0" width="20.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Class[] (151 samples, 0.15%)</title><rect x="460.5" y="227.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="463.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.13%)</title><rect x="462.4" y="227.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="465.4" y="238.0"></text>
</g>
<g>
<title>java.util.LinkedList (154 samples, 0.16%)</title><rect x="463.8" y="227.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="466.8" y="238.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (767 samples, 0.79%)</title><rect x="465.7" y="227.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (767 samples, 0.79%)</title><rect x="465.7" y="211.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.7" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (767 samples, 0.79%)</title><rect x="465.7" y="195.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.7" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (767 samples, 0.79%)</title><rect x="465.7" y="179.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.7" y="190.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (760 samples, 0.78%)</title><rect x="465.7" y="163.0" width="9.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="468.7" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (234 samples, 0.24%)</title><rect x="475.0" y="227.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (234 samples, 0.24%)</title><rect x="475.0" y="211.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor6.newInstance (171 samples, 0.18%)</title><rect x="475.0" y="195.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (171 samples, 0.18%)</title><rect x="475.0" y="179.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="478.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (63 samples, 0.06%)</title><rect x="477.0" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (63 samples, 0.06%)</title><rect x="477.0" y="179.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="480.0" y="190.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (241 samples, 0.25%)</title><rect x="477.8" y="227.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.8" y="238.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (241 samples, 0.25%)</title><rect x="477.8" y="211.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.8" y="222.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (241 samples, 0.25%)</title><rect x="477.8" y="195.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="480.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,047 samples, 1.07%)</title><rect x="480.7" y="275.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (110 samples, 0.11%)</title><rect x="480.7" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (105 samples, 0.11%)</title><rect x="480.7" y="243.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="483.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (150 samples, 0.15%)</title><rect x="482.0" y="259.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="485.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (787 samples, 0.81%)</title><rect x="483.9" y="259.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (149 samples, 0.15%)</title><rect x="483.9" y="243.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (149 samples, 0.15%)</title><rect x="483.9" y="227.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1891287327.get$Lambda (72 samples, 0.07%)</title><rect x="483.9" y="211.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$126 (72 samples, 0.07%)</title><rect x="483.9" y="195.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="486.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/271392623.get$Lambda (77 samples, 0.08%)</title><rect x="484.7" y="211.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$127 (77 samples, 0.08%)</title><rect x="484.7" y="195.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="487.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (638 samples, 0.65%)</title><rect x="485.7" y="243.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (638 samples, 0.65%)</title><rect x="485.7" y="227.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (379 samples, 0.39%)</title><rect x="485.7" y="211.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="488.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (259 samples, 0.27%)</title><rect x="490.2" y="211.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (259 samples, 0.27%)</title><rect x="490.2" y="195.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (259 samples, 0.27%)</title><rect x="490.2" y="179.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="493.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,017 samples, 2.06%)</title><rect x="493.4" y="339.0" width="24.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.4" y="350.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (180 samples, 0.18%)</title><rect x="493.4" y="323.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="496.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,837 samples, 1.88%)</title><rect x="495.5" y="323.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.5" y="334.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,760 samples, 1.80%)</title><rect x="495.5" y="307.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.5" y="318.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,760 samples, 1.80%)</title><rect x="495.5" y="291.0" width="21.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="498.5" y="302.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (66 samples, 0.07%)</title><rect x="495.5" y="275.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="498.5" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (115 samples, 0.12%)</title><rect x="496.3" y="275.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="499.3" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap (204 samples, 0.21%)</title><rect x="497.7" y="275.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="500.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeSet (67 samples, 0.07%)</title><rect x="500.2" y="275.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="503.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (154 samples, 0.16%)</title><rect x="501.0" y="275.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (154 samples, 0.16%)</title><rect x="501.0" y="259.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.get$Lambda (154 samples, 0.16%)</title><rect x="501.0" y="243.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.0" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (154 samples, 0.16%)</title><rect x="501.0" y="227.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="504.0" y="238.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (159 samples, 0.16%)</title><rect x="502.9" y="275.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.9" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (159 samples, 0.16%)</title><rect x="502.9" y="259.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="505.9" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (772 samples, 0.79%)</title><rect x="504.8" y="275.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (772 samples, 0.79%)</title><rect x="504.8" y="259.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (772 samples, 0.79%)</title><rect x="504.8" y="243.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (107 samples, 0.11%)</title><rect x="504.8" y="227.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (107 samples, 0.11%)</title><rect x="504.8" y="211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.get$Lambda (107 samples, 0.11%)</title><rect x="504.8" y="195.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.8" y="206.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (107 samples, 0.11%)</title><rect x="504.8" y="179.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="507.8" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (259 samples, 0.27%)</title><rect x="506.1" y="227.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.1" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (259 samples, 0.27%)</title><rect x="506.1" y="211.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (259 samples, 0.27%)</title><rect x="506.1" y="195.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.1" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (259 samples, 0.27%)</title><rect x="506.1" y="179.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.1" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (259 samples, 0.27%)</title><rect x="506.1" y="163.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (259 samples, 0.27%)</title><rect x="506.1" y="147.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (259 samples, 0.27%)</title><rect x="506.1" y="131.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (259 samples, 0.27%)</title><rect x="506.1" y="115.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (259 samples, 0.27%)</title><rect x="506.1" y="99.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="509.1" y="110.0"></text>
</g>
<g>
<title>java/util/List.copyOf (218 samples, 0.22%)</title><rect x="509.2" y="227.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.2" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (218 samples, 0.22%)</title><rect x="509.2" y="211.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (93 samples, 0.10%)</title><rect x="509.2" y="195.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.10%)</title><rect x="509.2" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.2" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.10%)</title><rect x="509.2" y="163.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="512.2" y="174.0"></text>
</g>
<g>
<title>java/util/List.of (125 samples, 0.13%)</title><rect x="510.3" y="195.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.3" y="206.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (125 samples, 0.13%)</title><rect x="510.3" y="179.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="513.3" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (188 samples, 0.19%)</title><rect x="511.8" y="227.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (188 samples, 0.19%)</title><rect x="511.8" y="211.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="514.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (223 samples, 0.23%)</title><rect x="514.1" y="275.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.1" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap (223 samples, 0.23%)</title><rect x="514.1" y="259.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="517.1" y="270.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (77 samples, 0.08%)</title><rect x="516.8" y="307.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.8" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (77 samples, 0.08%)</title><rect x="516.8" y="291.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.8" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (77 samples, 0.08%)</title><rect x="516.8" y="275.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="519.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.requestBuilder (3,038 samples, 3.11%)</title><rect x="517.7" y="339.0" width="36.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.7" y="350.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (384 samples, 0.39%)</title><rect x="517.7" y="323.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (384 samples, 0.39%)</title><rect x="517.7" y="307.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1923953785.invoke (384 samples, 0.39%)</title><rect x="517.7" y="291.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (384 samples, 0.39%)</title><rect x="517.7" y="275.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (116 samples, 0.12%)</title><rect x="517.7" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.12%)</title><rect x="517.7" y="243.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="520.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (268 samples, 0.27%)</title><rect x="519.1" y="259.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (268 samples, 0.27%)</title><rect x="519.1" y="243.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.1" y="254.0"></text>
</g>
<g>
<title>byte[] (267 samples, 0.27%)</title><rect x="519.1" y="227.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="522.1" y="238.0"></text>
</g>
<g>
<title>java/net/URI.create (1,830 samples, 1.87%)</title><rect x="522.4" y="323.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.4" y="334.0">j..</text>
</g>
<g>
<title>java.net.URI (374 samples, 0.38%)</title><rect x="522.4" y="307.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="525.4" y="318.0"></text>
</g>
<g>
<title>java.net.URI (22 samples, 0.02%)</title><rect x="526.9" y="307.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="529.9" y="318.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,434 samples, 1.47%)</title><rect x="527.1" y="307.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.1" y="318.0"></text>
</g>
<g>
<title>java.net.URI$Parser (138 samples, 0.14%)</title><rect x="527.1" y="291.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="530.1" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,296 samples, 1.33%)</title><rect x="528.8" y="291.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (259 samples, 0.27%)</title><rect x="528.8" y="275.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (259 samples, 0.27%)</title><rect x="528.8" y="259.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.13%)</title><rect x="528.8" y="243.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="531.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (128 samples, 0.13%)</title><rect x="530.4" y="243.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.4" y="254.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.13%)</title><rect x="530.4" y="227.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="533.4" y="238.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,037 samples, 1.06%)</title><rect x="531.9" y="275.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (538 samples, 0.55%)</title><rect x="531.9" y="259.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (538 samples, 0.55%)</title><rect x="531.9" y="243.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (215 samples, 0.22%)</title><rect x="531.9" y="227.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="534.9" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (323 samples, 0.33%)</title><rect x="534.5" y="227.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.5" y="238.0"></text>
</g>
<g>
<title>byte[] (323 samples, 0.33%)</title><rect x="534.5" y="211.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="537.5" y="222.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (499 samples, 0.51%)</title><rect x="538.4" y="259.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (261 samples, 0.27%)</title><rect x="538.4" y="243.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (261 samples, 0.27%)</title><rect x="538.4" y="227.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.4" y="238.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.12%)</title><rect x="538.4" y="211.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="541.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.15%)</title><rect x="539.9" y="211.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.9" y="222.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.15%)</title><rect x="539.9" y="195.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="542.9" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (238 samples, 0.24%)</title><rect x="541.6" y="243.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.6" y="254.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (238 samples, 0.24%)</title><rect x="541.6" y="227.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (238 samples, 0.24%)</title><rect x="541.6" y="211.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (238 samples, 0.24%)</title><rect x="541.6" y="195.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.12%)</title><rect x="541.6" y="179.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="544.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (124 samples, 0.13%)</title><rect x="543.0" y="179.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.0" y="190.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.13%)</title><rect x="543.0" y="163.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="546.0" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (430 samples, 0.44%)</title><rect x="544.5" y="323.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (166 samples, 0.17%)</title><rect x="544.5" y="307.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="547.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (264 samples, 0.27%)</title><rect x="546.5" y="307.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (79 samples, 0.08%)</title><rect x="546.5" y="291.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="549.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (185 samples, 0.19%)</title><rect x="547.4" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.4" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (185 samples, 0.19%)</title><rect x="547.4" y="275.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="550.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (394 samples, 0.40%)</title><rect x="549.7" y="323.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (394 samples, 0.40%)</title><rect x="549.7" y="307.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (394 samples, 0.40%)</title><rect x="549.7" y="291.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.7" y="302.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (394 samples, 0.40%)</title><rect x="549.7" y="275.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (165 samples, 0.17%)</title><rect x="549.7" y="259.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (165 samples, 0.17%)</title><rect x="549.7" y="243.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="552.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$107/1518949667.apply (229 samples, 0.23%)</title><rect x="551.6" y="259.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (229 samples, 0.23%)</title><rect x="551.6" y="243.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.6" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (124 samples, 0.13%)</title><rect x="551.6" y="227.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="554.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (105 samples, 0.11%)</title><rect x="553.1" y="227.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.11%)</title><rect x="553.1" y="211.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="556.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.putTimestampResponse (842 samples, 0.86%)</title><rect x="554.4" y="355.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (306 samples, 0.31%)</title><rect x="554.4" y="339.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (306 samples, 0.31%)</title><rect x="554.4" y="323.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$102/2089788199.get$Lambda (306 samples, 0.31%)</title><rect x="554.4" y="307.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.4" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.utils.ServiceUtils$$Lambda$102 (306 samples, 0.31%)</title><rect x="554.4" y="291.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="557.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (536 samples, 0.55%)</title><rect x="558.1" y="339.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (536 samples, 0.55%)</title><rect x="558.1" y="323.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (278 samples, 0.28%)</title><rect x="558.1" y="307.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="561.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (253 samples, 0.26%)</title><rect x="561.5" y="307.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="564.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.replicaNettyFactor (738 samples, 0.76%)</title><rect x="564.6" y="387.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.parser (510 samples, 0.52%)</title><rect x="564.6" y="371.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.split (446 samples, 0.46%)</title><rect x="564.6" y="355.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.split (446 samples, 0.46%)</title><rect x="564.6" y="339.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.04%)</title><rect x="564.6" y="323.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="567.6" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (55 samples, 0.06%)</title><rect x="565.1" y="323.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="568.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (215 samples, 0.22%)</title><rect x="565.8" y="323.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (215 samples, 0.22%)</title><rect x="565.8" y="307.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (106 samples, 0.11%)</title><rect x="565.8" y="291.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="568.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (109 samples, 0.11%)</title><rect x="567.0" y="291.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.0" y="302.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.11%)</title><rect x="567.0" y="275.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="570.0" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (134 samples, 0.14%)</title><rect x="568.4" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (134 samples, 0.14%)</title><rect x="568.4" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (134 samples, 0.14%)</title><rect x="568.4" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (134 samples, 0.14%)</title><rect x="568.4" y="275.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (134 samples, 0.14%)</title><rect x="568.4" y="259.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.14%)</title><rect x="568.4" y="243.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="571.4" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.Replicas (64 samples, 0.07%)</title><rect x="570.0" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="573.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.quorum (228 samples, 0.23%)</title><rect x="570.7" y="371.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.7" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.Replicas (228 samples, 0.23%)</title><rect x="570.7" y="355.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="573.7" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (171 samples, 0.18%)</title><rect x="573.5" y="467.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.5" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (171 samples, 0.18%)</title><rect x="573.5" y="451.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.5" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.touch (171 samples, 0.18%)</title><rect x="573.5" y="435.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.5" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.touch (171 samples, 0.18%)</title><rect x="573.5" y="419.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.5" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.touch (171 samples, 0.18%)</title><rect x="573.5" y="403.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.5" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.touch (171 samples, 0.18%)</title><rect x="573.5" y="387.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.5" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.touch (171 samples, 0.18%)</title><rect x="573.5" y="371.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.5" y="382.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (171 samples, 0.18%)</title><rect x="573.5" y="355.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.5" y="366.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (171 samples, 0.18%)</title><rect x="573.5" y="339.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.5" y="350.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (167 samples, 0.17%)</title><rect x="573.5" y="323.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.5" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (21 samples, 0.02%)</title><rect x="573.5" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (146 samples, 0.15%)</title><rect x="573.8" y="307.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.8" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (146 samples, 0.15%)</title><rect x="573.8" y="291.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.8" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (146 samples, 0.15%)</title><rect x="573.8" y="275.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.8" y="286.0"></text>
</g>
<g>
<title>int[] (33 samples, 0.03%)</title><rect x="573.8" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="576.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.04%)</title><rect x="574.2" y="259.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="577.2" y="270.0"></text>
</g>
<g>
<title>long[] (33 samples, 0.03%)</title><rect x="574.8" y="259.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="577.8" y="270.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (1,168 samples, 1.20%)</title><rect x="575.6" y="499.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.6" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (398 samples, 0.41%)</title><rect x="575.6" y="483.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.6" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (398 samples, 0.41%)</title><rect x="575.6" y="467.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.6" y="478.0"></text>
</g>
<g>
<title>io.netty.buffer.CompositeByteBuf (172 samples, 0.18%)</title><rect x="575.6" y="451.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="578.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (32 samples, 0.03%)</title><rect x="577.6" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.6" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (31 samples, 0.03%)</title><rect x="577.7" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.7" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (31 samples, 0.03%)</title><rect x="577.7" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.7" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (30 samples, 0.03%)</title><rect x="577.7" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.7" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (29 samples, 0.03%)</title><rect x="577.7" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (29 samples, 0.03%)</title><rect x="577.7" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (29 samples, 0.03%)</title><rect x="577.7" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (29 samples, 0.03%)</title><rect x="577.7" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.7" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (194 samples, 0.20%)</title><rect x="578.0" y="451.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (194 samples, 0.20%)</title><rect x="578.0" y="435.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newCompArray (194 samples, 0.20%)</title><rect x="578.0" y="419.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.0" y="430.0"></text>
</g>
<g>
<title>io.netty.buffer.CompositeByteBuf$Component[] (194 samples, 0.20%)</title><rect x="578.0" y="403.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="581.0" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.appendPartialContent (601 samples, 0.62%)</title><rect x="580.4" y="483.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.4" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.addComponent (154 samples, 0.16%)</title><rect x="580.4" y="467.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.4" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (151 samples, 0.15%)</title><rect x="580.4" y="451.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.4" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (151 samples, 0.15%)</title><rect x="580.4" y="435.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.4" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (151 samples, 0.15%)</title><rect x="580.4" y="419.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.4" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (146 samples, 0.15%)</title><rect x="580.5" y="403.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (146 samples, 0.15%)</title><rect x="580.5" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (146 samples, 0.15%)</title><rect x="580.5" y="371.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (146 samples, 0.15%)</title><rect x="580.5" y="355.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.5" y="366.0"></text>
</g>
<g>
<title>int[] (38 samples, 0.04%)</title><rect x="580.5" y="339.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="583.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.04%)</title><rect x="580.9" y="339.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="583.9" y="350.0"></text>
</g>
<g>
<title>long[] (45 samples, 0.05%)</title><rect x="581.4" y="339.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="584.4" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponent (445 samples, 0.46%)</title><rect x="582.3" y="467.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponent (445 samples, 0.46%)</title><rect x="582.3" y="451.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.3" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponent0 (445 samples, 0.46%)</title><rect x="582.3" y="435.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.3" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newComponent (445 samples, 0.46%)</title><rect x="582.3" y="419.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.3" y="430.0"></text>
</g>
<g>
<title>io.netty.buffer.CompositeByteBuf$Component (444 samples, 0.45%)</title><rect x="582.3" y="403.0" width="5.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="585.3" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (169 samples, 0.17%)</title><rect x="587.6" y="483.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.6" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (169 samples, 0.17%)</title><rect x="587.6" y="467.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.6" y="478.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest (76 samples, 0.08%)</title><rect x="587.6" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="590.6" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.setTransferEncodingChunked (93 samples, 0.10%)</title><rect x="588.5" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.5" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.getAll (93 samples, 0.10%)</title><rect x="588.5" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.5" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAllAsString (93 samples, 0.10%)</title><rect x="588.5" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.5" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.getAll (93 samples, 0.10%)</title><rect x="588.5" y="403.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList (93 samples, 0.10%)</title><rect x="588.5" y="387.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="591.5" y="398.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (133 samples, 0.14%)</title><rect x="589.7" y="707.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.7" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (133 samples, 0.14%)</title><rect x="589.7" y="691.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.7" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (133 samples, 0.14%)</title><rect x="589.7" y="675.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.7" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (133 samples, 0.14%)</title><rect x="589.7" y="659.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.7" y="670.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (133 samples, 0.14%)</title><rect x="589.7" y="643.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.7" y="654.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (133 samples, 0.14%)</title><rect x="589.7" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.7" y="638.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (127 samples, 0.13%)</title><rect x="589.8" y="611.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.8" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (46 samples, 0.05%)</title><rect x="589.8" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.8" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (81 samples, 0.08%)</title><rect x="590.3" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (81 samples, 0.08%)</title><rect x="590.3" y="579.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (81 samples, 0.08%)</title><rect x="590.3" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.3" y="574.0"></text>
</g>
<g>
<title>int[] (22 samples, 0.02%)</title><rect x="590.3" y="547.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="593.3" y="558.0"></text>
</g>
<g>
<title>long[] (24 samples, 0.02%)</title><rect x="590.8" y="547.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="593.8" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (142 samples, 0.15%)</title><rect x="591.3" y="771.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.3" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (142 samples, 0.15%)</title><rect x="591.3" y="755.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.3" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (142 samples, 0.15%)</title><rect x="591.3" y="739.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.3" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (142 samples, 0.15%)</title><rect x="591.3" y="723.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.3" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (142 samples, 0.15%)</title><rect x="591.3" y="707.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.3" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (142 samples, 0.15%)</title><rect x="591.3" y="691.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.3" y="702.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (133 samples, 0.14%)</title><rect x="591.4" y="675.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (52 samples, 0.05%)</title><rect x="591.4" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (23 samples, 0.02%)</title><rect x="591.6" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.6" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (23 samples, 0.02%)</title><rect x="591.6" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.6" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (23 samples, 0.02%)</title><rect x="591.6" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.02%)</title><rect x="591.6" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.6" y="606.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.02%)</title><rect x="591.6" y="579.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="594.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (81 samples, 0.08%)</title><rect x="592.1" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (81 samples, 0.08%)</title><rect x="592.1" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (81 samples, 0.08%)</title><rect x="592.1" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.1" y="638.0"></text>
</g>
<g>
<title>int[] (27 samples, 0.03%)</title><rect x="592.1" y="611.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="595.1" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (106 samples, 0.11%)</title><rect x="593.0" y="803.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.0" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (106 samples, 0.11%)</title><rect x="593.0" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.0" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (106 samples, 0.11%)</title><rect x="593.0" y="771.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.0" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (106 samples, 0.11%)</title><rect x="593.0" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.0" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (106 samples, 0.11%)</title><rect x="593.0" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.0" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (106 samples, 0.11%)</title><rect x="593.0" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.0" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (104 samples, 0.11%)</title><rect x="593.1" y="707.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.1" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (104 samples, 0.11%)</title><rect x="593.1" y="691.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.1" y="702.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (96 samples, 0.10%)</title><rect x="593.2" y="675.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.2" y="686.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (86 samples, 0.09%)</title><rect x="593.2" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (86 samples, 0.09%)</title><rect x="593.2" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (86 samples, 0.09%)</title><rect x="593.2" y="627.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (86 samples, 0.09%)</title><rect x="593.2" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.02%)</title><rect x="593.5" y="595.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="596.5" y="606.0"></text>
</g>
<g>
<title>long[] (24 samples, 0.02%)</title><rect x="593.7" y="595.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="596.7" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.handleReadException (140 samples, 0.14%)</title><rect x="594.4" y="803.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="787.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.4" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="771.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="755.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.exceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="739.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="707.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="691.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.exceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="675.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.exceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="659.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.4" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$1.fireExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="643.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelHandlerAdapter.exceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="627.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.4" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="611.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.4" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="595.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.4" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="579.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.4" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="563.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.4" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.exceptionCaught (140 samples, 0.14%)</title><rect x="594.4" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.4" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.onUnhandledInboundException (140 samples, 0.14%)</title><rect x="594.4" y="531.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.4" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/LocationAwareSlf4JLogger.warn (140 samples, 0.14%)</title><rect x="594.4" y="515.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.4" y="526.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/LocationAwareSlf4JLogger.log (140 samples, 0.14%)</title><rect x="594.4" y="499.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.log (140 samples, 0.14%)</title><rect x="594.4" y="483.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.4" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (140 samples, 0.14%)</title><rect x="594.4" y="467.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.4" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (140 samples, 0.14%)</title><rect x="594.4" y="451.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.4" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (132 samples, 0.14%)</title><rect x="594.4" y="435.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.4" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (132 samples, 0.14%)</title><rect x="594.4" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.4" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (132 samples, 0.14%)</title><rect x="594.4" y="403.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.4" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (132 samples, 0.14%)</title><rect x="594.4" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (132 samples, 0.14%)</title><rect x="594.4" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (132 samples, 0.14%)</title><rect x="594.4" y="355.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (132 samples, 0.14%)</title><rect x="594.4" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (112 samples, 0.11%)</title><rect x="594.4" y="323.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (112 samples, 0.11%)</title><rect x="594.4" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (72 samples, 0.07%)</title><rect x="594.4" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.4" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (72 samples, 0.07%)</title><rect x="594.4" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (51 samples, 0.05%)</title><rect x="594.4" y="259.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.4" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (40 samples, 0.04%)</title><rect x="594.5" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.5" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (40 samples, 0.04%)</title><rect x="594.5" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (40 samples, 0.04%)</title><rect x="594.5" y="211.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (30 samples, 0.03%)</title><rect x="594.5" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (22 samples, 0.02%)</title><rect x="595.4" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (22 samples, 0.02%)</title><rect x="595.4" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.4" y="286.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (109 samples, 0.11%)</title><rect x="596.1" y="803.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.1" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (104 samples, 0.11%)</title><rect x="596.1" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.1" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (104 samples, 0.11%)</title><rect x="596.1" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.1" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (104 samples, 0.11%)</title><rect x="596.1" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.1" y="766.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (104 samples, 0.11%)</title><rect x="596.1" y="739.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.1" y="750.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (98 samples, 0.10%)</title><rect x="596.2" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (98 samples, 0.10%)</title><rect x="596.2" y="707.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (98 samples, 0.10%)</title><rect x="596.2" y="691.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (98 samples, 0.10%)</title><rect x="596.2" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.2" y="686.0"></text>
</g>
<g>
<title>int[] (31 samples, 0.03%)</title><rect x="596.2" y="659.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="599.2" y="670.0"></text>
</g>
<g>
<title>long[] (21 samples, 0.02%)</title><rect x="596.8" y="659.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="599.8" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (5,087 samples, 5.21%)</title><rect x="597.4" y="819.0" width="61.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.4" y="830.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (643 samples, 0.66%)</title><rect x="597.4" y="803.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (643 samples, 0.66%)</title><rect x="597.4" y="787.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.4" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (643 samples, 0.66%)</title><rect x="597.4" y="771.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (643 samples, 0.66%)</title><rect x="597.4" y="755.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (643 samples, 0.66%)</title><rect x="597.4" y="739.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (643 samples, 0.66%)</title><rect x="597.4" y="723.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (643 samples, 0.66%)</title><rect x="597.4" y="707.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.4" y="718.0"></text>
</g>
<g>
<title>io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor.channelRead (643 samples, 0.66%)</title><rect x="597.4" y="691.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.4" y="702.0"></text>
</g>
<g>
<title>io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2 (74 samples, 0.08%)</title><rect x="597.4" y="675.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="600.4" y="686.0"></text>
</g>
<g>
<title>io.netty.channel.ChannelHandler[] (83 samples, 0.08%)</title><rect x="598.3" y="675.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="601.3" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (193 samples, 0.20%)</title><rect x="599.3" y="675.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.3" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (193 samples, 0.20%)</title><rect x="599.3" y="659.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.3" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (193 samples, 0.20%)</title><rect x="599.3" y="643.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.3" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.callHandlerCallbackLater (36 samples, 0.04%)</title><rect x="599.3" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.3" y="638.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask (36 samples, 0.04%)</title><rect x="599.3" y="611.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="602.3" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.newContext (157 samples, 0.16%)</title><rect x="599.8" y="627.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.8" y="638.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelHandlerContext (157 samples, 0.16%)</title><rect x="599.8" y="611.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="602.8" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/MultithreadEventLoopGroup.register (284 samples, 0.29%)</title><rect x="601.7" y="675.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.7" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (284 samples, 0.29%)</title><rect x="601.7" y="659.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.7" y="670.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPromise (70 samples, 0.07%)</title><rect x="601.7" y="643.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="604.7" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (214 samples, 0.22%)</title><rect x="602.5" y="643.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.5" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register (214 samples, 0.22%)</title><rect x="602.5" y="627.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.5" y="638.0"></text>
</g>
<g>
<title>io.netty.channel.AbstractChannel$AbstractUnsafe$1 (214 samples, 0.22%)</title><rect x="602.5" y="611.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="605.5" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioServerSocketChannel.doReadMessages (4,444 samples, 4.55%)</title><rect x="605.1" y="803.0" width="53.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.1" y="814.0">io/ne..</text>
</g>
<g>
<title>io.netty.channel.socket.nio.NioSocketChannel (500 samples, 0.51%)</title><rect x="605.1" y="787.0" width="6.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="608.1" y="798.0"></text>
</g>
<g>
<title>io.netty.channel.socket.nio.NioSocketChannel (76 samples, 0.08%)</title><rect x="611.2" y="787.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="614.2" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.&lt;init&gt; (2,112 samples, 2.16%)</title><rect x="612.1" y="787.0" width="25.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.1" y="798.0">i..</text>
</g>
<g>
<title>io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig (144 samples, 0.15%)</title><rect x="612.1" y="771.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="615.1" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.&lt;init&gt; (1,502 samples, 1.54%)</title><rect x="613.9" y="771.0" width="18.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.9" y="782.0"></text>
</g>
<g>
<title>io.netty.channel.nio.AbstractNioByteChannel$1 (28 samples, 0.03%)</title><rect x="613.9" y="755.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="616.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.&lt;init&gt; (1,474 samples, 1.51%)</title><rect x="614.2" y="755.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.2" y="766.0"></text>
</g>
<g>
<title>io.netty.channel.nio.AbstractNioChannel$1 (48 samples, 0.05%)</title><rect x="614.2" y="739.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="617.2" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.&lt;init&gt; (1,426 samples, 1.46%)</title><rect x="614.8" y="739.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.8" y="750.0"></text>
</g>
<g>
<title>io.netty.channel.AbstractChannel$CloseFuture (124 samples, 0.13%)</title><rect x="614.8" y="723.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="617.8" y="734.0"></text>
</g>
<g>
<title>io.netty.channel.VoidChannelPromise (23 samples, 0.02%)</title><rect x="616.3" y="723.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="619.3" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.newChannelPipeline (701 samples, 0.72%)</title><rect x="616.6" y="723.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.6" y="734.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPipeline (113 samples, 0.12%)</title><rect x="616.6" y="707.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="619.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.&lt;init&gt; (588 samples, 0.60%)</title><rect x="617.9" y="707.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.9" y="718.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPipeline$HeadContext (312 samples, 0.32%)</title><rect x="617.9" y="691.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="620.9" y="702.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPipeline$TailContext (84 samples, 0.09%)</title><rect x="621.7" y="691.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="624.7" y="702.0"></text>
</g>
<g>
<title>io.netty.channel.SucceededChannelFuture (83 samples, 0.08%)</title><rect x="622.7" y="691.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="625.7" y="702.0"></text>
</g>
<g>
<title>io.netty.channel.VoidChannelPromise (62 samples, 0.06%)</title><rect x="623.7" y="691.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="626.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/VoidChannelPromise.&lt;init&gt; (46 samples, 0.05%)</title><rect x="624.5" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.5" y="702.0"></text>
</g>
<g>
<title>io.netty.channel.VoidChannelPromise$1 (46 samples, 0.05%)</title><rect x="624.5" y="675.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="627.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.newId (174 samples, 0.18%)</title><rect x="625.0" y="723.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.0" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelId.newInstance (174 samples, 0.18%)</title><rect x="625.0" y="707.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.0" y="718.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelId (71 samples, 0.07%)</title><rect x="625.0" y="691.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="628.0" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelId.&lt;init&gt; (103 samples, 0.11%)</title><rect x="625.9" y="691.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.9" y="702.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.10%)</title><rect x="625.9" y="675.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="628.9" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.newUnsafe (404 samples, 0.41%)</title><rect x="627.1" y="723.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.1" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.newUnsafe (404 samples, 0.41%)</title><rect x="627.1" y="707.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.1" y="718.0"></text>
</g>
<g>
<title>io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe (271 samples, 0.28%)</title><rect x="627.1" y="691.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="630.1" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe.&lt;init&gt; (133 samples, 0.14%)</title><rect x="630.4" y="691.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe.&lt;init&gt; (133 samples, 0.14%)</title><rect x="630.4" y="675.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.&lt;init&gt; (133 samples, 0.14%)</title><rect x="630.4" y="659.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.4" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.&lt;init&gt; (133 samples, 0.14%)</title><rect x="630.4" y="643.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.&lt;init&gt; (133 samples, 0.14%)</title><rect x="630.4" y="627.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="638.0"></text>
</g>
<g>
<title>io.netty.channel.ChannelOutboundBuffer (133 samples, 0.14%)</title><rect x="630.4" y="611.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="633.4" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.&lt;init&gt; (161 samples, 0.16%)</title><rect x="632.0" y="771.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.&lt;init&gt; (161 samples, 0.16%)</title><rect x="632.0" y="755.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.0" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.&lt;init&gt; (72 samples, 0.07%)</title><rect x="632.0" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.0" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelConfig.&lt;init&gt; (46 samples, 0.05%)</title><rect x="632.0" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.0" y="734.0"></text>
</g>
<g>
<title>io.netty.channel.AdaptiveRecvByteBufAllocator (46 samples, 0.05%)</title><rect x="632.0" y="707.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="635.0" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.setTcpNoDelay (26 samples, 0.03%)</title><rect x="632.6" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (26 samples, 0.03%)</title><rect x="632.6" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (26 samples, 0.03%)</title><rect x="632.6" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (26 samples, 0.03%)</title><rect x="632.6" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (26 samples, 0.03%)</title><rect x="632.6" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketOptionRegistry.findOption (26 samples, 0.03%)</title><rect x="632.6" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.6" y="654.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketOptionRegistry$RegistryKey (26 samples, 0.03%)</title><rect x="632.6" y="627.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="635.6" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.calculateMaxBytesPerGatheringWrite (89 samples, 0.09%)</title><rect x="632.9" y="739.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.getSendBufferSize (89 samples, 0.09%)</title><rect x="632.9" y="723.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getSendBufferSize (89 samples, 0.09%)</title><rect x="632.9" y="707.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getIntOption (89 samples, 0.09%)</title><rect x="632.9" y="691.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getOption (89 samples, 0.09%)</title><rect x="632.9" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (89 samples, 0.09%)</title><rect x="632.9" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (53 samples, 0.05%)</title><rect x="632.9" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.9" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (53 samples, 0.05%)</title><rect x="632.9" y="627.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="635.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketOptionRegistry.findOption (36 samples, 0.04%)</title><rect x="633.5" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.5" y="654.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketOptionRegistry$RegistryKey (36 samples, 0.04%)</title><rect x="633.5" y="627.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="636.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (301 samples, 0.31%)</title><rect x="634.0" y="771.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.create (301 samples, 0.31%)</title><rect x="634.0" y="755.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.0" y="766.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketAdaptor (124 samples, 0.13%)</title><rect x="634.0" y="739.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="637.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.&lt;init&gt; (177 samples, 0.18%)</title><rect x="635.5" y="739.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.5" y="750.0"></text>
</g>
<g>
<title>java/net/Socket.&lt;init&gt; (177 samples, 0.18%)</title><rect x="635.5" y="723.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Object (177 samples, 0.18%)</title><rect x="635.5" y="707.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="638.5" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/SocketUtils.accept (1,756 samples, 1.80%)</title><rect x="637.6" y="787.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.6" y="798.0">i..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,741 samples, 1.78%)</title><rect x="637.8" y="771.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.8" y="782.0">j..</text>
</g>
<g>
<title>io/netty/util/internal/SocketUtils$5.run (1,741 samples, 1.78%)</title><rect x="637.8" y="755.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.8" y="766.0">i..</text>
</g>
<g>
<title>io/netty/util/internal/SocketUtils$5.run (1,741 samples, 1.78%)</title><rect x="637.8" y="739.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.8" y="750.0">i..</text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1,741 samples, 1.78%)</title><rect x="637.8" y="723.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.8" y="734.0">s..</text>
</g>
<g>
<title>java.io.FileDescriptor (68 samples, 0.07%)</title><rect x="637.8" y="707.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="640.8" y="718.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress[] (130 samples, 0.13%)</title><rect x="638.6" y="707.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="641.6" y="718.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketChannelImpl (219 samples, 0.22%)</title><rect x="640.2" y="707.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.2" y="718.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketChannelImpl (96 samples, 0.10%)</title><rect x="642.8" y="707.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="645.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (371 samples, 0.38%)</title><rect x="644.0" y="707.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (371 samples, 0.38%)</title><rect x="644.0" y="691.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.0" y="702.0"></text>
</g>
<g>
<title>java.net.Inet4Address (71 samples, 0.07%)</title><rect x="644.0" y="675.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="647.0" y="686.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (31 samples, 0.03%)</title><rect x="644.8" y="675.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="647.8" y="686.0"></text>
</g>
<g>
<title>java/net/Inet4Address.&lt;init&gt; (192 samples, 0.20%)</title><rect x="645.2" y="675.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.2" y="686.0"></text>
</g>
<g>
<title>java/net/InetAddress.&lt;init&gt; (192 samples, 0.20%)</title><rect x="645.2" y="659.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.2" y="670.0"></text>
</g>
<g>
<title>java.net.InetAddress$InetAddressHolder (192 samples, 0.20%)</title><rect x="645.2" y="643.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="648.2" y="654.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (77 samples, 0.08%)</title><rect x="647.5" y="675.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.5" y="686.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (77 samples, 0.08%)</title><rect x="647.5" y="659.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="650.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (857 samples, 0.88%)</title><rect x="648.5" y="707.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.5" y="718.0"></text>
</g>
<g>
<title>java.lang.Object (32 samples, 0.03%)</title><rect x="648.5" y="691.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="651.5" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (221 samples, 0.23%)</title><rect x="648.8" y="691.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="651.8" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.&lt;init&gt; (58 samples, 0.06%)</title><rect x="651.5" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.5" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.&lt;init&gt; (58 samples, 0.06%)</title><rect x="651.5" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.5" y="686.0"></text>
</g>
<g>
<title>java.lang.Object (37 samples, 0.04%)</title><rect x="651.5" y="659.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="654.5" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/SelectableChannel.&lt;init&gt; (21 samples, 0.02%)</title><rect x="652.0" y="659.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.0" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.&lt;init&gt; (21 samples, 0.02%)</title><rect x="652.0" y="643.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.0" y="654.0"></text>
</g>
<g>
<title>java.lang.Object (21 samples, 0.02%)</title><rect x="652.0" y="627.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="655.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (302 samples, 0.31%)</title><rect x="652.2" y="691.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.2" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (302 samples, 0.31%)</title><rect x="652.2" y="675.0" width="3.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="655.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (244 samples, 0.25%)</title><rect x="655.9" y="691.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.9" y="702.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (45 samples, 0.05%)</title><rect x="655.9" y="675.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="658.9" y="686.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (54 samples, 0.06%)</title><rect x="656.4" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.4" y="686.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (54 samples, 0.06%)</title><rect x="656.4" y="659.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="659.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (145 samples, 0.15%)</title><rect x="657.1" y="675.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.1" y="686.0"></text>
</g>
<g>
<title>java.net.Inet4Address (44 samples, 0.05%)</title><rect x="657.1" y="659.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="660.1" y="670.0"></text>
</g>
<g>
<title>java/net/Inet4Address.&lt;init&gt; (101 samples, 0.10%)</title><rect x="657.6" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.6" y="670.0"></text>
</g>
<g>
<title>java/net/InetAddress.&lt;init&gt; (101 samples, 0.10%)</title><rect x="657.6" y="643.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.6" y="654.0"></text>
</g>
<g>
<title>java.net.InetAddress$InetAddressHolder (101 samples, 0.10%)</title><rect x="657.6" y="627.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="660.6" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (965 samples, 0.99%)</title><rect x="658.8" y="867.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.8" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.select (965 samples, 0.99%)</title><rect x="658.8" y="851.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (965 samples, 0.99%)</title><rect x="658.8" y="835.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (965 samples, 0.99%)</title><rect x="658.8" y="819.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (965 samples, 0.99%)</title><rect x="658.8" y="803.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (711 samples, 0.73%)</title><rect x="658.8" y="787.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (711 samples, 0.73%)</title><rect x="658.8" y="771.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.8" y="782.0"></text>
</g>
<g>
<title>java.lang.Integer (711 samples, 0.73%)</title><rect x="658.8" y="755.0" width="8.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="661.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (253 samples, 0.26%)</title><rect x="667.4" y="787.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (67 samples, 0.07%)</title><rect x="667.4" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.4" y="782.0"></text>
</g>
<g>
<title>java.lang.Integer (67 samples, 0.07%)</title><rect x="667.4" y="755.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="670.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (186 samples, 0.19%)</title><rect x="668.2" y="771.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (186 samples, 0.19%)</title><rect x="668.2" y="755.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (140 samples, 0.14%)</title><rect x="668.2" y="739.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.2" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (140 samples, 0.14%)</title><rect x="668.2" y="723.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="671.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (46 samples, 0.05%)</title><rect x="669.9" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.9" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (46 samples, 0.05%)</title><rect x="669.9" y="723.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.9" y="734.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (15,841 samples, 16.22%)</title><rect x="670.5" y="867.0" width="191.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.5" y="878.0">io/netty/util/concurrent/..</text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (15,841 samples, 16.22%)</title><rect x="670.5" y="851.0" width="191.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.5" y="862.0">io/netty/util/concurrent/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$1.run (13,506 samples, 13.83%)</title><rect x="670.5" y="835.0" width="163.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.5" y="846.0">io/netty/channel/Abst..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.access$200 (13,506 samples, 13.83%)</title><rect x="670.5" y="819.0" width="163.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.5" y="830.0">io/netty/channel/Abst..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register0 (13,506 samples, 13.83%)</title><rect x="670.5" y="803.0" width="163.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.5" y="814.0">io/netty/channel/Abst..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.invokeHandlerAddedIfNeeded (12,279 samples, 12.57%)</title><rect x="670.5" y="787.0" width="148.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.5" y="798.0">io/netty/channel/De..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.callHandlerAddedForAllHandlers (12,279 samples, 12.57%)</title><rect x="670.5" y="771.0" width="148.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.5" y="782.0">io/netty/channel/De..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$PendingHandlerAddedTask.execute (12,279 samples, 12.57%)</title><rect x="670.5" y="755.0" width="148.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.5" y="766.0">io/netty/channel/De..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.access$100 (12,279 samples, 12.57%)</title><rect x="670.5" y="739.0" width="148.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.5" y="750.0">io/netty/channel/De..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.callHandlerAdded0 (12,279 samples, 12.57%)</title><rect x="670.5" y="723.0" width="148.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.5" y="734.0">io/netty/channel/De..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.callHandlerAdded (12,279 samples, 12.57%)</title><rect x="670.5" y="707.0" width="148.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.5" y="718.0">io/netty/channel/Ab..</text>
</g>
<g>
<title>io/netty/channel/ChannelInitializer.handlerAdded (12,279 samples, 12.57%)</title><rect x="670.5" y="691.0" width="148.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.5" y="702.0">io/netty/channel/Ch..</text>
</g>
<g>
<title>io/netty/channel/ChannelInitializer.initChannel (12,279 samples, 12.57%)</title><rect x="670.5" y="675.0" width="148.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.5" y="686.0">io/netty/channel/Ch..</text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (164 samples, 0.17%)</title><rect x="670.5" y="659.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (164 samples, 0.17%)</title><rect x="670.5" y="643.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (164 samples, 0.17%)</title><rect x="670.5" y="627.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node (164 samples, 0.17%)</title><rect x="670.5" y="611.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="673.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyInit.initChannel (12,115 samples, 12.40%)</title><rect x="672.4" y="659.0" width="146.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.4" y="670.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyInit.initChannel (12,115 samples, 12.40%)</title><rect x="672.4" y="643.0" width="146.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.4" y="654.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>io.netty.channel.ChannelHandler[] (614 samples, 0.63%)</title><rect x="672.4" y="627.0" width="7.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="675.4" y="638.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpObjectAggregator (111 samples, 0.11%)</title><rect x="679.9" y="627.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="682.9" y="638.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpRequestDecoder (865 samples, 0.89%)</title><rect x="681.2" y="627.0" width="10.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="684.2" y="638.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpRequestDecoder (166 samples, 0.17%)</title><rect x="691.7" y="627.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="694.7" y="638.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpServerCodec (312 samples, 0.32%)</title><rect x="693.7" y="627.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="696.7" y="638.0"></text>
</g>
<g>
<title>io.netty.handler.stream.ChunkedWriteHandler (75 samples, 0.08%)</title><rect x="697.4" y="627.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="700.4" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (3,656 samples, 3.74%)</title><rect x="698.3" y="627.0" width="44.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.3" y="638.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (3,656 samples, 3.74%)</title><rect x="698.3" y="611.0" width="44.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.3" y="622.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (3,656 samples, 3.74%)</title><rect x="698.3" y="595.0" width="44.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.3" y="606.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.callHandlerAdded0 (275 samples, 0.28%)</title><rect x="698.3" y="579.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.3" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.callHandlerAdded (275 samples, 0.28%)</title><rect x="698.3" y="563.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.3" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.handlerAdded (275 samples, 0.28%)</title><rect x="698.3" y="547.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.3" y="558.0"></text>
</g>
<g>
<title>io.netty.channel.CombinedChannelDuplexHandler$1 (83 samples, 0.08%)</title><rect x="698.3" y="531.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="701.3" y="542.0"></text>
</g>
<g>
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext (192 samples, 0.20%)</title><rect x="699.3" y="531.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="702.3" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.newContext (3,381 samples, 3.46%)</title><rect x="701.7" y="579.0" width="40.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.7" y="590.0">io/..</text>
</g>
<g>
<title>io.netty.channel.DefaultChannelHandlerContext (2,713 samples, 2.78%)</title><rect x="701.7" y="563.0" width="32.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="704.7" y="574.0">io..</text>
</g>
<g>
<title>io.netty.channel.DefaultChannelHandlerContext (668 samples, 0.68%)</title><rect x="734.4" y="563.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="737.4" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpRequestDecoder.&lt;init&gt; (1,493 samples, 1.53%)</title><rect x="742.5" y="627.0" width="18.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.5" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,493 samples, 1.53%)</title><rect x="742.5" y="611.0" width="18.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.5" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,493 samples, 1.53%)</title><rect x="742.5" y="595.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.5" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,493 samples, 1.53%)</title><rect x="742.5" y="579.0" width="18.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.5" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,493 samples, 1.53%)</title><rect x="742.5" y="563.0" width="18.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.5" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,493 samples, 1.53%)</title><rect x="742.5" y="547.0" width="18.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.5" y="558.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpObjectDecoder$LineParser (27 samples, 0.03%)</title><rect x="742.7" y="531.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="745.7" y="542.0"></text>
</g>
<g>
<title>io.netty.util.internal.AppendableCharSequence (160 samples, 0.16%)</title><rect x="743.0" y="531.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="746.0" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.&lt;init&gt; (1,293 samples, 1.32%)</title><rect x="744.9" y="531.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.9" y="542.0"></text>
</g>
<g>
<title>char[] (285 samples, 0.29%)</title><rect x="744.9" y="515.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="747.9" y="526.0"></text>
</g>
<g>
<title>char[] (1,008 samples, 1.03%)</title><rect x="748.4" y="515.0" width="12.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="751.4" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec.&lt;init&gt; (2,994 samples, 3.06%)</title><rect x="760.5" y="627.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.5" y="638.0">io/..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec.&lt;init&gt; (2,994 samples, 3.06%)</title><rect x="760.5" y="611.0" width="36.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.5" y="622.0">io/..</text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder (283 samples, 0.29%)</title><rect x="760.5" y="595.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="763.5" y="606.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder (193 samples, 0.20%)</title><rect x="763.9" y="595.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="766.9" y="606.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder (62 samples, 0.06%)</title><rect x="766.3" y="595.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="769.3" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpServerCodec$HttpServerRequestDecoder.&lt;init&gt; (1,506 samples, 1.54%)</title><rect x="767.0" y="595.0" width="18.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="770.0" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpRequestDecoder.&lt;init&gt; (1,506 samples, 1.54%)</title><rect x="767.0" y="579.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.0" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,506 samples, 1.54%)</title><rect x="767.0" y="563.0" width="18.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.0" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,506 samples, 1.54%)</title><rect x="767.0" y="547.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.0" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,506 samples, 1.54%)</title><rect x="767.0" y="531.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.0" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.&lt;init&gt; (1,506 samples, 1.54%)</title><rect x="767.0" y="515.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.0" y="526.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser (106 samples, 0.11%)</title><rect x="767.0" y="499.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="770.0" y="510.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpObjectDecoder$LineParser (48 samples, 0.05%)</title><rect x="768.3" y="499.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="771.3" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.&lt;init&gt; (1,347 samples, 1.38%)</title><rect x="768.9" y="499.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.9" y="510.0"></text>
</g>
<g>
<title>char[] (864 samples, 0.88%)</title><rect x="768.9" y="483.0" width="10.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="771.9" y="494.0"></text>
</g>
<g>
<title>char[] (483 samples, 0.49%)</title><rect x="779.4" y="483.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="782.4" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayDeque (23 samples, 0.02%)</title><rect x="785.2" y="595.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="788.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.&lt;init&gt; (927 samples, 0.95%)</title><rect x="785.5" y="595.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (757 samples, 0.77%)</title><rect x="785.5" y="579.0" width="9.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="788.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (170 samples, 0.17%)</title><rect x="794.6" y="579.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="797.6" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.&lt;init&gt; (1,083 samples, 1.11%)</title><rect x="796.7" y="627.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.7" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayDeque (714 samples, 0.73%)</title><rect x="796.7" y="611.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="799.7" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.&lt;init&gt; (369 samples, 0.38%)</title><rect x="805.3" y="611.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (189 samples, 0.19%)</title><rect x="805.3" y="595.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="808.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 0.18%)</title><rect x="807.6" y="595.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="810.6" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.NettyRequests (746 samples, 0.76%)</title><rect x="809.8" y="627.0" width="9.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="812.8" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.doRegister (1,227 samples, 1.26%)</title><rect x="818.8" y="787.0" width="14.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.8" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1,227 samples, 1.26%)</title><rect x="818.8" y="771.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.8" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.addKey (52 samples, 0.05%)</title><rect x="818.8" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.8" y="766.0"></text>
</g>
<g>
<title>java.nio.channels.SelectionKey[] (52 samples, 0.05%)</title><rect x="818.8" y="739.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="821.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1,175 samples, 1.20%)</title><rect x="819.4" y="755.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.add (258 samples, 0.26%)</title><rect x="819.4" y="739.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (258 samples, 0.26%)</title><rect x="819.4" y="723.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.4" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node (156 samples, 0.16%)</title><rect x="819.4" y="707.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="822.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (102 samples, 0.10%)</title><rect x="821.3" y="707.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (102 samples, 0.10%)</title><rect x="821.3" y="691.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node[] (47 samples, 0.05%)</title><rect x="821.3" y="675.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node (52 samples, 0.05%)</title><rect x="821.9" y="675.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="824.9" y="686.0"></text>
</g>
<g>
<title>sun.nio.ch.SelectionKeyImpl (917 samples, 0.94%)</title><rect x="822.5" y="739.0" width="11.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="825.5" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.run (2,335 samples, 2.39%)</title><rect x="833.6" y="835.0" width="28.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.6" y="846.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (2,326 samples, 2.38%)</title><rect x="833.7" y="819.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.7" y="830.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1,697 samples, 1.74%)</title><rect x="833.7" y="803.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.7" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.flush (1,697 samples, 1.74%)</title><rect x="833.7" y="787.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.7" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.doFlush (1,697 samples, 1.74%)</title><rect x="833.7" y="771.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.7" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (281 samples, 0.29%)</title><rect x="833.7" y="755.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.7" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (281 samples, 0.29%)</title><rect x="833.7" y="739.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.7" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (281 samples, 0.29%)</title><rect x="833.7" y="723.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.7" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (281 samples, 0.29%)</title><rect x="833.7" y="707.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.7" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (281 samples, 0.29%)</title><rect x="833.7" y="691.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (281 samples, 0.29%)</title><rect x="833.7" y="675.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.7" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (281 samples, 0.29%)</title><rect x="833.7" y="659.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.7" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (281 samples, 0.29%)</title><rect x="833.7" y="643.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.7" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (281 samples, 0.29%)</title><rect x="833.7" y="627.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.7" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (281 samples, 0.29%)</title><rect x="833.7" y="611.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.7" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (281 samples, 0.29%)</title><rect x="833.7" y="595.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.7" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (281 samples, 0.29%)</title><rect x="833.7" y="579.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.7" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (281 samples, 0.29%)</title><rect x="833.7" y="563.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.7" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (281 samples, 0.29%)</title><rect x="833.7" y="547.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.7" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (125 samples, 0.13%)</title><rect x="833.7" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.7" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.internalNioBuffer (57 samples, 0.06%)</title><rect x="833.7" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.7" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (57 samples, 0.06%)</title><rect x="833.7" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.7" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (57 samples, 0.06%)</title><rect x="833.7" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.7" y="494.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (57 samples, 0.06%)</title><rect x="833.7" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.7" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (55 samples, 0.06%)</title><rect x="833.7" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (55 samples, 0.06%)</title><rect x="833.7" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (55 samples, 0.06%)</title><rect x="833.7" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (55 samples, 0.06%)</title><rect x="833.7" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.7" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.nioBufferCount (68 samples, 0.07%)</title><rect x="834.4" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.4" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (68 samples, 0.07%)</title><rect x="834.4" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.4" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (68 samples, 0.07%)</title><rect x="834.4" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.4" y="494.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (68 samples, 0.07%)</title><rect x="834.4" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.4" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (62 samples, 0.06%)</title><rect x="834.5" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (62 samples, 0.06%)</title><rect x="834.5" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (62 samples, 0.06%)</title><rect x="834.5" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (62 samples, 0.06%)</title><rect x="834.5" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.5" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (156 samples, 0.16%)</title><rect x="835.2" y="531.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (156 samples, 0.16%)</title><rect x="835.2" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.2" y="526.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (156 samples, 0.16%)</title><rect x="835.2" y="499.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.2" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (156 samples, 0.16%)</title><rect x="835.2" y="483.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.2" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (156 samples, 0.16%)</title><rect x="835.2" y="467.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.2" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (156 samples, 0.16%)</title><rect x="835.2" y="451.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.2" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (156 samples, 0.16%)</title><rect x="835.2" y="435.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.2" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (152 samples, 0.16%)</title><rect x="835.3" y="419.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (152 samples, 0.16%)</title><rect x="835.3" y="403.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (152 samples, 0.16%)</title><rect x="835.3" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (152 samples, 0.16%)</title><rect x="835.3" y="371.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.3" y="382.0"></text>
</g>
<g>
<title>int[] (39 samples, 0.04%)</title><rect x="835.3" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="838.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.05%)</title><rect x="835.7" y="355.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="838.7" y="366.0"></text>
</g>
<g>
<title>long[] (41 samples, 0.04%)</title><rect x="836.4" y="355.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="839.4" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1,416 samples, 1.45%)</title><rect x="837.1" y="755.0" width="17.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.1" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1,416 samples, 1.45%)</title><rect x="837.1" y="739.0" width="17.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.1" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1,416 samples, 1.45%)</title><rect x="837.1" y="723.0" width="17.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.1" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1,416 samples, 1.45%)</title><rect x="837.1" y="707.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.1" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (1,416 samples, 1.45%)</title><rect x="837.1" y="691.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.1" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (1,416 samples, 1.45%)</title><rect x="837.1" y="675.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.1" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (115 samples, 0.12%)</title><rect x="837.1" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.1" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (115 samples, 0.12%)</title><rect x="837.1" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.1" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (115 samples, 0.12%)</title><rect x="837.1" y="627.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.1" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (115 samples, 0.12%)</title><rect x="837.1" y="611.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.1" y="622.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (115 samples, 0.12%)</title><rect x="837.1" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.1" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (115 samples, 0.12%)</title><rect x="837.1" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.1" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (115 samples, 0.12%)</title><rect x="837.1" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.1" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (115 samples, 0.12%)</title><rect x="837.1" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.1" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (115 samples, 0.12%)</title><rect x="837.1" y="531.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.1" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (115 samples, 0.12%)</title><rect x="837.1" y="515.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.1" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (41 samples, 0.04%)</title><rect x="837.1" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (22 samples, 0.02%)</title><rect x="837.1" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.1" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (22 samples, 0.02%)</title><rect x="837.1" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (22 samples, 0.02%)</title><rect x="837.1" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.02%)</title><rect x="837.1" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.1" y="446.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.02%)</title><rect x="837.1" y="419.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="840.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (74 samples, 0.08%)</title><rect x="837.6" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (74 samples, 0.08%)</title><rect x="837.6" y="483.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (74 samples, 0.08%)</title><rect x="837.6" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.6" y="478.0"></text>
</g>
<g>
<title>int[] (22 samples, 0.02%)</title><rect x="837.6" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="840.6" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (1,301 samples, 1.33%)</title><rect x="838.5" y="659.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.5" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (87 samples, 0.09%)</title><rect x="838.5" y="643.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.5" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (87 samples, 0.09%)</title><rect x="838.5" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.5" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (87 samples, 0.09%)</title><rect x="838.5" y="611.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.5" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (87 samples, 0.09%)</title><rect x="838.5" y="595.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.5" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (87 samples, 0.09%)</title><rect x="838.5" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.5" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (83 samples, 0.08%)</title><rect x="838.5" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.5" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (83 samples, 0.08%)</title><rect x="838.5" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.5" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (77 samples, 0.08%)</title><rect x="838.6" y="531.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.6" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (68 samples, 0.07%)</title><rect x="838.7" y="515.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (68 samples, 0.07%)</title><rect x="838.7" y="499.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (68 samples, 0.07%)</title><rect x="838.7" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (68 samples, 0.07%)</title><rect x="838.7" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.7" y="478.0"></text>
</g>
<g>
<title>long[] (21 samples, 0.02%)</title><rect x="839.0" y="451.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="842.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (81 samples, 0.08%)</title><rect x="839.5" y="643.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.5" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeShort (81 samples, 0.08%)</title><rect x="839.5" y="627.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.5" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (81 samples, 0.08%)</title><rect x="839.5" y="611.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.5" y="622.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (81 samples, 0.08%)</title><rect x="839.5" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.5" y="606.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (81 samples, 0.08%)</title><rect x="839.5" y="579.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.5" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (77 samples, 0.08%)</title><rect x="839.6" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (77 samples, 0.08%)</title><rect x="839.6" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (77 samples, 0.08%)</title><rect x="839.6" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (77 samples, 0.08%)</title><rect x="839.6" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.6" y="526.0"></text>
</g>
<g>
<title>int[] (23 samples, 0.02%)</title><rect x="839.6" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="842.6" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encodeHeaders (855 samples, 0.88%)</title><rect x="840.5" y="643.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.5" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.iteratorCharSequence (70 samples, 0.07%)</title><rect x="840.5" y="627.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.5" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.iterator (70 samples, 0.07%)</title><rect x="840.5" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.5" y="622.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderIterator (70 samples, 0.07%)</title><rect x="840.5" y="595.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="843.5" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.encoderHeader (785 samples, 0.80%)</title><rect x="841.4" y="627.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.4" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.ensureWritable (167 samples, 0.17%)</title><rect x="841.4" y="611.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.4" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (167 samples, 0.17%)</title><rect x="841.4" y="595.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.4" y="606.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (167 samples, 0.17%)</title><rect x="841.4" y="579.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.4" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (167 samples, 0.17%)</title><rect x="841.4" y="563.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.4" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (155 samples, 0.16%)</title><rect x="841.5" y="547.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (155 samples, 0.16%)</title><rect x="841.5" y="531.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (155 samples, 0.16%)</title><rect x="841.5" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (155 samples, 0.16%)</title><rect x="841.5" y="499.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.5" y="510.0"></text>
</g>
<g>
<title>int[] (37 samples, 0.04%)</title><rect x="841.5" y="483.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="844.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.03%)</title><rect x="842.0" y="483.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="845.0" y="494.0"></text>
</g>
<g>
<title>long[] (50 samples, 0.05%)</title><rect x="842.4" y="483.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="845.4" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.setShortBE (287 samples, 0.29%)</title><rect x="843.4" y="611.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.4" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setShort (287 samples, 0.29%)</title><rect x="843.4" y="595.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.4" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (287 samples, 0.29%)</title><rect x="843.4" y="579.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.4" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (287 samples, 0.29%)</title><rect x="843.4" y="563.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.4" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (287 samples, 0.29%)</title><rect x="843.4" y="547.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.4" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (268 samples, 0.27%)</title><rect x="843.6" y="531.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (268 samples, 0.27%)</title><rect x="843.6" y="515.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (268 samples, 0.27%)</title><rect x="843.6" y="499.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (268 samples, 0.27%)</title><rect x="843.6" y="483.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.6" y="494.0"></text>
</g>
<g>
<title>int[] (69 samples, 0.07%)</title><rect x="843.6" y="467.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="846.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (70 samples, 0.07%)</title><rect x="844.5" y="467.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="847.5" y="478.0"></text>
</g>
<g>
<title>long[] (60 samples, 0.06%)</title><rect x="845.3" y="467.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="848.3" y="478.0"></text>
</g>
<g>
<title>long[] (34 samples, 0.03%)</title><rect x="846.0" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.0" y="478.0"></text>
</g>
<g>
<title>short[] (33 samples, 0.03%)</title><rect x="846.5" y="467.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="849.5" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeAscii (331 samples, 0.34%)</title><rect x="846.9" y="611.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.9" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setCharSequence (91 samples, 0.09%)</title><rect x="846.9" y="595.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.9" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (91 samples, 0.09%)</title><rect x="846.9" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.9" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (91 samples, 0.09%)</title><rect x="846.9" y="563.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.9" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (91 samples, 0.09%)</title><rect x="846.9" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.9" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (88 samples, 0.09%)</title><rect x="846.9" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (88 samples, 0.09%)</title><rect x="846.9" y="515.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (88 samples, 0.09%)</title><rect x="846.9" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (88 samples, 0.09%)</title><rect x="846.9" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.9" y="494.0"></text>
</g>
<g>
<title>long[] (22 samples, 0.02%)</title><rect x="847.4" y="467.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="850.4" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.copy (240 samples, 0.25%)</title><rect x="848.0" y="595.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.0" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setBytes (240 samples, 0.25%)</title><rect x="848.0" y="579.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.0" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (240 samples, 0.25%)</title><rect x="848.0" y="563.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.0" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (240 samples, 0.25%)</title><rect x="848.0" y="547.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.0" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (240 samples, 0.25%)</title><rect x="848.0" y="531.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.0" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (224 samples, 0.23%)</title><rect x="848.1" y="515.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (224 samples, 0.23%)</title><rect x="848.1" y="499.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (224 samples, 0.23%)</title><rect x="848.1" y="483.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (224 samples, 0.23%)</title><rect x="848.1" y="467.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.1" y="478.0"></text>
</g>
<g>
<title>int[] (63 samples, 0.06%)</title><rect x="848.1" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="851.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.06%)</title><rect x="848.9" y="451.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="851.9" y="462.0"></text>
</g>
<g>
<title>long[] (58 samples, 0.06%)</title><rect x="849.6" y="451.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="852.6" y="462.0"></text>
</g>
<g>
<title>short[] (23 samples, 0.02%)</title><rect x="850.6" y="451.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="853.6" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (278 samples, 0.28%)</title><rect x="850.9" y="643.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.9" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (278 samples, 0.28%)</title><rect x="850.9" y="627.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.9" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeByte (70 samples, 0.07%)</title><rect x="850.9" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.9" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (70 samples, 0.07%)</title><rect x="850.9" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.9" y="606.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (70 samples, 0.07%)</title><rect x="850.9" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.9" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (70 samples, 0.07%)</title><rect x="850.9" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.9" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (69 samples, 0.07%)</title><rect x="850.9" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.9" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (69 samples, 0.07%)</title><rect x="850.9" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (69 samples, 0.07%)</title><rect x="850.9" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (69 samples, 0.07%)</title><rect x="850.9" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.9" y="510.0"></text>
</g>
<g>
<title>int[] (22 samples, 0.02%)</title><rect x="850.9" y="483.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="853.9" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (73 samples, 0.07%)</title><rect x="851.7" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.7" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeShort (73 samples, 0.07%)</title><rect x="851.7" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.7" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (73 samples, 0.07%)</title><rect x="851.7" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.7" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (73 samples, 0.07%)</title><rect x="851.7" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.7" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (73 samples, 0.07%)</title><rect x="851.7" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.7" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (70 samples, 0.07%)</title><rect x="851.7" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (70 samples, 0.07%)</title><rect x="851.7" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (70 samples, 0.07%)</title><rect x="851.7" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (70 samples, 0.07%)</title><rect x="851.7" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.7" y="494.0"></text>
</g>
<g>
<title>int[] (21 samples, 0.02%)</title><rect x="851.7" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="854.7" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseStatus.encode (70 samples, 0.07%)</title><rect x="852.6" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.6" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (70 samples, 0.07%)</title><rect x="852.6" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.6" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (70 samples, 0.07%)</title><rect x="852.6" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.6" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (70 samples, 0.07%)</title><rect x="852.6" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.6" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (70 samples, 0.07%)</title><rect x="852.6" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.6" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (64 samples, 0.07%)</title><rect x="852.7" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (64 samples, 0.07%)</title><rect x="852.7" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (64 samples, 0.07%)</title><rect x="852.7" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (64 samples, 0.07%)</title><rect x="852.7" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.7" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.encode (65 samples, 0.07%)</title><rect x="853.4" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.4" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (65 samples, 0.07%)</title><rect x="853.4" y="595.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.4" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (65 samples, 0.07%)</title><rect x="853.4" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.4" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (65 samples, 0.07%)</title><rect x="853.4" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.4" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (65 samples, 0.07%)</title><rect x="853.4" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.4" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (61 samples, 0.06%)</title><rect x="853.5" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (61 samples, 0.06%)</title><rect x="853.5" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (61 samples, 0.06%)</title><rect x="853.5" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (61 samples, 0.06%)</title><rect x="853.5" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.5" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (629 samples, 0.64%)</title><rect x="854.2" y="803.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.2" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.write (629 samples, 0.64%)</title><rect x="854.2" y="787.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.2" y="798.0"></text>
</g>
<g>
<title>io.netty.handler.stream.ChunkedWriteHandler$PendingWrite (629 samples, 0.64%)</title><rect x="854.2" y="771.0" width="7.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="857.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (25,270 samples, 25.87%)</title><rect x="861.8" y="931.0" width="305.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.8" y="942.0">java/util/concurrent/ThreadPoolExecutor$W..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (25,270 samples, 25.87%)</title><rect x="861.8" y="915.0" width="305.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.8" y="926.0">java/util/concurrent/ThreadPoolExecutor.r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13,941 samples, 14.27%)</title><rect x="861.8" y="899.0" width="168.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="864.8" y="910.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,247 samples, 7.42%)</title><rect x="861.8" y="883.0" width="87.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="864.8" y="894.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7,247 samples, 7.42%)</title><rect x="861.8" y="867.0" width="87.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="864.8" y="878.0">java/util/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (47 samples, 0.05%)</title><rect x="861.8" y="851.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="864.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1891287327.apply (7,195 samples, 7.36%)</title><rect x="862.4" y="851.0" width="86.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.4" y="862.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (7,195 samples, 7.36%)</title><rect x="862.4" y="835.0" width="86.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.4" y="846.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (7,195 samples, 7.36%)</title><rect x="862.4" y="819.0" width="86.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.4" y="830.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.06%)</title><rect x="862.4" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.06%)</title><rect x="862.4" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$215/706959530.get$Lambda (34 samples, 0.03%)</title><rect x="862.4" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.4" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$215 (34 samples, 0.03%)</title><rect x="862.4" y="755.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="865.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$217/674839503.get$Lambda (24 samples, 0.02%)</title><rect x="862.8" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.8" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$217 (24 samples, 0.02%)</title><rect x="862.8" y="755.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="865.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (114 samples, 0.12%)</title><rect x="863.1" y="803.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (114 samples, 0.12%)</title><rect x="863.1" y="787.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.1" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (63 samples, 0.06%)</title><rect x="863.1" y="771.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="866.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.05%)</title><rect x="863.9" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="866.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.05%)</title><rect x="863.9" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.05%)</title><rect x="863.9" y="739.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="866.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (225 samples, 0.23%)</title><rect x="864.5" y="803.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (225 samples, 0.23%)</title><rect x="864.5" y="787.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.5" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (128 samples, 0.13%)</title><rect x="864.5" y="771.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="867.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.10%)</title><rect x="866.1" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.10%)</title><rect x="866.1" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (97 samples, 0.10%)</title><rect x="866.1" y="739.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="869.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (6,798 samples, 6.96%)</title><rect x="867.2" y="803.0" width="82.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.2" y="814.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (6,798 samples, 6.96%)</title><rect x="867.2" y="787.0" width="82.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.2" y="798.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (6,798 samples, 6.96%)</title><rect x="867.2" y="771.0" width="82.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.2" y="782.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (112 samples, 0.11%)</title><rect x="867.2" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (112 samples, 0.11%)</title><rect x="867.2" y="739.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$147/914931583.get$Lambda (33 samples, 0.03%)</title><rect x="867.2" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.2" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$147 (33 samples, 0.03%)</title><rect x="867.2" y="707.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="870.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/1938438090.get$Lambda (37 samples, 0.04%)</title><rect x="867.6" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.6" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$148 (37 samples, 0.04%)</title><rect x="867.6" y="707.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="870.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$186/1345975117.get$Lambda (42 samples, 0.04%)</title><rect x="868.1" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="871.1" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$186 (42 samples, 0.04%)</title><rect x="868.1" y="707.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="871.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,158 samples, 3.23%)</title><rect x="868.6" y="755.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.6" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,158 samples, 3.23%)</title><rect x="868.6" y="739.0" width="38.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.6" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,106 samples, 3.18%)</title><rect x="868.6" y="723.0" width="37.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.6" y="734.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$186/1345975117.apply (3,106 samples, 3.18%)</title><rect x="868.6" y="707.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.6" y="718.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (3,106 samples, 3.18%)</title><rect x="868.6" y="691.0" width="37.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="871.6" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,106 samples, 3.18%)</title><rect x="868.6" y="675.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.6" y="686.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/1938438090.apply (3,106 samples, 3.18%)</title><rect x="868.6" y="659.0" width="37.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.6" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3,106 samples, 3.18%)</title><rect x="868.6" y="643.0" width="37.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.6" y="654.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="868.6" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="868.6" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/84871828.get$Lambda (35 samples, 0.04%)</title><rect x="868.6" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$212 (35 samples, 0.04%)</title><rect x="868.6" y="579.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="871.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (110 samples, 0.11%)</title><rect x="869.0" y="627.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (110 samples, 0.11%)</title><rect x="869.0" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (70 samples, 0.07%)</title><rect x="869.0" y="595.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="872.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="869.9" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="869.9" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="869.9" y="563.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="872.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (125 samples, 0.13%)</title><rect x="870.3" y="627.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (125 samples, 0.13%)</title><rect x="870.3" y="611.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (68 samples, 0.07%)</title><rect x="870.3" y="595.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="873.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.06%)</title><rect x="871.2" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.06%)</title><rect x="871.2" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.06%)</title><rect x="871.2" y="563.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="874.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,836 samples, 2.90%)</title><rect x="871.8" y="627.0" width="34.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.8" y="638.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.07%)</title><rect x="871.8" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.07%)</title><rect x="871.8" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$207/17085738.get$Lambda (29 samples, 0.03%)</title><rect x="872.0" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$207 (29 samples, 0.03%)</title><rect x="872.0" y="563.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="875.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$209/1445627487.get$Lambda (25 samples, 0.03%)</title><rect x="872.3" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$209 (25 samples, 0.03%)</title><rect x="872.3" y="563.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="875.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,811 samples, 1.85%)</title><rect x="872.8" y="611.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.8" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,811 samples, 1.85%)</title><rect x="872.8" y="595.0" width="21.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.8" y="606.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (109 samples, 0.11%)</title><rect x="872.8" y="579.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="875.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (26 samples, 0.03%)</title><rect x="874.2" y="579.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="877.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$207/17085738.apply (1,545 samples, 1.58%)</title><rect x="874.5" y="579.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,545 samples, 1.58%)</title><rect x="874.5" y="563.0" width="18.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (48 samples, 0.05%)</title><rect x="874.6" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (48 samples, 0.05%)</title><rect x="874.6" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.04%)</title><rect x="874.6" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="877.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (25 samples, 0.03%)</title><rect x="875.3" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (42 samples, 0.04%)</title><rect x="875.6" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (42 samples, 0.04%)</title><rect x="875.6" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.03%)</title><rect x="875.8" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.03%)</title><rect x="875.8" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,406 samples, 1.44%)</title><rect x="876.1" y="547.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.toString (39 samples, 0.04%)</title><rect x="876.3" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.02%)</title><rect x="876.5" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="879.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (93 samples, 0.10%)</title><rect x="876.8" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (93 samples, 0.10%)</title><rect x="876.8" y="515.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (93 samples, 0.10%)</title><rect x="876.8" y="499.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.8" y="510.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.10%)</title><rect x="876.8" y="483.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="879.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (51 samples, 0.05%)</title><rect x="877.9" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.9" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (51 samples, 0.05%)</title><rect x="877.9" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.9" y="526.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.05%)</title><rect x="877.9" y="499.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="880.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (113 samples, 0.12%)</title><rect x="878.5" y="531.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (113 samples, 0.12%)</title><rect x="878.5" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.02%)</title><rect x="878.5" y="499.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="881.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (92 samples, 0.09%)</title><rect x="878.8" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.8" y="510.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.09%)</title><rect x="878.8" y="483.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="881.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (862 samples, 0.88%)</title><rect x="880.3" y="531.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (420 samples, 0.43%)</title><rect x="880.6" y="515.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (245 samples, 0.25%)</title><rect x="880.6" y="499.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.6" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (245 samples, 0.25%)</title><rect x="880.6" y="483.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="883.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (245 samples, 0.25%)</title><rect x="880.6" y="467.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (245 samples, 0.25%)</title><rect x="880.6" y="451.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.6" y="462.0"></text>
</g>
<g>
<title>byte[] (245 samples, 0.25%)</title><rect x="880.6" y="435.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="883.6" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (44 samples, 0.05%)</title><rect x="883.5" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (44 samples, 0.05%)</title><rect x="883.5" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (44 samples, 0.05%)</title><rect x="883.5" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (44 samples, 0.05%)</title><rect x="883.5" y="451.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="886.5" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (44 samples, 0.05%)</title><rect x="884.1" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.1" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (25 samples, 0.03%)</title><rect x="884.1" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="887.1" y="494.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$225/1428148214.test (87 samples, 0.09%)</title><rect x="884.6" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.6" y="510.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (87 samples, 0.09%)</title><rect x="884.6" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$42/998351292.test (87 samples, 0.09%)</title><rect x="884.6" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (87 samples, 0.09%)</title><rect x="884.6" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.6" y="462.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$31/2052915500.test (87 samples, 0.09%)</title><rect x="884.6" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.6" y="446.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (87 samples, 0.09%)</title><rect x="884.6" y="419.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$30/1720435669.test (87 samples, 0.09%)</title><rect x="884.6" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (87 samples, 0.09%)</title><rect x="884.6" y="387.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (87 samples, 0.09%)</title><rect x="884.6" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (87 samples, 0.09%)</title><rect x="884.6" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.05%)</title><rect x="884.6" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="887.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.04%)</title><rect x="885.1" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="888.1" y="350.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.04%)</title><rect x="885.1" y="323.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="888.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (422 samples, 0.43%)</title><rect x="885.7" y="515.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="888.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (422 samples, 0.43%)</title><rect x="885.7" y="499.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (422 samples, 0.43%)</title><rect x="885.7" y="483.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.7" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (39 samples, 0.04%)</title><rect x="885.9" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="888.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="886.5" y="467.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="886.5" y="451.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.get$Lambda (22 samples, 0.02%)</title><rect x="886.5" y="435.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.5" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (22 samples, 0.02%)</title><rect x="886.5" y="419.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="889.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (27 samples, 0.03%)</title><rect x="886.7" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (27 samples, 0.03%)</title><rect x="886.7" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="889.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (268 samples, 0.27%)</title><rect x="887.1" y="467.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (268 samples, 0.27%)</title><rect x="887.1" y="451.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (268 samples, 0.27%)</title><rect x="887.1" y="435.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.05%)</title><rect x="887.1" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="887.1" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.get$Lambda (49 samples, 0.05%)</title><rect x="887.1" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (49 samples, 0.05%)</title><rect x="887.1" y="371.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="890.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (44 samples, 0.05%)</title><rect x="887.6" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (44 samples, 0.05%)</title><rect x="887.6" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (44 samples, 0.05%)</title><rect x="887.6" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.05%)</title><rect x="887.6" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.05%)</title><rect x="887.6" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.05%)</title><rect x="887.6" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.05%)</title><rect x="887.6" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.05%)</title><rect x="887.6" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.05%)</title><rect x="887.6" y="291.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="890.6" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (100 samples, 0.10%)</title><rect x="888.2" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.2" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (100 samples, 0.10%)</title><rect x="888.2" y="403.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (47 samples, 0.05%)</title><rect x="888.2" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.05%)</title><rect x="888.2" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.05%)</title><rect x="888.2" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="891.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (53 samples, 0.05%)</title><rect x="888.7" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="891.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (53 samples, 0.05%)</title><rect x="888.7" y="371.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="891.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (75 samples, 0.08%)</title><rect x="889.4" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (75 samples, 0.08%)</title><rect x="889.4" y="403.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="892.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (38 samples, 0.04%)</title><rect x="890.3" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (38 samples, 0.04%)</title><rect x="890.3" y="451.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="893.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (53 samples, 0.05%)</title><rect x="890.7" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.03%)</title><rect x="891.0" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (34 samples, 0.03%)</title><rect x="891.0" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1923953785.invoke (34 samples, 0.03%)</title><rect x="891.0" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="891.0" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (22 samples, 0.02%)</title><rect x="891.4" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (22 samples, 0.02%)</title><rect x="891.4" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="891.4" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (22 samples, 0.02%)</title><rect x="891.4" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1923953785.invoke (22 samples, 0.02%)</title><rect x="891.4" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="891.4" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (122 samples, 0.12%)</title><rect x="891.7" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.7" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (39 samples, 0.04%)</title><rect x="891.7" y="515.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="894.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (33 samples, 0.03%)</title><rect x="892.1" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.03%)</title><rect x="892.1" y="499.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="895.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (50 samples, 0.05%)</title><rect x="892.5" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (50 samples, 0.05%)</title><rect x="892.5" y="499.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="895.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.13%)</title><rect x="893.1" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (131 samples, 0.13%)</title><rect x="893.1" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (131 samples, 0.13%)</title><rect x="893.1" y="547.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="896.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (148 samples, 0.15%)</title><rect x="894.7" y="611.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="897.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (564 samples, 0.58%)</title><rect x="896.7" y="611.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.05%)</title><rect x="896.7" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.05%)</title><rect x="896.7" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$192/611183955.get$Lambda (31 samples, 0.03%)</title><rect x="896.7" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$192 (31 samples, 0.03%)</title><rect x="896.7" y="547.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="899.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$193/1213981791.get$Lambda (21 samples, 0.02%)</title><rect x="897.1" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$193 (21 samples, 0.02%)</title><rect x="897.1" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="900.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (64 samples, 0.07%)</title><rect x="897.4" y="595.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="900.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (49 samples, 0.05%)</title><rect x="898.1" y="595.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="901.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (54 samples, 0.06%)</title><rect x="898.7" y="595.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="901.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (146 samples, 0.15%)</title><rect x="899.4" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (146 samples, 0.15%)</title><rect x="899.4" y="579.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (146 samples, 0.15%)</title><rect x="899.4" y="563.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="902.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (146 samples, 0.15%)</title><rect x="899.4" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (146 samples, 0.15%)</title><rect x="899.4" y="531.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (146 samples, 0.15%)</title><rect x="899.4" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$179/1097014556.run (146 samples, 0.15%)</title><rect x="899.4" y="499.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (146 samples, 0.15%)</title><rect x="899.4" y="483.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (146 samples, 0.15%)</title><rect x="899.4" y="467.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.06%)</title><rect x="899.4" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.06%)</title><rect x="899.4" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$195/1391760059.get$Lambda (21 samples, 0.02%)</title><rect x="899.4" y="419.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$195 (21 samples, 0.02%)</title><rect x="899.4" y="403.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="902.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/1595805389.get$Lambda (34 samples, 0.03%)</title><rect x="899.6" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$196 (34 samples, 0.03%)</title><rect x="899.6" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="902.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (46 samples, 0.05%)</title><rect x="900.0" y="451.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="903.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (45 samples, 0.05%)</title><rect x="900.6" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (45 samples, 0.05%)</title><rect x="900.6" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (26 samples, 0.03%)</title><rect x="900.6" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="903.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (147 samples, 0.15%)</title><rect x="901.1" y="595.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (32 samples, 0.03%)</title><rect x="901.1" y="579.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="904.1" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap (71 samples, 0.07%)</title><rect x="901.5" y="579.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="904.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.05%)</title><rect x="902.4" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.05%)</title><rect x="902.4" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.4" y="574.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.05%)</title><rect x="902.4" y="547.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="905.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (52 samples, 0.05%)</title><rect x="902.9" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.05%)</title><rect x="902.9" y="579.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="905.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (212 samples, 0.22%)</title><rect x="903.5" y="611.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PlainHttpConnection$ConnectEvent (35 samples, 0.04%)</title><rect x="903.6" y="595.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="906.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.02%)</title><rect x="904.1" y="595.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="907.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (36 samples, 0.04%)</title><rect x="904.4" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (36 samples, 0.04%)</title><rect x="904.4" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.4" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (36 samples, 0.04%)</title><rect x="904.4" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (36 samples, 0.04%)</title><rect x="904.4" y="547.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="907.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.newConnectTimer (104 samples, 0.11%)</title><rect x="904.8" y="595.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PlainHttpConnection$ConnectTimerEvent (35 samples, 0.04%)</title><rect x="904.8" y="579.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="907.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.remainingConnectTimeout (26 samples, 0.03%)</title><rect x="905.3" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.remainingConnectTimeout (26 samples, 0.03%)</title><rect x="905.3" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$ConnectTimerEvent.&lt;init&gt; (43 samples, 0.04%)</title><rect x="905.6" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (43 samples, 0.04%)</title><rect x="905.6" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.6" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plus (25 samples, 0.03%)</title><rect x="905.8" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.8" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (25 samples, 0.03%)</title><rect x="905.8" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.8" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (25 samples, 0.03%)</title><rect x="905.8" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (25 samples, 0.03%)</title><rect x="905.8" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (25 samples, 0.03%)</title><rect x="905.8" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (25 samples, 0.03%)</title><rect x="905.8" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (25 samples, 0.03%)</title><rect x="905.8" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (25 samples, 0.03%)</title><rect x="905.8" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (25 samples, 0.03%)</title><rect x="905.8" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="908.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.05%)</title><rect x="906.1" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.05%)</title><rect x="906.1" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.05%)</title><rect x="906.1" y="691.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="909.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (95 samples, 0.10%)</title><rect x="906.7" y="755.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (95 samples, 0.10%)</title><rect x="906.7" y="739.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.7" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (46 samples, 0.05%)</title><rect x="906.7" y="723.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="909.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="907.3" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="907.3" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.3" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.05%)</title><rect x="907.3" y="691.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="910.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (3,433 samples, 3.51%)</title><rect x="907.9" y="755.0" width="41.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.9" y="766.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.06%)</title><rect x="907.9" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="910.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.06%)</title><rect x="907.9" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/1226591929.get$Lambda (39 samples, 0.04%)</title><rect x="907.9" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.9" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$181 (39 samples, 0.04%)</title><rect x="907.9" y="691.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="910.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/487368165.get$Lambda (24 samples, 0.02%)</title><rect x="908.3" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.3" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$185 (24 samples, 0.02%)</title><rect x="908.3" y="691.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="911.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (103 samples, 0.11%)</title><rect x="908.6" y="739.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (103 samples, 0.11%)</title><rect x="908.6" y="723.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$185/487368165.apply (54 samples, 0.06%)</title><rect x="908.6" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (54 samples, 0.06%)</title><rect x="908.6" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (54 samples, 0.06%)</title><rect x="908.6" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.06%)</title><rect x="908.6" y="659.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="911.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="909.3" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="909.3" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.3" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.05%)</title><rect x="909.3" y="675.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="912.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.05%)</title><rect x="909.9" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.05%)</title><rect x="909.9" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="909.9" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="909.9" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="912.9" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="909.9" y="675.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="912.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (3,223 samples, 3.30%)</title><rect x="910.4" y="739.0" width="38.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.4" y="750.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3,223 samples, 3.30%)</title><rect x="910.4" y="723.0" width="38.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.4" y="734.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (126 samples, 0.13%)</title><rect x="910.4" y="707.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="913.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,041 samples, 3.11%)</title><rect x="911.9" y="707.0" width="36.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.9" y="718.0">jdk..</text>
</g>
<g>
<title>java.lang.Object (28 samples, 0.03%)</title><rect x="911.9" y="691.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="914.9" y="702.0"></text>
</g>
<g>
<title>java.util.LinkedList (46 samples, 0.05%)</title><rect x="912.3" y="691.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="915.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (43 samples, 0.04%)</title><rect x="912.8" y="691.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="915.8" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (72 samples, 0.07%)</title><rect x="913.5" y="691.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.5" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (72 samples, 0.07%)</title><rect x="913.5" y="675.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.5" y="686.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (72 samples, 0.07%)</title><rect x="913.5" y="659.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="916.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (33 samples, 0.03%)</title><rect x="914.4" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.03%)</title><rect x="914.4" y="675.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="917.4" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (126 samples, 0.13%)</title><rect x="914.8" y="691.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="917.8" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (76 samples, 0.08%)</title><rect x="916.3" y="691.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="919.3" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (91 samples, 0.09%)</title><rect x="917.2" y="691.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="920.2" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (99 samples, 0.10%)</title><rect x="918.3" y="691.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="921.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (419 samples, 0.43%)</title><rect x="919.5" y="691.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.5" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (31 samples, 0.03%)</title><rect x="919.5" y="675.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="922.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (48 samples, 0.05%)</title><rect x="920.1" y="675.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="923.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (21 samples, 0.02%)</title><rect x="920.7" y="675.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="923.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.03%)</title><rect x="920.9" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.03%)</title><rect x="920.9" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$179/1097014556.get$Lambda (33 samples, 0.03%)</title><rect x="920.9" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$179 (33 samples, 0.03%)</title><rect x="920.9" y="627.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="923.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (33 samples, 0.03%)</title><rect x="921.3" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.03%)</title><rect x="921.3" y="659.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="924.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (30 samples, 0.03%)</title><rect x="921.7" y="675.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="924.7" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="922.1" y="675.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="925.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (172 samples, 0.18%)</title><rect x="922.5" y="675.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.5" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (37 samples, 0.04%)</title><rect x="922.5" y="659.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="925.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (42 samples, 0.04%)</title><rect x="923.0" y="659.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="926.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (24 samples, 0.02%)</title><rect x="923.5" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object (24 samples, 0.02%)</title><rect x="923.5" y="643.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="926.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (69 samples, 0.07%)</title><rect x="923.8" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (23 samples, 0.02%)</title><rect x="923.8" y="643.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="926.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (28 samples, 0.03%)</title><rect x="924.3" y="643.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="927.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (312 samples, 0.32%)</title><rect x="924.6" y="691.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.6" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (27 samples, 0.03%)</title><rect x="924.7" y="675.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="927.7" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (28 samples, 0.03%)</title><rect x="925.0" y="675.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="928.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (29 samples, 0.03%)</title><rect x="925.4" y="675.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="928.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (33 samples, 0.03%)</title><rect x="925.7" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.7" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (33 samples, 0.03%)</title><rect x="925.7" y="659.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="928.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (187 samples, 0.19%)</title><rect x="926.1" y="675.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.1" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (41 samples, 0.04%)</title><rect x="926.1" y="659.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="929.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (57 samples, 0.06%)</title><rect x="926.6" y="659.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="929.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (69 samples, 0.07%)</title><rect x="927.5" y="659.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.5" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (29 samples, 0.03%)</title><rect x="927.5" y="643.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="930.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,555 samples, 1.59%)</title><rect x="928.4" y="691.0" width="18.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (1,535 samples, 1.57%)</title><rect x="928.6" y="675.0" width="18.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PlainHttpConnection (43 samples, 0.04%)</title><rect x="928.6" y="659.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="931.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (1,492 samples, 1.53%)</title><rect x="929.1" y="659.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.1" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (287 samples, 0.29%)</title><rect x="929.3" y="643.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (287 samples, 0.29%)</title><rect x="929.3" y="627.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="932.3" y="638.0"></text>
</g>
<g>
<title>sun.nio.ch.SocketChannelImpl (106 samples, 0.11%)</title><rect x="929.3" y="611.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="932.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (181 samples, 0.19%)</title><rect x="930.6" y="611.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (28 samples, 0.03%)</title><rect x="930.7" y="595.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="933.7" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.&lt;init&gt; (50 samples, 0.05%)</title><rect x="931.1" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="934.1" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.&lt;init&gt; (50 samples, 0.05%)</title><rect x="931.1" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (32 samples, 0.03%)</title><rect x="931.1" y="563.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="934.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (62 samples, 0.06%)</title><rect x="931.7" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.06%)</title><rect x="931.7" y="579.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="934.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (31 samples, 0.03%)</title><rect x="932.4" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (31 samples, 0.03%)</title><rect x="932.4" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.newFD (31 samples, 0.03%)</title><rect x="932.4" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.4" y="574.0"></text>
</g>
<g>
<title>java.io.FileDescriptor (31 samples, 0.03%)</title><rect x="932.4" y="547.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="935.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$PlainHttpPublisher (37 samples, 0.04%)</title><rect x="932.8" y="643.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="935.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube (48 samples, 0.05%)</title><rect x="933.3" y="643.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="936.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.getReceiveBufferSize (22 samples, 0.02%)</title><rect x="933.8" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (22 samples, 0.02%)</title><rect x="933.8" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1449621165.linkToTargetMethod (22 samples, 0.02%)</title><rect x="933.8" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="936.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="933.8" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$26/357863579.get$Lambda (22 samples, 0.02%)</title><rect x="933.8" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$26 (22 samples, 0.02%)</title><rect x="933.8" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="936.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$PlainHttpPublisher.&lt;init&gt; (258 samples, 0.26%)</title><rect x="934.1" y="643.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (42 samples, 0.04%)</title><rect x="934.1" y="627.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="937.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (65 samples, 0.07%)</title><rect x="934.8" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (65 samples, 0.07%)</title><rect x="934.8" y="611.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="937.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (42 samples, 0.04%)</title><rect x="935.6" y="627.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="938.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (95 samples, 0.10%)</title><rect x="936.1" y="627.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="939.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (36 samples, 0.04%)</title><rect x="936.1" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="939.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (22 samples, 0.02%)</title><rect x="936.5" y="611.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="939.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (37 samples, 0.04%)</title><rect x="936.8" y="611.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="939.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.&lt;init&gt; (272 samples, 0.28%)</title><rect x="937.2" y="643.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.&lt;init&gt; (248 samples, 0.25%)</title><rect x="937.5" y="627.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.5" y="638.0"></text>
</g>
<g>
<title>java.util.IdentityHashMap (28 samples, 0.03%)</title><rect x="937.5" y="611.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="940.5" y="622.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.&lt;init&gt; (220 samples, 0.23%)</title><rect x="937.8" y="611.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.8" y="622.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.init (220 samples, 0.23%)</title><rect x="937.8" y="595.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="940.8" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (132 samples, 0.14%)</title><rect x="937.8" y="579.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="940.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (88 samples, 0.09%)</title><rect x="939.4" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="942.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.&lt;init&gt; (544 samples, 0.56%)</title><rect x="940.5" y="643.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (22 samples, 0.02%)</title><rect x="940.7" y="627.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="943.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber (35 samples, 0.04%)</title><rect x="941.3" y="627.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="944.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$SliceBufferSource (26 samples, 0.03%)</title><rect x="941.8" y="627.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="944.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.&lt;init&gt; (290 samples, 0.30%)</title><rect x="942.1" y="627.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription (44 samples, 0.05%)</title><rect x="942.2" y="611.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="945.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.&lt;init&gt; (233 samples, 0.24%)</title><rect x="942.8" y="611.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.05%)</title><rect x="942.8" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="942.8" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171/1682704029.get$Lambda (21 samples, 0.02%)</title><rect x="943.1" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171 (21 samples, 0.02%)</title><rect x="943.1" y="547.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="946.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AsyncTriggerEvent (21 samples, 0.02%)</title><rect x="943.4" y="595.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="946.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent (29 samples, 0.03%)</title><rect x="943.6" y="595.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="946.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$SocketFlowTask (23 samples, 0.02%)</title><rect x="944.0" y="595.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="947.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (27 samples, 0.03%)</title><rect x="944.4" y="595.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="947.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (25 samples, 0.03%)</title><rect x="944.9" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (25 samples, 0.03%)</title><rect x="944.9" y="579.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="947.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (34 samples, 0.03%)</title><rect x="945.2" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.&lt;init&gt; (123 samples, 0.13%)</title><rect x="945.6" y="627.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.02%)</title><rect x="945.6" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.02%)</title><rect x="945.6" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AsyncTriggerEvent (24 samples, 0.02%)</title><rect x="945.9" y="611.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteEvent (39 samples, 0.04%)</title><rect x="946.2" y="611.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="949.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (126 samples, 0.13%)</title><rect x="947.1" y="691.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1449621165.linkToTargetMethod (31 samples, 0.03%)</title><rect x="947.1" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.03%)</title><rect x="947.1" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$156/1559998260.get$Lambda (31 samples, 0.03%)</title><rect x="947.1" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$156 (31 samples, 0.03%)</title><rect x="947.1" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="950.1" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (95 samples, 0.10%)</title><rect x="947.5" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$156/1559998260.run (95 samples, 0.10%)</title><rect x="947.5" y="659.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (95 samples, 0.10%)</title><rect x="947.5" y="643.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="950.5" y="654.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (76 samples, 0.08%)</title><rect x="947.7" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.7" y="638.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (35 samples, 0.04%)</title><rect x="947.7" y="611.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="950.7" y="622.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (41 samples, 0.04%)</title><rect x="948.2" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.2" y="622.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (41 samples, 0.04%)</title><rect x="948.2" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.2" y="606.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (41 samples, 0.04%)</title><rect x="948.2" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.2" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (41 samples, 0.04%)</title><rect x="948.2" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.2" y="574.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (41 samples, 0.04%)</title><rect x="948.2" y="547.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="951.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (56 samples, 0.06%)</title><rect x="948.7" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.7" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.06%)</title><rect x="948.7" y="691.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="951.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$102/2089788199.get (6,694 samples, 6.85%)</title><rect x="949.3" y="883.0" width="80.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.3" y="894.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$putTimestampResponse$4 (6,694 samples, 6.85%)</title><rect x="949.3" y="867.0" width="80.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.3" y="878.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (671 samples, 0.69%)</title><rect x="949.3" y="851.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (671 samples, 0.69%)</title><rect x="949.3" y="835.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.3" y="846.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (671 samples, 0.69%)</title><rect x="949.3" y="819.0" width="8.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="952.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsertTimestampRecord (733 samples, 0.75%)</title><rect x="957.4" y="851.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (280 samples, 0.29%)</title><rect x="957.4" y="835.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.4" y="846.0"></text>
</g>
<g>
<title>byte[] (280 samples, 0.29%)</title><rect x="957.4" y="819.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="960.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.toBytes (453 samples, 0.46%)</title><rect x="960.8" y="835.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (453 samples, 0.46%)</title><rect x="960.8" y="819.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (453 samples, 0.46%)</title><rect x="960.8" y="803.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.8" y="814.0"></text>
</g>
<g>
<title>byte[] (453 samples, 0.46%)</title><rect x="960.8" y="787.0" width="5.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="963.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (5,290 samples, 5.41%)</title><rect x="966.3" y="851.0" width="63.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.3" y="862.0">ru/mail..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultFullHttpResponse (466 samples, 0.48%)</title><rect x="966.3" y="835.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="969.3" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (3,873 samples, 3.96%)</title><rect x="971.9" y="835.0" width="46.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.9" y="846.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (3,873 samples, 3.96%)</title><rect x="971.9" y="819.0" width="46.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.9" y="830.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (3,873 samples, 3.96%)</title><rect x="971.9" y="803.0" width="46.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.9" y="814.0">io/n..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (164 samples, 0.17%)</title><rect x="971.9" y="787.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="974.9" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,783 samples, 1.83%)</title><rect x="973.9" y="787.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.9" y="798.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,783 samples, 1.83%)</title><rect x="973.9" y="771.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.9" y="782.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (436 samples, 0.45%)</title><rect x="973.9" y="755.0" width="5.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="976.9" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (1,347 samples, 1.38%)</title><rect x="979.2" y="755.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.2" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,347 samples, 1.38%)</title><rect x="979.2" y="739.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.2" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,347 samples, 1.38%)</title><rect x="979.2" y="723.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.2" y="734.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (907 samples, 0.93%)</title><rect x="979.2" y="707.0" width="10.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="982.2" y="718.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (440 samples, 0.45%)</title><rect x="990.1" y="707.0" width="5.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="993.1" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (1,926 samples, 1.97%)</title><rect x="995.4" y="787.0" width="23.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.4" y="798.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (1,926 samples, 1.97%)</title><rect x="995.4" y="771.0" width="23.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.4" y="782.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (200 samples, 0.20%)</title><rect x="995.4" y="755.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="998.4" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,726 samples, 1.77%)</title><rect x="997.9" y="755.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.9" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,726 samples, 1.77%)</title><rect x="997.9" y="739.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.9" y="750.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (446 samples, 0.46%)</title><rect x="997.9" y="723.0" width="5.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1000.9" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (1,280 samples, 1.31%)</title><rect x="1003.3" y="723.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.3" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,280 samples, 1.31%)</title><rect x="1003.3" y="707.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.3" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,280 samples, 1.31%)</title><rect x="1003.3" y="691.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.3" y="702.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (820 samples, 0.84%)</title><rect x="1003.3" y="675.0" width="9.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1006.3" y="686.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (460 samples, 0.47%)</title><rect x="1013.2" y="675.0" width="5.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1016.2" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (951 samples, 0.97%)</title><rect x="1018.7" y="835.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.7" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (951 samples, 0.97%)</title><rect x="1018.7" y="819.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.7" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (428 samples, 0.44%)</title><rect x="1018.7" y="803.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.7" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (428 samples, 0.44%)</title><rect x="1018.7" y="787.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.7" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (428 samples, 0.44%)</title><rect x="1018.7" y="771.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1021.7" y="782.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (428 samples, 0.44%)</title><rect x="1018.7" y="755.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1021.7" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (523 samples, 0.54%)</title><rect x="1023.9" y="803.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.9" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (523 samples, 0.54%)</title><rect x="1023.9" y="787.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.9" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter.convertObject (523 samples, 0.54%)</title><rect x="1023.9" y="771.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (523 samples, 0.54%)</title><rect x="1023.9" y="755.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1026.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (523 samples, 0.54%)</title><rect x="1023.9" y="739.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1026.9" y="750.0"></text>
</g>
<g>
<title>byte[] (258 samples, 0.26%)</title><rect x="1023.9" y="723.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1026.9" y="734.0"></text>
</g>
<g>
<title>java.lang.String (265 samples, 0.27%)</title><rect x="1027.0" y="723.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1030.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7,617 samples, 7.80%)</title><rect x="1030.2" y="899.0" width="92.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.2" y="910.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (335 samples, 0.34%)</title><rect x="1030.2" y="883.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$137/104775403.apply (334 samples, 0.34%)</title><rect x="1030.2" y="867.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$putProxyResponse$7 (334 samples, 0.34%)</title><rect x="1030.2" y="851.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (334 samples, 0.34%)</title><rect x="1030.2" y="835.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.2" y="846.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultFullHttpResponse (29 samples, 0.03%)</title><rect x="1030.2" y="819.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1033.2" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (254 samples, 0.26%)</title><rect x="1030.6" y="819.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.6" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (254 samples, 0.26%)</title><rect x="1030.6" y="803.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.6" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (254 samples, 0.26%)</title><rect x="1030.6" y="787.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.6" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (114 samples, 0.12%)</title><rect x="1030.7" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.7" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (114 samples, 0.12%)</title><rect x="1030.7" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.7" y="766.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (28 samples, 0.03%)</title><rect x="1030.7" y="739.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1033.7" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (86 samples, 0.09%)</title><rect x="1031.0" y="739.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.0" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (86 samples, 0.09%)</title><rect x="1031.0" y="723.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.0" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (86 samples, 0.09%)</title><rect x="1031.0" y="707.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1034.0" y="718.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (66 samples, 0.07%)</title><rect x="1031.0" y="691.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1034.0" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (128 samples, 0.13%)</title><rect x="1032.1" y="771.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.1" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (128 samples, 0.13%)</title><rect x="1032.1" y="755.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.1" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (119 samples, 0.12%)</title><rect x="1032.2" y="739.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.2" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (119 samples, 0.12%)</title><rect x="1032.2" y="723.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.2" y="734.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (28 samples, 0.03%)</title><rect x="1032.2" y="707.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1035.2" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (91 samples, 0.09%)</title><rect x="1032.5" y="707.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.5" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (91 samples, 0.09%)</title><rect x="1032.5" y="691.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.5" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (91 samples, 0.09%)</title><rect x="1032.5" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1035.5" y="686.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (61 samples, 0.06%)</title><rect x="1032.5" y="659.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1035.5" y="670.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (30 samples, 0.03%)</title><rect x="1033.3" y="659.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1036.3" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (51 samples, 0.05%)</title><rect x="1033.6" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.6" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (51 samples, 0.05%)</title><rect x="1033.6" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.6" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (32 samples, 0.03%)</title><rect x="1033.9" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.9" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (32 samples, 0.03%)</title><rect x="1033.9" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.9" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter.convertObject (32 samples, 0.03%)</title><rect x="1033.9" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (32 samples, 0.03%)</title><rect x="1033.9" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (32 samples, 0.03%)</title><rect x="1033.9" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7,282 samples, 7.45%)</title><rect x="1034.2" y="883.0" width="88.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.2" y="894.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7,282 samples, 7.45%)</title><rect x="1034.2" y="867.0" width="88.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.2" y="878.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$140/326552115.accept (7,282 samples, 7.45%)</title><rect x="1034.2" y="851.0" width="88.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.2" y="862.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$atLeastAsync$8 (7,282 samples, 7.45%)</title><rect x="1034.2" y="835.0" width="88.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.2" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7,036 samples, 7.20%)</title><rect x="1034.2" y="819.0" width="85.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.2" y="830.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,036 samples, 7.20%)</title><rect x="1034.2" y="803.0" width="85.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.2" y="814.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5,462 samples, 5.59%)</title><rect x="1034.2" y="787.0" width="66.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.2" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,462 samples, 5.59%)</title><rect x="1034.2" y="771.0" width="66.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.2" y="782.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests$$Lambda$143/336063720.apply (5,462 samples, 5.59%)</title><rect x="1034.2" y="755.0" width="66.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1037.2" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.lambda$respond$1 (5,462 samples, 5.59%)</title><rect x="1034.2" y="739.0" width="66.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.2" y="750.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (5,462 samples, 5.59%)</title><rect x="1034.2" y="723.0" width="66.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.2" y="734.0">ru/mail..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultFullHttpResponse (463 samples, 0.47%)</title><rect x="1034.2" y="707.0" width="5.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1037.2" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (4,020 samples, 4.11%)</title><rect x="1039.8" y="707.0" width="48.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.8" y="718.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (4,020 samples, 4.11%)</title><rect x="1039.8" y="691.0" width="48.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.8" y="702.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (4,020 samples, 4.11%)</title><rect x="1039.8" y="675.0" width="48.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.8" y="686.0">io/n..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (189 samples, 0.19%)</title><rect x="1039.8" y="659.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1042.8" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,830 samples, 1.87%)</title><rect x="1042.1" y="659.0" width="22.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.1" y="670.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,830 samples, 1.87%)</title><rect x="1042.1" y="643.0" width="22.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.1" y="654.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (429 samples, 0.44%)</title><rect x="1042.1" y="627.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1045.1" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (1,401 samples, 1.43%)</title><rect x="1047.3" y="627.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.3" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,401 samples, 1.43%)</title><rect x="1047.3" y="611.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.3" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,401 samples, 1.43%)</title><rect x="1047.3" y="595.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.3" y="606.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (914 samples, 0.94%)</title><rect x="1047.3" y="579.0" width="11.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1050.3" y="590.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (487 samples, 0.50%)</title><rect x="1058.3" y="579.0" width="5.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1061.3" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (2,001 samples, 2.05%)</title><rect x="1064.2" y="659.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.2" y="670.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (2,001 samples, 2.05%)</title><rect x="1064.2" y="643.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.2" y="654.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (216 samples, 0.22%)</title><rect x="1064.2" y="627.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1067.2" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,785 samples, 1.83%)</title><rect x="1066.8" y="627.0" width="21.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.8" y="638.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1,785 samples, 1.83%)</title><rect x="1066.8" y="611.0" width="21.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.8" y="622.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (447 samples, 0.46%)</title><rect x="1066.8" y="595.0" width="5.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1069.8" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (1,338 samples, 1.37%)</title><rect x="1072.2" y="595.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.2" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,338 samples, 1.37%)</title><rect x="1072.2" y="579.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.2" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1,338 samples, 1.37%)</title><rect x="1072.2" y="563.0" width="16.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.2" y="574.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (899 samples, 0.92%)</title><rect x="1072.2" y="547.0" width="10.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1075.2" y="558.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (439 samples, 0.45%)</title><rect x="1083.1" y="547.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1086.1" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (979 samples, 1.00%)</title><rect x="1088.4" y="707.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.4" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (979 samples, 1.00%)</title><rect x="1088.4" y="691.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.4" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (447 samples, 0.46%)</title><rect x="1088.4" y="675.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.4" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (447 samples, 0.46%)</title><rect x="1088.4" y="659.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.4" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (447 samples, 0.46%)</title><rect x="1088.4" y="643.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.4" y="654.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (447 samples, 0.46%)</title><rect x="1088.4" y="627.0" width="5.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1091.4" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (532 samples, 0.54%)</title><rect x="1093.8" y="675.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.8" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (532 samples, 0.54%)</title><rect x="1093.8" y="659.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.8" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter.convertObject (532 samples, 0.54%)</title><rect x="1093.8" y="643.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (532 samples, 0.54%)</title><rect x="1093.8" y="627.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (532 samples, 0.54%)</title><rect x="1093.8" y="611.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.8" y="622.0"></text>
</g>
<g>
<title>byte[] (254 samples, 0.26%)</title><rect x="1093.8" y="595.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1096.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (278 samples, 0.28%)</title><rect x="1096.9" y="595.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1099.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,574 samples, 1.61%)</title><rect x="1100.2" y="787.0" width="19.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,574 samples, 1.61%)</title><rect x="1100.2" y="771.0" width="19.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$145/1327492977.accept (1,574 samples, 1.61%)</title><rect x="1100.2" y="755.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$respond$10 (1,574 samples, 1.61%)</title><rect x="1100.2" y="739.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.2" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1,121 samples, 1.15%)</title><rect x="1100.2" y="723.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.2" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.newPromise (443 samples, 0.45%)</title><rect x="1100.2" y="707.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.2" y="718.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPromise (443 samples, 0.45%)</title><rect x="1100.2" y="691.0" width="5.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1103.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (678 samples, 0.69%)</title><rect x="1105.6" y="707.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (678 samples, 0.69%)</title><rect x="1105.6" y="691.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.newInstance (678 samples, 0.69%)</title><rect x="1105.6" y="675.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1108.6" y="686.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (678 samples, 0.69%)</title><rect x="1105.6" y="659.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.6" y="670.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (678 samples, 0.69%)</title><rect x="1105.6" y="643.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.6" y="654.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.newHandle (348 samples, 0.36%)</title><rect x="1105.6" y="627.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.6" y="638.0"></text>
</g>
<g>
<title>io.netty.util.Recycler$DefaultHandle (348 samples, 0.36%)</title><rect x="1105.6" y="611.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1108.6" y="622.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool$1.newObject (330 samples, 0.34%)</title><rect x="1109.8" y="627.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.8" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask$1.newObject (330 samples, 0.34%)</title><rect x="1109.8" y="611.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.8" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask$1.newObject (330 samples, 0.34%)</title><rect x="1109.8" y="595.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.8" y="606.0"></text>
</g>
<g>
<title>io.netty.channel.AbstractChannelHandlerContext$WriteTask (329 samples, 0.34%)</title><rect x="1109.8" y="579.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1112.8" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (453 samples, 0.46%)</title><rect x="1113.8" y="723.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.8" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (453 samples, 0.46%)</title><rect x="1113.8" y="707.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.8" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (453 samples, 0.46%)</title><rect x="1113.8" y="691.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.8" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (453 samples, 0.46%)</title><rect x="1113.8" y="675.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1116.8" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (453 samples, 0.46%)</title><rect x="1113.8" y="659.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.8" y="670.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (453 samples, 0.46%)</title><rect x="1113.8" y="643.0" width="5.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1116.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (246 samples, 0.25%)</title><rect x="1119.2" y="819.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.2" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (246 samples, 0.25%)</title><rect x="1119.2" y="803.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.2" y="814.0"></text>
</g>
<g>
<title>java.lang.Object[] (246 samples, 0.25%)</title><rect x="1119.2" y="787.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1122.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (515 samples, 0.53%)</title><rect x="1122.2" y="899.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (515 samples, 0.53%)</title><rect x="1122.2" y="883.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (510 samples, 0.52%)</title><rect x="1122.2" y="867.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (510 samples, 0.52%)</title><rect x="1122.2" y="851.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.2" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (510 samples, 0.52%)</title><rect x="1122.2" y="835.0" width="6.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1125.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$224/1128521182.run (765 samples, 0.78%)</title><rect x="1128.4" y="899.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (765 samples, 0.78%)</title><rect x="1128.4" y="883.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (765 samples, 0.78%)</title><rect x="1128.4" y="867.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (765 samples, 0.78%)</title><rect x="1128.4" y="851.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (765 samples, 0.78%)</title><rect x="1128.4" y="835.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (765 samples, 0.78%)</title><rect x="1128.4" y="819.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (765 samples, 0.78%)</title><rect x="1128.4" y="803.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (765 samples, 0.78%)</title><rect x="1128.4" y="787.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (765 samples, 0.78%)</title><rect x="1128.4" y="771.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (765 samples, 0.78%)</title><rect x="1128.4" y="755.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (765 samples, 0.78%)</title><rect x="1128.4" y="739.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (676 samples, 0.69%)</title><rect x="1128.4" y="723.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.06%)</title><rect x="1128.4" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.06%)</title><rect x="1128.4" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$242/1556043569.get$Lambda (24 samples, 0.02%)</title><rect x="1128.6" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$242 (24 samples, 0.02%)</title><rect x="1128.6" y="659.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1131.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$243/959062952.get$Lambda (21 samples, 0.02%)</title><rect x="1128.9" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.9" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$243 (21 samples, 0.02%)</title><rect x="1128.9" y="659.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1131.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (614 samples, 0.63%)</title><rect x="1129.2" y="707.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1132.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (22 samples, 0.02%)</title><rect x="1129.2" y="691.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1132.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (592 samples, 0.61%)</title><rect x="1129.4" y="691.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (592 samples, 0.61%)</title><rect x="1129.4" y="675.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (592 samples, 0.61%)</title><rect x="1129.4" y="659.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (105 samples, 0.11%)</title><rect x="1129.4" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (39 samples, 0.04%)</title><rect x="1129.4" y="627.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1132.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$240/494233187.apply (65 samples, 0.07%)</title><rect x="1129.9" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (65 samples, 0.07%)</title><rect x="1129.9" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (65 samples, 0.07%)</title><rect x="1129.9" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (53 samples, 0.05%)</title><rect x="1130.1" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (45 samples, 0.05%)</title><rect x="1130.1" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (45 samples, 0.05%)</title><rect x="1130.1" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (22 samples, 0.02%)</title><rect x="1130.1" y="531.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1133.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.02%)</title><rect x="1130.4" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.02%)</title><rect x="1130.4" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.02%)</title><rect x="1130.4" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1133.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (487 samples, 0.50%)</title><rect x="1130.7" y="643.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (487 samples, 0.50%)</title><rect x="1130.7" y="627.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/84871828.apply (487 samples, 0.50%)</title><rect x="1130.7" y="611.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (487 samples, 0.50%)</title><rect x="1130.7" y="595.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (487 samples, 0.50%)</title><rect x="1130.7" y="579.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$147/914931583.apply (487 samples, 0.50%)</title><rect x="1130.7" y="563.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (487 samples, 0.50%)</title><rect x="1130.7" y="547.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (31 samples, 0.03%)</title><rect x="1130.8" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (31 samples, 0.03%)</title><rect x="1130.8" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (446 samples, 0.46%)</title><rect x="1131.2" y="531.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (178 samples, 0.18%)</title><rect x="1131.2" y="515.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (178 samples, 0.18%)</title><rect x="1131.2" y="499.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (178 samples, 0.18%)</title><rect x="1131.2" y="483.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$230/1131668274.accept (60 samples, 0.06%)</title><rect x="1131.2" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (60 samples, 0.06%)</title><rect x="1131.2" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (60 samples, 0.06%)</title><rect x="1131.2" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (45 samples, 0.05%)</title><rect x="1131.4" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (45 samples, 0.05%)</title><rect x="1131.4" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.03%)</title><rect x="1131.4" y="387.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1134.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$234/150281006.accept (81 samples, 0.08%)</title><rect x="1131.9" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (81 samples, 0.08%)</title><rect x="1131.9" y="451.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (81 samples, 0.08%)</title><rect x="1131.9" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (81 samples, 0.08%)</title><rect x="1131.9" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (81 samples, 0.08%)</title><rect x="1131.9" y="403.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (81 samples, 0.08%)</title><rect x="1131.9" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (81 samples, 0.08%)</title><rect x="1131.9" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (81 samples, 0.08%)</title><rect x="1131.9" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (81 samples, 0.08%)</title><rect x="1131.9" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (81 samples, 0.08%)</title><rect x="1131.9" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (38 samples, 0.04%)</title><rect x="1131.9" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (38 samples, 0.04%)</title><rect x="1131.9" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (21 samples, 0.02%)</title><rect x="1131.9" y="275.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1134.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (43 samples, 0.04%)</title><rect x="1132.4" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (43 samples, 0.04%)</title><rect x="1132.4" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (23 samples, 0.02%)</title><rect x="1132.6" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="1132.9" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="1132.9" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="1132.9" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1135.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (268 samples, 0.27%)</title><rect x="1133.4" y="515.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (22 samples, 0.02%)</title><rect x="1133.4" y="499.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1136.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (230 samples, 0.24%)</title><rect x="1133.8" y="499.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (119 samples, 0.12%)</title><rect x="1134.0" y="483.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (25 samples, 0.03%)</title><rect x="1134.0" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.0" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (25 samples, 0.03%)</title><rect x="1134.0" y="451.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1137.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (23 samples, 0.02%)</title><rect x="1134.3" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1137.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (71 samples, 0.07%)</title><rect x="1134.6" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (26 samples, 0.03%)</title><rect x="1135.2" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (93 samples, 0.10%)</title><rect x="1135.5" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.05%)</title><rect x="1135.7" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.7" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.03%)</title><rect x="1135.7" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1138.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.02%)</title><rect x="1136.0" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.0" y="462.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.02%)</title><rect x="1136.0" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1139.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.03%)</title><rect x="1136.3" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.03%)</title><rect x="1136.3" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.03%)</title><rect x="1136.3" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.03%)</title><rect x="1136.3" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.03%)</title><rect x="1136.3" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.03%)</title><rect x="1136.3" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1139.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (89 samples, 0.09%)</title><rect x="1136.6" y="723.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (89 samples, 0.09%)</title><rect x="1136.6" y="707.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (89 samples, 0.09%)</title><rect x="1136.6" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (89 samples, 0.09%)</title><rect x="1136.6" y="675.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (72 samples, 0.07%)</title><rect x="1136.8" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.8" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (72 samples, 0.07%)</title><rect x="1136.8" y="643.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.8" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (29 samples, 0.03%)</title><rect x="1136.8" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.8" y="638.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (29 samples, 0.03%)</title><rect x="1136.8" y="611.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1139.8" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (43 samples, 0.04%)</title><rect x="1137.1" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.1" y="638.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (43 samples, 0.04%)</title><rect x="1137.1" y="611.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1140.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,432 samples, 2.49%)</title><rect x="1137.7" y="899.0" width="29.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.7" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,432 samples, 2.49%)</title><rect x="1137.7" y="883.0" width="29.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.7" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,034 samples, 2.08%)</title><rect x="1137.7" y="867.0" width="24.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.7" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$179/1097014556.run (2,034 samples, 2.08%)</title><rect x="1137.7" y="851.0" width="24.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.7" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,034 samples, 2.08%)</title><rect x="1137.7" y="835.0" width="24.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.7" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (48 samples, 0.05%)</title><rect x="1137.7" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (48 samples, 0.05%)</title><rect x="1137.7" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (48 samples, 0.05%)</title><rect x="1137.7" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (48 samples, 0.05%)</title><rect x="1137.7" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/913190639.linkToTargetMethod (26 samples, 0.03%)</title><rect x="1137.7" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1740035246.invoke (26 samples, 0.03%)</title><rect x="1137.7" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.03%)</title><rect x="1137.7" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (26 samples, 0.03%)</title><rect x="1137.7" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (26 samples, 0.03%)</title><rect x="1137.7" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.7" y="702.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="1137.7" y="675.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1140.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (22 samples, 0.02%)</title><rect x="1138.0" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="1138.0" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="1138.0" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$228/688377099.get$Lambda (22 samples, 0.02%)</title><rect x="1138.0" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.0" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$228 (22 samples, 0.02%)</title><rect x="1138.0" y="691.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1141.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,985 samples, 2.03%)</title><rect x="1138.3" y="819.0" width="23.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.3" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,985 samples, 2.03%)</title><rect x="1138.3" y="803.0" width="23.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.3" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,985 samples, 2.03%)</title><rect x="1138.3" y="787.0" width="23.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.3" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,985 samples, 2.03%)</title><rect x="1138.3" y="771.0" width="23.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.3" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (968 samples, 0.99%)</title><rect x="1138.3" y="755.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (968 samples, 0.99%)</title><rect x="1138.3" y="739.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (968 samples, 0.99%)</title><rect x="1138.3" y="723.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (968 samples, 0.99%)</title><rect x="1138.3" y="707.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (968 samples, 0.99%)</title><rect x="1138.3" y="691.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (968 samples, 0.99%)</title><rect x="1138.3" y="675.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (968 samples, 0.99%)</title><rect x="1138.3" y="659.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (935 samples, 0.96%)</title><rect x="1138.3" y="643.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (935 samples, 0.96%)</title><rect x="1138.3" y="627.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (912 samples, 0.93%)</title><rect x="1138.3" y="611.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (25 samples, 0.03%)</title><rect x="1138.3" y="595.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1141.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/271392623.apply (856 samples, 0.88%)</title><rect x="1138.6" y="595.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (856 samples, 0.88%)</title><rect x="1138.6" y="579.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (44 samples, 0.05%)</title><rect x="1138.7" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (44 samples, 0.05%)</title><rect x="1138.7" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (24 samples, 0.02%)</title><rect x="1138.7" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1141.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (798 samples, 0.82%)</title><rect x="1139.3" y="563.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (46 samples, 0.05%)</title><rect x="1139.3" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (46 samples, 0.05%)</title><rect x="1139.3" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.02%)</title><rect x="1139.3" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1142.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.02%)</title><rect x="1139.6" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.02%)</title><rect x="1139.6" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.02%)</title><rect x="1139.6" y="483.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1142.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (747 samples, 0.76%)</title><rect x="1139.9" y="547.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (680 samples, 0.70%)</title><rect x="1140.1" y="531.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="1140.1" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="1140.1" y="499.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2125145985.linkToTargetMethod (26 samples, 0.03%)</title><rect x="1140.3" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1123920936.invokeStatic (26 samples, 0.03%)</title><rect x="1140.3" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1751710296.get$Lambda (26 samples, 0.03%)</title><rect x="1140.3" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (26 samples, 0.03%)</title><rect x="1140.3" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1143.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (136 samples, 0.14%)</title><rect x="1140.6" y="515.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.6" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (55 samples, 0.06%)</title><rect x="1140.6" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.04%)</title><rect x="1140.9" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.9" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.04%)</title><rect x="1140.9" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1143.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (41 samples, 0.04%)</title><rect x="1141.3" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (41 samples, 0.04%)</title><rect x="1141.3" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (41 samples, 0.04%)</title><rect x="1141.3" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (40 samples, 0.04%)</title><rect x="1141.8" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.8" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (40 samples, 0.04%)</title><rect x="1141.8" y="483.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1144.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (75 samples, 0.08%)</title><rect x="1142.3" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (31 samples, 0.03%)</title><rect x="1142.3" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.05%)</title><rect x="1142.6" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.05%)</title><rect x="1142.6" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.02%)</title><rect x="1142.6" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1145.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (21 samples, 0.02%)</title><rect x="1143.3" y="515.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1146.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="1143.6" y="515.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1146.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (356 samples, 0.36%)</title><rect x="1144.0" y="515.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1751710296.run (356 samples, 0.36%)</title><rect x="1144.0" y="499.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (356 samples, 0.36%)</title><rect x="1144.0" y="483.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.04%)</title><rect x="1144.0" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.04%)</title><rect x="1144.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (56 samples, 0.06%)</title><rect x="1144.4" y="467.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (56 samples, 0.06%)</title><rect x="1144.4" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (32 samples, 0.03%)</title><rect x="1144.4" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1147.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.02%)</title><rect x="1144.8" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.02%)</title><rect x="1144.8" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1147.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.02%)</title><rect x="1144.8" y="403.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1147.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (22 samples, 0.02%)</title><rect x="1145.1" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1148.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (60 samples, 0.06%)</title><rect x="1145.5" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (60 samples, 0.06%)</title><rect x="1145.5" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (47 samples, 0.05%)</title><rect x="1145.7" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (47 samples, 0.05%)</title><rect x="1145.7" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1148.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (47 samples, 0.05%)</title><rect x="1145.7" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.02%)</title><rect x="1145.7" y="387.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1148.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.03%)</title><rect x="1145.9" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.03%)</title><rect x="1145.9" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.03%)</title><rect x="1145.9" y="355.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1148.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (53 samples, 0.05%)</title><rect x="1146.2" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.05%)</title><rect x="1146.2" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1997408166.invoke (53 samples, 0.05%)</title><rect x="1146.2" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.05%)</title><rect x="1146.2" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (41 samples, 0.04%)</title><rect x="1146.4" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (41 samples, 0.04%)</title><rect x="1146.4" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.4" y="398.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.04%)</title><rect x="1146.4" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1149.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (115 samples, 0.12%)</title><rect x="1146.9" y="467.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (38 samples, 0.04%)</title><rect x="1146.9" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1149.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (77 samples, 0.08%)</title><rect x="1147.3" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.08%)</title><rect x="1147.3" y="435.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1997408166.invoke (77 samples, 0.08%)</title><rect x="1147.3" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.08%)</title><rect x="1147.3" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (65 samples, 0.07%)</title><rect x="1147.5" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (65 samples, 0.07%)</title><rect x="1147.5" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.5" y="382.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.07%)</title><rect x="1147.5" y="355.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1150.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/handlers/PutBodyHandler.apply (52 samples, 0.05%)</title><rect x="1148.3" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (52 samples, 0.05%)</title><rect x="1148.3" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (26 samples, 0.03%)</title><rect x="1148.3" y="499.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1151.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (26 samples, 0.03%)</title><rect x="1148.6" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$215/706959530.apply (31 samples, 0.03%)</title><rect x="1148.9" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (31 samples, 0.03%)</title><rect x="1148.9" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (23 samples, 0.02%)</title><rect x="1149.3" y="611.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (23 samples, 0.02%)</title><rect x="1149.3" y="595.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$217/674839503.apply (23 samples, 0.02%)</title><rect x="1149.3" y="579.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (23 samples, 0.02%)</title><rect x="1149.3" y="563.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (23 samples, 0.02%)</title><rect x="1149.3" y="547.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.02%)</title><rect x="1149.3" y="531.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1152.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$244/461996469.apply (33 samples, 0.03%)</title><rect x="1149.5" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (33 samples, 0.03%)</title><rect x="1149.5" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (33 samples, 0.03%)</title><rect x="1149.5" y="611.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1152.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,017 samples, 1.04%)</title><rect x="1149.9" y="755.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (64 samples, 0.07%)</title><rect x="1149.9" y="739.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (64 samples, 0.07%)</title><rect x="1149.9" y="723.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.9" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (64 samples, 0.07%)</title><rect x="1149.9" y="707.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.9" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (64 samples, 0.07%)</title><rect x="1149.9" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1152.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.07%)</title><rect x="1149.9" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.9" y="686.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.07%)</title><rect x="1149.9" y="659.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1152.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (29 samples, 0.03%)</title><rect x="1150.7" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (29 samples, 0.03%)</title><rect x="1150.7" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.7" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (29 samples, 0.03%)</title><rect x="1150.7" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.7" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (29 samples, 0.03%)</title><rect x="1150.7" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1153.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.03%)</title><rect x="1150.7" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1153.7" y="686.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.03%)</title><rect x="1150.7" y="659.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1153.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (103 samples, 0.11%)</title><rect x="1151.1" y="739.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (28 samples, 0.03%)</title><rect x="1151.4" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.4" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (28 samples, 0.03%)</title><rect x="1151.4" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.4" y="718.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="1151.4" y="691.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1154.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (44 samples, 0.05%)</title><rect x="1151.8" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.05%)</title><rect x="1151.8" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.03%)</title><rect x="1152.0" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.0" y="702.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="1152.0" y="675.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1155.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (322 samples, 0.33%)</title><rect x="1152.3" y="739.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (322 samples, 0.33%)</title><rect x="1152.3" y="723.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1155.3" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (322 samples, 0.33%)</title><rect x="1152.3" y="707.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.3" y="718.0"></text>
</g>
<g>
<title>java.util.TreeMap (36 samples, 0.04%)</title><rect x="1152.6" y="691.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1155.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (191 samples, 0.20%)</title><rect x="1153.4" y="691.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.4" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/86302077.accept (191 samples, 0.20%)</title><rect x="1153.4" y="675.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (191 samples, 0.20%)</title><rect x="1153.4" y="659.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.04%)</title><rect x="1153.4" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.04%)</title><rect x="1153.4" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.4" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.get$Lambda (36 samples, 0.04%)</title><rect x="1153.4" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.4" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$113 (36 samples, 0.04%)</title><rect x="1153.4" y="595.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1156.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (40 samples, 0.04%)</title><rect x="1153.9" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$113/261439883.accept (40 samples, 0.04%)</title><rect x="1153.9" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (40 samples, 0.04%)</title><rect x="1153.9" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (40 samples, 0.04%)</title><rect x="1153.9" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (40 samples, 0.04%)</title><rect x="1153.9" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (40 samples, 0.04%)</title><rect x="1153.9" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (40 samples, 0.04%)</title><rect x="1153.9" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (40 samples, 0.04%)</title><rect x="1153.9" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.04%)</title><rect x="1153.9" y="515.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1156.9" y="526.0"></text>
</g>
<g>
<title>java/util/List.copyOf (62 samples, 0.06%)</title><rect x="1154.4" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.4" y="654.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (62 samples, 0.06%)</title><rect x="1154.4" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (40 samples, 0.04%)</title><rect x="1154.4" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (40 samples, 0.04%)</title><rect x="1154.4" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.04%)</title><rect x="1154.4" y="579.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1157.4" y="590.0"></text>
</g>
<g>
<title>java/util/List.of (22 samples, 0.02%)</title><rect x="1154.9" y="611.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.9" y="622.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (22 samples, 0.02%)</title><rect x="1154.9" y="595.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1157.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (53 samples, 0.05%)</title><rect x="1155.1" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.1" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (53 samples, 0.05%)</title><rect x="1155.1" y="627.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1158.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (37 samples, 0.04%)</title><rect x="1155.8" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.8" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap (37 samples, 0.04%)</title><rect x="1155.8" y="675.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1158.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (499 samples, 0.51%)</title><rect x="1156.2" y="739.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.2" y="750.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (23 samples, 0.02%)</title><rect x="1156.2" y="723.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1159.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1156.5" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1156.5" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.5" y="718.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.03%)</title><rect x="1156.5" y="691.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1159.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (83 samples, 0.08%)</title><rect x="1156.9" y="723.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (83 samples, 0.08%)</title><rect x="1156.9" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.03%)</title><rect x="1156.9" y="691.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1159.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.05%)</title><rect x="1157.3" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.3" y="702.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.05%)</title><rect x="1157.3" y="675.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1160.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (359 samples, 0.37%)</title><rect x="1157.9" y="723.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (124 samples, 0.13%)</title><rect x="1157.9" y="707.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (124 samples, 0.13%)</title><rect x="1157.9" y="691.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.9" y="702.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.05%)</title><rect x="1157.9" y="675.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1160.9" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.07%)</title><rect x="1158.5" y="675.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.5" y="686.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.07%)</title><rect x="1158.5" y="659.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1161.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.trim (61 samples, 0.06%)</title><rect x="1159.4" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (61 samples, 0.06%)</title><rect x="1159.4" y="691.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 0.06%)</title><rect x="1159.4" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1162.4" y="686.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.03%)</title><rect x="1159.4" y="659.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1162.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.04%)</title><rect x="1159.7" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.7" y="670.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="1159.7" y="643.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1162.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (64 samples, 0.07%)</title><rect x="1160.1" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (64 samples, 0.07%)</title><rect x="1160.1" y="691.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (64 samples, 0.07%)</title><rect x="1160.1" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1163.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (64 samples, 0.07%)</title><rect x="1160.1" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.07%)</title><rect x="1160.1" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.07%)</title><rect x="1160.1" y="627.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1163.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (110 samples, 0.11%)</title><rect x="1160.9" y="707.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (38 samples, 0.04%)</title><rect x="1160.9" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.9" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (38 samples, 0.04%)</title><rect x="1160.9" y="675.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1163.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (40 samples, 0.04%)</title><rect x="1161.4" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.4" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (40 samples, 0.04%)</title><rect x="1161.4" y="675.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1164.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$245/803485314.apply (32 samples, 0.03%)</title><rect x="1161.8" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1164.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (32 samples, 0.03%)</title><rect x="1161.8" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.8" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.03%)</title><rect x="1161.8" y="659.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1164.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (398 samples, 0.41%)</title><rect x="1162.2" y="867.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (398 samples, 0.41%)</title><rect x="1162.2" y="851.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (398 samples, 0.41%)</title><rect x="1162.2" y="835.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$179/1097014556.run (398 samples, 0.41%)</title><rect x="1162.2" y="819.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (398 samples, 0.41%)</title><rect x="1162.2" y="803.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (391 samples, 0.40%)</title><rect x="1162.2" y="787.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1165.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.03%)</title><rect x="1162.2" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.03%)</title><rect x="1162.2" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (28 samples, 0.03%)</title><rect x="1162.8" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (28 samples, 0.03%)</title><rect x="1162.8" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (313 samples, 0.32%)</title><rect x="1163.2" y="771.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (313 samples, 0.32%)</title><rect x="1163.2" y="755.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$259/1465883244.run (272 samples, 0.28%)</title><rect x="1163.2" y="739.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (272 samples, 0.28%)</title><rect x="1163.2" y="723.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (272 samples, 0.28%)</title><rect x="1163.2" y="707.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.2" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (70 samples, 0.07%)</title><rect x="1163.2" y="691.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.2" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (48 samples, 0.05%)</title><rect x="1163.2" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (34 samples, 0.03%)</title><rect x="1163.3" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.3" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (34 samples, 0.03%)</title><rect x="1163.3" y="643.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1166.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (22 samples, 0.02%)</title><rect x="1163.8" y="675.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.02%)</title><rect x="1163.8" y="659.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (22 samples, 0.02%)</title><rect x="1163.8" y="643.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (201 samples, 0.21%)</title><rect x="1164.0" y="691.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (183 samples, 0.19%)</title><rect x="1164.2" y="675.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (59 samples, 0.06%)</title><rect x="1164.2" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (55 samples, 0.06%)</title><rect x="1165.0" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (23 samples, 0.02%)</title><rect x="1165.3" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (23 samples, 0.02%)</title><rect x="1165.3" y="627.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1168.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (67 samples, 0.07%)</title><rect x="1165.6" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (54 samples, 0.06%)</title><rect x="1165.8" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (22 samples, 0.02%)</title><rect x="1165.8" y="627.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (22 samples, 0.02%)</title><rect x="1165.8" y="611.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (22 samples, 0.02%)</title><rect x="1165.8" y="595.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (22 samples, 0.02%)</title><rect x="1165.8" y="579.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1168.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32 samples, 0.03%)</title><rect x="1166.0" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32 samples, 0.03%)</title><rect x="1166.0" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (26 samples, 0.03%)</title><rect x="1166.0" y="595.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1169.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (41 samples, 0.04%)</title><rect x="1166.5" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (41 samples, 0.04%)</title><rect x="1166.5" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (41 samples, 0.04%)</title><rect x="1166.5" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (41 samples, 0.04%)</title><rect x="1166.5" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1169.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 0.04%)</title><rect x="1166.5" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (41 samples, 0.04%)</title><rect x="1166.5" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1169.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (41 samples, 0.04%)</title><rect x="1166.5" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$268/1316869369.accept (41 samples, 0.04%)</title><rect x="1166.5" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (41 samples, 0.04%)</title><rect x="1166.5" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (41 samples, 0.04%)</title><rect x="1166.5" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 0.04%)</title><rect x="1166.5" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (41 samples, 0.04%)</title><rect x="1166.5" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$273/902212527.apply (41 samples, 0.04%)</title><rect x="1166.5" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (41 samples, 0.04%)</title><rect x="1166.5" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (41 samples, 0.04%)</title><rect x="1166.5" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1169.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (94 samples, 0.10%)</title><rect x="1167.1" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (94 samples, 0.10%)</title><rect x="1167.1" y="931.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (94 samples, 0.10%)</title><rect x="1167.1" y="915.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (94 samples, 0.10%)</title><rect x="1167.1" y="899.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (94 samples, 0.10%)</title><rect x="1167.1" y="883.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1170.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (93 samples, 0.10%)</title><rect x="1167.1" y="867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (93 samples, 0.10%)</title><rect x="1167.1" y="851.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (93 samples, 0.10%)</title><rect x="1167.1" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (93 samples, 0.10%)</title><rect x="1167.1" y="819.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (93 samples, 0.10%)</title><rect x="1167.1" y="803.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (93 samples, 0.10%)</title><rect x="1167.1" y="787.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (93 samples, 0.10%)</title><rect x="1167.1" y="771.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (93 samples, 0.10%)</title><rect x="1167.1" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (93 samples, 0.10%)</title><rect x="1167.1" y="739.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (93 samples, 0.10%)</title><rect x="1167.1" y="723.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (93 samples, 0.10%)</title><rect x="1167.1" y="707.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (93 samples, 0.10%)</title><rect x="1167.1" y="691.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1170.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,806 samples, 1.85%)</title><rect x="1168.2" y="947.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.2" y="958.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.04%)</title><rect x="1168.2" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.2" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.04%)</title><rect x="1168.2" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$214/387790185.get$Lambda (30 samples, 0.03%)</title><rect x="1168.2" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.2" y="910.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$214 (30 samples, 0.03%)</title><rect x="1168.2" y="883.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1171.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1449621165.linkToTargetMethod (49 samples, 0.05%)</title><rect x="1168.7" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="1168.7" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$216/1422982210.get$Lambda (49 samples, 0.05%)</title><rect x="1168.7" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.7" y="910.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$216 (49 samples, 0.05%)</title><rect x="1168.7" y="883.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1171.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (674 samples, 0.69%)</title><rect x="1169.3" y="931.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$218/1474124633.accept (582 samples, 0.60%)</title><rect x="1169.3" y="915.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (582 samples, 0.60%)</title><rect x="1169.3" y="899.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1172.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (582 samples, 0.60%)</title><rect x="1169.3" y="883.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (582 samples, 0.60%)</title><rect x="1169.3" y="867.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1172.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (582 samples, 0.60%)</title><rect x="1169.3" y="851.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (582 samples, 0.60%)</title><rect x="1169.3" y="835.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (582 samples, 0.60%)</title><rect x="1169.3" y="819.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (582 samples, 0.60%)</title><rect x="1169.3" y="803.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (582 samples, 0.60%)</title><rect x="1169.3" y="787.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (582 samples, 0.60%)</title><rect x="1169.3" y="771.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$169/985842944.run (582 samples, 0.60%)</title><rect x="1169.3" y="755.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (582 samples, 0.60%)</title><rect x="1169.3" y="739.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (67 samples, 0.07%)</title><rect x="1169.3" y="723.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (67 samples, 0.07%)</title><rect x="1169.3" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1172.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (66 samples, 0.07%)</title><rect x="1169.3" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (66 samples, 0.07%)</title><rect x="1169.3" y="675.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (66 samples, 0.07%)</title><rect x="1169.3" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (66 samples, 0.07%)</title><rect x="1169.3" y="643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (66 samples, 0.07%)</title><rect x="1169.3" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (66 samples, 0.07%)</title><rect x="1169.3" y="611.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1172.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (41 samples, 0.04%)</title><rect x="1170.1" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1173.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.04%)</title><rect x="1170.1" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.04%)</title><rect x="1170.1" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$228/688377099.get$Lambda (41 samples, 0.04%)</title><rect x="1170.1" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.1" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$228 (41 samples, 0.04%)</title><rect x="1170.1" y="659.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1173.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (474 samples, 0.49%)</title><rect x="1170.6" y="723.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (205 samples, 0.21%)</title><rect x="1170.6" y="707.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (113 samples, 0.12%)</title><rect x="1170.6" y="691.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.6" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (113 samples, 0.12%)</title><rect x="1170.6" y="675.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1173.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (21 samples, 0.02%)</title><rect x="1171.9" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1174.9" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.02%)</title><rect x="1171.9" y="675.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1174.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (71 samples, 0.07%)</title><rect x="1172.2" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.2" y="702.0"></text>
</g>
<g>
<title>java/util/List.of (71 samples, 0.07%)</title><rect x="1172.2" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.2" y="686.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (71 samples, 0.07%)</title><rect x="1172.2" y="659.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1175.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (269 samples, 0.28%)</title><rect x="1173.0" y="707.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$164/346046253.get (269 samples, 0.28%)</title><rect x="1173.0" y="691.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (269 samples, 0.28%)</title><rect x="1173.0" y="675.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (269 samples, 0.28%)</title><rect x="1173.0" y="659.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1176.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (268 samples, 0.27%)</title><rect x="1173.1" y="643.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.1" y="654.0"></text>
</g>
<g>
<title>byte[] (256 samples, 0.26%)</title><rect x="1173.2" y="627.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1176.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$221/910452606.accept (92 samples, 0.09%)</title><rect x="1176.3" y="915.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (92 samples, 0.09%)</title><rect x="1176.3" y="899.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$216/1422982210.run (92 samples, 0.09%)</title><rect x="1176.3" y="883.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (92 samples, 0.09%)</title><rect x="1176.3" y="867.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (92 samples, 0.09%)</title><rect x="1176.3" y="851.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (92 samples, 0.09%)</title><rect x="1176.3" y="835.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (92 samples, 0.09%)</title><rect x="1176.3" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.3" y="830.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (92 samples, 0.09%)</title><rect x="1176.3" y="803.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1179.3" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (72 samples, 0.07%)</title><rect x="1177.4" y="931.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.4" y="942.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (72 samples, 0.07%)</title><rect x="1177.4" y="915.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1180.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (112 samples, 0.11%)</title><rect x="1178.3" y="931.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.3" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (57 samples, 0.06%)</title><rect x="1178.3" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (57 samples, 0.06%)</title><rect x="1178.3" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (57 samples, 0.06%)</title><rect x="1178.3" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (57 samples, 0.06%)</title><rect x="1178.3" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (57 samples, 0.06%)</title><rect x="1178.3" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (57 samples, 0.06%)</title><rect x="1178.3" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.3" y="846.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (57 samples, 0.06%)</title><rect x="1178.3" y="819.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1181.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (55 samples, 0.06%)</title><rect x="1179.0" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1182.0" y="926.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (55 samples, 0.06%)</title><rect x="1179.0" y="899.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1182.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (199 samples, 0.20%)</title><rect x="1179.6" y="931.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$171/1682704029.run (130 samples, 0.13%)</title><rect x="1179.6" y="915.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (130 samples, 0.13%)</title><rect x="1179.6" y="899.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.13%)</title><rect x="1179.6" y="883.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.13%)</title><rect x="1179.6" y="867.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (130 samples, 0.13%)</title><rect x="1179.6" y="851.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (130 samples, 0.13%)</title><rect x="1179.6" y="835.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$169/985842944.run (130 samples, 0.13%)</title><rect x="1179.6" y="819.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (130 samples, 0.13%)</title><rect x="1179.6" y="803.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (130 samples, 0.13%)</title><rect x="1179.6" y="787.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (130 samples, 0.13%)</title><rect x="1179.6" y="771.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (130 samples, 0.13%)</title><rect x="1179.6" y="755.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (130 samples, 0.13%)</title><rect x="1179.6" y="739.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (130 samples, 0.13%)</title><rect x="1179.6" y="723.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/913190639.linkToTargetMethod (85 samples, 0.09%)</title><rect x="1179.6" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1740035246.invoke (85 samples, 0.09%)</title><rect x="1179.6" y="691.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.09%)</title><rect x="1179.6" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (85 samples, 0.09%)</title><rect x="1179.6" y="659.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (85 samples, 0.09%)</title><rect x="1179.6" y="643.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.6" y="654.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.09%)</title><rect x="1179.6" y="627.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1182.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (45 samples, 0.05%)</title><rect x="1180.7" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.05%)</title><rect x="1180.7" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1183.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.05%)</title><rect x="1180.7" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$228/688377099.get$Lambda (45 samples, 0.05%)</title><rect x="1180.7" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$228 (45 samples, 0.05%)</title><rect x="1180.7" y="643.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1183.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$173/2084076958.run (69 samples, 0.07%)</title><rect x="1181.2" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (69 samples, 0.07%)</title><rect x="1181.2" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1184.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.07%)</title><rect x="1181.2" y="883.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1184.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.07%)</title><rect x="1181.2" y="867.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$224/1128521182.get$Lambda (67 samples, 0.07%)</title><rect x="1181.2" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.2" y="862.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$224 (67 samples, 0.07%)</title><rect x="1181.2" y="835.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (81 samples, 0.08%)</title><rect x="1182.0" y="931.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (63 samples, 0.06%)</title><rect x="1182.3" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (50 samples, 0.05%)</title><rect x="1182.4" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.4" y="910.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.02%)</title><rect x="1182.4" y="883.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1185.4" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (26 samples, 0.03%)</title><rect x="1182.7" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.7" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (26 samples, 0.03%)</title><rect x="1182.7" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (26 samples, 0.03%)</title><rect x="1182.7" y="851.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1185.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (391 samples, 0.40%)</title><rect x="1183.0" y="931.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1186.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.03%)</title><rect x="1183.0" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.03%)</title><rect x="1183.0" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$211/512992178.get$Lambda (30 samples, 0.03%)</title><rect x="1183.0" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.0" y="894.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$211 (30 samples, 0.03%)</title><rect x="1183.0" y="867.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1186.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collection.stream (208 samples, 0.21%)</title><rect x="1183.4" y="915.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.4" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (79 samples, 0.08%)</title><rect x="1183.4" y="899.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.4" y="910.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (79 samples, 0.08%)</title><rect x="1183.4" y="883.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1186.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (129 samples, 0.13%)</title><rect x="1184.3" y="899.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.3" y="910.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (129 samples, 0.13%)</title><rect x="1184.3" y="883.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1187.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (153 samples, 0.16%)</title><rect x="1185.9" y="915.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.9" y="926.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (153 samples, 0.16%)</title><rect x="1185.9" y="899.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1188.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (124 samples, 0.13%)</title><rect x="1187.8" y="931.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (124 samples, 0.13%)</title><rect x="1187.8" y="915.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (124 samples, 0.13%)</title><rect x="1187.8" y="899.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (123 samples, 0.13%)</title><rect x="1187.8" y="883.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (55 samples, 0.06%)</title><rect x="1187.8" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>java.lang.Integer (55 samples, 0.06%)</title><rect x="1187.8" y="851.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (68 samples, 0.07%)</title><rect x="1188.4" y="867.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.add (68 samples, 0.07%)</title><rect x="1188.4" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (68 samples, 0.07%)</title><rect x="1188.4" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (68 samples, 0.07%)</title><rect x="1188.4" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (68 samples, 0.07%)</title><rect x="1188.4" y="803.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (68 samples, 0.07%)</title><rect x="1188.4" y="787.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1191.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (38 samples, 0.04%)</title><rect x="1189.3" y="931.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (38 samples, 0.04%)</title><rect x="1189.3" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (38 samples, 0.04%)</title><rect x="1189.3" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (38 samples, 0.04%)</title><rect x="1189.3" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (31 samples, 0.03%)</title><rect x="1189.3" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.3" y="878.0"></text>
</g>
<g>
<title>java.lang.Integer (31 samples, 0.03%)</title><rect x="1189.3" y="851.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1192.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (22 samples, 0.02%)</title><rect x="1189.7" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (22 samples, 0.02%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (22 samples, 0.02%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (22 samples, 0.02%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
</g>
</svg>
