<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1285"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1285"> </text>
<g id="frames">
<g>
<title>all (150,681 samples, 100.00%)</title><rect x="10.0" y="1251.0" width="1180.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="1262.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (146,725 samples, 97.37%)</title><rect x="10.0" y="1235.0" width="1149.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="1246.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (91,578 samples, 60.78%)</title><rect x="10.0" y="1219.0" width="717.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="1230.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (91,578 samples, 60.78%)</title><rect x="10.0" y="1203.0" width="717.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="1214.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (91,578 samples, 60.78%)</title><rect x="10.0" y="1187.0" width="717.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="1198.0">io/netty/util/concurrent/SingleThreadEventExecutor$4.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (91,578 samples, 60.78%)</title><rect x="10.0" y="1171.0" width="717.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="1182.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (51,960 samples, 34.48%)</title><rect x="10.0" y="1155.0" width="406.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="1166.0">io/netty/channel/nio/NioEventLoop.processSelectedKeys</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (51,960 samples, 34.48%)</title><rect x="10.0" y="1139.0" width="406.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="1150.0">io/netty/channel/nio/NioEventLoop.processSelectedKeysOpt..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (51,960 samples, 34.48%)</title><rect x="10.0" y="1123.0" width="406.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="1134.0">io/netty/channel/nio/NioEventLoop.processSelectedKey</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (51,960 samples, 34.48%)</title><rect x="10.0" y="1107.0" width="406.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="1118.0">io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsaf..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (48,331 samples, 32.08%)</title><rect x="10.0" y="1091.0" width="378.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="1102.0">io/netty/channel/DefaultChannelPipeline.fireChannelR..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (48,331 samples, 32.08%)</title><rect x="10.0" y="1075.0" width="378.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="1086.0">io/netty/channel/AbstractChannelHandlerContext.invok..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (46,468 samples, 30.84%)</title><rect x="10.0" y="1059.0" width="363.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="1070.0">io/netty/channel/AbstractChannelHandlerContext.in..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (46,468 samples, 30.84%)</title><rect x="10.0" y="1043.0" width="363.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="1054.0">io/netty/channel/DefaultChannelPipeline$HeadConte..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (46,468 samples, 30.84%)</title><rect x="10.0" y="1027.0" width="363.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="1038.0">io/netty/channel/AbstractChannelHandlerContext.fi..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (46,468 samples, 30.84%)</title><rect x="10.0" y="1011.0" width="363.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="1022.0">io/netty/channel/AbstractChannelHandlerContext.in..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (44,613 samples, 29.61%)</title><rect x="10.0" y="995.0" width="349.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="1006.0">io/netty/channel/AbstractChannelHandlerContext...</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (44,613 samples, 29.61%)</title><rect x="10.0" y="979.0" width="349.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="990.0">io/netty/handler/codec/ByteToMessageDecoder.cha..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (1,693 samples, 1.12%)</title><rect x="10.0" y="963.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,693 samples, 1.12%)</title><rect x="10.0" y="947.0" width="13.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,693 samples, 1.12%)</title><rect x="10.0" y="931.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (108 samples, 0.07%)</title><rect x="10.0" y="915.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,585 samples, 1.05%)</title><rect x="10.9" y="915.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,585 samples, 1.05%)</title><rect x="10.9" y="899.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,585 samples, 1.05%)</title><rect x="10.9" y="883.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,585 samples, 1.05%)</title><rect x="10.9" y="867.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.9" y="878.0"></text>
</g>
<g>
<title>int[] (342 samples, 0.23%)</title><rect x="10.9" y="851.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.9" y="862.0"></text>
</g>
<g>
<title>java.lang.Object[] (394 samples, 0.26%)</title><rect x="13.5" y="851.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.5" y="862.0"></text>
</g>
<g>
<title>long[] (663 samples, 0.44%)</title><rect x="16.6" y="851.0" width="5.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="19.6" y="862.0"></text>
</g>
<g>
<title>short[] (186 samples, 0.12%)</title><rect x="21.8" y="851.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="24.8" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (10,491 samples, 6.96%)</title><rect x="23.3" y="963.0" width="82.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.3" y="974.0">io/netty/..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (10,491 samples, 6.96%)</title><rect x="23.3" y="947.0" width="82.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.3" y="958.0">io/netty/..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.decode (10,491 samples, 6.96%)</title><rect x="23.3" y="931.0" width="82.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.3" y="942.0">io/netty/..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$LineParser.parse (1,666 samples, 1.11%)</title><rect x="23.3" y="915.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.3" y="926.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (1,666 samples, 1.11%)</title><rect x="23.3" y="899.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.3" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.forEachByte (1,666 samples, 1.11%)</title><rect x="23.3" y="883.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.3" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,666 samples, 1.11%)</title><rect x="23.3" y="867.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.3" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,666 samples, 1.11%)</title><rect x="23.3" y="851.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.3" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,666 samples, 1.11%)</title><rect x="23.3" y="835.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.3" y="846.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (124 samples, 0.08%)</title><rect x="23.3" y="819.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="26.3" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,542 samples, 1.02%)</title><rect x="24.2" y="819.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,542 samples, 1.02%)</title><rect x="24.2" y="803.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,542 samples, 1.02%)</title><rect x="24.2" y="787.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,542 samples, 1.02%)</title><rect x="24.2" y="771.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.2" y="782.0"></text>
</g>
<g>
<title>int[] (342 samples, 0.23%)</title><rect x="24.2" y="755.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="27.2" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (394 samples, 0.26%)</title><rect x="26.9" y="755.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="29.9" y="766.0"></text>
</g>
<g>
<title>long[] (618 samples, 0.41%)</title><rect x="30.0" y="755.0" width="4.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="33.0" y="766.0"></text>
</g>
<g>
<title>short[] (188 samples, 0.12%)</title><rect x="34.8" y="755.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="37.8" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (7,973 samples, 5.29%)</title><rect x="36.3" y="915.0" width="62.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.3" y="926.0">io/net..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (305 samples, 0.20%)</title><rect x="36.3" y="899.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.3" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (305 samples, 0.20%)</title><rect x="36.3" y="883.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.3" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (305 samples, 0.20%)</title><rect x="36.3" y="867.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.3" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (305 samples, 0.20%)</title><rect x="36.3" y="851.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.3" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (305 samples, 0.20%)</title><rect x="36.3" y="835.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.3" y="846.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (305 samples, 0.20%)</title><rect x="36.3" y="819.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="39.3" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.getAll (119 samples, 0.08%)</title><rect x="38.7" y="899.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.7" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAllAsString (119 samples, 0.08%)</title><rect x="38.7" y="883.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.7" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.getAll (119 samples, 0.08%)</title><rect x="38.7" y="867.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.7" y="878.0"></text>
</g>
<g>
<title>java.util.LinkedList (75 samples, 0.05%)</title><rect x="38.7" y="851.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="41.7" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (44 samples, 0.03%)</title><rect x="39.3" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.3" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (44 samples, 0.03%)</title><rect x="39.3" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.3" y="846.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (44 samples, 0.03%)</title><rect x="39.3" y="819.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="42.3" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (6,666 samples, 4.42%)</title><rect x="39.6" y="899.0" width="52.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="910.0">io/ne..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.forEachByte (6,666 samples, 4.42%)</title><rect x="39.6" y="883.0" width="52.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.6" y="894.0">io/ne..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (6,666 samples, 4.42%)</title><rect x="39.6" y="867.0" width="52.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.6" y="878.0">io/ne..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (6,666 samples, 4.42%)</title><rect x="39.6" y="851.0" width="52.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.6" y="862.0">io/ne..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (6,666 samples, 4.42%)</title><rect x="39.6" y="835.0" width="52.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.6" y="846.0">io/ne..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (480 samples, 0.32%)</title><rect x="39.6" y="819.0" width="3.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="42.6" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (6,186 samples, 4.11%)</title><rect x="43.4" y="819.0" width="48.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.4" y="830.0">io/n..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (6,186 samples, 4.11%)</title><rect x="43.4" y="803.0" width="48.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.4" y="814.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6,186 samples, 4.11%)</title><rect x="43.4" y="787.0" width="48.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.4" y="798.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6,186 samples, 4.11%)</title><rect x="43.4" y="771.0" width="48.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.4" y="782.0">java..</text>
</g>
<g>
<title>int[] (1,326 samples, 0.88%)</title><rect x="43.4" y="755.0" width="10.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="46.4" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,656 samples, 1.10%)</title><rect x="53.8" y="755.0" width="12.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="56.8" y="766.0"></text>
</g>
<g>
<title>long[] (2,428 samples, 1.61%)</title><rect x="66.7" y="755.0" width="19.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="69.7" y="766.0"></text>
</g>
<g>
<title>short[] (776 samples, 0.51%)</title><rect x="85.8" y="755.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="88.8" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.splitHeader (782 samples, 0.52%)</title><rect x="91.8" y="899.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.8" y="910.0"></text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.subStringUnsafe (782 samples, 0.52%)</title><rect x="91.8" y="883.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.8" y="894.0"></text>
</g>
<g>
<title>java.lang.String (351 samples, 0.23%)</title><rect x="91.8" y="867.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="94.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (431 samples, 0.29%)</title><rect x="94.6" y="867.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (431 samples, 0.29%)</title><rect x="94.6" y="851.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (431 samples, 0.29%)</title><rect x="94.6" y="835.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.6" y="846.0"></text>
</g>
<g>
<title>byte[] (431 samples, 0.29%)</title><rect x="94.6" y="819.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="97.6" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isTransferEncodingChunked (101 samples, 0.07%)</title><rect x="98.0" y="899.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.0" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeaders.containsValue (101 samples, 0.07%)</title><rect x="98.0" y="883.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.0" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.valueCharSequenceIterator (101 samples, 0.07%)</title><rect x="98.0" y="867.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.0" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.valueIterator (101 samples, 0.07%)</title><rect x="98.0" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.0" y="862.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$ValueIterator (101 samples, 0.07%)</title><rect x="98.0" y="835.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="101.0" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.splitInitialLine (402 samples, 0.27%)</title><rect x="98.8" y="915.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.8" y="926.0"></text>
</g>
<g>
<title>io/netty/util/internal/AppendableCharSequence.subStringUnsafe (402 samples, 0.27%)</title><rect x="98.8" y="899.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.8" y="910.0"></text>
</g>
<g>
<title>java.lang.String (170 samples, 0.11%)</title><rect x="98.8" y="883.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="101.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (232 samples, 0.15%)</title><rect x="100.1" y="883.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (232 samples, 0.15%)</title><rect x="100.1" y="867.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (232 samples, 0.15%)</title><rect x="100.1" y="851.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.1" y="862.0"></text>
</g>
<g>
<title>byte[] (232 samples, 0.15%)</title><rect x="100.1" y="835.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="103.1" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpRequestDecoder.createMessage (450 samples, 0.30%)</title><rect x="101.9" y="915.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.9" y="926.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpRequest (71 samples, 0.05%)</title><rect x="101.9" y="899.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="104.9" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpRequest.&lt;init&gt; (379 samples, 0.25%)</title><rect x="102.5" y="899.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.5" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (379 samples, 0.25%)</title><rect x="102.5" y="883.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.5" y="894.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (42 samples, 0.03%)</title><rect x="102.5" y="867.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="105.5" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (337 samples, 0.22%)</title><rect x="102.8" y="867.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.8" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (337 samples, 0.22%)</title><rect x="102.8" y="851.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.8" y="862.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (90 samples, 0.06%)</title><rect x="102.8" y="835.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="105.8" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (247 samples, 0.16%)</title><rect x="103.5" y="835.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.5" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (247 samples, 0.16%)</title><rect x="103.5" y="819.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.5" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (247 samples, 0.16%)</title><rect x="103.5" y="803.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.5" y="814.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (161 samples, 0.11%)</title><rect x="103.5" y="787.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="106.5" y="798.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (86 samples, 0.06%)</title><rect x="104.7" y="787.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="107.7" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="963.0" width="254.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.4" y="974.0">io/netty/handler/codec/ByteToMessa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="947.0" width="254.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.4" y="958.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="931.0" width="254.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.4" y="942.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="915.0" width="254.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.4" y="926.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="899.0" width="254.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.4" y="910.0">io/netty/channel/CombinedChannelDu..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="883.0" width="254.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.4" y="894.0">io/netty/handler/codec/ByteToMessa..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="867.0" width="254.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.4" y="878.0">io/netty/channel/CombinedChannelDu..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="851.0" width="254.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.4" y="862.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="835.0" width="254.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.4" y="846.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="819.0" width="254.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.4" y="830.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (32,429 samples, 21.52%)</title><rect x="105.4" y="803.0" width="254.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.4" y="814.0">io/netty/handler/codec/MessageToMe..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (28,248 samples, 18.75%)</title><rect x="105.4" y="787.0" width="221.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.4" y="798.0">io/netty/channel/AbstractChan..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (28,248 samples, 18.75%)</title><rect x="105.4" y="771.0" width="221.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.4" y="782.0">io/netty/channel/AbstractChan..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (24,794 samples, 16.45%)</title><rect x="105.4" y="755.0" width="194.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.4" y="766.0">io/netty/channel/Abstract..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (24,794 samples, 16.45%)</title><rect x="105.4" y="739.0" width="194.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.4" y="750.0">io/netty/channel/SimpleCh..</text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (3,340 samples, 2.22%)</title><rect x="105.4" y="723.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.4" y="734.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.release (3,340 samples, 2.22%)</title><rect x="105.4" y="707.0" width="26.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.4" y="718.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.release (3,340 samples, 2.22%)</title><rect x="105.4" y="691.0" width="26.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.4" y="702.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (3,340 samples, 2.22%)</title><rect x="105.4" y="675.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.4" y="686.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (3,340 samples, 2.22%)</title><rect x="105.4" y="659.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.4" y="670.0">i..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (120 samples, 0.08%)</title><rect x="105.4" y="643.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="108.4" y="654.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3,220 samples, 2.14%)</title><rect x="106.4" y="643.0" width="25.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="654.0">i..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3,220 samples, 2.14%)</title><rect x="106.4" y="627.0" width="25.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.4" y="638.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,220 samples, 2.14%)</title><rect x="106.4" y="611.0" width="25.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.4" y="622.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,220 samples, 2.14%)</title><rect x="106.4" y="595.0" width="25.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.4" y="606.0">j..</text>
</g>
<g>
<title>int[] (670 samples, 0.44%)</title><rect x="106.4" y="579.0" width="5.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="109.4" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (851 samples, 0.56%)</title><rect x="111.6" y="579.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="114.6" y="590.0"></text>
</g>
<g>
<title>long[] (1,348 samples, 0.89%)</title><rect x="118.3" y="579.0" width="10.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="121.3" y="590.0"></text>
</g>
<g>
<title>short[] (351 samples, 0.23%)</title><rect x="128.8" y="579.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="131.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (21,454 samples, 14.24%)</title><rect x="131.6" y="723.0" width="168.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.6" y="734.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.channelRead0 (21,454 samples, 14.24%)</title><rect x="131.6" y="707.0" width="168.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.6" y="718.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.entityHandler (21,454 samples, 14.24%)</title><rect x="131.6" y="691.0" width="168.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.6" y="702.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.parameters (843 samples, 0.56%)</title><rect x="131.7" y="675.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.7" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.decodeParams (843 samples, 0.56%)</title><rect x="131.7" y="659.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.7" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.addParam (720 samples, 0.48%)</title><rect x="131.7" y="643.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/QueryStringDecoder.decodeComponent (308 samples, 0.20%)</title><rect x="131.7" y="627.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (308 samples, 0.20%)</title><rect x="131.7" y="611.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (308 samples, 0.20%)</title><rect x="131.7" y="595.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (149 samples, 0.10%)</title><rect x="131.7" y="579.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="134.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (159 samples, 0.11%)</title><rect x="132.8" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.8" y="590.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.11%)</title><rect x="132.8" y="563.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="135.8" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (64 samples, 0.04%)</title><rect x="134.1" y="627.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="137.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (68 samples, 0.05%)</title><rect x="134.6" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.6" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (68 samples, 0.05%)</title><rect x="134.6" y="611.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="137.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (280 samples, 0.19%)</title><rect x="135.1" y="627.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (280 samples, 0.19%)</title><rect x="135.1" y="611.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (182 samples, 0.12%)</title><rect x="135.1" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.1" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (182 samples, 0.12%)</title><rect x="135.1" y="579.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="138.1" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (98 samples, 0.07%)</title><rect x="136.5" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.5" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap$Entry (98 samples, 0.07%)</title><rect x="136.5" y="579.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="139.5" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap (123 samples, 0.08%)</title><rect x="137.3" y="643.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="140.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/NettyRequests.getRequest (20,410 samples, 13.55%)</title><rect x="138.3" y="675.0" width="159.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.3" y="686.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.multiGet (20,410 samples, 13.55%)</title><rect x="138.3" y="659.0" width="159.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.3" y="670.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java.util.ArrayList (83 samples, 0.06%)</title><rect x="138.3" y="643.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="141.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (57 samples, 0.04%)</title><rect x="138.9" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (57 samples, 0.04%)</title><rect x="138.9" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (57 samples, 0.04%)</title><rect x="138.9" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.04%)</title><rect x="138.9" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.9" y="606.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.04%)</title><rect x="138.9" y="579.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="141.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.03%)</title><rect x="139.4" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.03%)</title><rect x="139.4" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests$$Lambda$152/120584240.get$Lambda (40 samples, 0.03%)</title><rect x="139.4" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.ReplicasNettyRequests$$Lambda$152 (40 samples, 0.03%)</title><rect x="139.4" y="595.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="142.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (108 samples, 0.07%)</title><rect x="139.7" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (108 samples, 0.07%)</title><rect x="139.7" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.7" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (108 samples, 0.07%)</title><rect x="139.7" y="611.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="142.7" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (73 samples, 0.05%)</title><rect x="140.5" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (73 samples, 0.05%)</title><rect x="140.5" y="627.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="143.5" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonSet.iterator (37 samples, 0.02%)</title><rect x="141.1" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.1" y="654.0"></text>
</g>
<g>
<title>java/util/Collections.singletonIterator (37 samples, 0.02%)</title><rect x="141.1" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.1" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$1 (37 samples, 0.02%)</title><rect x="141.1" y="611.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="144.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (48 samples, 0.03%)</title><rect x="141.5" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (463 samples, 0.31%)</title><rect x="141.9" y="643.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (463 samples, 0.31%)</title><rect x="141.9" y="627.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (77 samples, 0.05%)</title><rect x="141.9" y="611.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="144.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (51 samples, 0.03%)</title><rect x="142.5" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (51 samples, 0.03%)</title><rect x="142.5" y="595.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="145.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (334 samples, 0.22%)</title><rect x="142.9" y="611.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests$$Lambda$152/120584240.apply (334 samples, 0.22%)</title><rect x="142.9" y="595.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.lambda$multiGet$0 (334 samples, 0.22%)</title><rect x="142.9" y="579.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.processResponses (334 samples, 0.22%)</title><rect x="142.9" y="563.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.merge (104 samples, 0.07%)</title><rect x="143.2" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (46 samples, 0.03%)</title><rect x="143.6" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (40 samples, 0.03%)</title><rect x="143.7" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (190 samples, 0.13%)</title><rect x="144.0" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.0" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (105 samples, 0.07%)</title><rect x="144.4" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.4" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (105 samples, 0.07%)</title><rect x="144.4" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.4" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (105 samples, 0.07%)</title><rect x="144.4" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.4" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (50 samples, 0.03%)</title><rect x="144.4" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.4" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (50 samples, 0.03%)</title><rect x="144.4" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.4" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (43 samples, 0.03%)</title><rect x="144.4" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.4" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (43 samples, 0.03%)</title><rect x="144.4" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.4" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (43 samples, 0.03%)</title><rect x="144.4" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.4" y="430.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (35 samples, 0.02%)</title><rect x="144.4" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="147.4" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (52 samples, 0.03%)</title><rect x="144.8" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.8" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (52 samples, 0.03%)</title><rect x="144.8" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.8" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (47 samples, 0.03%)</title><rect x="144.8" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.8" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (47 samples, 0.03%)</title><rect x="144.8" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.8" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (35 samples, 0.02%)</title><rect x="144.9" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.9" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (35 samples, 0.02%)</title><rect x="144.9" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.9" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (35 samples, 0.02%)</title><rect x="144.9" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.9" y="398.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (44 samples, 0.03%)</title><rect x="145.2" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.2" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (44 samples, 0.03%)</title><rect x="145.2" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Topology.getReplicas (196 samples, 0.13%)</title><rect x="145.5" y="643.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (48 samples, 0.03%)</title><rect x="145.7" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.7" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap (48 samples, 0.03%)</title><rect x="145.7" y="611.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="148.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (130 samples, 0.09%)</title><rect x="146.0" y="627.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (130 samples, 0.09%)</title><rect x="146.0" y="611.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (130 samples, 0.09%)</title><rect x="146.0" y="595.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (66 samples, 0.04%)</title><rect x="146.0" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.0" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (66 samples, 0.04%)</title><rect x="146.0" y="563.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="149.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (64 samples, 0.04%)</title><rect x="146.6" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.6" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (64 samples, 0.04%)</title><rect x="146.6" y="563.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="149.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.atLeastAsync (727 samples, 0.48%)</title><rect x="147.1" y="643.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (54 samples, 0.04%)</title><rect x="147.1" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="150.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (46 samples, 0.03%)</title><rect x="147.5" y="627.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="150.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (150 samples, 0.10%)</title><rect x="147.8" y="627.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="150.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (417 samples, 0.28%)</title><rect x="149.0" y="627.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$141/721267879.accept (417 samples, 0.28%)</title><rect x="149.0" y="611.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$atLeastAsync$9 (417 samples, 0.28%)</title><rect x="149.0" y="595.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1131895150.linkToTargetMethod (161 samples, 0.11%)</title><rect x="149.0" y="579.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1879048734.invokeStatic (161 samples, 0.11%)</title><rect x="149.0" y="563.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$150/536019492.get$Lambda (161 samples, 0.11%)</title><rect x="149.0" y="547.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.0" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.utils.ServiceUtils$$Lambda$150 (161 samples, 0.11%)</title><rect x="149.0" y="531.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (256 samples, 0.17%)</title><rect x="150.3" y="579.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (256 samples, 0.17%)</title><rect x="150.3" y="563.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (158 samples, 0.10%)</title><rect x="150.3" y="547.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="153.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (48 samples, 0.03%)</title><rect x="151.5" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (48 samples, 0.03%)</title><rect x="151.5" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="154.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.03%)</title><rect x="151.9" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.03%)</title><rect x="151.9" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.03%)</title><rect x="151.9" y="515.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="154.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (60 samples, 0.04%)</title><rect x="152.3" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (36 samples, 0.02%)</title><rect x="152.5" y="611.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="155.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.getProxyResponse (4,901 samples, 3.25%)</title><rect x="152.8" y="643.0" width="38.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.8" y="654.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (102 samples, 0.07%)</title><rect x="152.8" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (102 samples, 0.07%)</title><rect x="152.8" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (49 samples, 0.03%)</title><rect x="152.8" y="595.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="155.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="153.1" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="153.1" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="153.1" y="563.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="156.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,115 samples, 2.07%)</title><rect x="153.6" y="627.0" width="24.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.6" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,115 samples, 2.07%)</title><rect x="153.6" y="611.0" width="24.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.6" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,115 samples, 2.07%)</title><rect x="153.6" y="595.0" width="24.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.6" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,115 samples, 2.07%)</title><rect x="153.6" y="579.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.6" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.02%)</title><rect x="153.6" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.02%)</title><rect x="153.6" y="547.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$130/164833987.get$Lambda (34 samples, 0.02%)</title><rect x="153.6" y="531.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$130 (34 samples, 0.02%)</title><rect x="153.6" y="515.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="156.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (111 samples, 0.07%)</title><rect x="153.8" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (111 samples, 0.07%)</title><rect x="153.8" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (64 samples, 0.04%)</title><rect x="153.8" y="531.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="156.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="154.3" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="154.3" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.03%)</title><rect x="154.3" y="499.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="157.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (93 samples, 0.06%)</title><rect x="154.7" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (93 samples, 0.06%)</title><rect x="154.7" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (50 samples, 0.03%)</title><rect x="154.7" y="531.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="157.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="155.1" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="155.1" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.03%)</title><rect x="155.1" y="499.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="158.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (83 samples, 0.06%)</title><rect x="155.4" y="563.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="158.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (135 samples, 0.09%)</title><rect x="156.1" y="563.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="159.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,537 samples, 1.02%)</title><rect x="157.1" y="563.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (143 samples, 0.09%)</title><rect x="157.1" y="547.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (107 samples, 0.07%)</title><rect x="157.1" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.1" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (40 samples, 0.03%)</title><rect x="157.1" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.1" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (40 samples, 0.03%)</title><rect x="157.1" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="160.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (67 samples, 0.04%)</title><rect x="157.4" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.4" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (67 samples, 0.04%)</title><rect x="157.4" y="499.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="160.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (36 samples, 0.02%)</title><rect x="158.0" y="531.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (36 samples, 0.02%)</title><rect x="158.0" y="515.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (36 samples, 0.02%)</title><rect x="158.0" y="499.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$110/815972900.get (36 samples, 0.02%)</title><rect x="158.0" y="483.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.0" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (36 samples, 0.02%)</title><rect x="158.0" y="467.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="161.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (577 samples, 0.38%)</title><rect x="158.2" y="547.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (577 samples, 0.38%)</title><rect x="158.2" y="531.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (76 samples, 0.05%)</title><rect x="158.6" y="515.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="161.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.03%)</title><rect x="159.4" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.03%)</title><rect x="159.4" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.get$Lambda (52 samples, 0.03%)</title><rect x="159.4" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.4" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$106 (52 samples, 0.03%)</title><rect x="159.4" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="162.4" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (265 samples, 0.18%)</title><rect x="159.8" y="515.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (265 samples, 0.18%)</title><rect x="159.8" y="499.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.accept (265 samples, 0.18%)</title><rect x="159.8" y="483.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (265 samples, 0.18%)</title><rect x="159.8" y="467.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (70 samples, 0.05%)</title><rect x="159.8" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.accept (70 samples, 0.05%)</title><rect x="159.8" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (70 samples, 0.05%)</title><rect x="159.8" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (70 samples, 0.05%)</title><rect x="159.8" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (70 samples, 0.05%)</title><rect x="159.8" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (70 samples, 0.05%)</title><rect x="159.8" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (70 samples, 0.05%)</title><rect x="159.8" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.05%)</title><rect x="159.8" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (70 samples, 0.05%)</title><rect x="159.8" y="323.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="162.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.03%)</title><rect x="160.3" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="160.3" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.get$Lambda (38 samples, 0.03%)</title><rect x="160.3" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.3" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (38 samples, 0.03%)</title><rect x="160.3" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="163.3" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (76 samples, 0.05%)</title><rect x="160.6" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.6" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (76 samples, 0.05%)</title><rect x="160.6" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (33 samples, 0.02%)</title><rect x="160.6" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.02%)</title><rect x="160.6" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.02%)</title><rect x="160.6" y="387.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="163.6" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (43 samples, 0.03%)</title><rect x="160.9" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.9" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (43 samples, 0.03%)</title><rect x="160.9" y="403.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="163.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (81 samples, 0.05%)</title><rect x="161.2" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (81 samples, 0.05%)</title><rect x="161.2" y="435.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="164.2" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (38 samples, 0.03%)</title><rect x="161.9" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.9" y="526.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (38 samples, 0.03%)</title><rect x="161.9" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="164.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (75 samples, 0.05%)</title><rect x="162.2" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.2" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.05%)</title><rect x="162.2" y="499.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="165.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (584 samples, 0.39%)</title><rect x="163.0" y="547.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.0" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (584 samples, 0.39%)</title><rect x="163.0" y="531.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.0" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (524 samples, 0.35%)</title><rect x="163.0" y="515.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.0" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (524 samples, 0.35%)</title><rect x="163.0" y="499.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.0" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (524 samples, 0.35%)</title><rect x="163.0" y="483.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.0" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (123 samples, 0.08%)</title><rect x="163.0" y="467.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="166.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (157 samples, 0.10%)</title><rect x="163.9" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (157 samples, 0.10%)</title><rect x="163.9" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.9" y="462.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.10%)</title><rect x="163.9" y="435.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="166.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (244 samples, 0.16%)</title><rect x="165.2" y="467.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (244 samples, 0.16%)</title><rect x="165.2" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.05%)</title><rect x="165.2" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="168.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (163 samples, 0.11%)</title><rect x="165.8" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.8" y="446.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.11%)</title><rect x="165.8" y="419.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="168.8" y="430.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (60 samples, 0.04%)</title><rect x="167.1" y="515.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="170.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (59 samples, 0.04%)</title><rect x="167.6" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (59 samples, 0.04%)</title><rect x="167.6" y="531.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="170.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (146 samples, 0.10%)</title><rect x="168.0" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (43 samples, 0.03%)</title><rect x="168.3" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.3" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.03%)</title><rect x="168.3" y="515.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="171.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (72 samples, 0.05%)</title><rect x="168.6" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.6" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.05%)</title><rect x="168.6" y="515.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="171.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (753 samples, 0.50%)</title><rect x="169.2" y="563.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.2" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.map (68 samples, 0.05%)</title><rect x="169.4" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$115/1907575600.apply (68 samples, 0.05%)</title><rect x="169.4" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (39 samples, 0.03%)</title><rect x="169.6" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (39 samples, 0.03%)</title><rect x="169.6" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="172.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (96 samples, 0.06%)</title><rect x="169.9" y="547.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="172.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (515 samples, 0.34%)</title><rect x="171.0" y="547.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (515 samples, 0.34%)</title><rect x="171.0" y="531.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.0" y="542.0"></text>
</g>
<g>
<title>java.lang.Class[] (46 samples, 0.03%)</title><rect x="171.0" y="515.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="174.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.03%)</title><rect x="171.4" y="515.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="174.4" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList (60 samples, 0.04%)</title><rect x="171.7" y="515.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="174.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (236 samples, 0.16%)</title><rect x="172.2" y="515.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (236 samples, 0.16%)</title><rect x="172.2" y="499.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (236 samples, 0.16%)</title><rect x="172.2" y="483.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (236 samples, 0.16%)</title><rect x="172.2" y="467.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.2" y="478.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (236 samples, 0.16%)</title><rect x="172.2" y="451.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="175.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (55 samples, 0.04%)</title><rect x="174.1" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (55 samples, 0.04%)</title><rect x="174.1" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor6.newInstance (42 samples, 0.03%)</title><rect x="174.1" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (42 samples, 0.03%)</title><rect x="174.1" y="467.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="177.1" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (72 samples, 0.05%)</title><rect x="174.5" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.5" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (72 samples, 0.05%)</title><rect x="174.5" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.5" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (72 samples, 0.05%)</title><rect x="174.5" y="483.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="177.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (369 samples, 0.24%)</title><rect x="175.1" y="563.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (42 samples, 0.03%)</title><rect x="175.1" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (40 samples, 0.03%)</title><rect x="175.1" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="178.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.03%)</title><rect x="175.4" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="178.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (279 samples, 0.19%)</title><rect x="175.8" y="547.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.04%)</title><rect x="175.8" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.04%)</title><rect x="175.8" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (221 samples, 0.15%)</title><rect x="176.2" y="531.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (221 samples, 0.15%)</title><rect x="176.2" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (120 samples, 0.08%)</title><rect x="176.2" y="499.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="179.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.07%)</title><rect x="177.2" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.07%)</title><rect x="177.2" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.07%)</title><rect x="177.2" y="467.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="180.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (642 samples, 0.43%)</title><rect x="177.9" y="627.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (66 samples, 0.04%)</title><rect x="177.9" y="611.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="180.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (576 samples, 0.38%)</title><rect x="178.5" y="611.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.5" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (576 samples, 0.38%)</title><rect x="178.5" y="595.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (576 samples, 0.38%)</title><rect x="178.5" y="579.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.5" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.02%)</title><rect x="178.7" y="563.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="181.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (74 samples, 0.05%)</title><rect x="179.0" y="563.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="182.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="179.7" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="179.7" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.get$Lambda (44 samples, 0.03%)</title><rect x="179.7" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.7" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$106 (44 samples, 0.03%)</title><rect x="179.7" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.7" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (59 samples, 0.04%)</title><rect x="180.1" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.1" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (59 samples, 0.04%)</title><rect x="180.1" y="547.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="183.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (252 samples, 0.17%)</title><rect x="180.6" y="563.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.accept (252 samples, 0.17%)</title><rect x="180.6" y="547.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (252 samples, 0.17%)</title><rect x="180.6" y="531.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="180.6" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="180.6" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.get$Lambda (44 samples, 0.03%)</title><rect x="180.6" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.6" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (44 samples, 0.03%)</title><rect x="180.6" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="183.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (92 samples, 0.06%)</title><rect x="180.9" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.accept (92 samples, 0.06%)</title><rect x="180.9" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (92 samples, 0.06%)</title><rect x="180.9" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (92 samples, 0.06%)</title><rect x="180.9" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (92 samples, 0.06%)</title><rect x="180.9" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (92 samples, 0.06%)</title><rect x="180.9" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (92 samples, 0.06%)</title><rect x="180.9" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (92 samples, 0.06%)</title><rect x="180.9" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (92 samples, 0.06%)</title><rect x="180.9" y="387.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="183.9" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (53 samples, 0.04%)</title><rect x="181.6" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.6" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (53 samples, 0.04%)</title><rect x="181.6" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (63 samples, 0.04%)</title><rect x="182.0" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (63 samples, 0.04%)</title><rect x="182.0" y="499.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="185.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (57 samples, 0.04%)</title><rect x="182.5" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (57 samples, 0.04%)</title><rect x="182.5" y="547.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="185.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.requestBuilder (1,042 samples, 0.69%)</title><rect x="183.0" y="627.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.08%)</title><rect x="183.0" y="611.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (120 samples, 0.08%)</title><rect x="183.0" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/453041767.invoke (120 samples, 0.08%)</title><rect x="183.0" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.08%)</title><rect x="183.0" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (37 samples, 0.02%)</title><rect x="183.0" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.02%)</title><rect x="183.0" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="186.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (83 samples, 0.06%)</title><rect x="183.3" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (83 samples, 0.06%)</title><rect x="183.3" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.3" y="542.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.06%)</title><rect x="183.3" y="515.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="186.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (637 samples, 0.42%)</title><rect x="183.9" y="611.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.9" y="622.0"></text>
</g>
<g>
<title>java.net.URI (131 samples, 0.09%)</title><rect x="183.9" y="595.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="186.9" y="606.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (506 samples, 0.34%)</title><rect x="184.9" y="595.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.9" y="606.0"></text>
</g>
<g>
<title>java.net.URI$Parser (59 samples, 0.04%)</title><rect x="184.9" y="579.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="187.9" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (447 samples, 0.30%)</title><rect x="185.4" y="579.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (96 samples, 0.06%)</title><rect x="185.4" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (96 samples, 0.06%)</title><rect x="185.4" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.03%)</title><rect x="185.4" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="188.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.03%)</title><rect x="185.8" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.8" y="542.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.03%)</title><rect x="185.8" y="515.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="188.8" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (351 samples, 0.23%)</title><rect x="186.2" y="563.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (174 samples, 0.12%)</title><rect x="186.2" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (174 samples, 0.12%)</title><rect x="186.2" y="531.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.05%)</title><rect x="186.2" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (103 samples, 0.07%)</title><rect x="186.7" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.7" y="526.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.07%)</title><rect x="186.7" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="189.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (177 samples, 0.12%)</title><rect x="187.5" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (85 samples, 0.06%)</title><rect x="187.5" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.06%)</title><rect x="187.5" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.02%)</title><rect x="187.5" y="499.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="190.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.03%)</title><rect x="187.8" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.8" y="510.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.03%)</title><rect x="187.8" y="483.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="190.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (92 samples, 0.06%)</title><rect x="188.2" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (92 samples, 0.06%)</title><rect x="188.2" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (92 samples, 0.06%)</title><rect x="188.2" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (92 samples, 0.06%)</title><rect x="188.2" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.02%)</title><rect x="188.2" y="467.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="191.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.04%)</title><rect x="188.5" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.5" y="478.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.04%)</title><rect x="188.5" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="191.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (152 samples, 0.10%)</title><rect x="188.9" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (72 samples, 0.05%)</title><rect x="188.9" y="595.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="191.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (80 samples, 0.05%)</title><rect x="189.5" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (56 samples, 0.04%)</title><rect x="189.7" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (56 samples, 0.04%)</title><rect x="189.7" y="563.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="192.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (133 samples, 0.09%)</title><rect x="190.1" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (133 samples, 0.09%)</title><rect x="190.1" y="595.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (133 samples, 0.09%)</title><rect x="190.1" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.1" y="590.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (133 samples, 0.09%)</title><rect x="190.1" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (62 samples, 0.04%)</title><rect x="190.1" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (62 samples, 0.04%)</title><rect x="190.1" y="531.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="193.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$104/1088609243.apply (71 samples, 0.05%)</title><rect x="190.6" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (71 samples, 0.05%)</title><rect x="190.6" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.6" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (42 samples, 0.03%)</title><rect x="190.6" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="193.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.getTimestampResponse (134 samples, 0.09%)</title><rect x="191.1" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="191.1" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="191.1" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$101/526355395.get$Lambda (44 samples, 0.03%)</title><rect x="191.1" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.1" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.utils.ServiceUtils$$Lambda$101 (44 samples, 0.03%)</title><rect x="191.1" y="579.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="194.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (90 samples, 0.06%)</title><rect x="191.5" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (90 samples, 0.06%)</title><rect x="191.5" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (40 samples, 0.03%)</title><rect x="191.5" y="595.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="194.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (48 samples, 0.03%)</title><rect x="191.8" y="595.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="194.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.respond (13,526 samples, 8.98%)</title><rect x="192.2" y="643.0" width="105.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.2" y="654.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.03%)</title><rect x="192.2" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.03%)</title><rect x="192.2" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$153/1911805998.get$Lambda (43 samples, 0.03%)</title><rect x="192.2" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.2" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.utils.ServiceUtils$$Lambda$153 (43 samples, 0.03%)</title><rect x="192.2" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="195.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13,483 samples, 8.95%)</title><rect x="192.5" y="627.0" width="105.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.5" y="638.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13,483 samples, 8.95%)</title><rect x="192.5" y="611.0" width="105.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.5" y="622.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (86 samples, 0.06%)</title><rect x="192.5" y="595.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="195.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (72 samples, 0.05%)</title><rect x="193.2" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (72 samples, 0.05%)</title><rect x="193.2" y="579.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="196.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13,309 samples, 8.83%)</title><rect x="193.8" y="595.0" width="104.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.8" y="606.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$153/1911805998.accept (13,309 samples, 8.83%)</title><rect x="193.8" y="579.0" width="104.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.8" y="590.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$respond$10 (13,309 samples, 8.83%)</title><rect x="193.8" y="563.0" width="104.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.8" y="574.0">ru/mail/poli..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (13,285 samples, 8.82%)</title><rect x="193.8" y="547.0" width="104.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.8" y="558.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (13,274 samples, 8.81%)</title><rect x="193.8" y="531.0" width="104.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.8" y="542.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (13,274 samples, 8.81%)</title><rect x="193.8" y="515.0" width="104.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.8" y="526.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (13,274 samples, 8.81%)</title><rect x="193.8" y="499.0" width="104.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.8" y="510.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (13,266 samples, 8.80%)</title><rect x="193.8" y="483.0" width="103.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.8" y="494.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.flush (13,266 samples, 8.80%)</title><rect x="193.8" y="467.0" width="103.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.8" y="478.0">io/netty/han..</text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.doFlush (13,266 samples, 8.80%)</title><rect x="193.8" y="451.0" width="103.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.8" y="462.0">io/netty/han..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (2,243 samples, 1.49%)</title><rect x="193.8" y="435.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.8" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (2,243 samples, 1.49%)</title><rect x="193.8" y="419.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.8" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (2,243 samples, 1.49%)</title><rect x="193.8" y="403.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.8" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (2,243 samples, 1.49%)</title><rect x="193.8" y="387.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.8" y="398.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (2,243 samples, 1.49%)</title><rect x="193.8" y="371.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.8" y="382.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (2,243 samples, 1.49%)</title><rect x="193.8" y="355.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.8" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (2,243 samples, 1.49%)</title><rect x="193.8" y="339.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.8" y="350.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (2,243 samples, 1.49%)</title><rect x="193.8" y="323.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.8" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (2,243 samples, 1.49%)</title><rect x="193.8" y="307.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.8" y="318.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (2,243 samples, 1.49%)</title><rect x="193.8" y="291.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.8" y="302.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (2,243 samples, 1.49%)</title><rect x="193.8" y="275.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.8" y="286.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (2,243 samples, 1.49%)</title><rect x="193.8" y="259.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.8" y="270.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (2,243 samples, 1.49%)</title><rect x="193.8" y="243.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.8" y="254.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (2,243 samples, 1.49%)</title><rect x="193.8" y="227.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.8" y="238.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (1,483 samples, 0.98%)</title><rect x="193.8" y="211.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.8" y="222.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.internalNioBuffer (746 samples, 0.50%)</title><rect x="193.8" y="195.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.8" y="206.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (746 samples, 0.50%)</title><rect x="193.8" y="179.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.8" y="190.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (746 samples, 0.50%)</title><rect x="193.8" y="163.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.8" y="174.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (746 samples, 0.50%)</title><rect x="193.8" y="147.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.8" y="158.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (726 samples, 0.48%)</title><rect x="194.0" y="131.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.0" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (726 samples, 0.48%)</title><rect x="194.0" y="115.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.0" y="126.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (726 samples, 0.48%)</title><rect x="194.0" y="99.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.0" y="110.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (726 samples, 0.48%)</title><rect x="194.0" y="83.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.0" y="94.0"></text>
</g>
<g>
<title>int[] (148 samples, 0.10%)</title><rect x="194.0" y="67.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="197.0" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (194 samples, 0.13%)</title><rect x="195.2" y="67.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="198.2" y="78.0"></text>
</g>
<g>
<title>long[] (306 samples, 0.20%)</title><rect x="196.7" y="67.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="199.7" y="78.0"></text>
</g>
<g>
<title>short[] (78 samples, 0.05%)</title><rect x="199.1" y="67.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="202.1" y="78.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.nioBufferCount (737 samples, 0.49%)</title><rect x="199.7" y="195.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.7" y="206.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (737 samples, 0.49%)</title><rect x="199.7" y="179.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.7" y="190.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (737 samples, 0.49%)</title><rect x="199.7" y="163.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.7" y="174.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (737 samples, 0.49%)</title><rect x="199.7" y="147.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.7" y="158.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (719 samples, 0.48%)</title><rect x="199.8" y="131.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.8" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (719 samples, 0.48%)</title><rect x="199.8" y="115.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.8" y="126.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (719 samples, 0.48%)</title><rect x="199.8" y="99.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.8" y="110.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (719 samples, 0.48%)</title><rect x="199.8" y="83.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.8" y="94.0"></text>
</g>
<g>
<title>int[] (161 samples, 0.11%)</title><rect x="199.8" y="67.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="202.8" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (181 samples, 0.12%)</title><rect x="201.1" y="67.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="204.1" y="78.0"></text>
</g>
<g>
<title>long[] (290 samples, 0.19%)</title><rect x="202.5" y="67.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="205.5" y="78.0"></text>
</g>
<g>
<title>short[] (87 samples, 0.06%)</title><rect x="204.8" y="67.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="207.8" y="78.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (760 samples, 0.50%)</title><rect x="205.5" y="211.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.5" y="222.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (760 samples, 0.50%)</title><rect x="205.5" y="195.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.5" y="206.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (760 samples, 0.50%)</title><rect x="205.5" y="179.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.5" y="190.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (760 samples, 0.50%)</title><rect x="205.5" y="163.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.5" y="174.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (760 samples, 0.50%)</title><rect x="205.5" y="147.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.5" y="158.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (760 samples, 0.50%)</title><rect x="205.5" y="131.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.5" y="142.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (760 samples, 0.50%)</title><rect x="205.5" y="115.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.5" y="126.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (732 samples, 0.49%)</title><rect x="205.7" y="99.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.7" y="110.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (732 samples, 0.49%)</title><rect x="205.7" y="83.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.7" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (732 samples, 0.49%)</title><rect x="205.7" y="67.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.7" y="78.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (732 samples, 0.49%)</title><rect x="205.7" y="51.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.7" y="62.0"></text>
</g>
<g>
<title>int[] (147 samples, 0.10%)</title><rect x="205.7" y="35.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="208.7" y="46.0"></text>
</g>
<g>
<title>java.lang.Object[] (194 samples, 0.13%)</title><rect x="206.8" y="35.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="209.8" y="46.0"></text>
</g>
<g>
<title>long[] (307 samples, 0.20%)</title><rect x="208.3" y="35.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="211.3" y="46.0"></text>
</g>
<g>
<title>short[] (84 samples, 0.06%)</title><rect x="210.8" y="35.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="213.8" y="46.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (11,023 samples, 7.32%)</title><rect x="211.4" y="435.0" width="86.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.4" y="446.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (11,023 samples, 7.32%)</title><rect x="211.4" y="419.0" width="86.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.4" y="430.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (11,023 samples, 7.32%)</title><rect x="211.4" y="403.0" width="86.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.4" y="414.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (11,023 samples, 7.32%)</title><rect x="211.4" y="387.0" width="86.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.4" y="398.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (11,023 samples, 7.32%)</title><rect x="211.4" y="371.0" width="86.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.4" y="382.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (11,023 samples, 7.32%)</title><rect x="211.4" y="355.0" width="86.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.4" y="366.0">io/netty/h..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (486 samples, 0.32%)</title><rect x="211.4" y="339.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.4" y="350.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (486 samples, 0.32%)</title><rect x="211.4" y="323.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.4" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (486 samples, 0.32%)</title><rect x="211.4" y="307.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.4" y="318.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (486 samples, 0.32%)</title><rect x="211.4" y="291.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.4" y="302.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (486 samples, 0.32%)</title><rect x="211.4" y="275.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.4" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (486 samples, 0.32%)</title><rect x="211.4" y="259.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.4" y="270.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (486 samples, 0.32%)</title><rect x="211.4" y="243.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.4" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (486 samples, 0.32%)</title><rect x="211.4" y="227.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.4" y="238.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (486 samples, 0.32%)</title><rect x="211.4" y="211.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.4" y="222.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (477 samples, 0.32%)</title><rect x="211.5" y="195.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.5" y="206.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (32 samples, 0.02%)</title><rect x="211.5" y="179.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (445 samples, 0.30%)</title><rect x="211.7" y="179.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.7" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (445 samples, 0.30%)</title><rect x="211.7" y="163.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.7" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (445 samples, 0.30%)</title><rect x="211.7" y="147.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.7" y="158.0"></text>
</g>
<g>
<title>int[] (117 samples, 0.08%)</title><rect x="211.7" y="131.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="214.7" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (116 samples, 0.08%)</title><rect x="212.6" y="131.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="215.6" y="142.0"></text>
</g>
<g>
<title>long[] (178 samples, 0.12%)</title><rect x="213.6" y="131.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="216.6" y="142.0"></text>
</g>
<g>
<title>short[] (34 samples, 0.02%)</title><rect x="214.9" y="131.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="217.9" y="142.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (10,537 samples, 6.99%)</title><rect x="215.2" y="339.0" width="82.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.2" y="350.0">io/netty/..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (508 samples, 0.34%)</title><rect x="215.2" y="323.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.2" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (508 samples, 0.34%)</title><rect x="215.2" y="307.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.2" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (508 samples, 0.34%)</title><rect x="215.2" y="291.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.2" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (508 samples, 0.34%)</title><rect x="215.2" y="275.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.2" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (508 samples, 0.34%)</title><rect x="215.2" y="259.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.2" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (496 samples, 0.33%)</title><rect x="215.3" y="243.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.3" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (496 samples, 0.33%)</title><rect x="215.3" y="227.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.3" y="238.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (470 samples, 0.31%)</title><rect x="215.5" y="211.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.5" y="222.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (440 samples, 0.29%)</title><rect x="215.6" y="195.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.6" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (440 samples, 0.29%)</title><rect x="215.6" y="179.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.6" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (440 samples, 0.29%)</title><rect x="215.6" y="163.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.6" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (440 samples, 0.29%)</title><rect x="215.6" y="147.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.6" y="158.0"></text>
</g>
<g>
<title>int[] (95 samples, 0.06%)</title><rect x="215.6" y="131.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="218.6" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (123 samples, 0.08%)</title><rect x="216.4" y="131.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="219.4" y="142.0"></text>
</g>
<g>
<title>long[] (164 samples, 0.11%)</title><rect x="217.3" y="131.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="220.3" y="142.0"></text>
</g>
<g>
<title>short[] (58 samples, 0.04%)</title><rect x="218.6" y="131.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="221.6" y="142.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (481 samples, 0.32%)</title><rect x="219.2" y="323.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.2" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (481 samples, 0.32%)</title><rect x="219.2" y="307.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.2" y="318.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (481 samples, 0.32%)</title><rect x="219.2" y="291.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.2" y="302.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (481 samples, 0.32%)</title><rect x="219.2" y="275.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.2" y="286.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (466 samples, 0.31%)</title><rect x="219.3" y="259.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (466 samples, 0.31%)</title><rect x="219.3" y="243.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.3" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (466 samples, 0.31%)</title><rect x="219.3" y="227.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.3" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (466 samples, 0.31%)</title><rect x="219.3" y="211.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.3" y="222.0"></text>
</g>
<g>
<title>int[] (99 samples, 0.07%)</title><rect x="219.3" y="195.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="222.3" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.07%)</title><rect x="220.1" y="195.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="223.1" y="206.0"></text>
</g>
<g>
<title>long[] (187 samples, 0.12%)</title><rect x="221.0" y="195.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="224.0" y="206.0"></text>
</g>
<g>
<title>short[] (69 samples, 0.05%)</title><rect x="222.4" y="195.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="225.4" y="206.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (508 samples, 0.34%)</title><rect x="223.0" y="323.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.0" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeShort (508 samples, 0.34%)</title><rect x="223.0" y="307.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.0" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (508 samples, 0.34%)</title><rect x="223.0" y="291.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.0" y="302.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (508 samples, 0.34%)</title><rect x="223.0" y="275.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.0" y="286.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (508 samples, 0.34%)</title><rect x="223.0" y="259.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.0" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (488 samples, 0.32%)</title><rect x="223.1" y="243.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.1" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (488 samples, 0.32%)</title><rect x="223.1" y="227.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.1" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (488 samples, 0.32%)</title><rect x="223.1" y="211.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.1" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (488 samples, 0.32%)</title><rect x="223.1" y="195.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.1" y="206.0"></text>
</g>
<g>
<title>int[] (105 samples, 0.07%)</title><rect x="223.1" y="179.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="226.1" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (149 samples, 0.10%)</title><rect x="223.9" y="179.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="226.9" y="190.0"></text>
</g>
<g>
<title>long[] (177 samples, 0.12%)</title><rect x="225.1" y="179.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="228.1" y="190.0"></text>
</g>
<g>
<title>short[] (57 samples, 0.04%)</title><rect x="226.5" y="179.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="229.5" y="190.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encodeHeaders (7,224 samples, 4.79%)</title><rect x="226.9" y="323.0" width="56.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.9" y="334.0">io/net..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.encoderHeader (7,219 samples, 4.79%)</title><rect x="227.0" y="307.0" width="56.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.0" y="318.0">io/net..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.ensureWritable (1,409 samples, 0.94%)</title><rect x="227.0" y="291.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.0" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,409 samples, 0.94%)</title><rect x="227.0" y="275.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.0" y="286.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,409 samples, 0.94%)</title><rect x="227.0" y="259.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.0" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,409 samples, 0.94%)</title><rect x="227.0" y="243.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.0" y="254.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (44 samples, 0.03%)</title><rect x="227.0" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="230.0" y="238.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,365 samples, 0.91%)</title><rect x="227.3" y="227.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.3" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,365 samples, 0.91%)</title><rect x="227.3" y="211.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.3" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,365 samples, 0.91%)</title><rect x="227.3" y="195.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.3" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,365 samples, 0.91%)</title><rect x="227.3" y="179.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.3" y="190.0"></text>
</g>
<g>
<title>int[] (285 samples, 0.19%)</title><rect x="227.3" y="163.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="230.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (380 samples, 0.25%)</title><rect x="229.6" y="163.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="232.6" y="174.0"></text>
</g>
<g>
<title>long[] (525 samples, 0.35%)</title><rect x="232.5" y="163.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="235.5" y="174.0"></text>
</g>
<g>
<title>short[] (175 samples, 0.12%)</title><rect x="236.6" y="163.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="239.6" y="174.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.setShortBE (2,945 samples, 1.95%)</title><rect x="238.0" y="291.0" width="23.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.0" y="302.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setShort (2,945 samples, 1.95%)</title><rect x="238.0" y="275.0" width="23.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.0" y="286.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (2,945 samples, 1.95%)</title><rect x="238.0" y="259.0" width="23.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.0" y="270.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2,945 samples, 1.95%)</title><rect x="238.0" y="243.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.0" y="254.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2,945 samples, 1.95%)</title><rect x="238.0" y="227.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.0" y="238.0">i..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (118 samples, 0.08%)</title><rect x="238.0" y="211.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="241.0" y="222.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2,827 samples, 1.88%)</title><rect x="238.9" y="211.0" width="22.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.9" y="222.0">i..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2,827 samples, 1.88%)</title><rect x="238.9" y="195.0" width="22.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.9" y="206.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2,827 samples, 1.88%)</title><rect x="238.9" y="179.0" width="22.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.9" y="190.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2,827 samples, 1.88%)</title><rect x="238.9" y="163.0" width="22.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.9" y="174.0">j..</text>
</g>
<g>
<title>int[] (577 samples, 0.38%)</title><rect x="238.9" y="147.0" width="4.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="241.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (762 samples, 0.51%)</title><rect x="243.5" y="147.0" width="5.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="246.5" y="158.0"></text>
</g>
<g>
<title>long[] (1,136 samples, 0.75%)</title><rect x="249.4" y="147.0" width="8.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="252.4" y="158.0"></text>
</g>
<g>
<title>short[] (352 samples, 0.23%)</title><rect x="258.3" y="147.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="261.3" y="158.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeAscii (2,865 samples, 1.90%)</title><rect x="261.1" y="291.0" width="22.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.1" y="302.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setCharSequence (1,377 samples, 0.91%)</title><rect x="261.1" y="275.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.1" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,377 samples, 0.91%)</title><rect x="261.1" y="259.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.1" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,377 samples, 0.91%)</title><rect x="261.1" y="243.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.1" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,377 samples, 0.91%)</title><rect x="261.1" y="227.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.1" y="238.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (47 samples, 0.03%)</title><rect x="261.1" y="211.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="264.1" y="222.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,330 samples, 0.88%)</title><rect x="261.4" y="211.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.4" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,330 samples, 0.88%)</title><rect x="261.4" y="195.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.4" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,330 samples, 0.88%)</title><rect x="261.4" y="179.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.4" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,330 samples, 0.88%)</title><rect x="261.4" y="163.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.4" y="174.0"></text>
</g>
<g>
<title>int[] (281 samples, 0.19%)</title><rect x="261.4" y="147.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="264.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (358 samples, 0.24%)</title><rect x="263.6" y="147.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="266.6" y="158.0"></text>
</g>
<g>
<title>long[] (533 samples, 0.35%)</title><rect x="266.4" y="147.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="269.4" y="158.0"></text>
</g>
<g>
<title>short[] (158 samples, 0.10%)</title><rect x="270.6" y="147.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="273.6" y="158.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.copy (1,488 samples, 0.99%)</title><rect x="271.9" y="275.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.9" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setBytes (1,488 samples, 0.99%)</title><rect x="271.9" y="259.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="270.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,488 samples, 0.99%)</title><rect x="271.9" y="243.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.9" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,488 samples, 0.99%)</title><rect x="271.9" y="227.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.9" y="238.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,488 samples, 0.99%)</title><rect x="271.9" y="211.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.9" y="222.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (60 samples, 0.04%)</title><rect x="271.9" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="274.9" y="206.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,428 samples, 0.95%)</title><rect x="272.3" y="195.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.3" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,428 samples, 0.95%)</title><rect x="272.3" y="179.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.3" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,428 samples, 0.95%)</title><rect x="272.3" y="163.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.3" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,428 samples, 0.95%)</title><rect x="272.3" y="147.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.3" y="158.0"></text>
</g>
<g>
<title>int[] (325 samples, 0.22%)</title><rect x="272.3" y="131.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="275.3" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (375 samples, 0.25%)</title><rect x="274.9" y="131.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="277.9" y="142.0"></text>
</g>
<g>
<title>long[] (562 samples, 0.37%)</title><rect x="277.8" y="131.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="280.8" y="142.0"></text>
</g>
<g>
<title>short[] (166 samples, 0.11%)</title><rect x="282.2" y="131.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="285.2" y="142.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (1,806 samples, 1.20%)</title><rect x="283.5" y="323.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.5" y="334.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (1,806 samples, 1.20%)</title><rect x="283.5" y="307.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.5" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeByte (436 samples, 0.29%)</title><rect x="283.5" y="291.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.5" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (436 samples, 0.29%)</title><rect x="283.5" y="275.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.5" y="286.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (436 samples, 0.29%)</title><rect x="283.5" y="259.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.5" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (436 samples, 0.29%)</title><rect x="283.5" y="243.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.5" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (420 samples, 0.28%)</title><rect x="283.6" y="227.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.6" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (420 samples, 0.28%)</title><rect x="283.6" y="211.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.6" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (420 samples, 0.28%)</title><rect x="283.6" y="195.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.6" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (420 samples, 0.28%)</title><rect x="283.6" y="179.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.6" y="190.0"></text>
</g>
<g>
<title>int[] (87 samples, 0.06%)</title><rect x="283.6" y="163.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="286.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (106 samples, 0.07%)</title><rect x="284.3" y="163.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="287.3" y="174.0"></text>
</g>
<g>
<title>long[] (180 samples, 0.12%)</title><rect x="285.1" y="163.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="288.1" y="174.0"></text>
</g>
<g>
<title>short[] (47 samples, 0.03%)</title><rect x="286.6" y="163.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="289.6" y="174.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (442 samples, 0.29%)</title><rect x="286.9" y="291.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.9" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeShort (442 samples, 0.29%)</title><rect x="286.9" y="275.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.9" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (442 samples, 0.29%)</title><rect x="286.9" y="259.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.9" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (442 samples, 0.29%)</title><rect x="286.9" y="243.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.9" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (442 samples, 0.29%)</title><rect x="286.9" y="227.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.9" y="238.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (427 samples, 0.28%)</title><rect x="287.0" y="211.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.0" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (427 samples, 0.28%)</title><rect x="287.0" y="195.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.0" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (427 samples, 0.28%)</title><rect x="287.0" y="179.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.0" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (427 samples, 0.28%)</title><rect x="287.0" y="163.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.0" y="174.0"></text>
</g>
<g>
<title>int[] (84 samples, 0.06%)</title><rect x="287.0" y="147.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="290.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (118 samples, 0.08%)</title><rect x="287.7" y="147.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="290.7" y="158.0"></text>
</g>
<g>
<title>long[] (163 samples, 0.11%)</title><rect x="288.6" y="147.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="291.6" y="158.0"></text>
</g>
<g>
<title>short[] (62 samples, 0.04%)</title><rect x="289.9" y="147.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="292.9" y="158.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseStatus.encode (453 samples, 0.30%)</title><rect x="290.4" y="291.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.4" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (453 samples, 0.30%)</title><rect x="290.4" y="275.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.4" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (453 samples, 0.30%)</title><rect x="290.4" y="259.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.4" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (453 samples, 0.30%)</title><rect x="290.4" y="243.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.4" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (453 samples, 0.30%)</title><rect x="290.4" y="227.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.4" y="238.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (440 samples, 0.29%)</title><rect x="290.5" y="211.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.5" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (440 samples, 0.29%)</title><rect x="290.5" y="195.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.5" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (440 samples, 0.29%)</title><rect x="290.5" y="179.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.5" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (440 samples, 0.29%)</title><rect x="290.5" y="163.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.5" y="174.0"></text>
</g>
<g>
<title>int[] (94 samples, 0.06%)</title><rect x="290.5" y="147.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="293.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (108 samples, 0.07%)</title><rect x="291.2" y="147.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="294.2" y="158.0"></text>
</g>
<g>
<title>long[] (190 samples, 0.13%)</title><rect x="292.1" y="147.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="295.1" y="158.0"></text>
</g>
<g>
<title>short[] (48 samples, 0.03%)</title><rect x="293.6" y="147.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="296.6" y="158.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.encode (475 samples, 0.32%)</title><rect x="293.9" y="291.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.9" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (475 samples, 0.32%)</title><rect x="293.9" y="275.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.9" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (475 samples, 0.32%)</title><rect x="293.9" y="259.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.9" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (475 samples, 0.32%)</title><rect x="293.9" y="243.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.9" y="254.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (475 samples, 0.32%)</title><rect x="293.9" y="227.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.9" y="238.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (466 samples, 0.31%)</title><rect x="294.0" y="211.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.0" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (466 samples, 0.31%)</title><rect x="294.0" y="195.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="297.0" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (466 samples, 0.31%)</title><rect x="294.0" y="179.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.0" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (466 samples, 0.31%)</title><rect x="294.0" y="163.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.0" y="174.0"></text>
</g>
<g>
<title>int[] (99 samples, 0.07%)</title><rect x="294.0" y="147.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="297.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (132 samples, 0.09%)</title><rect x="294.8" y="147.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="297.8" y="158.0"></text>
</g>
<g>
<title>long[] (179 samples, 0.12%)</title><rect x="295.8" y="147.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="298.8" y="158.0"></text>
</g>
<g>
<title>short[] (56 samples, 0.04%)</title><rect x="297.2" y="147.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="300.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.replicaNettyFactor (189 samples, 0.13%)</title><rect x="298.1" y="675.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.parser (152 samples, 0.10%)</title><rect x="298.1" y="659.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.split (137 samples, 0.09%)</title><rect x="298.1" y="643.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.split (137 samples, 0.09%)</title><rect x="298.1" y="627.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (67 samples, 0.04%)</title><rect x="298.4" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (67 samples, 0.04%)</title><rect x="298.4" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.03%)</title><rect x="298.6" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.6" y="590.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.03%)</title><rect x="298.6" y="563.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="301.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.03%)</title><rect x="298.9" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.03%)</title><rect x="298.9" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.03%)</title><rect x="298.9" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.03%)</title><rect x="298.9" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.03%)</title><rect x="298.9" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.03%)</title><rect x="298.9" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="301.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.quorum (37 samples, 0.02%)</title><rect x="299.3" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.Replicas (37 samples, 0.02%)</title><rect x="299.3" y="643.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="302.3" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (3,454 samples, 2.29%)</title><rect x="299.6" y="755.0" width="27.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.6" y="766.0">i..</text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (3,454 samples, 2.29%)</title><rect x="299.6" y="739.0" width="27.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.6" y="750.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.touch (3,454 samples, 2.29%)</title><rect x="299.6" y="723.0" width="27.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.6" y="734.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.touch (3,454 samples, 2.29%)</title><rect x="299.6" y="707.0" width="27.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.6" y="718.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.touch (3,454 samples, 2.29%)</title><rect x="299.6" y="691.0" width="27.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.6" y="702.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.touch (3,454 samples, 2.29%)</title><rect x="299.6" y="675.0" width="27.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.6" y="686.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareCompositeByteBuf.touch (3,454 samples, 2.29%)</title><rect x="299.6" y="659.0" width="27.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.6" y="670.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (3,454 samples, 2.29%)</title><rect x="299.6" y="643.0" width="27.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.6" y="654.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (3,454 samples, 2.29%)</title><rect x="299.6" y="627.0" width="27.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.6" y="638.0">i..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (107 samples, 0.07%)</title><rect x="299.6" y="611.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="302.6" y="622.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3,347 samples, 2.22%)</title><rect x="300.4" y="611.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="303.4" y="622.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (284 samples, 0.19%)</title><rect x="300.4" y="595.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.4" y="606.0"></text>
</g>
<g>
<title>byte[] (233 samples, 0.15%)</title><rect x="300.4" y="579.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="303.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.03%)</title><rect x="302.2" y="579.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="305.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3,063 samples, 2.03%)</title><rect x="302.6" y="595.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.6" y="606.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,063 samples, 2.03%)</title><rect x="302.6" y="579.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.6" y="590.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,063 samples, 2.03%)</title><rect x="302.6" y="563.0" width="24.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.6" y="574.0">j..</text>
</g>
<g>
<title>int[] (687 samples, 0.46%)</title><rect x="302.6" y="547.0" width="5.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="305.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (826 samples, 0.55%)</title><rect x="308.0" y="547.0" width="6.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="311.0" y="558.0"></text>
</g>
<g>
<title>long[] (1,177 samples, 0.78%)</title><rect x="314.5" y="547.0" width="9.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="317.5" y="558.0"></text>
</g>
<g>
<title>short[] (373 samples, 0.25%)</title><rect x="323.7" y="547.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="326.7" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (4,181 samples, 2.77%)</title><rect x="326.6" y="787.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.6" y="798.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (3,994 samples, 2.65%)</title><rect x="326.6" y="771.0" width="31.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.6" y="782.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (3,994 samples, 2.65%)</title><rect x="326.6" y="755.0" width="31.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.6" y="766.0">io..</text>
</g>
<g>
<title>io.netty.buffer.CompositeByteBuf (145 samples, 0.10%)</title><rect x="326.6" y="739.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="329.6" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (3,666 samples, 2.43%)</title><rect x="327.8" y="739.0" width="28.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.8" y="750.0">io..</text>
</g>
<g>
<title>io.netty.buffer.AdvancedLeakAwareCompositeByteBuf (170 samples, 0.11%)</title><rect x="327.8" y="723.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="330.8" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (3,496 samples, 2.32%)</title><rect x="329.1" y="723.0" width="27.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.1" y="734.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (3,496 samples, 2.32%)</title><rect x="329.1" y="707.0" width="27.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.1" y="718.0">i..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$DefaultResourceLeak (120 samples, 0.08%)</title><rect x="329.1" y="691.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="332.1" y="702.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (3,376 samples, 2.24%)</title><rect x="330.0" y="691.0" width="26.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.0" y="702.0">i..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (101 samples, 0.07%)</title><rect x="330.0" y="675.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="333.0" y="686.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3,195 samples, 2.12%)</title><rect x="330.8" y="675.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.8" y="686.0">i..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3,195 samples, 2.12%)</title><rect x="330.8" y="659.0" width="25.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.8" y="670.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,195 samples, 2.12%)</title><rect x="330.8" y="643.0" width="25.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.8" y="654.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,195 samples, 2.12%)</title><rect x="330.8" y="627.0" width="25.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.8" y="638.0">j..</text>
</g>
<g>
<title>int[] (722 samples, 0.48%)</title><rect x="330.8" y="611.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="333.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (816 samples, 0.54%)</title><rect x="336.5" y="611.0" width="6.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="339.5" y="622.0"></text>
</g>
<g>
<title>long[] (1,244 samples, 0.83%)</title><rect x="342.9" y="611.0" width="9.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="345.9" y="622.0"></text>
</g>
<g>
<title>short[] (413 samples, 0.27%)</title><rect x="352.6" y="611.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="355.6" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (80 samples, 0.05%)</title><rect x="355.9" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (80 samples, 0.05%)</title><rect x="355.9" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (80 samples, 0.05%)</title><rect x="355.9" y="643.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="358.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node (80 samples, 0.05%)</title><rect x="355.9" y="627.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="358.9" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (183 samples, 0.12%)</title><rect x="356.5" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.5" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (183 samples, 0.12%)</title><rect x="356.5" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newCompArray (183 samples, 0.12%)</title><rect x="356.5" y="707.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.5" y="718.0"></text>
</g>
<g>
<title>io.netty.buffer.CompositeByteBuf$Component[] (183 samples, 0.12%)</title><rect x="356.5" y="691.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="359.5" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.finishAggregation0 (69 samples, 0.05%)</title><rect x="357.9" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.9" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.finishAggregation (69 samples, 0.05%)</title><rect x="357.9" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.9" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.finishAggregation (69 samples, 0.05%)</title><rect x="357.9" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (43 samples, 0.03%)</title><rect x="358.1" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (43 samples, 0.03%)</title><rect x="358.1" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.1" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (118 samples, 0.08%)</title><rect x="358.5" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.5" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.beginAggregation (118 samples, 0.08%)</title><rect x="358.5" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.5" y="766.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest (57 samples, 0.04%)</title><rect x="358.5" y="739.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="361.5" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.setTransferEncodingChunked (61 samples, 0.04%)</title><rect x="358.9" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.9" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.getAll (61 samples, 0.04%)</title><rect x="358.9" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.9" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAllAsString (61 samples, 0.04%)</title><rect x="358.9" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.9" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.getAll (61 samples, 0.04%)</title><rect x="358.9" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.9" y="702.0"></text>
</g>
<g>
<title>java.util.LinkedList (61 samples, 0.04%)</title><rect x="358.9" y="675.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="361.9" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1,855 samples, 1.23%)</title><rect x="359.4" y="995.0" width="14.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.4" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1,855 samples, 1.23%)</title><rect x="359.4" y="979.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.4" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (1,855 samples, 1.23%)</title><rect x="359.4" y="963.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.4" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (1,855 samples, 1.23%)</title><rect x="359.4" y="947.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.4" y="958.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,855 samples, 1.23%)</title><rect x="359.4" y="931.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.4" y="942.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,855 samples, 1.23%)</title><rect x="359.4" y="915.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.4" y="926.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (99 samples, 0.07%)</title><rect x="359.4" y="899.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="362.4" y="910.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,756 samples, 1.17%)</title><rect x="360.2" y="899.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.2" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (250 samples, 0.17%)</title><rect x="360.2" y="883.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.2" y="894.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.13%)</title><rect x="360.2" y="867.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="363.2" y="878.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.04%)</title><rect x="361.6" y="867.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="364.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,506 samples, 1.00%)</title><rect x="362.1" y="883.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="365.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,506 samples, 1.00%)</title><rect x="362.1" y="867.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.1" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,506 samples, 1.00%)</title><rect x="362.1" y="851.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.1" y="862.0"></text>
</g>
<g>
<title>int[] (323 samples, 0.21%)</title><rect x="362.1" y="835.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="365.1" y="846.0"></text>
</g>
<g>
<title>java.lang.Object[] (428 samples, 0.28%)</title><rect x="364.6" y="835.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="367.6" y="846.0"></text>
</g>
<g>
<title>long[] (600 samples, 0.40%)</title><rect x="368.0" y="835.0" width="4.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="371.0" y="846.0"></text>
</g>
<g>
<title>short[] (155 samples, 0.10%)</title><rect x="372.7" y="835.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="375.7" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1,863 samples, 1.24%)</title><rect x="373.9" y="1059.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.9" y="1070.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1,863 samples, 1.24%)</title><rect x="373.9" y="1043.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.9" y="1054.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (1,863 samples, 1.24%)</title><rect x="373.9" y="1027.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.9" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (1,863 samples, 1.24%)</title><rect x="373.9" y="1011.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.9" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,863 samples, 1.24%)</title><rect x="373.9" y="995.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.9" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,863 samples, 1.24%)</title><rect x="373.9" y="979.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.9" y="990.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (95 samples, 0.06%)</title><rect x="373.9" y="963.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="376.9" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,768 samples, 1.17%)</title><rect x="374.6" y="963.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.6" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (248 samples, 0.16%)</title><rect x="374.6" y="947.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.6" y="958.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.13%)</title><rect x="374.6" y="931.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="377.6" y="942.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.04%)</title><rect x="376.1" y="931.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="379.1" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,520 samples, 1.01%)</title><rect x="376.6" y="947.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,520 samples, 1.01%)</title><rect x="376.6" y="931.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,520 samples, 1.01%)</title><rect x="376.6" y="915.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.6" y="926.0"></text>
</g>
<g>
<title>int[] (326 samples, 0.22%)</title><rect x="376.6" y="899.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="379.6" y="910.0"></text>
</g>
<g>
<title>java.lang.Object[] (407 samples, 0.27%)</title><rect x="379.1" y="899.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="382.1" y="910.0"></text>
</g>
<g>
<title>long[] (582 samples, 0.39%)</title><rect x="382.3" y="899.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="385.3" y="910.0"></text>
</g>
<g>
<title>short[] (205 samples, 0.14%)</title><rect x="386.9" y="899.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="389.9" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (1,870 samples, 1.24%)</title><rect x="388.5" y="1091.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.5" y="1102.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (1,870 samples, 1.24%)</title><rect x="388.5" y="1075.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.5" y="1086.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,870 samples, 1.24%)</title><rect x="388.5" y="1059.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.5" y="1070.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,870 samples, 1.24%)</title><rect x="388.5" y="1043.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.5" y="1054.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1,870 samples, 1.24%)</title><rect x="388.5" y="1027.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.5" y="1038.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (1,870 samples, 1.24%)</title><rect x="388.5" y="1011.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.5" y="1022.0"></text>
</g>
<g>
<title>io.netty.buffer.AdvancedLeakAwareByteBuf (63 samples, 0.04%)</title><rect x="388.5" y="995.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="391.5" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (1,807 samples, 1.20%)</title><rect x="389.0" y="995.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.0" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (1,807 samples, 1.20%)</title><rect x="389.0" y="979.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.0" y="990.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$DefaultResourceLeak (128 samples, 0.08%)</title><rect x="389.0" y="963.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="392.0" y="974.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (1,679 samples, 1.11%)</title><rect x="390.0" y="963.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.0" y="974.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (94 samples, 0.06%)</title><rect x="390.0" y="947.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="393.0" y="958.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,503 samples, 1.00%)</title><rect x="390.7" y="947.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.7" y="958.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,503 samples, 1.00%)</title><rect x="390.7" y="931.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,503 samples, 1.00%)</title><rect x="390.7" y="915.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,503 samples, 1.00%)</title><rect x="390.7" y="899.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.7" y="910.0"></text>
</g>
<g>
<title>int[] (329 samples, 0.22%)</title><rect x="390.7" y="883.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="393.7" y="894.0"></text>
</g>
<g>
<title>java.lang.Object[] (409 samples, 0.27%)</title><rect x="393.3" y="883.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="396.3" y="894.0"></text>
</g>
<g>
<title>long[] (574 samples, 0.38%)</title><rect x="396.5" y="883.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="399.5" y="894.0"></text>
</g>
<g>
<title>short[] (191 samples, 0.13%)</title><rect x="401.0" y="883.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="404.0" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (82 samples, 0.05%)</title><rect x="402.5" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (82 samples, 0.05%)</title><rect x="402.5" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (82 samples, 0.05%)</title><rect x="402.5" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.5" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node (82 samples, 0.05%)</title><rect x="402.5" y="899.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="405.5" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (1,732 samples, 1.15%)</title><rect x="403.3" y="1091.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.3" y="1102.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (1,732 samples, 1.15%)</title><rect x="403.3" y="1075.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.3" y="1086.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,732 samples, 1.15%)</title><rect x="403.3" y="1059.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.3" y="1070.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,732 samples, 1.15%)</title><rect x="403.3" y="1043.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.3" y="1054.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,732 samples, 1.15%)</title><rect x="403.3" y="1027.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.3" y="1038.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (97 samples, 0.06%)</title><rect x="403.3" y="1011.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="406.3" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,635 samples, 1.09%)</title><rect x="404.1" y="1011.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,635 samples, 1.09%)</title><rect x="404.1" y="995.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,635 samples, 1.09%)</title><rect x="404.1" y="979.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.1" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,635 samples, 1.09%)</title><rect x="404.1" y="963.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.1" y="974.0"></text>
</g>
<g>
<title>int[] (350 samples, 0.23%)</title><rect x="404.1" y="947.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="407.1" y="958.0"></text>
</g>
<g>
<title>java.lang.Object[] (430 samples, 0.29%)</title><rect x="406.8" y="947.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="409.8" y="958.0"></text>
</g>
<g>
<title>long[] (678 samples, 0.45%)</title><rect x="410.2" y="947.0" width="5.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="413.2" y="958.0"></text>
</g>
<g>
<title>short[] (177 samples, 0.12%)</title><rect x="415.5" y="947.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="418.5" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (666 samples, 0.44%)</title><rect x="416.9" y="1155.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.9" y="1166.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.select (666 samples, 0.44%)</title><rect x="416.9" y="1139.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.9" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (666 samples, 0.44%)</title><rect x="416.9" y="1123.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (666 samples, 0.44%)</title><rect x="416.9" y="1107.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.9" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (666 samples, 0.44%)</title><rect x="416.9" y="1091.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.9" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (666 samples, 0.44%)</title><rect x="416.9" y="1075.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (666 samples, 0.44%)</title><rect x="416.9" y="1059.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.9" y="1070.0"></text>
</g>
<g>
<title>java.lang.Integer (666 samples, 0.44%)</title><rect x="416.9" y="1043.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="419.9" y="1054.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (38,952 samples, 25.85%)</title><rect x="422.1" y="1155.0" width="305.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.1" y="1166.0">io/netty/util/concurrent/SingleThreadEven..</text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (38,952 samples, 25.85%)</title><rect x="422.1" y="1139.0" width="305.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.1" y="1150.0">io/netty/util/concurrent/AbstractEventExe..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.run (38,952 samples, 25.85%)</title><rect x="422.1" y="1123.0" width="305.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.1" y="1134.0">io/netty/channel/AbstractChannelHandlerCo..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (38,951 samples, 25.85%)</title><rect x="422.1" y="1107.0" width="305.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.1" y="1118.0">io/netty/channel/AbstractChannelHandlerCo..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (38,425 samples, 25.50%)</title><rect x="422.1" y="1091.0" width="300.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.1" y="1102.0">io/netty/channel/AbstractChannelHandlerC..</text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.flush (38,425 samples, 25.50%)</title><rect x="422.1" y="1075.0" width="300.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.1" y="1086.0">io/netty/handler/stream/ChunkedWriteHand..</text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.doFlush (38,425 samples, 25.50%)</title><rect x="422.1" y="1059.0" width="300.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.1" y="1070.0">io/netty/handler/stream/ChunkedWriteHand..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (5,703 samples, 3.78%)</title><rect x="422.1" y="1043.0" width="44.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.1" y="1054.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (5,703 samples, 3.78%)</title><rect x="422.1" y="1027.0" width="44.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.1" y="1038.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (5,703 samples, 3.78%)</title><rect x="422.1" y="1011.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.1" y="1022.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (5,703 samples, 3.78%)</title><rect x="422.1" y="995.0" width="44.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.1" y="1006.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (5,703 samples, 3.78%)</title><rect x="422.1" y="979.0" width="44.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.1" y="990.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (5,703 samples, 3.78%)</title><rect x="422.1" y="963.0" width="44.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.1" y="974.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (5,703 samples, 3.78%)</title><rect x="422.1" y="947.0" width="44.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.1" y="958.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (5,703 samples, 3.78%)</title><rect x="422.1" y="931.0" width="44.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.1" y="942.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (5,703 samples, 3.78%)</title><rect x="422.1" y="915.0" width="44.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.1" y="926.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (5,703 samples, 3.78%)</title><rect x="422.1" y="899.0" width="44.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.1" y="910.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (5,703 samples, 3.78%)</title><rect x="422.1" y="883.0" width="44.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.1" y="894.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (5,703 samples, 3.78%)</title><rect x="422.1" y="867.0" width="44.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.1" y="878.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (5,703 samples, 3.78%)</title><rect x="422.1" y="851.0" width="44.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.1" y="862.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (5,703 samples, 3.78%)</title><rect x="422.1" y="835.0" width="44.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.1" y="846.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (2,844 samples, 1.89%)</title><rect x="422.1" y="819.0" width="22.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.1" y="830.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.internalNioBuffer (1,460 samples, 0.97%)</title><rect x="422.1" y="803.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.1" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,460 samples, 0.97%)</title><rect x="422.1" y="787.0" width="11.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,460 samples, 0.97%)</title><rect x="422.1" y="771.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.1" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,460 samples, 0.97%)</title><rect x="422.1" y="755.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.1" y="766.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (93 samples, 0.06%)</title><rect x="422.1" y="739.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="425.1" y="750.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,367 samples, 0.91%)</title><rect x="422.9" y="739.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,367 samples, 0.91%)</title><rect x="422.9" y="723.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,367 samples, 0.91%)</title><rect x="422.9" y="707.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,367 samples, 0.91%)</title><rect x="422.9" y="691.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.9" y="702.0"></text>
</g>
<g>
<title>int[] (274 samples, 0.18%)</title><rect x="422.9" y="675.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="425.9" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (383 samples, 0.25%)</title><rect x="425.0" y="675.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="428.0" y="686.0"></text>
</g>
<g>
<title>long[] (560 samples, 0.37%)</title><rect x="428.0" y="675.0" width="4.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="431.0" y="686.0"></text>
</g>
<g>
<title>short[] (150 samples, 0.10%)</title><rect x="432.4" y="675.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="435.4" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.nioBufferCount (1,384 samples, 0.92%)</title><rect x="433.6" y="803.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.6" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,384 samples, 0.92%)</title><rect x="433.6" y="787.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.6" y="798.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,384 samples, 0.92%)</title><rect x="433.6" y="771.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.6" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,384 samples, 0.92%)</title><rect x="433.6" y="755.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.6" y="766.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (91 samples, 0.06%)</title><rect x="433.6" y="739.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="436.6" y="750.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,293 samples, 0.86%)</title><rect x="434.3" y="739.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,293 samples, 0.86%)</title><rect x="434.3" y="723.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,293 samples, 0.86%)</title><rect x="434.3" y="707.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,293 samples, 0.86%)</title><rect x="434.3" y="691.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.3" y="702.0"></text>
</g>
<g>
<title>int[] (270 samples, 0.18%)</title><rect x="434.3" y="675.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="437.3" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (385 samples, 0.26%)</title><rect x="436.4" y="675.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="439.4" y="686.0"></text>
</g>
<g>
<title>long[] (499 samples, 0.33%)</title><rect x="439.4" y="675.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="442.4" y="686.0"></text>
</g>
<g>
<title>short[] (139 samples, 0.09%)</title><rect x="443.3" y="675.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="446.3" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (2,859 samples, 1.90%)</title><rect x="444.4" y="819.0" width="22.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.4" y="830.0">i..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (2,859 samples, 1.90%)</title><rect x="444.4" y="803.0" width="22.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.4" y="814.0">i..</text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (2,859 samples, 1.90%)</title><rect x="444.4" y="787.0" width="22.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.4" y="798.0">i..</text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (2,859 samples, 1.90%)</title><rect x="444.4" y="771.0" width="22.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.4" y="782.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.release (2,859 samples, 1.90%)</title><rect x="444.4" y="755.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.4" y="766.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (2,859 samples, 1.90%)</title><rect x="444.4" y="739.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.4" y="750.0">i..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (2,859 samples, 1.90%)</title><rect x="444.4" y="723.0" width="22.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.4" y="734.0">i..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (159 samples, 0.11%)</title><rect x="444.4" y="707.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="447.4" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (2,700 samples, 1.79%)</title><rect x="445.7" y="707.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.7" y="718.0">i..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2,700 samples, 1.79%)</title><rect x="445.7" y="691.0" width="21.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.7" y="702.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2,700 samples, 1.79%)</title><rect x="445.7" y="675.0" width="21.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.7" y="686.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2,700 samples, 1.79%)</title><rect x="445.7" y="659.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.7" y="670.0">j..</text>
</g>
<g>
<title>int[] (541 samples, 0.36%)</title><rect x="445.7" y="643.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="448.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (719 samples, 0.48%)</title><rect x="449.9" y="643.0" width="5.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="452.9" y="654.0"></text>
</g>
<g>
<title>long[] (1,136 samples, 0.75%)</title><rect x="455.5" y="643.0" width="8.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="458.5" y="654.0"></text>
</g>
<g>
<title>short[] (304 samples, 0.20%)</title><rect x="464.4" y="643.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="467.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (32,722 samples, 21.72%)</title><rect x="466.8" y="1043.0" width="256.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.8" y="1054.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (32,722 samples, 21.72%)</title><rect x="466.8" y="1027.0" width="256.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.8" y="1038.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (32,722 samples, 21.72%)</title><rect x="466.8" y="1011.0" width="256.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.8" y="1022.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (32,722 samples, 21.72%)</title><rect x="466.8" y="995.0" width="256.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.8" y="1006.0">io/netty/channel/AbstractChannelHa..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (32,722 samples, 21.72%)</title><rect x="466.8" y="979.0" width="256.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.8" y="990.0">io/netty/channel/CombinedChannelDu..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (32,722 samples, 21.72%)</title><rect x="466.8" y="963.0" width="256.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.8" y="974.0">io/netty/handler/codec/MessageToMe..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (1,608 samples, 1.07%)</title><rect x="466.8" y="947.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.8" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1,608 samples, 1.07%)</title><rect x="466.8" y="931.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.8" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1,608 samples, 1.07%)</title><rect x="466.8" y="915.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.8" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1,608 samples, 1.07%)</title><rect x="466.8" y="899.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.8" y="910.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1,608 samples, 1.07%)</title><rect x="466.8" y="883.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.8" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (1,608 samples, 1.07%)</title><rect x="466.8" y="867.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.8" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.touch (1,608 samples, 1.07%)</title><rect x="466.8" y="851.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.8" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,608 samples, 1.07%)</title><rect x="466.8" y="835.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.8" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,608 samples, 1.07%)</title><rect x="466.8" y="819.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.8" y="830.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (82 samples, 0.05%)</title><rect x="466.8" y="803.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="469.8" y="814.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,526 samples, 1.01%)</title><rect x="467.4" y="803.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.toHintString (226 samples, 0.15%)</title><rect x="467.4" y="787.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.4" y="798.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.12%)</title><rect x="467.4" y="771.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="470.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.03%)</title><rect x="468.8" y="771.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="471.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,300 samples, 0.86%)</title><rect x="469.2" y="787.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,300 samples, 0.86%)</title><rect x="469.2" y="771.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,300 samples, 0.86%)</title><rect x="469.2" y="755.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.2" y="766.0"></text>
</g>
<g>
<title>int[] (272 samples, 0.18%)</title><rect x="469.2" y="739.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="472.2" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (342 samples, 0.23%)</title><rect x="471.3" y="739.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="474.3" y="750.0"></text>
</g>
<g>
<title>long[] (539 samples, 0.36%)</title><rect x="474.0" y="739.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="477.0" y="750.0"></text>
</g>
<g>
<title>short[] (147 samples, 0.10%)</title><rect x="478.2" y="739.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="481.2" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (31,114 samples, 20.65%)</title><rect x="479.4" y="947.0" width="243.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.4" y="958.0">io/netty/handler/codec/http/Http..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (1,681 samples, 1.12%)</title><rect x="479.4" y="931.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.4" y="942.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,681 samples, 1.12%)</title><rect x="479.4" y="915.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.4" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,681 samples, 1.12%)</title><rect x="479.4" y="899.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.4" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1,681 samples, 1.12%)</title><rect x="479.4" y="883.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.4" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (1,681 samples, 1.12%)</title><rect x="479.4" y="867.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.4" y="878.0"></text>
</g>
<g>
<title>io.netty.buffer.AdvancedLeakAwareByteBuf (50 samples, 0.03%)</title><rect x="479.4" y="851.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="482.4" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (1,631 samples, 1.08%)</title><rect x="479.8" y="851.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.8" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (1,631 samples, 1.08%)</title><rect x="479.8" y="835.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.8" y="846.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$DefaultResourceLeak (124 samples, 0.08%)</title><rect x="479.8" y="819.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="482.8" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (1,507 samples, 1.00%)</title><rect x="480.8" y="819.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.8" y="830.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (98 samples, 0.07%)</title><rect x="480.8" y="803.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="483.8" y="814.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,360 samples, 0.90%)</title><rect x="481.5" y="803.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,360 samples, 0.90%)</title><rect x="481.5" y="787.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,360 samples, 0.90%)</title><rect x="481.5" y="771.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,360 samples, 0.90%)</title><rect x="481.5" y="755.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.5" y="766.0"></text>
</g>
<g>
<title>int[] (289 samples, 0.19%)</title><rect x="481.5" y="739.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="484.5" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (383 samples, 0.25%)</title><rect x="483.8" y="739.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="486.8" y="750.0"></text>
</g>
<g>
<title>long[] (519 samples, 0.34%)</title><rect x="486.8" y="739.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="489.8" y="750.0"></text>
</g>
<g>
<title>short[] (169 samples, 0.11%)</title><rect x="490.8" y="739.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="493.8" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (49 samples, 0.03%)</title><rect x="492.2" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (49 samples, 0.03%)</title><rect x="492.2" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (49 samples, 0.03%)</title><rect x="492.2" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.2" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node (49 samples, 0.03%)</title><rect x="492.2" y="755.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="495.2" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (1,349 samples, 0.90%)</title><rect x="492.6" y="931.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.6" y="942.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,349 samples, 0.90%)</title><rect x="492.6" y="915.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.6" y="926.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,349 samples, 0.90%)</title><rect x="492.6" y="899.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.6" y="910.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,349 samples, 0.90%)</title><rect x="492.6" y="883.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.6" y="894.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (96 samples, 0.06%)</title><rect x="492.6" y="867.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="495.6" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,253 samples, 0.83%)</title><rect x="493.3" y="867.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,253 samples, 0.83%)</title><rect x="493.3" y="851.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,253 samples, 0.83%)</title><rect x="493.3" y="835.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,253 samples, 0.83%)</title><rect x="493.3" y="819.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.3" y="830.0"></text>
</g>
<g>
<title>int[] (236 samples, 0.16%)</title><rect x="493.3" y="803.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="496.3" y="814.0"></text>
</g>
<g>
<title>java.lang.Object[] (356 samples, 0.24%)</title><rect x="495.2" y="803.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="498.2" y="814.0"></text>
</g>
<g>
<title>long[] (518 samples, 0.34%)</title><rect x="497.9" y="803.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="500.9" y="814.0"></text>
</g>
<g>
<title>short[] (143 samples, 0.09%)</title><rect x="502.0" y="803.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="505.0" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (1,376 samples, 0.91%)</title><rect x="503.1" y="931.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.1" y="942.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeShort (1,376 samples, 0.91%)</title><rect x="503.1" y="915.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.1" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,376 samples, 0.91%)</title><rect x="503.1" y="899.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.1" y="910.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,376 samples, 0.91%)</title><rect x="503.1" y="883.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.1" y="894.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,376 samples, 0.91%)</title><rect x="503.1" y="867.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.1" y="878.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (111 samples, 0.07%)</title><rect x="503.1" y="851.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="506.1" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,265 samples, 0.84%)</title><rect x="504.0" y="851.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,265 samples, 0.84%)</title><rect x="504.0" y="835.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,265 samples, 0.84%)</title><rect x="504.0" y="819.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,265 samples, 0.84%)</title><rect x="504.0" y="803.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.0" y="814.0"></text>
</g>
<g>
<title>int[] (228 samples, 0.15%)</title><rect x="504.0" y="787.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="507.0" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (355 samples, 0.24%)</title><rect x="505.8" y="787.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="508.8" y="798.0"></text>
</g>
<g>
<title>long[] (524 samples, 0.35%)</title><rect x="508.6" y="787.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="511.6" y="798.0"></text>
</g>
<g>
<title>short[] (158 samples, 0.10%)</title><rect x="512.7" y="787.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="515.7" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encodeHeaders (20,936 samples, 13.89%)</title><rect x="513.9" y="931.0" width="163.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.9" y="942.0">io/netty/handler/code..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.iteratorCharSequence (54 samples, 0.04%)</title><rect x="513.9" y="915.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.9" y="926.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.iterator (54 samples, 0.04%)</title><rect x="513.9" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.9" y="910.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderIterator (54 samples, 0.04%)</title><rect x="513.9" y="883.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="516.9" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.encoderHeader (20,882 samples, 13.86%)</title><rect x="514.3" y="915.0" width="163.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.3" y="926.0">io/netty/handler/code..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.ensureWritable (4,129 samples, 2.74%)</title><rect x="514.3" y="899.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.3" y="910.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (4,129 samples, 2.74%)</title><rect x="514.3" y="883.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.3" y="894.0">io..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (4,129 samples, 2.74%)</title><rect x="514.3" y="867.0" width="32.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.3" y="878.0">io..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (4,129 samples, 2.74%)</title><rect x="514.3" y="851.0" width="32.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.3" y="862.0">io..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (283 samples, 0.19%)</title><rect x="514.3" y="835.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="517.3" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3,846 samples, 2.55%)</title><rect x="516.5" y="835.0" width="30.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.5" y="846.0">io..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3,846 samples, 2.55%)</title><rect x="516.5" y="819.0" width="30.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.5" y="830.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,846 samples, 2.55%)</title><rect x="516.5" y="803.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.5" y="814.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,846 samples, 2.55%)</title><rect x="516.5" y="787.0" width="30.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.5" y="798.0">ja..</text>
</g>
<g>
<title>int[] (792 samples, 0.53%)</title><rect x="516.5" y="771.0" width="6.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="519.5" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (990 samples, 0.66%)</title><rect x="522.7" y="771.0" width="7.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="525.7" y="782.0"></text>
</g>
<g>
<title>long[] (1,580 samples, 1.05%)</title><rect x="530.5" y="771.0" width="12.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="533.5" y="782.0"></text>
</g>
<g>
<title>short[] (484 samples, 0.32%)</title><rect x="542.9" y="771.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="545.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.setShortBE (8,367 samples, 5.55%)</title><rect x="546.7" y="899.0" width="65.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.7" y="910.0">io/nett..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setShort (8,367 samples, 5.55%)</title><rect x="546.7" y="883.0" width="65.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.7" y="894.0">io/nett..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (8,367 samples, 5.55%)</title><rect x="546.7" y="867.0" width="65.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.7" y="878.0">io/nett..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (8,367 samples, 5.55%)</title><rect x="546.7" y="851.0" width="65.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.7" y="862.0">io/nett..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (8,367 samples, 5.55%)</title><rect x="546.7" y="835.0" width="65.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.7" y="846.0">io/nett..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (550 samples, 0.37%)</title><rect x="546.7" y="819.0" width="4.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="549.7" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (7,817 samples, 5.19%)</title><rect x="551.0" y="819.0" width="61.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.0" y="830.0">io/net..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (7,817 samples, 5.19%)</title><rect x="551.0" y="803.0" width="61.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.0" y="814.0">java/l..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7,817 samples, 5.19%)</title><rect x="551.0" y="787.0" width="61.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.0" y="798.0">java/l..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7,817 samples, 5.19%)</title><rect x="551.0" y="771.0" width="61.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.0" y="782.0">java/l..</text>
</g>
<g>
<title>int[] (1,551 samples, 1.03%)</title><rect x="551.0" y="755.0" width="12.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="554.0" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,995 samples, 1.32%)</title><rect x="563.1" y="755.0" width="15.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="566.1" y="766.0"></text>
</g>
<g>
<title>long[] (3,319 samples, 2.20%)</title><rect x="578.7" y="755.0" width="26.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="581.7" y="766.0">l..</text>
</g>
<g>
<title>short[] (952 samples, 0.63%)</title><rect x="604.7" y="755.0" width="7.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="607.7" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeAscii (8,386 samples, 5.57%)</title><rect x="612.2" y="899.0" width="65.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.2" y="910.0">io/nett..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setCharSequence (4,233 samples, 2.81%)</title><rect x="612.2" y="883.0" width="33.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.2" y="894.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (4,233 samples, 2.81%)</title><rect x="612.2" y="867.0" width="33.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.2" y="878.0">io..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (4,233 samples, 2.81%)</title><rect x="612.2" y="851.0" width="33.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.2" y="862.0">io..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (4,233 samples, 2.81%)</title><rect x="612.2" y="835.0" width="33.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.2" y="846.0">io..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (278 samples, 0.18%)</title><rect x="612.2" y="819.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="615.2" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3,955 samples, 2.62%)</title><rect x="614.4" y="819.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.4" y="830.0">io..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3,955 samples, 2.62%)</title><rect x="614.4" y="803.0" width="30.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.4" y="814.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,955 samples, 2.62%)</title><rect x="614.4" y="787.0" width="30.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.4" y="798.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,955 samples, 2.62%)</title><rect x="614.4" y="771.0" width="30.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.4" y="782.0">ja..</text>
</g>
<g>
<title>int[] (846 samples, 0.56%)</title><rect x="614.4" y="755.0" width="6.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="617.4" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (995 samples, 0.66%)</title><rect x="621.0" y="755.0" width="7.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="624.0" y="766.0"></text>
</g>
<g>
<title>long[] (1,643 samples, 1.09%)</title><rect x="628.8" y="755.0" width="12.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="631.8" y="766.0"></text>
</g>
<g>
<title>short[] (471 samples, 0.31%)</title><rect x="641.6" y="755.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="644.6" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.copy (4,153 samples, 2.76%)</title><rect x="645.3" y="883.0" width="32.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.3" y="894.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.setBytes (4,153 samples, 2.76%)</title><rect x="645.3" y="867.0" width="32.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.3" y="878.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (4,153 samples, 2.76%)</title><rect x="645.3" y="851.0" width="32.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.3" y="862.0">io..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (4,153 samples, 2.76%)</title><rect x="645.3" y="835.0" width="32.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.3" y="846.0">io..</text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (4,153 samples, 2.76%)</title><rect x="645.3" y="819.0" width="32.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.3" y="830.0">io..</text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (291 samples, 0.19%)</title><rect x="645.3" y="803.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="648.3" y="814.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (3,862 samples, 2.56%)</title><rect x="647.6" y="803.0" width="30.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.6" y="814.0">io..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3,862 samples, 2.56%)</title><rect x="647.6" y="787.0" width="30.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.6" y="798.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,862 samples, 2.56%)</title><rect x="647.6" y="771.0" width="30.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.6" y="782.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,862 samples, 2.56%)</title><rect x="647.6" y="755.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.6" y="766.0">ja..</text>
</g>
<g>
<title>int[] (761 samples, 0.51%)</title><rect x="647.6" y="739.0" width="6.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="650.6" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,036 samples, 0.69%)</title><rect x="653.6" y="739.0" width="8.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="656.6" y="750.0"></text>
</g>
<g>
<title>long[] (1,583 samples, 1.05%)</title><rect x="661.7" y="739.0" width="12.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="664.7" y="750.0"></text>
</g>
<g>
<title>short[] (482 samples, 0.32%)</title><rect x="674.1" y="739.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="677.1" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (5,683 samples, 3.77%)</title><rect x="677.8" y="931.0" width="44.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.8" y="942.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (5,683 samples, 3.77%)</title><rect x="677.8" y="915.0" width="44.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.8" y="926.0">io/n..</text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeByte (1,431 samples, 0.95%)</title><rect x="677.8" y="899.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.8" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,431 samples, 0.95%)</title><rect x="677.8" y="883.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.8" y="894.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,431 samples, 0.95%)</title><rect x="677.8" y="867.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.8" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,431 samples, 0.95%)</title><rect x="677.8" y="851.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.8" y="862.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (105 samples, 0.07%)</title><rect x="677.8" y="835.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="680.8" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,326 samples, 0.88%)</title><rect x="678.7" y="835.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,326 samples, 0.88%)</title><rect x="678.7" y="819.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,326 samples, 0.88%)</title><rect x="678.7" y="803.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,326 samples, 0.88%)</title><rect x="678.7" y="787.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.7" y="798.0"></text>
</g>
<g>
<title>int[] (279 samples, 0.19%)</title><rect x="678.7" y="771.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="681.7" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (376 samples, 0.25%)</title><rect x="680.9" y="771.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="683.9" y="782.0"></text>
</g>
<g>
<title>long[] (525 samples, 0.35%)</title><rect x="683.8" y="771.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="686.8" y="782.0"></text>
</g>
<g>
<title>short[] (146 samples, 0.10%)</title><rect x="687.9" y="771.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="690.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.writeShortBE (1,408 samples, 0.93%)</title><rect x="689.1" y="899.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.1" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeShort (1,408 samples, 0.93%)</title><rect x="689.1" y="883.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.1" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,408 samples, 0.93%)</title><rect x="689.1" y="867.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.1" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,408 samples, 0.93%)</title><rect x="689.1" y="851.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.1" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,408 samples, 0.93%)</title><rect x="689.1" y="835.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.1" y="846.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (102 samples, 0.07%)</title><rect x="689.1" y="819.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="692.1" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,306 samples, 0.87%)</title><rect x="689.9" y="819.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,306 samples, 0.87%)</title><rect x="689.9" y="803.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,306 samples, 0.87%)</title><rect x="689.9" y="787.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,306 samples, 0.87%)</title><rect x="689.9" y="771.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.9" y="782.0"></text>
</g>
<g>
<title>int[] (253 samples, 0.17%)</title><rect x="689.9" y="755.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="692.9" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (328 samples, 0.22%)</title><rect x="691.8" y="755.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="694.8" y="766.0"></text>
</g>
<g>
<title>long[] (560 samples, 0.37%)</title><rect x="694.4" y="755.0" width="4.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="697.4" y="766.0"></text>
</g>
<g>
<title>short[] (165 samples, 0.11%)</title><rect x="698.8" y="755.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="701.8" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseStatus.encode (1,421 samples, 0.94%)</title><rect x="700.1" y="899.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.1" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (1,421 samples, 0.94%)</title><rect x="700.1" y="883.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.1" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,421 samples, 0.94%)</title><rect x="700.1" y="867.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.1" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,421 samples, 0.94%)</title><rect x="700.1" y="851.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.1" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,421 samples, 0.94%)</title><rect x="700.1" y="835.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.1" y="846.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (107 samples, 0.07%)</title><rect x="700.1" y="819.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="703.1" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,314 samples, 0.87%)</title><rect x="700.9" y="819.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,314 samples, 0.87%)</title><rect x="700.9" y="803.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,314 samples, 0.87%)</title><rect x="700.9" y="787.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,314 samples, 0.87%)</title><rect x="700.9" y="771.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.9" y="782.0"></text>
</g>
<g>
<title>int[] (281 samples, 0.19%)</title><rect x="700.9" y="755.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="703.9" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (317 samples, 0.21%)</title><rect x="703.1" y="755.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="706.1" y="766.0"></text>
</g>
<g>
<title>long[] (557 samples, 0.37%)</title><rect x="705.6" y="755.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="708.6" y="766.0"></text>
</g>
<g>
<title>short[] (159 samples, 0.11%)</title><rect x="710.0" y="755.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="713.0" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.encode (1,423 samples, 0.94%)</title><rect x="711.2" y="899.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.2" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.writeBytes (1,423 samples, 0.94%)</title><rect x="711.2" y="883.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.2" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation (1,423 samples, 0.94%)</title><rect x="711.2" y="867.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.2" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record (1,423 samples, 0.94%)</title><rect x="711.2" y="851.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.2" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.record0 (1,423 samples, 0.94%)</title><rect x="711.2" y="835.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.2" y="846.0"></text>
</g>
<g>
<title>io.netty.util.ResourceLeakDetector$TraceRecord (88 samples, 0.06%)</title><rect x="711.2" y="819.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="714.2" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (1,335 samples, 0.89%)</title><rect x="711.9" y="819.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,335 samples, 0.89%)</title><rect x="711.9" y="803.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,335 samples, 0.89%)</title><rect x="711.9" y="787.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,335 samples, 0.89%)</title><rect x="711.9" y="771.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.9" y="782.0"></text>
</g>
<g>
<title>int[] (235 samples, 0.16%)</title><rect x="711.9" y="755.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="714.9" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (369 samples, 0.24%)</title><rect x="713.7" y="755.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="716.7" y="766.0"></text>
</g>
<g>
<title>long[] (592 samples, 0.39%)</title><rect x="716.6" y="755.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="719.6" y="766.0"></text>
</g>
<g>
<title>short[] (139 samples, 0.09%)</title><rect x="721.3" y="755.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="724.3" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isTransferEncodingChunked (89 samples, 0.06%)</title><rect x="722.3" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.3" y="942.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeaders.containsValue (89 samples, 0.06%)</title><rect x="722.3" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.3" y="926.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.valueCharSequenceIterator (89 samples, 0.06%)</title><rect x="722.3" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.3" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.valueIterator (89 samples, 0.06%)</title><rect x="722.3" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.3" y="894.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$ValueIterator (89 samples, 0.06%)</title><rect x="722.3" y="867.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="725.3" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (526 samples, 0.35%)</title><rect x="723.0" y="1091.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.0" y="1102.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.write (526 samples, 0.35%)</title><rect x="723.0" y="1075.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.0" y="1086.0"></text>
</g>
<g>
<title>io.netty.handler.stream.ChunkedWriteHandler$PendingWrite (526 samples, 0.35%)</title><rect x="723.0" y="1059.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="726.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (55,147 samples, 36.60%)</title><rect x="727.2" y="1219.0" width="431.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.2" y="1230.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (55,147 samples, 36.60%)</title><rect x="727.2" y="1203.0" width="431.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.2" y="1214.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (20,408 samples, 13.54%)</title><rect x="727.2" y="1187.0" width="159.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.2" y="1198.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,763 samples, 4.49%)</title><rect x="727.2" y="1171.0" width="52.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.2" y="1182.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6,760 samples, 4.49%)</title><rect x="727.2" y="1155.0" width="52.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.2" y="1166.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (33 samples, 0.02%)</title><rect x="727.2" y="1139.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="730.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$121/254088096.apply (6,727 samples, 4.46%)</title><rect x="727.4" y="1139.0" width="52.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.4" y="1150.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (6,727 samples, 4.46%)</title><rect x="727.4" y="1123.0" width="52.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.4" y="1134.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (6,727 samples, 4.46%)</title><rect x="727.4" y="1107.0" width="52.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.4" y="1118.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.03%)</title><rect x="727.4" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.03%)</title><rect x="727.4" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (98 samples, 0.07%)</title><rect x="727.8" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (98 samples, 0.07%)</title><rect x="727.8" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.8" y="1086.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (51 samples, 0.03%)</title><rect x="727.8" y="1059.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="730.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="728.2" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="728.2" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.2" y="1054.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.03%)</title><rect x="728.2" y="1027.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="731.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (198 samples, 0.13%)</title><rect x="728.6" y="1091.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (198 samples, 0.13%)</title><rect x="728.6" y="1075.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.6" y="1086.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (112 samples, 0.07%)</title><rect x="728.6" y="1059.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="731.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.06%)</title><rect x="729.5" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.06%)</title><rect x="729.5" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.5" y="1054.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.06%)</title><rect x="729.5" y="1027.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="732.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (6,367 samples, 4.23%)</title><rect x="730.1" y="1091.0" width="49.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.1" y="1102.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (6,367 samples, 4.23%)</title><rect x="730.1" y="1075.0" width="49.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.1" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (6,367 samples, 4.23%)</title><rect x="730.1" y="1059.0" width="49.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.1" y="1070.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (112 samples, 0.07%)</title><rect x="730.1" y="1043.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (112 samples, 0.07%)</title><rect x="730.1" y="1027.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1950094988.get$Lambda (41 samples, 0.03%)</title><rect x="730.1" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.1" y="1022.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (41 samples, 0.03%)</title><rect x="730.1" y="995.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="733.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2027683497.get$Lambda (37 samples, 0.02%)</title><rect x="730.5" y="1011.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.5" y="1022.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$138 (37 samples, 0.02%)</title><rect x="730.5" y="995.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="733.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$193/779927484.get$Lambda (34 samples, 0.02%)</title><rect x="730.7" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.7" y="1022.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$193 (34 samples, 0.02%)</title><rect x="730.7" y="995.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="733.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4,496 samples, 2.98%)</title><rect x="731.0" y="1043.0" width="35.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.0" y="1054.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4,496 samples, 2.98%)</title><rect x="731.0" y="1027.0" width="35.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.0" y="1038.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4,453 samples, 2.96%)</title><rect x="731.0" y="1011.0" width="34.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.0" y="1022.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$193/779927484.apply (4,453 samples, 2.96%)</title><rect x="731.0" y="995.0" width="34.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.0" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (4,453 samples, 2.96%)</title><rect x="731.0" y="979.0" width="34.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.0" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4,453 samples, 2.96%)</title><rect x="731.0" y="963.0" width="34.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.0" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2027683497.apply (4,453 samples, 2.96%)</title><rect x="731.0" y="947.0" width="34.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.0" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4,453 samples, 2.96%)</title><rect x="731.0" y="931.0" width="34.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.0" y="942.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.03%)</title><rect x="731.0" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.03%)</title><rect x="731.0" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/1475186263.get$Lambda (39 samples, 0.03%)</title><rect x="731.0" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.0" y="894.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$212 (39 samples, 0.03%)</title><rect x="731.0" y="867.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="734.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (94 samples, 0.06%)</title><rect x="731.3" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (94 samples, 0.06%)</title><rect x="731.3" y="899.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.3" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (52 samples, 0.03%)</title><rect x="731.3" y="883.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="734.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="731.7" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="731.7" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.7" y="878.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.03%)</title><rect x="731.7" y="851.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="734.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (116 samples, 0.08%)</title><rect x="732.1" y="915.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (116 samples, 0.08%)</title><rect x="732.1" y="899.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.1" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (67 samples, 0.04%)</title><rect x="732.1" y="883.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="735.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.03%)</title><rect x="732.6" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.03%)</title><rect x="732.6" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.6" y="878.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.03%)</title><rect x="732.6" y="851.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="735.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,204 samples, 2.79%)</title><rect x="733.0" y="915.0" width="32.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.0" y="926.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.02%)</title><rect x="733.0" y="899.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.02%)</title><rect x="733.0" y="883.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,413 samples, 2.27%)</title><rect x="733.2" y="899.0" width="26.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.2" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,413 samples, 2.27%)</title><rect x="733.2" y="883.0" width="26.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.2" y="894.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (33 samples, 0.02%)</title><rect x="733.2" y="867.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="736.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$208/143821675.apply (3,296 samples, 2.19%)</title><rect x="733.5" y="867.0" width="25.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.5" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,296 samples, 2.19%)</title><rect x="733.5" y="851.0" width="25.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.5" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (108 samples, 0.07%)</title><rect x="733.6" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (108 samples, 0.07%)</title><rect x="733.6" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.6" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (58 samples, 0.04%)</title><rect x="733.6" y="803.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="736.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.03%)</title><rect x="734.1" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.03%)</title><rect x="734.1" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.1" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.03%)</title><rect x="734.1" y="771.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="737.1" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.03%)</title><rect x="734.5" y="835.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="737.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (58 samples, 0.04%)</title><rect x="734.8" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (35 samples, 0.02%)</title><rect x="735.0" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (35 samples, 0.02%)</title><rect x="735.0" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (35 samples, 0.02%)</title><rect x="735.0" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (35 samples, 0.02%)</title><rect x="735.0" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (35 samples, 0.02%)</title><rect x="735.0" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.0" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (35 samples, 0.02%)</title><rect x="735.0" y="739.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="738.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (90 samples, 0.06%)</title><rect x="735.3" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (90 samples, 0.06%)</title><rect x="735.3" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (64 samples, 0.04%)</title><rect x="735.5" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (64 samples, 0.04%)</title><rect x="735.5" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.5" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (46 samples, 0.03%)</title><rect x="735.5" y="771.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="738.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2,978 samples, 1.98%)</title><rect x="736.0" y="835.0" width="23.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.0" y="846.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.02%)</title><rect x="736.0" y="819.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="739.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (207 samples, 0.14%)</title><rect x="736.3" y="819.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (207 samples, 0.14%)</title><rect x="736.3" y="803.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (207 samples, 0.14%)</title><rect x="736.3" y="787.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.3" y="798.0"></text>
</g>
<g>
<title>byte[] (207 samples, 0.14%)</title><rect x="736.3" y="771.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="739.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (128 samples, 0.08%)</title><rect x="737.9" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.9" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (128 samples, 0.08%)</title><rect x="737.9" y="803.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.9" y="814.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.08%)</title><rect x="737.9" y="787.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="740.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (249 samples, 0.17%)</title><rect x="738.9" y="819.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (249 samples, 0.17%)</title><rect x="738.9" y="803.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.9" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (220 samples, 0.15%)</title><rect x="739.1" y="787.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.1" y="798.0"></text>
</g>
<g>
<title>byte[] (220 samples, 0.15%)</title><rect x="739.1" y="771.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="742.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.04%)</title><rect x="740.8" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.04%)</title><rect x="740.8" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.8" y="814.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.04%)</title><rect x="740.8" y="787.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="743.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,840 samples, 1.22%)</title><rect x="741.5" y="819.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.5" y="830.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (45 samples, 0.03%)</title><rect x="741.5" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.03%)</title><rect x="741.5" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.03%)</title><rect x="741.5" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.5" y="782.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$230/1915087157.get$Lambda (45 samples, 0.03%)</title><rect x="741.5" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.5" y="766.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$230 (45 samples, 0.03%)</title><rect x="741.5" y="739.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="744.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (954 samples, 0.63%)</title><rect x="741.9" y="803.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (580 samples, 0.38%)</title><rect x="741.9" y="787.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.9" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (580 samples, 0.38%)</title><rect x="741.9" y="771.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.9" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (580 samples, 0.38%)</title><rect x="741.9" y="755.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.9" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (580 samples, 0.38%)</title><rect x="741.9" y="739.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.9" y="750.0"></text>
</g>
<g>
<title>byte[] (580 samples, 0.38%)</title><rect x="741.9" y="723.0" width="4.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="744.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (82 samples, 0.05%)</title><rect x="746.4" y="787.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.4" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (82 samples, 0.05%)</title><rect x="746.4" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (82 samples, 0.05%)</title><rect x="746.4" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.4" y="766.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (82 samples, 0.05%)</title><rect x="746.4" y="739.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="749.4" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (99 samples, 0.07%)</title><rect x="747.0" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.0" y="798.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (46 samples, 0.03%)</title><rect x="747.0" y="771.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="750.0" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (53 samples, 0.04%)</title><rect x="747.4" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.4" y="782.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (53 samples, 0.04%)</title><rect x="747.4" y="755.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="750.4" y="766.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$230/1915087157.test (193 samples, 0.13%)</title><rect x="747.8" y="787.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.8" y="798.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (193 samples, 0.13%)</title><rect x="747.8" y="771.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$42/998351292.test (193 samples, 0.13%)</title><rect x="747.8" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (193 samples, 0.13%)</title><rect x="747.8" y="739.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.8" y="750.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$31/2052915500.test (193 samples, 0.13%)</title><rect x="747.8" y="723.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.8" y="734.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (193 samples, 0.13%)</title><rect x="747.8" y="707.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$30/1720435669.test (193 samples, 0.13%)</title><rect x="747.8" y="691.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (193 samples, 0.13%)</title><rect x="747.8" y="675.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (193 samples, 0.13%)</title><rect x="747.8" y="659.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (193 samples, 0.13%)</title><rect x="747.8" y="643.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.07%)</title><rect x="747.8" y="627.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="750.8" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (92 samples, 0.06%)</title><rect x="748.6" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.6" y="638.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.06%)</title><rect x="748.6" y="611.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="751.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (841 samples, 0.56%)</title><rect x="749.3" y="803.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.3" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (841 samples, 0.56%)</title><rect x="749.3" y="787.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.3" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (841 samples, 0.56%)</title><rect x="749.3" y="771.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.3" y="782.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (35 samples, 0.02%)</title><rect x="749.3" y="755.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="752.3" y="766.0"></text>
</g>
<g>
<title>java.util.TreeMap (54 samples, 0.04%)</title><rect x="749.8" y="755.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="752.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.03%)</title><rect x="750.4" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.03%)</title><rect x="750.4" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.4" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.get$Lambda (41 samples, 0.03%)</title><rect x="750.4" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.4" y="734.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$106 (41 samples, 0.03%)</title><rect x="750.4" y="707.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="753.4" y="718.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (43 samples, 0.03%)</title><rect x="750.7" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.7" y="766.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (43 samples, 0.03%)</title><rect x="750.7" y="739.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="753.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (555 samples, 0.37%)</title><rect x="751.1" y="755.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.1" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.accept (555 samples, 0.37%)</title><rect x="751.1" y="739.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.1" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (555 samples, 0.37%)</title><rect x="751.1" y="723.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.07%)</title><rect x="751.1" y="707.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.07%)</title><rect x="751.1" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.1" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.get$Lambda (109 samples, 0.07%)</title><rect x="751.1" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.1" y="686.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (109 samples, 0.07%)</title><rect x="751.1" y="659.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="754.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (85 samples, 0.06%)</title><rect x="751.9" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.9" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.accept (85 samples, 0.06%)</title><rect x="751.9" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.9" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (85 samples, 0.06%)</title><rect x="751.9" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (85 samples, 0.06%)</title><rect x="751.9" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (85 samples, 0.06%)</title><rect x="751.9" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (85 samples, 0.06%)</title><rect x="751.9" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (85 samples, 0.06%)</title><rect x="751.9" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (85 samples, 0.06%)</title><rect x="751.9" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.9" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (85 samples, 0.06%)</title><rect x="751.9" y="579.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="754.9" y="590.0"></text>
</g>
<g>
<title>java/util/List.copyOf (171 samples, 0.11%)</title><rect x="752.6" y="707.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.6" y="718.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (171 samples, 0.11%)</title><rect x="752.6" y="691.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (89 samples, 0.06%)</title><rect x="752.6" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.6" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.06%)</title><rect x="752.6" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.6" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.06%)</title><rect x="752.6" y="643.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="755.6" y="654.0"></text>
</g>
<g>
<title>java/util/List.of (82 samples, 0.05%)</title><rect x="753.3" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.3" y="686.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (82 samples, 0.05%)</title><rect x="753.3" y="659.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="756.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (190 samples, 0.13%)</title><rect x="753.9" y="707.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.9" y="718.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (190 samples, 0.13%)</title><rect x="753.9" y="691.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="756.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (65 samples, 0.04%)</title><rect x="755.4" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.4" y="766.0"></text>
</g>
<g>
<title>java.util.TreeMap (65 samples, 0.04%)</title><rect x="755.4" y="739.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="758.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (114 samples, 0.08%)</title><rect x="755.9" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.06%)</title><rect x="756.1" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (90 samples, 0.06%)</title><rect x="756.1" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/453041767.invoke (90 samples, 0.06%)</title><rect x="756.1" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.06%)</title><rect x="756.1" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (35 samples, 0.02%)</title><rect x="756.1" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.1" y="750.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.02%)</title><rect x="756.1" y="723.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="759.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (55 samples, 0.04%)</title><rect x="756.4" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (55 samples, 0.04%)</title><rect x="756.4" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.4" y="734.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.04%)</title><rect x="756.4" y="707.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="759.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (89 samples, 0.06%)</title><rect x="756.8" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (89 samples, 0.06%)</title><rect x="756.8" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.06%)</title><rect x="756.8" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (89 samples, 0.06%)</title><rect x="756.8" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/453041767.invoke (89 samples, 0.06%)</title><rect x="756.8" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.06%)</title><rect x="756.8" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (59 samples, 0.04%)</title><rect x="757.0" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (59 samples, 0.04%)</title><rect x="757.0" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.0" y="718.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.04%)</title><rect x="757.0" y="691.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="760.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (230 samples, 0.15%)</title><rect x="757.5" y="819.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.5" y="830.0"></text>
</g>
<g>
<title>java.util.ArrayList (59 samples, 0.04%)</title><rect x="757.5" y="803.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="760.5" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (55 samples, 0.04%)</title><rect x="758.0" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.0" y="814.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.04%)</title><rect x="758.0" y="787.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="761.0" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (116 samples, 0.08%)</title><rect x="758.4" y="803.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.4" y="814.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (116 samples, 0.08%)</title><rect x="758.4" y="787.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="761.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.06%)</title><rect x="759.3" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.06%)</title><rect x="759.3" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.3" y="862.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.06%)</title><rect x="759.3" y="835.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="762.3" y="846.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (119 samples, 0.08%)</title><rect x="760.0" y="899.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="763.0" y="910.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.03%)</title><rect x="760.9" y="899.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="763.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (594 samples, 0.39%)</title><rect x="761.2" y="899.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.04%)</title><rect x="761.2" y="883.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.04%)</title><rect x="761.2" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.2" y="878.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (46 samples, 0.03%)</title><rect x="761.7" y="883.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="764.7" y="894.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (48 samples, 0.03%)</title><rect x="762.0" y="883.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="765.0" y="894.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (68 samples, 0.05%)</title><rect x="762.4" y="883.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="765.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (165 samples, 0.11%)</title><rect x="763.0" y="883.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (165 samples, 0.11%)</title><rect x="763.0" y="867.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (165 samples, 0.11%)</title><rect x="763.0" y="851.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (165 samples, 0.11%)</title><rect x="763.0" y="835.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (165 samples, 0.11%)</title><rect x="763.0" y="819.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (165 samples, 0.11%)</title><rect x="763.0" y="803.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/2011462796.run (165 samples, 0.11%)</title><rect x="763.0" y="787.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (165 samples, 0.11%)</title><rect x="763.0" y="771.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (165 samples, 0.11%)</title><rect x="763.0" y="755.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.04%)</title><rect x="763.0" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="763.0" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$200/317210120.get$Lambda (40 samples, 0.03%)</title><rect x="763.1" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$200 (40 samples, 0.03%)</title><rect x="763.1" y="691.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="766.1" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (45 samples, 0.03%)</title><rect x="763.4" y="739.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="766.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (61 samples, 0.04%)</title><rect x="763.8" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (61 samples, 0.04%)</title><rect x="763.8" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (39 samples, 0.03%)</title><rect x="763.9" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (39 samples, 0.03%)</title><rect x="763.9" y="691.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="766.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (168 samples, 0.11%)</title><rect x="764.2" y="883.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.2" y="894.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.03%)</title><rect x="764.2" y="867.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="767.2" y="878.0"></text>
</g>
<g>
<title>java.util.HashMap (71 samples, 0.05%)</title><rect x="764.5" y="867.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="767.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (59 samples, 0.04%)</title><rect x="765.1" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.1" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (59 samples, 0.04%)</title><rect x="765.1" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.1" y="862.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.04%)</title><rect x="765.1" y="835.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="768.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (41 samples, 0.03%)</title><rect x="765.6" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.6" y="894.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.03%)</title><rect x="765.6" y="867.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="768.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="765.9" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="765.9" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.9" y="1006.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.03%)</title><rect x="765.9" y="979.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="768.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (72 samples, 0.05%)</title><rect x="766.2" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (72 samples, 0.05%)</title><rect x="766.2" y="1027.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.2" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (37 samples, 0.02%)</title><rect x="766.2" y="1011.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="769.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.02%)</title><rect x="766.5" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.02%)</title><rect x="766.5" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.5" y="1006.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.02%)</title><rect x="766.5" y="979.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="769.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,687 samples, 1.12%)</title><rect x="766.8" y="1043.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.04%)</title><rect x="766.8" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.04%)</title><rect x="766.8" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/1863337909.get$Lambda (34 samples, 0.02%)</title><rect x="766.8" y="995.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.8" y="1006.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$191 (34 samples, 0.02%)</title><rect x="766.8" y="979.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="769.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (76 samples, 0.05%)</title><rect x="767.2" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (76 samples, 0.05%)</title><rect x="767.2" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$192/750649321.apply (32 samples, 0.02%)</title><rect x="767.2" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (32 samples, 0.02%)</title><rect x="767.2" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (32 samples, 0.02%)</title><rect x="767.2" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.2" y="974.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.02%)</title><rect x="767.2" y="947.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="770.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="767.5" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="767.5" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.5" y="990.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.03%)</title><rect x="767.5" y="963.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="770.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (43 samples, 0.03%)</title><rect x="767.8" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (43 samples, 0.03%)</title><rect x="767.8" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="767.8" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.03%)</title><rect x="767.8" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.8" y="990.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.03%)</title><rect x="767.8" y="963.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="770.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,513 samples, 1.00%)</title><rect x="768.1" y="1027.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,513 samples, 1.00%)</title><rect x="768.1" y="1011.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.1" y="1022.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (129 samples, 0.09%)</title><rect x="768.1" y="995.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="771.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,348 samples, 0.89%)</title><rect x="769.2" y="995.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.2" y="1006.0"></text>
</g>
<g>
<title>java.util.LinkedList (38 samples, 0.03%)</title><rect x="769.3" y="979.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="772.3" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (58 samples, 0.04%)</title><rect x="770.0" y="979.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.0" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (58 samples, 0.04%)</title><rect x="770.0" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.0" y="974.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (58 samples, 0.04%)</title><rect x="770.0" y="947.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="773.0" y="958.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (97 samples, 0.06%)</title><rect x="770.7" y="979.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="773.7" y="990.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (61 samples, 0.04%)</title><rect x="771.4" y="979.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="774.4" y="990.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (71 samples, 0.05%)</title><rect x="771.9" y="979.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="774.9" y="990.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.05%)</title><rect x="772.5" y="979.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="775.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (396 samples, 0.26%)</title><rect x="773.0" y="979.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.03%)</title><rect x="773.8" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.8" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.03%)</title><rect x="773.8" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (32 samples, 0.02%)</title><rect x="774.1" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.1" y="974.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (32 samples, 0.02%)</title><rect x="774.1" y="947.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="777.1" y="958.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.03%)</title><rect x="774.6" y="963.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="777.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (149 samples, 0.10%)</title><rect x="775.0" y="963.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (75 samples, 0.05%)</title><rect x="775.6" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (282 samples, 0.19%)</title><rect x="776.1" y="979.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (182 samples, 0.12%)</title><rect x="776.9" y="963.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.9" y="974.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (41 samples, 0.03%)</title><rect x="776.9" y="947.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="779.9" y="958.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (41 samples, 0.03%)</title><rect x="777.3" y="947.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="780.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (79 samples, 0.05%)</title><rect x="777.7" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (126 samples, 0.08%)</title><rect x="778.7" y="979.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1449621165.linkToTargetMethod (45 samples, 0.03%)</title><rect x="778.7" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.03%)</title><rect x="778.7" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$156/1440730131.get$Lambda (45 samples, 0.03%)</title><rect x="778.7" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.7" y="942.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$156 (45 samples, 0.03%)</title><rect x="778.7" y="915.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="781.7" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (81 samples, 0.05%)</title><rect x="779.1" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$156/1440730131.run (81 samples, 0.05%)</title><rect x="779.1" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (81 samples, 0.05%)</title><rect x="779.1" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.1" y="942.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (59 samples, 0.04%)</title><rect x="779.3" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (36 samples, 0.02%)</title><rect x="779.7" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.7" y="1006.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.02%)</title><rect x="779.7" y="979.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="782.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$101/526355395.get (13,645 samples, 9.06%)</title><rect x="780.1" y="1171.0" width="106.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.1" y="1182.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$getTimestampResponse$0 (13,645 samples, 9.06%)</title><rect x="780.1" y="1155.0" width="106.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.1" y="1166.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.fromBytes (1,373 samples, 0.91%)</title><rect x="780.1" y="1139.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (805 samples, 0.53%)</title><rect x="780.1" y="1123.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (805 samples, 0.53%)</title><rect x="780.1" y="1107.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.1" y="1118.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (805 samples, 0.53%)</title><rect x="780.1" y="1091.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="783.1" y="1102.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.manikhin.TimestampRecord (568 samples, 0.38%)</title><rect x="786.4" y="1123.0" width="4.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="789.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.getEmpty (250 samples, 0.17%)</title><rect x="790.9" y="1139.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.9" y="1150.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.manikhin.TimestampRecord (250 samples, 0.17%)</title><rect x="790.9" y="1123.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="793.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.timestampFromByteBuffer (12,022 samples, 7.98%)</title><rect x="792.8" y="1139.0" width="94.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.8" y="1150.0">ru/mail/pol..</text>
</g>
<g>
<title>java.util.NoSuchElementException (538 samples, 0.36%)</title><rect x="792.8" y="1123.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="795.8" y="1134.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (7,309 samples, 4.85%)</title><rect x="797.1" y="1123.0" width="57.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.1" y="1134.0">java/u..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (7,309 samples, 4.85%)</title><rect x="797.1" y="1107.0" width="57.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.1" y="1118.0">java/l..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (7,309 samples, 4.85%)</title><rect x="797.1" y="1091.0" width="57.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.1" y="1102.0">java/l..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (7,309 samples, 4.85%)</title><rect x="797.1" y="1075.0" width="57.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.1" y="1086.0">java/l..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7,309 samples, 4.85%)</title><rect x="797.1" y="1059.0" width="57.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.1" y="1070.0">java/l..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7,309 samples, 4.85%)</title><rect x="797.1" y="1043.0" width="57.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.1" y="1054.0">java/l..</text>
</g>
<g>
<title>int[] (679 samples, 0.45%)</title><rect x="797.1" y="1027.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="800.1" y="1038.0"></text>
</g>
<g>
<title>int[] (611 samples, 0.41%)</title><rect x="802.4" y="1027.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="805.4" y="1038.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,189 samples, 0.79%)</title><rect x="807.2" y="1027.0" width="9.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="810.2" y="1038.0"></text>
</g>
<g>
<title>java.lang.Object[] (972 samples, 0.65%)</title><rect x="816.5" y="1027.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="819.5" y="1038.0"></text>
</g>
<g>
<title>long[] (887 samples, 0.59%)</title><rect x="824.1" y="1027.0" width="6.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="827.1" y="1038.0"></text>
</g>
<g>
<title>long[] (2,049 samples, 1.36%)</title><rect x="831.0" y="1027.0" width="16.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.0" y="1038.0"></text>
</g>
<g>
<title>short[] (745 samples, 0.49%)</title><rect x="847.1" y="1027.0" width="5.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="850.1" y="1038.0"></text>
</g>
<g>
<title>short[] (177 samples, 0.12%)</title><rect x="852.9" y="1027.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="855.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.getTimestampRecord (3,451 samples, 2.29%)</title><rect x="854.3" y="1123.0" width="27.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.3" y="1134.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (645 samples, 0.43%)</title><rect x="854.3" y="1107.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.3" y="1118.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (645 samples, 0.43%)</title><rect x="854.3" y="1091.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.3" y="1102.0"></text>
</g>
<g>
<title>byte[] (645 samples, 0.43%)</title><rect x="854.3" y="1075.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="857.3" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (955 samples, 0.63%)</title><rect x="859.3" y="1107.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.3" y="1118.0"></text>
</g>
<g>
<title>byte[] (955 samples, 0.63%)</title><rect x="859.3" y="1091.0" width="7.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="862.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.fromBytes (1,851 samples, 1.23%)</title><rect x="866.8" y="1107.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.8" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (827 samples, 0.55%)</title><rect x="866.8" y="1091.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.8" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (827 samples, 0.55%)</title><rect x="866.8" y="1075.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.8" y="1086.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (827 samples, 0.55%)</title><rect x="866.8" y="1059.0" width="6.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="869.8" y="1070.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.manikhin.TimestampRecord (1,024 samples, 0.68%)</title><rect x="873.3" y="1091.0" width="8.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="876.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.toBytes (724 samples, 0.48%)</title><rect x="881.3" y="1123.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.3" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (724 samples, 0.48%)</title><rect x="881.3" y="1107.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.3" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (724 samples, 0.48%)</title><rect x="881.3" y="1091.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.3" y="1102.0"></text>
</g>
<g>
<title>byte[] (724 samples, 0.48%)</title><rect x="881.3" y="1075.0" width="5.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="884.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (25,909 samples, 17.19%)</title><rect x="887.0" y="1187.0" width="202.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.0" y="1198.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (25,907 samples, 17.19%)</title><rect x="887.0" y="1171.0" width="202.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.0" y="1182.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (25,907 samples, 17.19%)</title><rect x="887.0" y="1155.0" width="202.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.0" y="1166.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$150/536019492.accept (25,907 samples, 17.19%)</title><rect x="887.0" y="1139.0" width="202.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.0" y="1150.0">ru/mail/polis/service/mani..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$atLeastAsync$8 (25,907 samples, 17.19%)</title><rect x="887.0" y="1123.0" width="202.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.0" y="1134.0">ru/mail/polis/service/mani..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (25,187 samples, 16.72%)</title><rect x="887.0" y="1107.0" width="197.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.0" y="1118.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25,187 samples, 16.72%)</title><rect x="887.0" y="1091.0" width="197.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.0" y="1102.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (21,460 samples, 14.24%)</title><rect x="887.0" y="1075.0" width="168.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.0" y="1086.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (21,460 samples, 14.24%)</title><rect x="887.0" y="1059.0" width="168.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.0" y="1070.0">java/util/concurrent/C..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests$$Lambda$152/120584240.apply (21,460 samples, 14.24%)</title><rect x="887.0" y="1043.0" width="168.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.0" y="1054.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.lambda$multiGet$0 (21,460 samples, 14.24%)</title><rect x="887.0" y="1027.0" width="168.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.0" y="1038.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasNettyRequests.processResponses (21,460 samples, 14.24%)</title><rect x="887.0" y="1011.0" width="168.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.0" y="1022.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1,722 samples, 1.14%)</title><rect x="887.0" y="995.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.0" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1,722 samples, 1.14%)</title><rect x="887.0" y="979.0" width="13.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.0" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (720 samples, 0.48%)</title><rect x="887.0" y="963.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.0" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (720 samples, 0.48%)</title><rect x="887.0" y="947.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.0" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (720 samples, 0.48%)</title><rect x="887.0" y="931.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.0" y="942.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (720 samples, 0.48%)</title><rect x="887.0" y="915.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="890.0" y="926.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1,002 samples, 0.66%)</title><rect x="892.6" y="963.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.6" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1,002 samples, 0.66%)</title><rect x="892.6" y="947.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.6" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter.convertObject (1,002 samples, 0.66%)</title><rect x="892.6" y="931.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1,002 samples, 0.66%)</title><rect x="892.6" y="915.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.6" y="926.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1,002 samples, 0.66%)</title><rect x="892.6" y="899.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.6" y="910.0"></text>
</g>
<g>
<title>byte[] (581 samples, 0.39%)</title><rect x="892.6" y="883.0" width="4.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="895.6" y="894.0"></text>
</g>
<g>
<title>java.lang.String (421 samples, 0.28%)</title><rect x="897.2" y="883.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="900.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (308 samples, 0.20%)</title><rect x="900.5" y="995.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.Long (308 samples, 0.20%)</title><rect x="900.5" y="979.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="903.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.getValueAsBytes (507 samples, 0.34%)</title><rect x="902.9" y="995.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.9" y="1006.0"></text>
</g>
<g>
<title>byte[] (507 samples, 0.34%)</title><rect x="902.9" y="979.0" width="4.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="905.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.merge (6,729 samples, 4.47%)</title><rect x="906.9" y="995.0" width="52.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.9" y="1006.0">ru/ma..</text>
</g>
<g>
<title>java/util/Collection.stream (2,134 samples, 1.42%)</title><rect x="906.9" y="979.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (768 samples, 0.51%)</title><rect x="906.9" y="963.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.9" y="974.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (768 samples, 0.51%)</title><rect x="906.9" y="947.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.9" y="958.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (768 samples, 0.51%)</title><rect x="906.9" y="931.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="909.9" y="942.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,366 samples, 0.91%)</title><rect x="912.9" y="963.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.9" y="974.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,312 samples, 0.87%)</title><rect x="912.9" y="947.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="915.9" y="958.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (54 samples, 0.04%)</title><rect x="923.2" y="947.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.2" y="958.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (358 samples, 0.24%)</title><rect x="923.6" y="979.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (358 samples, 0.24%)</title><rect x="923.6" y="963.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (358 samples, 0.24%)</title><rect x="923.6" y="947.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="926.6" y="958.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$226/751778520.get$Lambda (358 samples, 0.24%)</title><rect x="923.6" y="931.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="926.6" y="942.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$226 (358 samples, 0.24%)</title><rect x="923.6" y="915.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="926.6" y="926.0"></text>
</g>
<g>
<title>java/util/Optional.orElseGet (186 samples, 0.12%)</title><rect x="926.4" y="979.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord$$Lambda$228/666219301.get (186 samples, 0.12%)</title><rect x="926.4" y="963.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.4" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.getEmpty (186 samples, 0.12%)</title><rect x="926.4" y="947.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.4" y="958.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.manikhin.TimestampRecord (186 samples, 0.12%)</title><rect x="926.4" y="931.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="929.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,660 samples, 1.10%)</title><rect x="927.8" y="979.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.8" y="990.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,315 samples, 0.87%)</title><rect x="927.8" y="963.0" width="10.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="930.8" y="974.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (345 samples, 0.23%)</title><rect x="938.1" y="963.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="941.1" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (2,391 samples, 1.59%)</title><rect x="940.8" y="979.0" width="18.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.8" y="990.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (345 samples, 0.23%)</title><rect x="940.8" y="963.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.8" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (345 samples, 0.23%)</title><rect x="940.8" y="947.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.8" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (345 samples, 0.23%)</title><rect x="940.8" y="931.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.8" y="942.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$227/28476113.get$Lambda (345 samples, 0.23%)</title><rect x="940.8" y="915.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.8" y="926.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$227 (345 samples, 0.23%)</title><rect x="940.8" y="899.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="943.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2,046 samples, 1.36%)</title><rect x="943.5" y="963.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.5" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,471 samples, 0.98%)</title><rect x="943.5" y="947.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1,471 samples, 0.98%)</title><rect x="943.5" y="931.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (467 samples, 0.31%)</title><rect x="943.5" y="915.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (467 samples, 0.31%)</title><rect x="943.5" y="899.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (467 samples, 0.31%)</title><rect x="943.5" y="883.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.5" y="894.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (467 samples, 0.31%)</title><rect x="943.5" y="867.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="946.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (781 samples, 0.52%)</title><rect x="947.2" y="915.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (781 samples, 0.52%)</title><rect x="947.2" y="899.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.2" y="910.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (781 samples, 0.52%)</title><rect x="947.2" y="883.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="950.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (223 samples, 0.15%)</title><rect x="953.3" y="915.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (223 samples, 0.15%)</title><rect x="953.3" y="899.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="956.3" y="910.0"></text>
</g>
<g>
<title>java/util/Optional.of (223 samples, 0.15%)</title><rect x="953.3" y="883.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.3" y="894.0"></text>
</g>
<g>
<title>java.util.Optional (223 samples, 0.15%)</title><rect x="953.3" y="867.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="956.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (575 samples, 0.38%)</title><rect x="955.1" y="947.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.1" y="958.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (575 samples, 0.38%)</title><rect x="955.1" y="931.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="958.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.toBytes (199 samples, 0.13%)</title><rect x="959.6" y="995.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (199 samples, 0.13%)</title><rect x="959.6" y="979.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.6" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (199 samples, 0.13%)</title><rect x="959.6" y="963.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.6" y="974.0"></text>
</g>
<g>
<title>byte[] (199 samples, 0.13%)</title><rect x="959.6" y="947.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="962.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.responseBuilder (11,995 samples, 7.96%)</title><rect x="961.1" y="995.0" width="94.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.1" y="1006.0">ru/mail/pol..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultFullHttpResponse (766 samples, 0.51%)</title><rect x="961.1" y="979.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="964.1" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.copiedBuffer (1,476 samples, 0.98%)</title><rect x="967.1" y="979.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.1" y="990.0"></text>
</g>
<g>
<title>byte[] (554 samples, 0.37%)</title><rect x="967.1" y="963.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="970.1" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.wrappedBuffer (922 samples, 0.61%)</title><rect x="971.5" y="963.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.5" y="974.0"></text>
</g>
<g>
<title>io.netty.buffer.UnpooledHeapByteBuf (922 samples, 0.61%)</title><rect x="971.5" y="947.0" width="7.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="974.5" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (7,473 samples, 4.96%)</title><rect x="978.7" y="979.0" width="58.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.7" y="990.0">io/net..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (7,473 samples, 4.96%)</title><rect x="978.7" y="963.0" width="58.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.7" y="974.0">io/net..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (7,473 samples, 4.96%)</title><rect x="978.7" y="947.0" width="58.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.7" y="958.0">io/net..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (416 samples, 0.28%)</title><rect x="978.7" y="931.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="981.7" y="942.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (3,572 samples, 2.37%)</title><rect x="981.9" y="931.0" width="28.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.9" y="942.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (3,572 samples, 2.37%)</title><rect x="981.9" y="915.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.9" y="926.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (1,137 samples, 0.75%)</title><rect x="981.9" y="899.0" width="8.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="984.9" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (2,435 samples, 1.62%)</title><rect x="990.8" y="899.0" width="19.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.8" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2,435 samples, 1.62%)</title><rect x="990.8" y="883.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.8" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2,435 samples, 1.62%)</title><rect x="990.8" y="867.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.8" y="878.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (971 samples, 0.64%)</title><rect x="990.8" y="851.0" width="7.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="993.8" y="862.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (568 samples, 0.38%)</title><rect x="998.4" y="851.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.4" y="862.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (896 samples, 0.59%)</title><rect x="1002.9" y="851.0" width="7.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1005.9" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (3,485 samples, 2.31%)</title><rect x="1009.9" y="931.0" width="27.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.9" y="942.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (3,485 samples, 2.31%)</title><rect x="1009.9" y="915.0" width="27.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.9" y="926.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.http.DefaultHttpHeaders (236 samples, 0.16%)</title><rect x="1009.9" y="899.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1012.9" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (3,249 samples, 2.16%)</title><rect x="1011.8" y="899.0" width="25.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.8" y="910.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (3,249 samples, 2.16%)</title><rect x="1011.8" y="883.0" width="25.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.8" y="894.0">i..</text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeadersImpl (896 samples, 0.59%)</title><rect x="1011.8" y="867.0" width="7.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1014.8" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (2,353 samples, 1.56%)</title><rect x="1018.8" y="867.0" width="18.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1021.8" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2,353 samples, 1.56%)</title><rect x="1018.8" y="851.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.8" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (2,353 samples, 1.56%)</title><rect x="1018.8" y="835.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.8" y="846.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (989 samples, 0.66%)</title><rect x="1018.8" y="819.0" width="7.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1021.8" y="830.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry[] (536 samples, 0.36%)</title><rect x="1026.5" y="819.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1029.5" y="830.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (828 samples, 0.55%)</title><rect x="1030.7" y="819.0" width="6.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1033.7" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (2,280 samples, 1.51%)</title><rect x="1037.2" y="979.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.2" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (2,280 samples, 1.51%)</title><rect x="1037.2" y="963.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.2" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (782 samples, 0.52%)</title><rect x="1037.2" y="947.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.2" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (782 samples, 0.52%)</title><rect x="1037.2" y="931.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.2" y="942.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (782 samples, 0.52%)</title><rect x="1037.2" y="915.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.2" y="926.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (782 samples, 0.52%)</title><rect x="1037.2" y="899.0" width="6.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1040.2" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1,498 samples, 0.99%)</title><rect x="1043.3" y="947.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.3" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1,498 samples, 0.99%)</title><rect x="1043.3" y="931.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.3" y="942.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverter.convertObject (1,498 samples, 0.99%)</title><rect x="1043.3" y="915.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1,498 samples, 0.99%)</title><rect x="1043.3" y="899.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.3" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1,498 samples, 0.99%)</title><rect x="1043.3" y="883.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.3" y="894.0"></text>
</g>
<g>
<title>byte[] (651 samples, 0.43%)</title><rect x="1043.3" y="867.0" width="5.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1046.3" y="878.0"></text>
</g>
<g>
<title>java.lang.String (847 samples, 0.56%)</title><rect x="1048.4" y="867.0" width="6.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1051.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,727 samples, 2.47%)</title><rect x="1055.1" y="1075.0" width="29.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1058.1" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,727 samples, 2.47%)</title><rect x="1055.1" y="1059.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.1" y="1070.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils$$Lambda$153/1911805998.accept (3,727 samples, 2.47%)</title><rect x="1055.1" y="1043.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.1" y="1054.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/utils/ServiceUtils.lambda$respond$10 (3,727 samples, 2.47%)</title><rect x="1055.1" y="1027.0" width="29.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.1" y="1038.0">ru..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (2,221 samples, 1.47%)</title><rect x="1055.1" y="1011.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.1" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.newPromise (896 samples, 0.59%)</title><rect x="1055.1" y="995.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.1" y="1006.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPromise (896 samples, 0.59%)</title><rect x="1055.1" y="979.0" width="7.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1058.1" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1,325 samples, 0.88%)</title><rect x="1062.1" y="995.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1,325 samples, 0.88%)</title><rect x="1062.1" y="979.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.1" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.newInstance (1,325 samples, 0.88%)</title><rect x="1062.1" y="963.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.1" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1,325 samples, 0.88%)</title><rect x="1062.1" y="947.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.1" y="958.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1,325 samples, 0.88%)</title><rect x="1062.1" y="931.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.1" y="942.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.newHandle (654 samples, 0.43%)</title><rect x="1062.1" y="915.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.1" y="926.0"></text>
</g>
<g>
<title>io.netty.util.Recycler$DefaultHandle (654 samples, 0.43%)</title><rect x="1062.1" y="899.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1065.1" y="910.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool$1.newObject (671 samples, 0.45%)</title><rect x="1067.2" y="915.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.2" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask$1.newObject (671 samples, 0.45%)</title><rect x="1067.2" y="899.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.2" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask$1.newObject (671 samples, 0.45%)</title><rect x="1067.2" y="883.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.2" y="894.0"></text>
</g>
<g>
<title>io.netty.channel.AbstractChannelHandlerContext$WriteTask (671 samples, 0.45%)</title><rect x="1067.2" y="867.0" width="5.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1070.2" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (680 samples, 0.45%)</title><rect x="1072.4" y="1011.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.4" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (680 samples, 0.45%)</title><rect x="1072.4" y="995.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.4" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (680 samples, 0.45%)</title><rect x="1072.4" y="979.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.4" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (680 samples, 0.45%)</title><rect x="1072.4" y="963.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.4" y="974.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (680 samples, 0.45%)</title><rect x="1072.4" y="947.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.4" y="958.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$HeaderEntry (680 samples, 0.45%)</title><rect x="1072.4" y="931.0" width="5.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1075.4" y="942.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isKeepAlive (826 samples, 0.55%)</title><rect x="1077.8" y="1011.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.8" y="1022.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeaders.containsValue (826 samples, 0.55%)</title><rect x="1077.8" y="995.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1080.8" y="1006.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.valueCharSequenceIterator (826 samples, 0.55%)</title><rect x="1077.8" y="979.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.8" y="990.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.valueIterator (826 samples, 0.55%)</title><rect x="1077.8" y="963.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1080.8" y="974.0"></text>
</g>
<g>
<title>io.netty.handler.codec.DefaultHeaders$ValueIterator (826 samples, 0.55%)</title><rect x="1077.8" y="947.0" width="6.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1080.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (720 samples, 0.48%)</title><rect x="1084.2" y="1107.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (720 samples, 0.48%)</title><rect x="1084.2" y="1091.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.2" y="1102.0"></text>
</g>
<g>
<title>java.lang.Object[] (720 samples, 0.48%)</title><rect x="1084.2" y="1075.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1087.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,397 samples, 0.93%)</title><rect x="1089.9" y="1187.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,397 samples, 0.93%)</title><rect x="1089.9" y="1171.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1092.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,386 samples, 0.92%)</title><rect x="1089.9" y="1155.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,386 samples, 0.92%)</title><rect x="1089.9" y="1139.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.9" y="1150.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,386 samples, 0.92%)</title><rect x="1089.9" y="1123.0" width="10.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1092.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$231/1485958815.run (712 samples, 0.47%)</title><rect x="1100.8" y="1187.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (712 samples, 0.47%)</title><rect x="1100.8" y="1171.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (712 samples, 0.47%)</title><rect x="1100.8" y="1155.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (712 samples, 0.47%)</title><rect x="1100.8" y="1139.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (712 samples, 0.47%)</title><rect x="1100.8" y="1123.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (712 samples, 0.47%)</title><rect x="1100.8" y="1107.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (712 samples, 0.47%)</title><rect x="1100.8" y="1091.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (712 samples, 0.47%)</title><rect x="1100.8" y="1075.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (712 samples, 0.47%)</title><rect x="1100.8" y="1059.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (712 samples, 0.47%)</title><rect x="1100.8" y="1043.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (712 samples, 0.47%)</title><rect x="1100.8" y="1027.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (649 samples, 0.43%)</title><rect x="1100.8" y="1011.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1103.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.07%)</title><rect x="1100.8" y="995.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.07%)</title><rect x="1100.8" y="979.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1673962053.get$Lambda (81 samples, 0.05%)</title><rect x="1101.0" y="963.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.0" y="974.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$237 (81 samples, 0.05%)</title><rect x="1101.0" y="947.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1104.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (546 samples, 0.36%)</title><rect x="1101.6" y="995.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.6" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (62 samples, 0.04%)</title><rect x="1101.6" y="979.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1104.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (484 samples, 0.32%)</title><rect x="1102.1" y="979.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1105.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (484 samples, 0.32%)</title><rect x="1102.1" y="963.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1105.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (484 samples, 0.32%)</title><rect x="1102.1" y="947.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (236 samples, 0.16%)</title><rect x="1102.1" y="931.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.1" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (86 samples, 0.06%)</title><rect x="1102.1" y="915.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1105.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/2105901669.apply (141 samples, 0.09%)</title><rect x="1102.8" y="915.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (141 samples, 0.09%)</title><rect x="1102.8" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1105.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (141 samples, 0.09%)</title><rect x="1102.8" y="883.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.8" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (36 samples, 0.02%)</title><rect x="1102.8" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.8" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (36 samples, 0.02%)</title><rect x="1102.8" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.8" y="862.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (36 samples, 0.02%)</title><rect x="1102.8" y="835.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1105.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (105 samples, 0.07%)</title><rect x="1103.1" y="867.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (84 samples, 0.06%)</title><rect x="1103.2" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (84 samples, 0.06%)</title><rect x="1103.2" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.2" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (48 samples, 0.03%)</title><rect x="1103.2" y="819.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1106.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.02%)</title><rect x="1103.6" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.02%)</title><rect x="1103.6" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.6" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.02%)</title><rect x="1103.6" y="787.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1106.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (248 samples, 0.16%)</title><rect x="1104.0" y="931.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (248 samples, 0.16%)</title><rect x="1104.0" y="915.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/1475186263.apply (248 samples, 0.16%)</title><rect x="1104.0" y="899.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (248 samples, 0.16%)</title><rect x="1104.0" y="883.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (248 samples, 0.16%)</title><rect x="1104.0" y="867.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1950094988.apply (248 samples, 0.16%)</title><rect x="1104.0" y="851.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1107.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (248 samples, 0.16%)</title><rect x="1104.0" y="835.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (94 samples, 0.06%)</title><rect x="1104.2" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (94 samples, 0.06%)</title><rect x="1104.2" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.2" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (52 samples, 0.03%)</title><rect x="1104.2" y="787.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1107.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="1104.6" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="1104.6" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1107.6" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.03%)</title><rect x="1104.6" y="755.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1107.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (125 samples, 0.08%)</title><rect x="1104.9" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (73 samples, 0.05%)</title><rect x="1104.9" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1107.9" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (36 samples, 0.02%)</title><rect x="1104.9" y="787.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1107.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (37 samples, 0.02%)</title><rect x="1105.2" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (37 samples, 0.02%)</title><rect x="1105.2" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1108.2" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.02%)</title><rect x="1105.2" y="755.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1108.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (52 samples, 0.03%)</title><rect x="1105.5" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (63 samples, 0.04%)</title><rect x="1105.9" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (63 samples, 0.04%)</title><rect x="1105.9" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (63 samples, 0.04%)</title><rect x="1105.9" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (63 samples, 0.04%)</title><rect x="1105.9" y="963.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (63 samples, 0.04%)</title><rect x="1105.9" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.9" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (63 samples, 0.04%)</title><rect x="1105.9" y="931.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1108.9" y="942.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (32 samples, 0.02%)</title><rect x="1106.1" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.1" y="926.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (32 samples, 0.02%)</title><rect x="1106.1" y="899.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1109.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6,721 samples, 4.46%)</title><rect x="1106.4" y="1187.0" width="52.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.4" y="1198.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,721 samples, 4.46%)</title><rect x="1106.4" y="1171.0" width="52.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.4" y="1182.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,686 samples, 3.77%)</title><rect x="1106.4" y="1155.0" width="44.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.4" y="1166.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/2011462796.run (5,686 samples, 3.77%)</title><rect x="1106.4" y="1139.0" width="44.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.4" y="1150.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,686 samples, 3.77%)</title><rect x="1106.4" y="1123.0" width="44.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.4" y="1134.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (97 samples, 0.06%)</title><rect x="1106.4" y="1107.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1109.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (97 samples, 0.06%)</title><rect x="1106.4" y="1091.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (97 samples, 0.06%)</title><rect x="1106.4" y="1075.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (97 samples, 0.06%)</title><rect x="1106.4" y="1059.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/913190639.linkToTargetMethod (54 samples, 0.04%)</title><rect x="1106.4" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1740035246.invoke (54 samples, 0.04%)</title><rect x="1106.4" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.04%)</title><rect x="1106.4" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (54 samples, 0.04%)</title><rect x="1106.4" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (54 samples, 0.04%)</title><rect x="1106.4" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.4" y="990.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.04%)</title><rect x="1106.4" y="963.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1109.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (43 samples, 0.03%)</title><rect x="1106.8" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1109.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.03%)</title><rect x="1106.8" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.03%)</title><rect x="1106.8" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$232/1105336468.get$Lambda (43 samples, 0.03%)</title><rect x="1106.8" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.8" y="1006.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$232 (43 samples, 0.03%)</title><rect x="1106.8" y="979.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1109.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5,589 samples, 3.71%)</title><rect x="1107.2" y="1107.0" width="43.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.2" y="1118.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5,589 samples, 3.71%)</title><rect x="1107.2" y="1091.0" width="43.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.2" y="1102.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,589 samples, 3.71%)</title><rect x="1107.2" y="1075.0" width="43.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1110.2" y="1086.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,589 samples, 3.71%)</title><rect x="1107.2" y="1059.0" width="43.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.2" y="1070.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,559 samples, 1.70%)</title><rect x="1107.2" y="1043.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,559 samples, 1.70%)</title><rect x="1107.2" y="1027.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,559 samples, 1.70%)</title><rect x="1107.2" y="1011.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,559 samples, 1.70%)</title><rect x="1107.2" y="995.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,559 samples, 1.70%)</title><rect x="1107.2" y="979.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,559 samples, 1.70%)</title><rect x="1107.2" y="963.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,559 samples, 1.70%)</title><rect x="1107.2" y="947.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,497 samples, 1.66%)</title><rect x="1107.2" y="931.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,497 samples, 1.66%)</title><rect x="1107.2" y="915.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,457 samples, 1.63%)</title><rect x="1107.2" y="899.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.2" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (54 samples, 0.04%)</title><rect x="1107.2" y="883.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1110.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/2047461627.apply (2,338 samples, 1.55%)</title><rect x="1107.6" y="883.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,338 samples, 1.55%)</title><rect x="1107.6" y="867.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.6" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.02%)</title><rect x="1107.6" y="851.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.6" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.02%)</title><rect x="1107.6" y="835.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$260/2015801594.get$Lambda (34 samples, 0.02%)</title><rect x="1107.6" y="819.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.6" y="830.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$260 (34 samples, 0.02%)</title><rect x="1107.6" y="803.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1110.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (97 samples, 0.06%)</title><rect x="1107.8" y="851.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1110.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (97 samples, 0.06%)</title><rect x="1107.8" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.8" y="846.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (58 samples, 0.04%)</title><rect x="1107.8" y="819.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1110.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.03%)</title><rect x="1108.3" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.03%)</title><rect x="1108.3" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.3" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.03%)</title><rect x="1108.3" y="787.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1111.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,207 samples, 1.46%)</title><rect x="1108.6" y="851.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (95 samples, 0.06%)</title><rect x="1108.8" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (95 samples, 0.06%)</title><rect x="1108.8" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.8" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (56 samples, 0.04%)</title><rect x="1108.8" y="803.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1111.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.03%)</title><rect x="1109.2" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.03%)</title><rect x="1109.2" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.2" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.03%)</title><rect x="1109.2" y="771.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1112.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,092 samples, 1.39%)</title><rect x="1109.5" y="835.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.5" y="846.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (33 samples, 0.02%)</title><rect x="1109.5" y="819.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1112.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,586 samples, 1.05%)</title><rect x="1109.8" y="819.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.03%)</title><rect x="1109.8" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.03%)</title><rect x="1109.8" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1112.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2138462031.linkToTargetMethod (50 samples, 0.03%)</title><rect x="1110.1" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1113.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2008438317.invokeStatic (50 samples, 0.03%)</title><rect x="1110.1" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/290404521.get$Lambda (50 samples, 0.03%)</title><rect x="1110.1" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.1" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$246 (50 samples, 0.03%)</title><rect x="1110.1" y="755.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1113.1" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (314 samples, 0.21%)</title><rect x="1110.5" y="803.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.5" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (133 samples, 0.09%)</title><rect x="1110.5" y="787.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.5" y="798.0"></text>
</g>
<g>
<title>java/util/List.spliterator (50 samples, 0.03%)</title><rect x="1110.5" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.5" y="782.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (50 samples, 0.03%)</title><rect x="1110.5" y="755.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1113.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (83 samples, 0.06%)</title><rect x="1110.9" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.9" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (83 samples, 0.06%)</title><rect x="1110.9" y="755.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1113.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (94 samples, 0.06%)</title><rect x="1111.5" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (94 samples, 0.06%)</title><rect x="1111.5" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (94 samples, 0.06%)</title><rect x="1111.5" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (34 samples, 0.02%)</title><rect x="1111.5" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (34 samples, 0.02%)</title><rect x="1111.5" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (34 samples, 0.02%)</title><rect x="1111.5" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.5" y="718.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (34 samples, 0.02%)</title><rect x="1111.5" y="691.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1114.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$242/1540393143.get (32 samples, 0.02%)</title><rect x="1111.8" y="739.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.8" y="750.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (32 samples, 0.02%)</title><rect x="1111.8" y="723.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1114.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (87 samples, 0.06%)</title><rect x="1112.2" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.2" y="798.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (87 samples, 0.06%)</title><rect x="1112.2" y="771.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1115.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (181 samples, 0.12%)</title><rect x="1112.9" y="803.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (86 samples, 0.06%)</title><rect x="1112.9" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.9" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (48 samples, 0.03%)</title><rect x="1112.9" y="771.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1115.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.03%)</title><rect x="1113.3" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.03%)</title><rect x="1113.3" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.03%)</title><rect x="1113.3" y="739.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1116.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (95 samples, 0.06%)</title><rect x="1113.6" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1116.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (95 samples, 0.06%)</title><rect x="1113.6" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.6" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (49 samples, 0.03%)</title><rect x="1113.6" y="755.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1116.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.03%)</title><rect x="1114.0" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.03%)</title><rect x="1114.0" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.0" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.03%)</title><rect x="1114.0" y="723.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1117.0" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (53 samples, 0.04%)</title><rect x="1114.5" y="803.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1117.5" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.03%)</title><rect x="1115.0" y="803.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1118.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (797 samples, 0.53%)</title><rect x="1115.5" y="803.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$246/290404521.run (797 samples, 0.53%)</title><rect x="1115.5" y="787.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (797 samples, 0.53%)</title><rect x="1115.5" y="771.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.06%)</title><rect x="1115.5" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.06%)</title><rect x="1115.5" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$250/882642740.get$Lambda (42 samples, 0.03%)</title><rect x="1115.9" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.9" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$250 (42 samples, 0.03%)</title><rect x="1115.9" y="707.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1118.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (90 samples, 0.06%)</title><rect x="1116.2" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (90 samples, 0.06%)</title><rect x="1116.2" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.2" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (46 samples, 0.03%)</title><rect x="1116.2" y="723.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1119.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="1116.6" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="1116.6" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.6" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.03%)</title><rect x="1116.6" y="691.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1119.6" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (50 samples, 0.03%)</title><rect x="1116.9" y="755.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1119.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (41 samples, 0.03%)</title><rect x="1117.3" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.03%)</title><rect x="1117.3" y="739.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1120.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (122 samples, 0.08%)</title><rect x="1117.6" y="755.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (122 samples, 0.08%)</title><rect x="1117.6" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.02%)</title><rect x="1117.6" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.02%)</title><rect x="1117.6" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$251/48335238.get$Lambda (36 samples, 0.02%)</title><rect x="1117.6" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.6" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$251 (36 samples, 0.02%)</title><rect x="1117.6" y="675.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1120.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (86 samples, 0.06%)</title><rect x="1117.9" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (86 samples, 0.06%)</title><rect x="1117.9" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (86 samples, 0.06%)</title><rect x="1117.9" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.9" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (41 samples, 0.03%)</title><rect x="1117.9" y="675.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1120.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.03%)</title><rect x="1118.2" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.03%)</title><rect x="1118.2" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.03%)</title><rect x="1118.2" y="643.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1121.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (145 samples, 0.10%)</title><rect x="1118.6" y="755.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (145 samples, 0.10%)</title><rect x="1118.6" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/371351659.invoke (145 samples, 0.10%)</title><rect x="1118.6" y="723.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (145 samples, 0.10%)</title><rect x="1118.6" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (35 samples, 0.02%)</title><rect x="1118.6" y="691.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.02%)</title><rect x="1118.6" y="675.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1121.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (110 samples, 0.07%)</title><rect x="1118.8" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (110 samples, 0.07%)</title><rect x="1118.8" y="675.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.8" y="686.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.07%)</title><rect x="1118.8" y="659.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1121.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (261 samples, 0.17%)</title><rect x="1119.7" y="755.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (95 samples, 0.06%)</title><rect x="1119.7" y="739.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1122.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (166 samples, 0.11%)</title><rect x="1120.5" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (166 samples, 0.11%)</title><rect x="1120.5" y="723.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/371351659.invoke (166 samples, 0.11%)</title><rect x="1120.5" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (166 samples, 0.11%)</title><rect x="1120.5" y="691.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (135 samples, 0.09%)</title><rect x="1120.7" y="675.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (135 samples, 0.09%)</title><rect x="1120.7" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.7" y="670.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.09%)</title><rect x="1120.7" y="643.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1123.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (55 samples, 0.04%)</title><rect x="1121.8" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (55 samples, 0.04%)</title><rect x="1121.8" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (55 samples, 0.04%)</title><rect x="1121.8" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (55 samples, 0.04%)</title><rect x="1121.8" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/handlers/GetBodyHandler.apply (473 samples, 0.31%)</title><rect x="1122.2" y="819.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.2" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (316 samples, 0.21%)</title><rect x="1122.3" y="803.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.3" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (110 samples, 0.07%)</title><rect x="1122.3" y="787.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.3" y="798.0"></text>
</g>
<g>
<title>java/util/List.spliterator (34 samples, 0.02%)</title><rect x="1122.3" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.3" y="782.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (34 samples, 0.02%)</title><rect x="1122.3" y="755.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1125.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (76 samples, 0.05%)</title><rect x="1122.6" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.6" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (76 samples, 0.05%)</title><rect x="1122.6" y="755.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1125.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (127 samples, 0.08%)</title><rect x="1123.2" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (127 samples, 0.08%)</title><rect x="1123.2" y="771.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (127 samples, 0.08%)</title><rect x="1123.2" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (72 samples, 0.05%)</title><rect x="1123.2" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (39 samples, 0.03%)</title><rect x="1123.2" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (39 samples, 0.03%)</title><rect x="1123.2" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (39 samples, 0.03%)</title><rect x="1123.2" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.2" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (39 samples, 0.03%)</title><rect x="1123.2" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (39 samples, 0.03%)</title><rect x="1123.2" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (33 samples, 0.02%)</title><rect x="1123.5" y="723.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (33 samples, 0.02%)</title><rect x="1123.5" y="707.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.5" y="718.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (33 samples, 0.02%)</title><rect x="1123.5" y="691.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1126.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (79 samples, 0.05%)</title><rect x="1124.1" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.1" y="798.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (79 samples, 0.05%)</title><rect x="1124.1" y="771.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1127.1" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (66 samples, 0.04%)</title><rect x="1124.9" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (46 samples, 0.03%)</title><rect x="1125.1" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.1" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (38 samples, 0.03%)</title><rect x="1125.4" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$215/1600469781.apply (65 samples, 0.04%)</title><rect x="1125.9" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (65 samples, 0.04%)</title><rect x="1125.9" y="867.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (35 samples, 0.02%)</title><rect x="1125.9" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.9" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (35 samples, 0.02%)</title><rect x="1125.9" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.9" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (35 samples, 0.02%)</title><rect x="1125.9" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.9" y="830.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (35 samples, 0.02%)</title><rect x="1125.9" y="803.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1128.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (40 samples, 0.03%)</title><rect x="1126.4" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (40 samples, 0.03%)</title><rect x="1126.4" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$216/356642770.apply (40 samples, 0.03%)</title><rect x="1126.4" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (40 samples, 0.03%)</title><rect x="1126.4" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (40 samples, 0.03%)</title><rect x="1126.4" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.4" y="846.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.03%)</title><rect x="1126.4" y="819.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1129.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$238/545921687.apply (62 samples, 0.04%)</title><rect x="1126.7" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (62 samples, 0.04%)</title><rect x="1126.7" y="915.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.7" y="926.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (62 samples, 0.04%)</title><rect x="1126.7" y="899.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1129.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (3,030 samples, 2.01%)</title><rect x="1127.2" y="1043.0" width="23.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.2" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (185 samples, 0.12%)</title><rect x="1127.2" y="1027.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (185 samples, 0.12%)</title><rect x="1127.2" y="1011.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (185 samples, 0.12%)</title><rect x="1127.2" y="995.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (185 samples, 0.12%)</title><rect x="1127.2" y="979.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.2" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (185 samples, 0.12%)</title><rect x="1127.2" y="963.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.2" y="974.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.12%)</title><rect x="1127.2" y="947.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1130.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (39 samples, 0.03%)</title><rect x="1128.6" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (39 samples, 0.03%)</title><rect x="1128.6" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (39 samples, 0.03%)</title><rect x="1128.6" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1131.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (39 samples, 0.03%)</title><rect x="1128.6" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.6" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.03%)</title><rect x="1128.6" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.6" y="974.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.03%)</title><rect x="1128.6" y="947.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1131.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (186 samples, 0.12%)</title><rect x="1128.9" y="1027.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (49 samples, 0.03%)</title><rect x="1129.3" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (49 samples, 0.03%)</title><rect x="1129.3" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.3" y="1006.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.03%)</title><rect x="1129.3" y="979.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1132.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (88 samples, 0.06%)</title><rect x="1129.7" y="1011.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.06%)</title><rect x="1129.7" y="995.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.7" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.03%)</title><rect x="1129.7" y="979.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1132.7" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.03%)</title><rect x="1130.1" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.1" y="990.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.03%)</title><rect x="1130.1" y="963.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1133.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (839 samples, 0.56%)</title><rect x="1130.4" y="1027.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.4" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (839 samples, 0.56%)</title><rect x="1130.4" y="1011.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.4" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (839 samples, 0.56%)</title><rect x="1130.4" y="995.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.4" y="1006.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.02%)</title><rect x="1130.6" y="979.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1133.6" y="990.0"></text>
</g>
<g>
<title>java.util.TreeMap (72 samples, 0.05%)</title><rect x="1130.8" y="979.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1133.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.02%)</title><rect x="1131.6" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.02%)</title><rect x="1131.6" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.get$Lambda (36 samples, 0.02%)</title><rect x="1131.6" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.6" y="958.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$106 (36 samples, 0.02%)</title><rect x="1131.6" y="931.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1134.6" y="942.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (50 samples, 0.03%)</title><rect x="1131.9" y="979.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.9" y="990.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (50 samples, 0.03%)</title><rect x="1131.9" y="963.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1134.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (517 samples, 0.34%)</title><rect x="1132.3" y="979.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.3" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$106/848120636.accept (517 samples, 0.34%)</title><rect x="1132.3" y="963.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.3" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (517 samples, 0.34%)</title><rect x="1132.3" y="947.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.07%)</title><rect x="1132.3" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.07%)</title><rect x="1132.3" y="915.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.3" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.get$Lambda (103 samples, 0.07%)</title><rect x="1132.3" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.3" y="910.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (103 samples, 0.07%)</title><rect x="1132.3" y="883.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1135.3" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (82 samples, 0.05%)</title><rect x="1133.1" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/1814310740.accept (82 samples, 0.05%)</title><rect x="1133.1" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (82 samples, 0.05%)</title><rect x="1133.1" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.1" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (82 samples, 0.05%)</title><rect x="1133.1" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.1" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (82 samples, 0.05%)</title><rect x="1133.1" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.1" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (82 samples, 0.05%)</title><rect x="1133.1" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (82 samples, 0.05%)</title><rect x="1133.1" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.1" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (82 samples, 0.05%)</title><rect x="1133.1" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.1" y="830.0"></text>
</g>
<g>
<title>java.lang.Object[] (82 samples, 0.05%)</title><rect x="1133.1" y="803.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1136.1" y="814.0"></text>
</g>
<g>
<title>java/util/List.copyOf (177 samples, 0.12%)</title><rect x="1133.7" y="931.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.7" y="942.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (177 samples, 0.12%)</title><rect x="1133.7" y="915.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.7" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (92 samples, 0.06%)</title><rect x="1133.7" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.7" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (92 samples, 0.06%)</title><rect x="1133.7" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.7" y="894.0"></text>
</g>
<g>
<title>java.lang.Object[] (92 samples, 0.06%)</title><rect x="1133.7" y="867.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1136.7" y="878.0"></text>
</g>
<g>
<title>java/util/List.of (85 samples, 0.06%)</title><rect x="1134.5" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.5" y="910.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (85 samples, 0.06%)</title><rect x="1134.5" y="883.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1137.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (155 samples, 0.10%)</title><rect x="1135.1" y="931.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.1" y="942.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (155 samples, 0.10%)</title><rect x="1135.1" y="915.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1138.1" y="926.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (81 samples, 0.05%)</title><rect x="1136.3" y="979.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.3" y="990.0"></text>
</g>
<g>
<title>java.util.TreeMap (81 samples, 0.05%)</title><rect x="1136.3" y="963.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1139.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,781 samples, 1.18%)</title><rect x="1137.0" y="1027.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.0" y="1038.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (91 samples, 0.06%)</title><rect x="1137.0" y="1011.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1140.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (119 samples, 0.08%)</title><rect x="1137.7" y="1011.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (119 samples, 0.08%)</title><rect x="1137.7" y="995.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.7" y="1006.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.08%)</title><rect x="1137.7" y="979.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1140.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (270 samples, 0.18%)</title><rect x="1138.6" y="1011.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (270 samples, 0.18%)</title><rect x="1138.6" y="995.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.6" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.07%)</title><rect x="1138.6" y="979.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1141.6" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (169 samples, 0.11%)</title><rect x="1139.4" y="979.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.4" y="990.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.11%)</title><rect x="1139.4" y="963.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1142.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,301 samples, 0.86%)</title><rect x="1140.7" y="1011.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (441 samples, 0.29%)</title><rect x="1140.7" y="995.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (441 samples, 0.29%)</title><rect x="1140.7" y="979.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.7" y="990.0"></text>
</g>
<g>
<title>java.lang.String (208 samples, 0.14%)</title><rect x="1140.7" y="963.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1143.7" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (233 samples, 0.15%)</title><rect x="1142.4" y="963.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.4" y="974.0"></text>
</g>
<g>
<title>byte[] (233 samples, 0.15%)</title><rect x="1142.4" y="947.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1145.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (89 samples, 0.06%)</title><rect x="1144.2" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (89 samples, 0.06%)</title><rect x="1144.2" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1147.2" y="990.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.04%)</title><rect x="1144.2" y="963.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1147.2" y="974.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.02%)</title><rect x="1144.6" y="963.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1147.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.trim (228 samples, 0.15%)</title><rect x="1144.9" y="995.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (228 samples, 0.15%)</title><rect x="1144.9" y="979.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (228 samples, 0.15%)</title><rect x="1144.9" y="963.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1147.9" y="974.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.06%)</title><rect x="1144.9" y="947.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1147.9" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (140 samples, 0.09%)</title><rect x="1145.6" y="947.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.6" y="958.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.09%)</title><rect x="1145.6" y="931.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1148.6" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (206 samples, 0.14%)</title><rect x="1146.7" y="995.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.7" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (206 samples, 0.14%)</title><rect x="1146.7" y="979.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.7" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (206 samples, 0.14%)</title><rect x="1146.7" y="963.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.7" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (206 samples, 0.14%)</title><rect x="1146.7" y="947.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.7" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (206 samples, 0.14%)</title><rect x="1146.7" y="931.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.7" y="942.0"></text>
</g>
<g>
<title>java.lang.Object[] (206 samples, 0.14%)</title><rect x="1146.7" y="915.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1149.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (337 samples, 0.22%)</title><rect x="1148.3" y="995.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (131 samples, 0.09%)</title><rect x="1148.3" y="979.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.3" y="990.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (131 samples, 0.09%)</title><rect x="1148.3" y="963.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1151.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (106 samples, 0.07%)</title><rect x="1149.3" y="979.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.3" y="990.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (106 samples, 0.07%)</title><rect x="1149.3" y="963.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1152.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$239/671852113.apply (100 samples, 0.07%)</title><rect x="1150.1" y="979.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (100 samples, 0.07%)</title><rect x="1150.1" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.1" y="974.0"></text>
</g>
<g>
<title>java.util.ArrayList (100 samples, 0.07%)</title><rect x="1150.1" y="947.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1153.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,035 samples, 0.69%)</title><rect x="1150.9" y="1155.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,035 samples, 0.69%)</title><rect x="1150.9" y="1139.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,035 samples, 0.69%)</title><rect x="1150.9" y="1123.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$189/2011462796.run (1,035 samples, 0.69%)</title><rect x="1150.9" y="1107.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1153.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,035 samples, 0.69%)</title><rect x="1150.9" y="1091.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (156 samples, 0.10%)</title><rect x="1150.9" y="1075.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.04%)</title><rect x="1150.9" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.04%)</title><rect x="1150.9" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$200/317210120.get$Lambda (37 samples, 0.02%)</title><rect x="1151.1" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.1" y="1038.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$200 (37 samples, 0.02%)</title><rect x="1151.1" y="1011.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1154.1" y="1022.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (41 samples, 0.03%)</title><rect x="1151.4" y="1059.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1154.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (59 samples, 0.04%)</title><rect x="1151.7" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (59 samples, 0.04%)</title><rect x="1151.7" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (39 samples, 0.03%)</title><rect x="1151.8" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.8" y="1038.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (39 samples, 0.03%)</title><rect x="1151.8" y="1011.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1154.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (876 samples, 0.58%)</title><rect x="1152.1" y="1075.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (876 samples, 0.58%)</title><rect x="1152.1" y="1059.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (876 samples, 0.58%)</title><rect x="1152.1" y="1043.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1155.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (876 samples, 0.58%)</title><rect x="1152.1" y="1027.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (876 samples, 0.58%)</title><rect x="1152.1" y="1011.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (876 samples, 0.58%)</title><rect x="1152.1" y="995.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (49 samples, 0.03%)</title><rect x="1152.1" y="979.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.1" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (49 samples, 0.03%)</title><rect x="1152.1" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.1" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.03%)</title><rect x="1152.1" y="947.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1155.1" y="958.0"></text>
</g>
<g>
<title>java/util/List.of (48 samples, 0.03%)</title><rect x="1152.5" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.5" y="990.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (48 samples, 0.03%)</title><rect x="1152.5" y="963.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1155.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$247/1389791625.run (520 samples, 0.35%)</title><rect x="1152.9" y="979.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (520 samples, 0.35%)</title><rect x="1152.9" y="963.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (520 samples, 0.35%)</title><rect x="1152.9" y="947.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (169 samples, 0.11%)</title><rect x="1152.9" y="931.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.9" y="942.0"></text>
</g>
<g>
<title>java/util/Collection.stream (112 samples, 0.07%)</title><rect x="1152.9" y="915.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.9" y="926.0"></text>
</g>
<g>
<title>java/util/List.spliterator (37 samples, 0.02%)</title><rect x="1152.9" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.9" y="910.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (37 samples, 0.02%)</title><rect x="1152.9" y="883.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1155.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (75 samples, 0.05%)</title><rect x="1153.2" y="899.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.2" y="910.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (75 samples, 0.05%)</title><rect x="1153.2" y="883.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1156.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (57 samples, 0.04%)</title><rect x="1153.8" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (57 samples, 0.04%)</title><rect x="1153.8" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (57 samples, 0.04%)</title><rect x="1153.8" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (351 samples, 0.23%)</title><rect x="1154.2" y="931.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.2" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.now (32 samples, 0.02%)</title><rect x="1154.2" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.2" y="926.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (32 samples, 0.02%)</title><rect x="1154.2" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.2" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (32 samples, 0.02%)</title><rect x="1154.2" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.2" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.create (32 samples, 0.02%)</title><rect x="1154.2" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.2" y="878.0"></text>
</g>
<g>
<title>java.time.Instant (32 samples, 0.02%)</title><rect x="1154.2" y="851.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1157.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (319 samples, 0.21%)</title><rect x="1154.5" y="915.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (84 samples, 0.06%)</title><rect x="1154.5" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (79 samples, 0.05%)</title><rect x="1155.1" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1158.1" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (50 samples, 0.03%)</title><rect x="1155.1" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (50 samples, 0.03%)</title><rect x="1155.1" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (50 samples, 0.03%)</title><rect x="1155.1" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.1" y="862.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.03%)</title><rect x="1155.1" y="835.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1158.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (156 samples, 0.10%)</title><rect x="1155.8" y="899.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.8" y="910.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (37 samples, 0.02%)</title><rect x="1155.8" y="883.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1158.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (119 samples, 0.08%)</title><rect x="1156.0" y="883.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (37 samples, 0.02%)</title><rect x="1156.0" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (37 samples, 0.02%)</title><rect x="1156.0" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (37 samples, 0.02%)</title><rect x="1156.0" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1159.0" y="846.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (37 samples, 0.02%)</title><rect x="1156.0" y="819.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1159.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (82 samples, 0.05%)</title><rect x="1156.3" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (82 samples, 0.05%)</title><rect x="1156.3" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.3" y="862.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (54 samples, 0.04%)</title><rect x="1156.3" y="835.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1159.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (170 samples, 0.11%)</title><rect x="1157.0" y="979.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (170 samples, 0.11%)</title><rect x="1157.0" y="963.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (123 samples, 0.08%)</title><rect x="1157.0" y="947.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (123 samples, 0.08%)</title><rect x="1157.0" y="931.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (100 samples, 0.07%)</title><rect x="1157.0" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (100 samples, 0.07%)</title><rect x="1157.0" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (54 samples, 0.04%)</title><rect x="1157.0" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/handlers/GetBodyHandler$$Lambda$278/1383588146.apply (54 samples, 0.04%)</title><rect x="1157.0" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/handlers/GetBodyHandler.lambda$apply$0 (54 samples, 0.04%)</title><rect x="1157.0" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.0" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.02%)</title><rect x="1157.0" y="835.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.02%)</title><rect x="1157.0" y="819.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.0" y="830.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.02%)</title><rect x="1157.0" y="803.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1160.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (46 samples, 0.03%)</title><rect x="1157.4" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (46 samples, 0.03%)</title><rect x="1157.4" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/73385495.accept (46 samples, 0.03%)</title><rect x="1157.4" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (46 samples, 0.03%)</title><rect x="1157.4" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (46 samples, 0.03%)</title><rect x="1157.4" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (46 samples, 0.03%)</title><rect x="1157.4" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (46 samples, 0.03%)</title><rect x="1157.4" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$260/2015801594.apply (46 samples, 0.03%)</title><rect x="1157.4" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (46 samples, 0.03%)</title><rect x="1157.4" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (46 samples, 0.03%)</title><rect x="1157.4" y="739.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1160.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (47 samples, 0.03%)</title><rect x="1157.9" y="947.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (47 samples, 0.03%)</title><rect x="1157.9" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (47 samples, 0.03%)</title><rect x="1157.9" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (47 samples, 0.03%)</title><rect x="1157.9" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (47 samples, 0.03%)</title><rect x="1157.9" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/73385495.accept (47 samples, 0.03%)</title><rect x="1157.9" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (47 samples, 0.03%)</title><rect x="1157.9" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (47 samples, 0.03%)</title><rect x="1157.9" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (47 samples, 0.03%)</title><rect x="1157.9" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (47 samples, 0.03%)</title><rect x="1157.9" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$260/2015801594.apply (47 samples, 0.03%)</title><rect x="1157.9" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (47 samples, 0.03%)</title><rect x="1157.9" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.9" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (47 samples, 0.03%)</title><rect x="1157.9" y="755.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1160.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (77 samples, 0.05%)</title><rect x="1158.3" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (77 samples, 0.05%)</title><rect x="1158.3" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1161.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (77 samples, 0.05%)</title><rect x="1158.3" y="947.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (77 samples, 0.05%)</title><rect x="1158.3" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (77 samples, 0.05%)</title><rect x="1158.3" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (77 samples, 0.05%)</title><rect x="1158.3" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.3" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (77 samples, 0.05%)</title><rect x="1158.3" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.3" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (51 samples, 0.03%)</title><rect x="1158.5" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.5" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 0.03%)</title><rect x="1158.5" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1161.5" y="862.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.03%)</title><rect x="1158.5" y="835.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1161.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (203 samples, 0.13%)</title><rect x="1159.0" y="1235.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (203 samples, 0.13%)</title><rect x="1159.0" y="1219.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (203 samples, 0.13%)</title><rect x="1159.0" y="1203.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (203 samples, 0.13%)</title><rect x="1159.0" y="1187.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (203 samples, 0.13%)</title><rect x="1159.0" y="1171.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (203 samples, 0.13%)</title><rect x="1159.0" y="1155.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (203 samples, 0.13%)</title><rect x="1159.0" y="1139.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (203 samples, 0.13%)</title><rect x="1159.0" y="1123.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (203 samples, 0.13%)</title><rect x="1159.0" y="1107.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (203 samples, 0.13%)</title><rect x="1159.0" y="1091.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (203 samples, 0.13%)</title><rect x="1159.0" y="1075.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (203 samples, 0.13%)</title><rect x="1159.0" y="1059.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (203 samples, 0.13%)</title><rect x="1159.0" y="1043.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1162.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (203 samples, 0.13%)</title><rect x="1159.0" y="1027.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (203 samples, 0.13%)</title><rect x="1159.0" y="1011.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (203 samples, 0.13%)</title><rect x="1159.0" y="995.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.0" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (203 samples, 0.13%)</title><rect x="1159.0" y="979.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1162.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3,752 samples, 2.49%)</title><rect x="1160.6" y="1235.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.6" y="1246.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.07%)</title><rect x="1160.6" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.07%)</title><rect x="1160.6" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$214/1699022569.get$Lambda (80 samples, 0.05%)</title><rect x="1160.6" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.6" y="1198.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$214 (80 samples, 0.05%)</title><rect x="1160.6" y="1171.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1163.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1449621165.linkToTargetMethod (121 samples, 0.08%)</title><rect x="1161.4" y="1219.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (121 samples, 0.08%)</title><rect x="1161.4" y="1203.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$217/1220093029.get$Lambda (121 samples, 0.08%)</title><rect x="1161.4" y="1187.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1164.4" y="1198.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$217 (121 samples, 0.08%)</title><rect x="1161.4" y="1171.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1164.4" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,051 samples, 0.70%)</title><rect x="1162.4" y="1219.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1165.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$218/1870552244.accept (826 samples, 0.55%)</title><rect x="1162.4" y="1203.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1165.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (826 samples, 0.55%)</title><rect x="1162.4" y="1187.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (826 samples, 0.55%)</title><rect x="1162.4" y="1171.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (826 samples, 0.55%)</title><rect x="1162.4" y="1155.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1165.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (826 samples, 0.55%)</title><rect x="1162.4" y="1139.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (826 samples, 0.55%)</title><rect x="1162.4" y="1123.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (826 samples, 0.55%)</title><rect x="1162.4" y="1107.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (826 samples, 0.55%)</title><rect x="1162.4" y="1091.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1165.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (826 samples, 0.55%)</title><rect x="1162.4" y="1075.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (826 samples, 0.55%)</title><rect x="1162.4" y="1059.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/511106131.run (826 samples, 0.55%)</title><rect x="1162.4" y="1043.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (826 samples, 0.55%)</title><rect x="1162.4" y="1027.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (116 samples, 0.08%)</title><rect x="1162.4" y="1011.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (116 samples, 0.08%)</title><rect x="1162.4" y="995.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (116 samples, 0.08%)</title><rect x="1162.4" y="979.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (115 samples, 0.08%)</title><rect x="1162.4" y="963.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (115 samples, 0.08%)</title><rect x="1162.4" y="947.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (115 samples, 0.08%)</title><rect x="1162.4" y="931.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (115 samples, 0.08%)</title><rect x="1162.4" y="915.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1165.4" y="926.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (115 samples, 0.08%)</title><rect x="1162.4" y="899.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1165.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (80 samples, 0.05%)</title><rect x="1163.3" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.05%)</title><rect x="1163.3" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.05%)</title><rect x="1163.3" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$232/1105336468.get$Lambda (80 samples, 0.05%)</title><rect x="1163.3" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.3" y="974.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$232 (80 samples, 0.05%)</title><rect x="1163.3" y="947.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1166.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (629 samples, 0.42%)</title><rect x="1163.9" y="1011.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (347 samples, 0.23%)</title><rect x="1163.9" y="995.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (227 samples, 0.15%)</title><rect x="1163.9" y="979.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.9" y="990.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (227 samples, 0.15%)</title><rect x="1163.9" y="963.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1166.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (120 samples, 0.08%)</title><rect x="1165.7" y="979.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.7" y="990.0"></text>
</g>
<g>
<title>java/util/List.of (120 samples, 0.08%)</title><rect x="1165.7" y="963.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.7" y="974.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (120 samples, 0.08%)</title><rect x="1165.7" y="947.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1168.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (282 samples, 0.19%)</title><rect x="1166.6" y="995.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/656700011.get (282 samples, 0.19%)</title><rect x="1166.6" y="979.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (282 samples, 0.19%)</title><rect x="1166.6" y="963.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (282 samples, 0.19%)</title><rect x="1166.6" y="947.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.6" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (281 samples, 0.19%)</title><rect x="1166.6" y="931.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.6" y="942.0"></text>
</g>
<g>
<title>byte[] (274 samples, 0.18%)</title><rect x="1166.7" y="915.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1169.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$221/1514213842.accept (225 samples, 0.15%)</title><rect x="1168.8" y="1203.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (225 samples, 0.15%)</title><rect x="1168.8" y="1187.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$217/1220093029.run (225 samples, 0.15%)</title><rect x="1168.8" y="1171.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (225 samples, 0.15%)</title><rect x="1168.8" y="1155.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (225 samples, 0.15%)</title><rect x="1168.8" y="1139.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.8" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (225 samples, 0.15%)</title><rect x="1168.8" y="1123.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.8" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (225 samples, 0.15%)</title><rect x="1168.8" y="1107.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.8" y="1118.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (225 samples, 0.15%)</title><rect x="1168.8" y="1091.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1171.8" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (219 samples, 0.15%)</title><rect x="1170.6" y="1219.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1173.6" y="1230.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (219 samples, 0.15%)</title><rect x="1170.6" y="1203.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1173.6" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (222 samples, 0.15%)</title><rect x="1172.3" y="1219.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.3" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (105 samples, 0.07%)</title><rect x="1172.3" y="1203.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.3" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (105 samples, 0.07%)</title><rect x="1172.3" y="1187.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.3" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (105 samples, 0.07%)</title><rect x="1172.3" y="1171.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.3" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (105 samples, 0.07%)</title><rect x="1172.3" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.3" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (105 samples, 0.07%)</title><rect x="1172.3" y="1139.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.3" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (105 samples, 0.07%)</title><rect x="1172.3" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.3" y="1134.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (105 samples, 0.07%)</title><rect x="1172.3" y="1107.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1175.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (117 samples, 0.08%)</title><rect x="1173.1" y="1203.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.1" y="1214.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (117 samples, 0.08%)</title><rect x="1173.1" y="1187.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1176.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (486 samples, 0.32%)</title><rect x="1174.0" y="1219.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$177/1640659448.run (308 samples, 0.20%)</title><rect x="1174.0" y="1203.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (308 samples, 0.20%)</title><rect x="1174.0" y="1187.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (308 samples, 0.20%)</title><rect x="1174.0" y="1171.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (308 samples, 0.20%)</title><rect x="1174.0" y="1155.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1177.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (308 samples, 0.20%)</title><rect x="1174.0" y="1139.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (308 samples, 0.20%)</title><rect x="1174.0" y="1123.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/511106131.run (308 samples, 0.20%)</title><rect x="1174.0" y="1107.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (308 samples, 0.20%)</title><rect x="1174.0" y="1091.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (308 samples, 0.20%)</title><rect x="1174.0" y="1075.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (308 samples, 0.20%)</title><rect x="1174.0" y="1059.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (308 samples, 0.20%)</title><rect x="1174.0" y="1043.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (308 samples, 0.20%)</title><rect x="1174.0" y="1027.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (308 samples, 0.20%)</title><rect x="1174.0" y="1011.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/913190639.linkToTargetMethod (226 samples, 0.15%)</title><rect x="1174.0" y="995.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1740035246.invoke (226 samples, 0.15%)</title><rect x="1174.0" y="979.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (226 samples, 0.15%)</title><rect x="1174.0" y="963.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1177.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (226 samples, 0.15%)</title><rect x="1174.0" y="947.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1177.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (226 samples, 0.15%)</title><rect x="1174.0" y="931.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.0" y="942.0"></text>
</g>
<g>
<title>byte[] (226 samples, 0.15%)</title><rect x="1174.0" y="915.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1177.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (82 samples, 0.05%)</title><rect x="1175.8" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.05%)</title><rect x="1175.8" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.05%)</title><rect x="1175.8" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$232/1105336468.get$Lambda (82 samples, 0.05%)</title><rect x="1175.8" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1178.8" y="958.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$232 (82 samples, 0.05%)</title><rect x="1175.8" y="931.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1178.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$182/1441806659.run (178 samples, 0.12%)</title><rect x="1176.5" y="1203.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (178 samples, 0.12%)</title><rect x="1176.5" y="1187.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (178 samples, 0.12%)</title><rect x="1176.5" y="1171.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (178 samples, 0.12%)</title><rect x="1176.5" y="1155.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$231/1485958815.get$Lambda (178 samples, 0.12%)</title><rect x="1176.5" y="1139.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.5" y="1150.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$231 (178 samples, 0.12%)</title><rect x="1176.5" y="1123.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1179.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (198 samples, 0.13%)</title><rect x="1177.8" y="1219.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.8" y="1230.0"></text>
</g>
<g>
<title>java/time/Instant.now (49 samples, 0.03%)</title><rect x="1177.8" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.8" y="1214.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (49 samples, 0.03%)</title><rect x="1177.8" y="1187.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.8" y="1198.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (49 samples, 0.03%)</title><rect x="1177.8" y="1171.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.8" y="1182.0"></text>
</g>
<g>
<title>java/time/Instant.create (49 samples, 0.03%)</title><rect x="1177.8" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.8" y="1166.0"></text>
</g>
<g>
<title>java.time.Instant (49 samples, 0.03%)</title><rect x="1177.8" y="1139.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1180.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (149 samples, 0.10%)</title><rect x="1178.2" y="1203.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.02%)</title><rect x="1178.2" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.02%)</title><rect x="1178.2" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$263/877886856.get$Lambda (35 samples, 0.02%)</title><rect x="1178.2" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.2" y="1166.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$263 (35 samples, 0.02%)</title><rect x="1178.2" y="1139.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1181.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (114 samples, 0.08%)</title><rect x="1178.5" y="1187.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.5" y="1198.0"></text>
</g>
<g>
<title>java.util.ArrayList (63 samples, 0.04%)</title><rect x="1178.5" y="1171.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1181.5" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (51 samples, 0.03%)</title><rect x="1179.0" y="1171.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1182.0" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (51 samples, 0.03%)</title><rect x="1179.0" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.0" y="1166.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (51 samples, 0.03%)</title><rect x="1179.0" y="1139.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1182.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (951 samples, 0.63%)</title><rect x="1179.4" y="1219.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.05%)</title><rect x="1179.4" y="1203.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.05%)</title><rect x="1179.4" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$213/1915402567.get$Lambda (77 samples, 0.05%)</title><rect x="1179.4" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.4" y="1182.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$213 (77 samples, 0.05%)</title><rect x="1179.4" y="1155.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1182.4" y="1166.0"></text>
</g>
<g>
<title>java/util/Collection.stream (523 samples, 0.35%)</title><rect x="1180.0" y="1203.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.0" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (198 samples, 0.13%)</title><rect x="1180.0" y="1187.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.0" y="1198.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (198 samples, 0.13%)</title><rect x="1180.0" y="1171.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1183.0" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (325 samples, 0.22%)</title><rect x="1181.6" y="1187.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.6" y="1198.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (325 samples, 0.22%)</title><rect x="1181.6" y="1171.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1184.6" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (351 samples, 0.23%)</title><rect x="1184.1" y="1203.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.1" y="1214.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (351 samples, 0.23%)</title><rect x="1184.1" y="1187.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1187.1" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (271 samples, 0.18%)</title><rect x="1186.8" y="1219.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.8" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (271 samples, 0.18%)</title><rect x="1186.8" y="1203.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.8" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (271 samples, 0.18%)</title><rect x="1186.8" y="1187.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.8" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (271 samples, 0.18%)</title><rect x="1186.8" y="1171.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (108 samples, 0.07%)</title><rect x="1186.8" y="1155.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.8" y="1166.0"></text>
</g>
<g>
<title>java.lang.Integer (108 samples, 0.07%)</title><rect x="1186.8" y="1139.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1189.8" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (163 samples, 0.11%)</title><rect x="1187.7" y="1155.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.7" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.add (163 samples, 0.11%)</title><rect x="1187.7" y="1139.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.put (163 samples, 0.11%)</title><rect x="1187.7" y="1123.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (163 samples, 0.11%)</title><rect x="1187.7" y="1107.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (163 samples, 0.11%)</title><rect x="1187.7" y="1091.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.7" y="1102.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (163 samples, 0.11%)</title><rect x="1187.7" y="1075.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1190.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (96 samples, 0.06%)</title><rect x="1189.0" y="1219.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.0" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (96 samples, 0.06%)</title><rect x="1189.0" y="1203.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.0" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (96 samples, 0.06%)</title><rect x="1189.0" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.0" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (96 samples, 0.06%)</title><rect x="1189.0" y="1171.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (91 samples, 0.06%)</title><rect x="1189.0" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.0" y="1166.0"></text>
</g>
<g>
<title>java.lang.Integer (91 samples, 0.06%)</title><rect x="1189.0" y="1139.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1192.0" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (36 samples, 0.02%)</title><rect x="1189.7" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.7" y="1230.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (36 samples, 0.02%)</title><rect x="1189.7" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.7" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (36 samples, 0.02%)</title><rect x="1189.7" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.7" y="1198.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (36 samples, 0.02%)</title><rect x="1189.7" y="1171.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1192.7" y="1182.0"></text>
</g>
</g>
</svg>
