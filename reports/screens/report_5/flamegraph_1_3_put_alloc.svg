<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (41,786 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (41,786 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (505 samples, 1.21%)</title><rect x="10.0" y="339.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (505 samples, 1.21%)</title><rect x="10.0" y="323.0" width="14.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (41,281 samples, 98.79%)</title><rect x="24.3" y="339.0" width="1165.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.3" y="350.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (41,281 samples, 98.79%)</title><rect x="24.3" y="323.0" width="1165.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.3" y="334.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (41,281 samples, 98.79%)</title><rect x="24.3" y="307.0" width="1165.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.3" y="318.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30,810 samples, 73.73%)</title><rect x="24.3" y="291.0" width="870.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.3" y="302.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30,810 samples, 73.73%)</title><rect x="24.3" y="275.0" width="870.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.3" y="286.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (30,022 samples, 71.85%)</title><rect x="24.3" y="259.0" width="847.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.3" y="270.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.06%)</title><rect x="24.3" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.06%)</title><rect x="24.3" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.06%)</title><rect x="24.3" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.04%)</title><rect x="24.5" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.5" y="206.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="24.5" y="179.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="27.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (689 samples, 1.65%)</title><rect x="24.9" y="243.0" width="19.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (689 samples, 1.65%)</title><rect x="24.9" y="227.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (689 samples, 1.65%)</title><rect x="24.9" y="211.0" width="19.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (689 samples, 1.65%)</title><rect x="24.9" y="195.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (312 samples, 0.75%)</title><rect x="24.9" y="179.0" width="8.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="27.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (377 samples, 0.90%)</title><rect x="33.7" y="179.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.7" y="190.0"></text>
</g>
<g>
<title>byte[] (377 samples, 0.90%)</title><rect x="33.7" y="163.0" width="10.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="36.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (29,310 samples, 70.14%)</title><rect x="44.4" y="243.0" width="827.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.4" y="254.0">ru/mail/polis/service/manikhin/AsyncServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (279 samples, 0.67%)</title><rect x="44.4" y="227.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (279 samples, 0.67%)</title><rect x="44.4" y="211.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (279 samples, 0.67%)</title><rect x="44.4" y="195.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (279 samples, 0.67%)</title><rect x="44.4" y="179.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.4" y="190.0"></text>
</g>
<g>
<title>byte[] (279 samples, 0.67%)</title><rect x="44.4" y="163.0" width="7.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="47.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.singleton (240 samples, 0.57%)</title><rect x="52.2" y="227.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.2" y="238.0"></text>
</g>
<g>
<title>java.util.Collections$SingletonSet (240 samples, 0.57%)</title><rect x="52.2" y="211.0" width="6.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="55.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (480 samples, 1.15%)</title><rect x="59.0" y="227.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (480 samples, 1.15%)</title><rect x="59.0" y="211.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (480 samples, 1.15%)</title><rect x="59.0" y="195.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (248 samples, 0.59%)</title><rect x="59.0" y="179.0" width="7.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="62.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (232 samples, 0.56%)</title><rect x="66.0" y="179.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.0" y="190.0"></text>
</g>
<g>
<title>byte[] (232 samples, 0.56%)</title><rect x="66.0" y="163.0" width="6.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="69.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.replicaFactor (99 samples, 0.24%)</title><rect x="72.6" y="227.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.parser (99 samples, 0.24%)</title><rect x="72.6" y="211.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.split (91 samples, 0.22%)</title><rect x="72.6" y="195.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.split (91 samples, 0.22%)</title><rect x="72.6" y="179.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.03%)</title><rect x="72.6" y="163.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="75.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.13%)</title><rect x="72.9" y="163.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.13%)</title><rect x="72.9" y="147.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.10%)</title><rect x="72.9" y="131.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="75.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.03%)</title><rect x="74.1" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.1" y="142.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.03%)</title><rect x="74.1" y="115.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="77.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.06%)</title><rect x="74.4" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.06%)</title><rect x="74.4" y="147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.06%)</title><rect x="74.4" y="131.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.06%)</title><rect x="74.4" y="115.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.06%)</title><rect x="74.4" y="99.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.4" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.06%)</title><rect x="74.4" y="83.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.handleMultiRequest (28,052 samples, 67.13%)</title><rect x="75.4" y="227.0" width="792.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.4" y="238.0">ru/mail/polis/service/manikhin/ReplicasRequests.handleMultiRequest</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.multiPut (28,052 samples, 67.13%)</title><rect x="75.4" y="211.0" width="792.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.4" y="222.0">ru/mail/polis/service/manikhin/ReplicasRequests.multiPut</text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.05%)</title><rect x="75.4" y="195.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="78.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (285 samples, 0.68%)</title><rect x="76.0" y="195.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (285 samples, 0.68%)</title><rect x="76.0" y="179.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (285 samples, 0.68%)</title><rect x="76.0" y="163.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (285 samples, 0.68%)</title><rect x="76.0" y="147.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.0" y="158.0"></text>
</g>
<g>
<title>byte[] (285 samples, 0.68%)</title><rect x="76.0" y="131.0" width="8.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="79.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (138 samples, 0.33%)</title><rect x="84.0" y="195.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/841283083.invoke (138 samples, 0.33%)</title><rect x="84.0" y="179.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (138 samples, 0.33%)</title><rect x="84.0" y="163.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (44 samples, 0.11%)</title><rect x="84.0" y="147.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.11%)</title><rect x="84.0" y="131.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="87.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (94 samples, 0.22%)</title><rect x="85.3" y="147.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (94 samples, 0.22%)</title><rect x="85.3" y="131.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.3" y="142.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.22%)</title><rect x="85.3" y="115.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="88.3" y="126.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonSet.iterator (351 samples, 0.84%)</title><rect x="87.9" y="195.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections.singletonIterator (351 samples, 0.84%)</title><rect x="87.9" y="179.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.9" y="190.0"></text>
</g>
<g>
<title>java.util.Collections$1 (351 samples, 0.84%)</title><rect x="87.9" y="163.0" width="9.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="90.9" y="174.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (34 samples, 0.08%)</title><rect x="97.8" y="195.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.8" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (26 samples, 0.06%)</title><rect x="97.8" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.8" y="190.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (26 samples, 0.06%)</title><rect x="97.8" y="163.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="100.8" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (270 samples, 0.65%)</title><rect x="98.8" y="195.0" width="7.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="101.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (18,579 samples, 44.46%)</title><rect x="106.4" y="195.0" width="524.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.4" y="206.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>byte[] (31 samples, 0.07%)</title><rect x="106.4" y="179.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="109.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.06%)</title><rect x="107.3" y="179.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="110.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (111 samples, 0.27%)</title><rect x="108.0" y="179.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.0" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (31 samples, 0.07%)</title><rect x="108.0" y="163.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="111.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (80 samples, 0.19%)</title><rect x="108.9" y="163.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (80 samples, 0.19%)</title><rect x="108.9" y="147.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="111.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,411 samples, 44.06%)</title><rect x="111.2" y="179.0" width="519.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.2" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,411 samples, 44.06%)</title><rect x="111.2" y="163.0" width="519.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.2" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (83 samples, 0.20%)</title><rect x="111.2" y="147.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="114.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (16,542 samples, 39.59%)</title><rect x="113.5" y="147.0" width="467.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.5" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (9,923 samples, 23.75%)</title><rect x="113.5" y="131.0" width="280.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="116.5" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (6,619 samples, 15.84%)</title><rect x="393.7" y="131.0" width="186.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="396.7" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1,499 samples, 3.59%)</title><rect x="580.6" y="147.0" width="42.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.6" y="158.0">one/..</text>
</g>
<g>
<title>byte[] (16 samples, 0.04%)</title><rect x="580.6" y="131.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="583.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.14%)</title><rect x="581.1" y="131.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.14%)</title><rect x="581.1" y="115.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.04%)</title><rect x="581.1" y="99.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="584.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.10%)</title><rect x="581.6" y="99.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.6" y="110.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.10%)</title><rect x="581.6" y="83.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="584.6" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (31 samples, 0.07%)</title><rect x="582.7" y="131.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="585.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1,307 samples, 3.13%)</title><rect x="583.6" y="131.0" width="36.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.6" y="142.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,307 samples, 3.13%)</title><rect x="583.6" y="115.0" width="36.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.6" y="126.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,307 samples, 3.13%)</title><rect x="583.6" y="99.0" width="36.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.6" y="110.0">one..</text>
</g>
<g>
<title>char[] (1,136 samples, 2.72%)</title><rect x="583.6" y="83.0" width="32.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="586.6" y="94.0">ch..</text>
</g>
<g>
<title>java.lang.String (69 samples, 0.17%)</title><rect x="615.7" y="83.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (102 samples, 0.24%)</title><rect x="617.6" y="83.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (102 samples, 0.24%)</title><rect x="617.6" y="67.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (102 samples, 0.24%)</title><rect x="617.6" y="51.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.6" y="62.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.24%)</title><rect x="617.6" y="35.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="620.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (35 samples, 0.08%)</title><rect x="620.5" y="131.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.08%)</title><rect x="620.5" y="115.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (52 samples, 0.12%)</title><rect x="621.5" y="131.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.12%)</title><rect x="621.5" y="115.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.12%)</title><rect x="621.5" y="99.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.11%)</title><rect x="621.5" y="83.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="624.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (214 samples, 0.51%)</title><rect x="623.0" y="147.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (214 samples, 0.51%)</title><rect x="623.0" y="131.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.0" y="142.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.51%)</title><rect x="623.0" y="115.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="626.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (33 samples, 0.08%)</title><rect x="629.0" y="147.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.08%)</title><rect x="629.0" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.08%)</title><rect x="629.0" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.05%)</title><rect x="629.0" y="99.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="632.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.03%)</title><rect x="629.5" y="99.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.5" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.03%)</title><rect x="629.5" y="83.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="632.5" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (40 samples, 0.10%)</title><rect x="629.9" y="147.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.9" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (40 samples, 0.10%)</title><rect x="629.9" y="131.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.9" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (40 samples, 0.10%)</title><rect x="629.9" y="115.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.9" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (40 samples, 0.10%)</title><rect x="629.9" y="99.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="632.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (523 samples, 1.25%)</title><rect x="631.1" y="195.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (523 samples, 1.25%)</title><rect x="631.1" y="179.0" width="14.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (523 samples, 1.25%)</title><rect x="631.1" y="163.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (302 samples, 0.72%)</title><rect x="631.1" y="147.0" width="8.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="634.1" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (221 samples, 0.53%)</title><rect x="639.6" y="147.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.6" y="158.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.53%)</title><rect x="639.6" y="131.0" width="6.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="642.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (628 samples, 1.50%)</title><rect x="645.8" y="195.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (628 samples, 1.50%)</title><rect x="645.8" y="179.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (628 samples, 1.50%)</title><rect x="645.8" y="163.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (310 samples, 0.74%)</title><rect x="645.8" y="147.0" width="8.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="648.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (318 samples, 0.76%)</title><rect x="654.6" y="147.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.6" y="158.0"></text>
</g>
<g>
<title>byte[] (318 samples, 0.76%)</title><rect x="654.6" y="131.0" width="9.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="657.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,330 samples, 3.18%)</title><rect x="663.6" y="195.0" width="37.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.6" y="206.0">one..</text>
</g>
<g>
<title>byte[] (563 samples, 1.35%)</title><rect x="663.6" y="179.0" width="15.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="666.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (463 samples, 1.11%)</title><rect x="679.5" y="179.0" width="13.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="682.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String (304 samples, 0.73%)</title><rect x="692.5" y="179.0" width="8.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="695.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.putTimestamp (3,542 samples, 8.48%)</title><rect x="701.1" y="195.0" width="100.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.1" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (645 samples, 1.54%)</title><rect x="701.1" y="179.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (645 samples, 1.54%)</title><rect x="701.1" y="163.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.1" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (645 samples, 1.54%)</title><rect x="701.1" y="147.0" width="18.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="704.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsertTimestampRecord (2,897 samples, 6.93%)</title><rect x="719.3" y="179.0" width="81.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.3" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (961 samples, 2.30%)</title><rect x="719.3" y="163.0" width="27.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.3" y="174.0">r..</text>
</g>
<g>
<title>byte[] (306 samples, 0.73%)</title><rect x="719.3" y="147.0" width="8.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="722.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (655 samples, 1.57%)</title><rect x="728.0" y="147.0" width="18.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (655 samples, 1.57%)</title><rect x="728.0" y="131.0" width="18.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="731.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.toBytes (1,936 samples, 4.63%)</title><rect x="746.5" y="163.0" width="54.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.5" y="174.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,165 samples, 2.79%)</title><rect x="746.5" y="147.0" width="32.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.5" y="158.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (686 samples, 1.64%)</title><rect x="746.5" y="131.0" width="19.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="749.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (479 samples, 1.15%)</title><rect x="765.8" y="131.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.8" y="142.0"></text>
</g>
<g>
<title>byte[] (479 samples, 1.15%)</title><rect x="765.8" y="115.0" width="13.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="768.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (771 samples, 1.85%)</title><rect x="779.4" y="147.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.4" y="158.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (771 samples, 1.85%)</title><rect x="779.4" y="131.0" width="21.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="782.4" y="142.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.sendResponse (2,351 samples, 5.63%)</title><rect x="801.1" y="195.0" width="66.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.1" y="206.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,351 samples, 5.63%)</title><rect x="801.1" y="179.0" width="66.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.1" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,757 samples, 4.20%)</title><rect x="801.1" y="163.0" width="49.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.1" y="174.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,200 samples, 2.87%)</title><rect x="801.1" y="147.0" width="33.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.1" y="158.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,200 samples, 2.87%)</title><rect x="801.1" y="131.0" width="33.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.1" y="142.0">on..</text>
</g>
<g>
<title>byte[] (1,200 samples, 2.87%)</title><rect x="801.1" y="115.0" width="33.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="804.1" y="126.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (557 samples, 1.33%)</title><rect x="835.0" y="147.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.0" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (557 samples, 1.33%)</title><rect x="835.0" y="131.0" width="15.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="838.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (594 samples, 1.42%)</title><rect x="850.8" y="163.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (594 samples, 1.42%)</title><rect x="850.8" y="147.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (594 samples, 1.42%)</title><rect x="850.8" y="131.0" width="16.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (280 samples, 0.67%)</title><rect x="850.8" y="115.0" width="7.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="853.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (314 samples, 0.75%)</title><rect x="858.7" y="115.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.7" y="126.0"></text>
</g>
<g>
<title>byte[] (314 samples, 0.75%)</title><rect x="858.7" y="99.0" width="8.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="861.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Topology.getReplicas (160 samples, 0.38%)</title><rect x="867.5" y="227.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.5" y="238.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (31 samples, 0.07%)</title><rect x="867.6" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.6" y="222.0"></text>
</g>
<g>
<title>java.util.HashMap (31 samples, 0.07%)</title><rect x="867.6" y="195.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="870.6" y="206.0"></text>
</g>
<g>
<title>java/util/HashSet.add (127 samples, 0.30%)</title><rect x="868.5" y="211.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.5" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.put (127 samples, 0.30%)</title><rect x="868.5" y="195.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.5" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (127 samples, 0.30%)</title><rect x="868.5" y="179.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="871.5" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (62 samples, 0.15%)</title><rect x="868.5" y="163.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.5" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (62 samples, 0.15%)</title><rect x="868.5" y="147.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="871.5" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (65 samples, 0.16%)</title><rect x="870.2" y="163.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.2" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (65 samples, 0.16%)</title><rect x="870.2" y="147.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="873.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (788 samples, 1.89%)</title><rect x="872.1" y="259.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.1" y="270.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (788 samples, 1.89%)</title><rect x="872.1" y="243.0" width="22.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.1" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (788 samples, 1.89%)</title><rect x="872.1" y="227.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.1" y="238.0">j..</text>
</g>
<g>
<title>java.lang.String (310 samples, 0.74%)</title><rect x="872.1" y="211.0" width="8.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="875.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (478 samples, 1.14%)</title><rect x="880.8" y="211.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.8" y="222.0"></text>
</g>
<g>
<title>byte[] (478 samples, 1.14%)</title><rect x="880.8" y="195.0" width="13.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="883.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,438 samples, 8.23%)</title><rect x="894.3" y="291.0" width="97.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.3" y="302.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (579 samples, 1.39%)</title><rect x="894.3" y="275.0" width="16.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="897.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,010 samples, 2.42%)</title><rect x="910.7" y="275.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.7" y="286.0">on..</text>
</g>
<g>
<title>java.lang.String[] (1,010 samples, 2.42%)</title><rect x="910.7" y="259.0" width="28.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="913.7" y="270.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,849 samples, 4.42%)</title><rect x="939.2" y="275.0" width="52.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.2" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,849 samples, 4.42%)</title><rect x="939.2" y="259.0" width="52.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.2" y="270.0">one/n..</text>
</g>
<g>
<title>char[] (934 samples, 2.24%)</title><rect x="939.2" y="243.0" width="26.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="942.2" y="254.0">c..</text>
</g>
<g>
<title>java.lang.String (327 samples, 0.78%)</title><rect x="965.6" y="243.0" width="9.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="968.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (588 samples, 1.41%)</title><rect x="974.8" y="243.0" width="16.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (588 samples, 1.41%)</title><rect x="974.8" y="227.0" width="16.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (588 samples, 1.41%)</title><rect x="974.8" y="211.0" width="16.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.8" y="222.0"></text>
</g>
<g>
<title>byte[] (588 samples, 1.41%)</title><rect x="974.8" y="195.0" width="16.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="977.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (386 samples, 0.92%)</title><rect x="991.4" y="291.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.4" y="302.0"></text>
</g>
<g>
<title>byte[] (386 samples, 0.92%)</title><rect x="991.4" y="275.0" width="10.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="994.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (709 samples, 1.70%)</title><rect x="1002.3" y="291.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (709 samples, 1.70%)</title><rect x="1002.3" y="275.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (709 samples, 1.70%)</title><rect x="1002.3" y="259.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (346 samples, 0.83%)</title><rect x="1002.3" y="243.0" width="9.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1005.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (363 samples, 0.87%)</title><rect x="1012.1" y="243.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.1" y="254.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.87%)</title><rect x="1012.1" y="227.0" width="10.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1015.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,938 samples, 14.21%)</title><rect x="1022.3" y="291.0" width="167.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1025.3" y="302.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,938 samples, 14.21%)</title><rect x="1022.3" y="275.0" width="167.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.3" y="286.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (2,916 samples, 6.98%)</title><rect x="1022.3" y="259.0" width="82.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1025.3" y="270.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,160 samples, 2.78%)</title><rect x="1104.7" y="259.0" width="32.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1107.7" y="270.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,862 samples, 4.46%)</title><rect x="1137.4" y="259.0" width="52.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.4" y="270.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,862 samples, 4.46%)</title><rect x="1137.4" y="243.0" width="52.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1140.4" y="254.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,862 samples, 4.46%)</title><rect x="1137.4" y="227.0" width="52.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.4" y="238.0">java/..</text>
</g>
<g>
<title>byte[] (1,862 samples, 4.46%)</title><rect x="1137.4" y="211.0" width="52.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1140.4" y="222.0">byte[]</text>
</g>
</g>
</svg>
