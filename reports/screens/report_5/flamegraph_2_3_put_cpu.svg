<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (11,032 samples, 100.00%)</title><rect x="10.0" y="1027.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="1038.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="10.0" y="1011.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.05%)</title><rect x="10.0" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 0.05%)</title><rect x="10.0" y="979.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.04%)</title><rect x="10.0" y="963.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.07%)</title><rect x="10.6" y="1011.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.6" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.05%)</title><rect x="10.7" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.7" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.05%)</title><rect x="10.7" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.05%)</title><rect x="11.5" y="1011.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="14.5" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="11.8" y="995.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="14.8" y="1006.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.05%)</title><rect x="12.1" y="1011.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="15.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,957 samples, 99.32%)</title><rect x="13.0" y="1011.0" width="1172.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.0" y="1022.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (524 samples, 4.75%)</title><rect x="15.7" y="995.0" width="56.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.7" y="1006.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.04%)</title><rect x="17.6" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (502 samples, 4.55%)</title><rect x="18.0" y="979.0" width="53.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.0" y="990.0">one/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (26 samples, 0.24%)</title><rect x="22.1" y="963.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="25.1" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (8 samples, 0.07%)</title><rect x="25.1" y="963.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="28.1" y="974.0"></text>
</g>
<g>
<title>clock_gettime (45 samples, 0.41%)</title><rect x="26.0" y="963.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="29.0" y="974.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.03%)</title><rect x="28.6" y="947.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="31.6" y="958.0"></text>
</g>
<g>
<title>clock_gettime (18 samples, 0.16%)</title><rect x="28.9" y="947.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="31.9" y="958.0"></text>
</g>
<g>
<title>[vdso] (16 samples, 0.15%)</title><rect x="29.1" y="931.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="32.1" y="942.0"></text>
</g>
<g>
<title>epoll_wait (380 samples, 3.44%)</title><rect x="30.9" y="963.0" width="40.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="33.9" y="974.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (267 samples, 2.42%)</title><rect x="42.9" y="947.0" width="28.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="45.9" y="958.0">en..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.03%)</title><rect x="42.9" y="931.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (263 samples, 2.38%)</title><rect x="43.4" y="931.0" width="28.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.4" y="942.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (250 samples, 2.27%)</title><rect x="44.3" y="915.0" width="26.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.3" y="926.0">_..</text>
</g>
<g>
<title>do_epoll_wait (250 samples, 2.27%)</title><rect x="44.3" y="899.0" width="26.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.3" y="910.0">d..</text>
</g>
<g>
<title>__fdget (7 samples, 0.06%)</title><rect x="44.7" y="883.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="47.7" y="894.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.06%)</title><rect x="44.7" y="867.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="47.7" y="878.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.06%)</title><rect x="44.7" y="851.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="47.7" y="862.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.05%)</title><rect x="45.4" y="883.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.4" y="894.0"></text>
</g>
<g>
<title>ep_poll (233 samples, 2.11%)</title><rect x="45.9" y="883.0" width="25.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.9" y="894.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (142 samples, 1.29%)</title><rect x="48.5" y="867.0" width="15.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.5" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (85 samples, 0.77%)</title><rect x="52.8" y="851.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.8" y="862.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (19 samples, 0.17%)</title><rect x="53.5" y="835.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.5" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (57 samples, 0.52%)</title><rect x="55.6" y="835.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.6" y="846.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (10 samples, 0.09%)</title><rect x="56.0" y="819.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.0" y="830.0"></text>
</g>
<g>
<title>sock_poll (39 samples, 0.35%)</title><rect x="57.1" y="819.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.1" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (10 samples, 0.09%)</title><rect x="57.9" y="803.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.9" y="814.0"></text>
</g>
<g>
<title>tcp_poll (16 samples, 0.15%)</title><rect x="59.0" y="803.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.0" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.05%)</title><rect x="60.7" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.7" y="814.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.04%)</title><rect x="61.2" y="819.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="64.2" y="830.0"></text>
</g>
<g>
<title>mutex_lock (17 samples, 0.15%)</title><rect x="61.9" y="851.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="64.9" y="862.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="63.4" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="66.4" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (66 samples, 0.60%)</title><rect x="63.8" y="867.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="66.8" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (66 samples, 0.60%)</title><rect x="63.8" y="851.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="66.8" y="862.0"></text>
</g>
<g>
<title>schedule (64 samples, 0.58%)</title><rect x="64.0" y="835.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="67.0" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (62 samples, 0.56%)</title><rect x="64.2" y="819.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.2" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (56 samples, 0.51%)</title><rect x="64.9" y="803.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="67.9" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (5 samples, 0.05%)</title><rect x="70.3" y="787.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="73.3" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (5 samples, 0.05%)</title><rect x="70.3" y="771.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="73.3" y="782.0"></text>
</g>
<g>
<title>irq_exit (5 samples, 0.05%)</title><rect x="70.3" y="755.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.3" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.05%)</title><rect x="70.3" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.3" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (5 samples, 0.05%)</title><rect x="70.3" y="723.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="73.3" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (5 samples, 0.05%)</title><rect x="70.3" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="73.3" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.05%)</title><rect x="70.3" y="691.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="73.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10,395 samples, 94.23%)</title><rect x="71.7" y="995.0" width="1111.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.7" y="1006.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10,351 samples, 93.83%)</title><rect x="75.8" y="979.0" width="1107.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.8" y="990.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,695 samples, 87.88%)</title><rect x="76.0" y="963.0" width="1037.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.0" y="974.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (11 samples, 0.10%)</title><rect x="84.0" y="947.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="87.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,354 samples, 84.79%)</title><rect x="85.2" y="947.0" width="1000.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.2" y="958.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,354 samples, 84.79%)</title><rect x="85.2" y="931.0" width="1000.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.2" y="942.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (9,252 samples, 83.87%)</title><rect x="85.6" y="915.0" width="989.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.6" y="926.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.21%)</title><rect x="85.8" y="899.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.8" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.05%)</title><rect x="87.4" y="883.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="90.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.03%)</title><rect x="88.0" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="88.0" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="88.0" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="88.0" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (42 samples, 0.38%)</title><rect x="88.3" y="899.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (40 samples, 0.36%)</title><rect x="88.5" y="883.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.05%)</title><rect x="89.3" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.05%)</title><rect x="89.3" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="89.8" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="89.8" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.8" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.11%)</title><rect x="90.1" y="867.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="93.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (13 samples, 0.12%)</title><rect x="91.4" y="867.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.08%)</title><rect x="91.8" y="851.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.08%)</title><rect x="91.8" y="835.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.08%)</title><rect x="91.8" y="819.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (9,185 samples, 83.26%)</title><rect x="92.8" y="899.0" width="982.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.8" y="910.0">ru/mail/polis/service/manikhin/AsyncServiceImpl.entity</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.21%)</title><rect x="95.1" y="883.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.13%)</title><rect x="95.9" y="867.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.13%)</title><rect x="95.9" y="851.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.replicaFactor (47 samples, 0.43%)</title><rect x="97.6" y="883.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.parser (47 samples, 0.43%)</title><rect x="97.6" y="867.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.split (47 samples, 0.43%)</title><rect x="97.6" y="851.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.split (47 samples, 0.43%)</title><rect x="97.6" y="835.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (17 samples, 0.15%)</title><rect x="99.5" y="819.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (17 samples, 0.15%)</title><rect x="99.5" y="803.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.5" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.09%)</title><rect x="101.3" y="819.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.3" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.09%)</title><rect x="101.3" y="803.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.3" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.09%)</title><rect x="101.3" y="787.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.3" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.09%)</title><rect x="101.3" y="771.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.09%)</title><rect x="101.3" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.3" y="766.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (8 samples, 0.07%)</title><rect x="101.3" y="739.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="104.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.handleMultiRequest (9,054 samples, 82.07%)</title><rect x="102.6" y="883.0" width="968.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.6" y="894.0">ru/mail/polis/service/manikhin/ReplicasRequests.handleMultiRequest</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.05%)</title><rect x="104.8" y="867.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="107.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.03%)</title><rect x="105.4" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.multiPut (9,025 samples, 81.81%)</title><rect x="105.7" y="867.0" width="965.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.7" y="878.0">ru/mail/polis/service/manikhin/ReplicasRequests.multiPut</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (4 samples, 0.04%)</title><rect x="106.9" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (4 samples, 0.04%)</title><rect x="106.9" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (19 samples, 0.17%)</title><rect x="107.3" y="851.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (16 samples, 0.15%)</title><rect x="107.3" y="835.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.03%)</title><rect x="109.0" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.03%)</title><rect x="109.0" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.03%)</title><rect x="109.0" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4 samples, 0.04%)</title><rect x="109.4" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (2,853 samples, 25.86%)</title><rect x="109.8" y="851.0" width="305.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.8" y="862.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (32 samples, 0.29%)</title><rect x="113.1" y="835.0" width="3.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="116.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (16 samples, 0.15%)</title><rect x="116.7" y="835.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.05%)</title><rect x="117.9" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.05%)</title><rect x="117.9" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.05%)</title><rect x="117.9" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.05%)</title><rect x="117.9" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,768 samples, 25.09%)</title><rect x="118.5" y="835.0" width="296.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.5" y="846.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,768 samples, 25.09%)</title><rect x="118.5" y="819.0" width="296.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.5" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (27 samples, 0.24%)</title><rect x="135.1" y="803.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (27 samples, 0.24%)</title><rect x="135.1" y="787.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (27 samples, 0.24%)</title><rect x="135.1" y="771.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (24 samples, 0.22%)</title><rect x="135.5" y="755.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (21 samples, 0.19%)</title><rect x="135.8" y="739.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.8" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.03%)</title><rect x="137.7" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (582 samples, 5.28%)</title><rect x="138.0" y="803.0" width="62.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.0" y="814.0">one/ni..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (18 samples, 0.16%)</title><rect x="138.8" y="787.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="141.8" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (17 samples, 0.15%)</title><rect x="138.9" y="771.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="141.9" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 0.15%)</title><rect x="138.9" y="755.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="141.9" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (17 samples, 0.15%)</title><rect x="138.9" y="739.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="141.9" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.04%)</title><rect x="139.0" y="723.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="142.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (8 samples, 0.07%)</title><rect x="139.5" y="723.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="142.5" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (5 samples, 0.05%)</title><rect x="139.5" y="707.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="142.5" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.03%)</title><rect x="139.7" y="691.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="142.7" y="702.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (3 samples, 0.03%)</title><rect x="139.7" y="675.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.7" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (3 samples, 0.03%)</title><rect x="139.7" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="142.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="140.1" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="143.1" y="718.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.03%)</title><rect x="140.4" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="143.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (556 samples, 5.04%)</title><rect x="140.7" y="787.0" width="59.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.7" y="798.0">one/ni..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (20 samples, 0.18%)</title><rect x="144.1" y="771.0" width="2.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="147.1" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (34 samples, 0.31%)</title><rect x="146.3" y="771.0" width="3.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="149.3" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.04%)</title><rect x="146.8" y="755.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="149.8" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.05%)</title><rect x="147.2" y="755.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="150.2" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.16%)</title><rect x="148.0" y="755.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="151.0" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.04%)</title><rect x="148.4" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="151.4" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (9 samples, 0.08%)</title><rect x="148.8" y="739.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.8" y="750.0"></text>
</g>
<g>
<title>__recv (463 samples, 4.20%)</title><rect x="149.9" y="771.0" width="49.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="152.9" y="782.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (411 samples, 3.73%)</title><rect x="155.5" y="755.0" width="43.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="158.5" y="766.0">entr..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.03%)</title><rect x="155.6" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="158.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (407 samples, 3.69%)</title><rect x="155.9" y="739.0" width="43.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.9" y="750.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (375 samples, 3.40%)</title><rect x="159.0" y="723.0" width="40.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="162.0" y="734.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (373 samples, 3.38%)</title><rect x="159.0" y="707.0" width="39.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.0" y="718.0">__s..</text>
</g>
<g>
<title>sock_recvmsg (343 samples, 3.11%)</title><rect x="160.3" y="691.0" width="36.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="163.3" y="702.0">soc..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.03%)</title><rect x="160.5" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="163.5" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (320 samples, 2.90%)</title><rect x="160.9" y="675.0" width="34.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="163.9" y="686.0">in..</text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="161.4" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.4" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (309 samples, 2.80%)</title><rect x="162.1" y="659.0" width="33.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="165.1" y="670.0">tc..</text>
</g>
<g>
<title>__kfree_skb (57 samples, 0.52%)</title><rect x="165.4" y="643.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="168.4" y="654.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.04%)</title><rect x="165.6" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="168.6" y="638.0"></text>
</g>
<g>
<title>skb_release_all (51 samples, 0.46%)</title><rect x="166.1" y="627.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.1" y="638.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.03%)</title><rect x="166.3" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="169.3" y="622.0"></text>
</g>
<g>
<title>skb_release_data (21 samples, 0.19%)</title><rect x="166.6" y="611.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.6" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (22 samples, 0.20%)</title><rect x="168.8" y="611.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="171.8" y="622.0"></text>
</g>
<g>
<title>dst_release (22 samples, 0.20%)</title><rect x="168.8" y="595.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="171.8" y="606.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.03%)</title><rect x="171.2" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (15 samples, 0.14%)</title><rect x="171.7" y="643.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="174.7" y="654.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.07%)</title><rect x="173.5" y="643.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="176.5" y="654.0"></text>
</g>
<g>
<title>sk_wait_data (88 samples, 0.80%)</title><rect x="174.5" y="643.0" width="9.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="177.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.05%)</title><rect x="174.7" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="177.7" y="638.0"></text>
</g>
<g>
<title>add_wait_queue (6 samples, 0.05%)</title><rect x="175.5" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="178.5" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="175.5" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="178.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.03%)</title><rect x="175.8" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="178.8" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.07%)</title><rect x="176.1" y="627.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.1" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.07%)</title><rect x="176.1" y="611.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="179.1" y="622.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (8 samples, 0.07%)</title><rect x="176.1" y="595.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="179.1" y="606.0"></text>
</g>
<g>
<title>remove_wait_queue (4 samples, 0.04%)</title><rect x="177.2" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="180.2" y="638.0"></text>
</g>
<g>
<title>wait_woken (58 samples, 0.53%)</title><rect x="177.7" y="627.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="180.7" y="638.0"></text>
</g>
<g>
<title>schedule_timeout (57 samples, 0.52%)</title><rect x="177.8" y="611.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="180.8" y="622.0"></text>
</g>
<g>
<title>__mod_timer (17 samples, 0.15%)</title><rect x="177.9" y="595.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.9" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.09%)</title><rect x="178.0" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="181.0" y="590.0"></text>
</g>
<g>
<title>lock_timer_base (6 samples, 0.05%)</title><rect x="179.1" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.04%)</title><rect x="179.3" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.3" y="574.0"></text>
</g>
<g>
<title>del_timer_sync (7 samples, 0.06%)</title><rect x="179.7" y="595.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.7" y="606.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (7 samples, 0.06%)</title><rect x="179.7" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="179.7" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="182.7" y="574.0"></text>
</g>
<g>
<title>lock_timer_base (4 samples, 0.04%)</title><rect x="180.1" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="183.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.04%)</title><rect x="180.1" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.1" y="558.0"></text>
</g>
<g>
<title>schedule (32 samples, 0.29%)</title><rect x="180.5" y="595.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="183.5" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (32 samples, 0.29%)</title><rect x="180.5" y="579.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.5" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (30 samples, 0.27%)</title><rect x="180.7" y="563.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="183.7" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.03%)</title><rect x="183.6" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="186.6" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="183.6" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.6" y="542.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.03%)</title><rect x="183.6" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="186.6" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="183.6" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.6" y="510.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.03%)</title><rect x="183.6" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="186.6" y="494.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.03%)</title><rect x="183.6" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="186.6" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="183.6" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="186.6" y="462.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (39 samples, 0.35%)</title><rect x="183.9" y="643.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="186.9" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (38 samples, 0.34%)</title><rect x="184.0" y="627.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.0" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (28 samples, 0.25%)</title><rect x="185.1" y="611.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="188.1" y="622.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.04%)</title><rect x="185.1" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="188.1" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (17 samples, 0.15%)</title><rect x="185.5" y="595.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="188.5" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (12 samples, 0.11%)</title><rect x="186.0" y="579.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.0" y="590.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.05%)</title><rect x="187.4" y="595.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="190.4" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (50 samples, 0.45%)</title><rect x="188.2" y="643.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.2" y="654.0"></text>
</g>
<g>
<title>__tcp_select_window (6 samples, 0.05%)</title><rect x="189.1" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.1" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (36 samples, 0.33%)</title><rect x="189.7" y="627.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="192.7" y="638.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (36 samples, 0.33%)</title><rect x="189.7" y="611.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.7" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.10%)</title><rect x="189.7" y="595.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="192.7" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.04%)</title><rect x="189.7" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="192.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.03%)</title><rect x="189.7" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.7" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.05%)</title><rect x="190.1" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.1" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (25 samples, 0.23%)</title><rect x="190.9" y="595.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.9" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (25 samples, 0.23%)</title><rect x="190.9" y="579.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="193.9" y="590.0"></text>
</g>
<g>
<title>__ip_queue_xmit (25 samples, 0.23%)</title><rect x="190.9" y="563.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.9" y="574.0"></text>
</g>
<g>
<title>ip_local_out (23 samples, 0.21%)</title><rect x="191.1" y="547.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.1" y="558.0"></text>
</g>
<g>
<title>ip_output (23 samples, 0.21%)</title><rect x="191.1" y="531.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.1" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (23 samples, 0.21%)</title><rect x="191.1" y="515.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="194.1" y="526.0"></text>
</g>
<g>
<title>__ip_finish_output (22 samples, 0.20%)</title><rect x="191.1" y="499.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="194.1" y="510.0"></text>
</g>
<g>
<title>ip_finish_output2 (22 samples, 0.20%)</title><rect x="191.1" y="483.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.1" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 0.16%)</title><rect x="191.3" y="467.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="194.3" y="478.0"></text>
</g>
<g>
<title>do_softirq.part.0 (18 samples, 0.16%)</title><rect x="191.3" y="451.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.3" y="462.0"></text>
</g>
<g>
<title>do_softirq_own_stack (17 samples, 0.15%)</title><rect x="191.4" y="435.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="194.4" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (17 samples, 0.15%)</title><rect x="191.4" y="419.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="194.4" y="430.0"></text>
</g>
<g>
<title>net_rx_action (16 samples, 0.15%)</title><rect x="191.4" y="403.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.4" y="414.0"></text>
</g>
<g>
<title>process_backlog (16 samples, 0.15%)</title><rect x="191.4" y="387.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.4" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (15 samples, 0.14%)</title><rect x="191.5" y="371.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="194.5" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (15 samples, 0.14%)</title><rect x="191.5" y="355.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="194.5" y="366.0"></text>
</g>
<g>
<title>ip_rcv (14 samples, 0.13%)</title><rect x="191.6" y="339.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="194.6" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (14 samples, 0.13%)</title><rect x="191.6" y="323.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="194.6" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (12 samples, 0.11%)</title><rect x="191.6" y="307.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="194.6" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 0.11%)</title><rect x="191.6" y="291.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.6" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 0.11%)</title><rect x="191.6" y="275.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="194.6" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 0.11%)</title><rect x="191.6" y="259.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="194.6" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 0.10%)</title><rect x="191.7" y="243.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.7" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.10%)</title><rect x="191.7" y="227.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="194.7" y="238.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.07%)</title><rect x="191.8" y="211.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="194.8" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.07%)</title><rect x="191.8" y="195.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.8" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.05%)</title><rect x="191.9" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.9" y="190.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.04%)</title><rect x="192.0" y="163.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="195.0" y="174.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.04%)</title><rect x="192.0" y="147.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="195.0" y="158.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.04%)</title><rect x="192.0" y="131.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="195.0" y="142.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.04%)</title><rect x="192.0" y="115.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.0" y="126.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="192.2" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.2" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (14 samples, 0.13%)</title><rect x="193.5" y="643.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.5" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.10%)</title><rect x="193.9" y="627.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="196.9" y="638.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.05%)</title><rect x="193.9" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="196.9" y="622.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.05%)</title><rect x="194.4" y="611.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="197.4" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.15%)</title><rect x="195.2" y="675.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.2" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (14 samples, 0.13%)</title><rect x="195.4" y="659.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="198.4" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (13 samples, 0.12%)</title><rect x="195.5" y="643.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="198.5" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (10 samples, 0.09%)</title><rect x="195.8" y="627.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="198.8" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.03%)</title><rect x="196.5" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="199.5" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (18 samples, 0.16%)</title><rect x="197.0" y="691.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.0" y="702.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.15%)</title><rect x="197.0" y="675.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.0" y="686.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.15%)</title><rect x="197.0" y="659.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.0" y="670.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.15%)</title><rect x="197.0" y="643.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.0" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.03%)</title><rect x="199.1" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.1" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.05%)</title><rect x="199.4" y="771.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="202.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (178 samples, 1.61%)</title><rect x="200.3" y="803.0" width="19.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.09%)</title><rect x="201.0" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.09%)</title><rect x="201.0" y="771.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.09%)</title><rect x="201.0" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.04%)</title><rect x="201.0" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.04%)</title><rect x="201.0" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.05%)</title><rect x="201.5" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.05%)</title><rect x="201.5" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.5" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.05%)</title><rect x="201.5" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.23%)</title><rect x="202.1" y="787.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.13%)</title><rect x="203.3" y="771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.09%)</title><rect x="203.7" y="755.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="204.5" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (74 samples, 0.67%)</title><rect x="204.8" y="787.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.8" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.11%)</title><rect x="205.1" y="771.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="208.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.03%)</title><rect x="206.4" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 0.51%)</title><rect x="206.7" y="771.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 0.51%)</title><rect x="206.7" y="755.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.08%)</title><rect x="212.7" y="787.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (11 samples, 0.10%)</title><rect x="213.7" y="787.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.03%)</title><rect x="214.5" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (42 samples, 0.38%)</title><rect x="214.8" y="787.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (32 samples, 0.29%)</title><rect x="215.9" y="771.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (32 samples, 0.29%)</title><rect x="215.9" y="755.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.9" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.09%)</title><rect x="218.3" y="739.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="221.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (113 samples, 1.02%)</title><rect x="219.3" y="803.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.14%)</title><rect x="220.6" y="787.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (8 samples, 0.07%)</title><rect x="221.4" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.4" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.07%)</title><rect x="221.4" y="755.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="224.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (75 samples, 0.68%)</title><rect x="222.2" y="787.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.10%)</title><rect x="224.1" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (7 samples, 0.06%)</title><rect x="224.6" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (13 samples, 0.12%)</title><rect x="225.3" y="771.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="226.1" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.1" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="226.4" y="755.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="229.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (32 samples, 0.29%)</title><rect x="226.7" y="771.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (32 samples, 0.29%)</title><rect x="226.7" y="755.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (30 samples, 0.27%)</title><rect x="226.9" y="739.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (13 samples, 0.12%)</title><rect x="228.7" y="723.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (6 samples, 0.05%)</title><rect x="229.5" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.10%)</title><rect x="230.2" y="787.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.04%)</title><rect x="231.0" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.04%)</title><rect x="231.0" y="755.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="234.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (28 samples, 0.25%)</title><rect x="231.4" y="803.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.18%)</title><rect x="232.3" y="787.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.18%)</title><rect x="232.3" y="771.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.3" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.08%)</title><rect x="233.4" y="755.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="236.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (225 samples, 2.04%)</title><rect x="234.4" y="803.0" width="24.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.4" y="814.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (5 samples, 0.05%)</title><rect x="235.8" y="787.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="238.8" y="798.0"></text>
</g>
<g>
<title>setsockopt (207 samples, 1.88%)</title><rect x="236.3" y="787.0" width="22.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="239.3" y="798.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (179 samples, 1.62%)</title><rect x="239.3" y="771.0" width="19.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (176 samples, 1.60%)</title><rect x="239.6" y="755.0" width="18.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (141 samples, 1.28%)</title><rect x="243.4" y="739.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="246.4" y="750.0"></text>
</g>
<g>
<title>__sys_setsockopt (140 samples, 1.27%)</title><rect x="243.5" y="723.0" width="15.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="246.5" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (6 samples, 0.05%)</title><rect x="244.4" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="247.4" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.07%)</title><rect x="245.0" y="707.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="248.0" y="718.0"></text>
</g>
<g>
<title>security_socket_setsockopt (43 samples, 0.39%)</title><rect x="246.6" y="707.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="249.6" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (37 samples, 0.34%)</title><rect x="247.2" y="691.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (36 samples, 0.33%)</title><rect x="247.3" y="675.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="250.3" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (34 samples, 0.31%)</title><rect x="247.6" y="659.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.6" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (13 samples, 0.12%)</title><rect x="249.7" y="643.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="252.7" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (51 samples, 0.46%)</title><rect x="251.2" y="707.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (25 samples, 0.23%)</title><rect x="252.1" y="691.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.1" y="702.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.06%)</title><rect x="254.9" y="691.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.9" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.03%)</title><rect x="255.4" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="258.4" y="686.0"></text>
</g>
<g>
<title>sock_set_timeout (9 samples, 0.08%)</title><rect x="255.7" y="691.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="258.7" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.07%)</title><rect x="255.8" y="675.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="258.8" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.15%)</title><rect x="256.7" y="707.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.7" y="718.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.15%)</title><rect x="256.7" y="691.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="259.7" y="702.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.14%)</title><rect x="256.8" y="675.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="259.8" y="686.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.14%)</title><rect x="256.8" y="659.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="259.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,415 samples, 12.83%)</title><rect x="258.5" y="803.0" width="151.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.5" y="814.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.10%)</title><rect x="260.9" y="787.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="263.9" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (41 samples, 0.37%)</title><rect x="262.1" y="787.0" width="4.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="265.1" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (12 samples, 0.11%)</title><rect x="263.0" y="771.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="266.0" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.07%)</title><rect x="264.2" y="771.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="267.2" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.09%)</title><rect x="265.3" y="771.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="268.3" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.03%)</title><rect x="265.4" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="268.4" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.05%)</title><rect x="265.7" y="755.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="268.7" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="266.5" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="269.5" y="798.0"></text>
</g>
<g>
<title>send (1,337 samples, 12.12%)</title><rect x="266.8" y="787.0" width="143.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="269.8" y="798.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,305 samples, 11.83%)</title><rect x="270.2" y="771.0" width="139.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="273.2" y="782.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.04%)</title><rect x="270.2" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="273.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1,299 samples, 11.77%)</title><rect x="270.9" y="755.0" width="138.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="273.9" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,274 samples, 11.55%)</title><rect x="272.5" y="739.0" width="136.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.5" y="750.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,272 samples, 11.53%)</title><rect x="272.5" y="723.0" width="136.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="275.5" y="734.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="272.7" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="275.7" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (1,256 samples, 11.39%)</title><rect x="273.0" y="707.0" width="134.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="276.0" y="718.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.05%)</title><rect x="273.7" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="276.7" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,225 samples, 11.10%)</title><rect x="274.2" y="691.0" width="131.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="277.2" y="702.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,223 samples, 11.09%)</title><rect x="274.4" y="675.0" width="130.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="277.4" y="686.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="274.8" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="277.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (17 samples, 0.15%)</title><rect x="275.3" y="659.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.3" y="670.0"></text>
</g>
<g>
<title>release_sock (19 samples, 0.17%)</title><rect x="277.3" y="659.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.3" y="670.0"></text>
</g>
<g>
<title>__release_sock (16 samples, 0.15%)</title><rect x="277.5" y="643.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.5" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.11%)</title><rect x="277.9" y="627.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.9" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.11%)</title><rect x="277.9" y="611.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.9" y="622.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.03%)</title><rect x="277.9" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="280.9" y="606.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.03%)</title><rect x="277.9" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="280.9" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="277.9" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="280.9" y="574.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="277.9" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="280.9" y="558.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.08%)</title><rect x="278.3" y="595.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.3" y="606.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.05%)</title><rect x="278.6" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="281.6" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.05%)</title><rect x="278.7" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.7" y="574.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.05%)</title><rect x="278.7" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="281.7" y="558.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.05%)</title><rect x="278.7" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.7" y="542.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.05%)</title><rect x="279.4" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="282.4" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,166 samples, 10.57%)</title><rect x="280.3" y="659.0" width="124.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.3" y="670.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>_copy_from_iter_full (15 samples, 0.14%)</title><rect x="282.8" y="643.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="285.8" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (10 samples, 0.09%)</title><rect x="283.1" y="627.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="286.1" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.04%)</title><rect x="284.4" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="287.4" y="654.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.04%)</title><rect x="284.4" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="287.4" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (73 samples, 0.66%)</title><rect x="284.8" y="643.0" width="7.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="287.8" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (67 samples, 0.61%)</title><rect x="285.3" y="627.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.3" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (29 samples, 0.26%)</title><rect x="286.2" y="611.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.2" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (18 samples, 0.16%)</title><rect x="286.3" y="595.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="289.3" y="606.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.03%)</title><rect x="287.6" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.6" y="590.0"></text>
</g>
<g>
<title>memset (10 samples, 0.09%)</title><rect x="288.2" y="595.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="291.2" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (14 samples, 0.13%)</title><rect x="289.5" y="611.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.5" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.03%)</title><rect x="290.7" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="293.7" y="606.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.05%)</title><rect x="291.0" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="294.0" y="622.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.05%)</title><rect x="291.0" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="294.0" y="606.0"></text>
</g>
<g>
<title>memset (7 samples, 0.06%)</title><rect x="291.6" y="611.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="294.6" y="622.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.05%)</title><rect x="292.6" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.6" y="654.0"></text>
</g>
<g>
<title>tcp_push (1,023 samples, 9.27%)</title><rect x="293.4" y="643.0" width="109.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.4" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,023 samples, 9.27%)</title><rect x="293.4" y="627.0" width="109.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="296.4" y="638.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (1,014 samples, 9.19%)</title><rect x="294.4" y="611.0" width="108.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="297.4" y="622.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (930 samples, 8.43%)</title><rect x="295.3" y="595.0" width="99.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.3" y="606.0">__tcp_transm..</text>
</g>
<g>
<title>ip_queue_xmit (899 samples, 8.15%)</title><rect x="297.4" y="579.0" width="96.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.4" y="590.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (894 samples, 8.10%)</title><rect x="297.4" y="563.0" width="95.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.4" y="574.0">__ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.04%)</title><rect x="297.9" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="300.9" y="558.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (14 samples, 0.13%)</title><rect x="298.4" y="547.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="301.4" y="558.0"></text>
</g>
<g>
<title>ip_local_out (869 samples, 7.88%)</title><rect x="299.9" y="547.0" width="92.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="302.9" y="558.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="300.0" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="303.0" y="542.0"></text>
</g>
<g>
<title>ip_output (862 samples, 7.81%)</title><rect x="300.4" y="531.0" width="92.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.4" y="542.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (859 samples, 7.79%)</title><rect x="300.7" y="515.0" width="91.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="303.7" y="526.0">ip_finish_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.05%)</title><rect x="301.0" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.0" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (845 samples, 7.66%)</title><rect x="301.7" y="499.0" width="90.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="304.7" y="510.0">__ip_finis..</text>
</g>
<g>
<title>ip_finish_output2 (844 samples, 7.65%)</title><rect x="301.8" y="483.0" width="90.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="304.8" y="494.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (771 samples, 6.99%)</title><rect x="303.0" y="467.0" width="82.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="306.0" y="478.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.0 (770 samples, 6.98%)</title><rect x="303.0" y="451.0" width="82.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.0" y="462.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (754 samples, 6.83%)</title><rect x="304.3" y="435.0" width="80.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.3" y="446.0">do_softir..</text>
</g>
<g>
<title>__softirqentry_text_start (754 samples, 6.83%)</title><rect x="304.3" y="419.0" width="80.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="307.3" y="430.0">__softirq..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="305.5" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="308.5" y="414.0"></text>
</g>
<g>
<title>net_rx_action (734 samples, 6.65%)</title><rect x="306.0" y="403.0" width="78.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="309.0" y="414.0">net_rx_ac..</text>
</g>
<g>
<title>process_backlog (722 samples, 6.54%)</title><rect x="307.2" y="387.0" width="77.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="310.2" y="398.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (704 samples, 6.38%)</title><rect x="309.2" y="371.0" width="75.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.2" y="382.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (702 samples, 6.36%)</title><rect x="309.4" y="355.0" width="75.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="312.4" y="366.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.06%)</title><rect x="309.5" y="339.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="312.5" y="350.0"></text>
</g>
<g>
<title>ip_rcv (694 samples, 6.29%)</title><rect x="310.2" y="339.0" width="74.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="313.2" y="350.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="310.5" y="323.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.5" y="334.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.03%)</title><rect x="310.9" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (685 samples, 6.21%)</title><rect x="311.2" y="323.0" width="73.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="314.2" y="334.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (678 samples, 6.15%)</title><rect x="311.4" y="307.0" width="72.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="314.4" y="318.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (674 samples, 6.11%)</title><rect x="311.7" y="291.0" width="72.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.7" y="302.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (672 samples, 6.09%)</title><rect x="311.7" y="275.0" width="71.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="314.7" y="286.0">ip_proto..</text>
</g>
<g>
<title>_raw_spin_lock (8 samples, 0.07%)</title><rect x="312.2" y="259.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="315.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (656 samples, 5.95%)</title><rect x="313.4" y="259.0" width="70.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.4" y="270.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (20 samples, 0.18%)</title><rect x="314.9" y="243.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.9" y="254.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.03%)</title><rect x="316.8" y="227.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="319.8" y="238.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.05%)</title><rect x="317.1" y="243.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="320.1" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (18 samples, 0.16%)</title><rect x="317.7" y="243.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="320.7" y="254.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (11 samples, 0.10%)</title><rect x="318.2" y="227.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="321.2" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.03%)</title><rect x="319.3" y="227.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="322.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (593 samples, 5.38%)</title><rect x="319.9" y="243.0" width="63.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.9" y="254.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.05%)</title><rect x="320.2" y="227.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.2" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (583 samples, 5.28%)</title><rect x="320.9" y="227.0" width="62.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="323.9" y="238.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.08%)</title><rect x="322.4" y="211.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="325.4" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.07%)</title><rect x="322.5" y="195.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="325.5" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.07%)</title><rect x="322.5" y="179.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="325.5" y="190.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.07%)</title><rect x="322.5" y="163.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="325.5" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.06%)</title><rect x="322.5" y="147.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="325.5" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (11 samples, 0.10%)</title><rect x="323.4" y="211.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="326.4" y="222.0"></text>
</g>
<g>
<title>tcp_ack (100 samples, 0.91%)</title><rect x="324.8" y="211.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="327.8" y="222.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.05%)</title><rect x="325.6" y="195.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="328.6" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (79 samples, 0.72%)</title><rect x="326.7" y="195.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="329.7" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (50 samples, 0.45%)</title><rect x="328.7" y="179.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="331.7" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (16 samples, 0.15%)</title><rect x="328.7" y="163.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.7" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (15 samples, 0.14%)</title><rect x="328.9" y="147.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.9" y="158.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.05%)</title><rect x="329.9" y="131.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.9" y="142.0"></text>
</g>
<g>
<title>skb_release_all (33 samples, 0.30%)</title><rect x="330.6" y="163.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="333.6" y="174.0"></text>
</g>
<g>
<title>skb_release_data (31 samples, 0.28%)</title><rect x="330.7" y="147.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.7" y="158.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.08%)</title><rect x="333.0" y="131.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.0" y="142.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.08%)</title><rect x="333.0" y="115.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="336.0" y="126.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.06%)</title><rect x="333.2" y="99.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="336.2" y="110.0"></text>
</g>
<g>
<title>put_cpu_partial (3 samples, 0.03%)</title><rect x="333.7" y="83.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="336.7" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (6 samples, 0.05%)</title><rect x="334.4" y="179.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="337.4" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (421 samples, 3.82%)</title><rect x="335.5" y="211.0" width="45.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="338.5" y="222.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (421 samples, 3.82%)</title><rect x="335.5" y="195.0" width="45.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="338.5" y="206.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (419 samples, 3.80%)</title><rect x="335.7" y="179.0" width="44.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="338.7" y="190.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (418 samples, 3.79%)</title><rect x="335.7" y="163.0" width="44.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="338.7" y="174.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (414 samples, 3.75%)</title><rect x="335.9" y="147.0" width="44.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.9" y="158.0">__lo..</text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.07%)</title><rect x="380.5" y="211.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.5" y="222.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (14 samples, 0.13%)</title><rect x="381.5" y="211.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="384.5" y="222.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.06%)</title><rect x="381.8" y="195.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.8" y="206.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="382.7" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.7" y="206.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.03%)</title><rect x="383.0" y="211.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.03%)</title><rect x="383.3" y="243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.03%)</title><rect x="384.2" y="307.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="387.2" y="318.0"></text>
</g>
<g>
<title>ret_from_intr (4 samples, 0.04%)</title><rect x="384.9" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="387.9" y="446.0"></text>
</g>
<g>
<title>do_IRQ (4 samples, 0.04%)</title><rect x="384.9" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.9" y="430.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.04%)</title><rect x="384.9" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.9" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.04%)</title><rect x="384.9" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="387.9" y="398.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.04%)</title><rect x="384.9" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="387.9" y="382.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.04%)</title><rect x="384.9" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.9" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.04%)</title><rect x="384.9" y="339.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.04%)</title><rect x="384.9" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.04%)</title><rect x="384.9" y="307.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="387.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.04%)</title><rect x="384.9" y="291.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.9" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.04%)</title><rect x="384.9" y="275.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="387.9" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.04%)</title><rect x="384.9" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.9" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="384.9" y="243.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.9" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (58 samples, 0.53%)</title><rect x="385.5" y="467.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="388.5" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (58 samples, 0.53%)</title><rect x="385.5" y="451.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.5" y="462.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="387.0" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="390.0" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (31 samples, 0.28%)</title><rect x="387.5" y="435.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="390.5" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (21 samples, 0.19%)</title><rect x="388.4" y="419.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="391.4" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.03%)</title><rect x="388.6" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="391.6" y="414.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.10%)</title><rect x="389.0" y="403.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="392.0" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.09%)</title><rect x="389.1" y="387.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.1" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.09%)</title><rect x="389.1" y="371.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="392.1" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="390.4" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="393.4" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.06%)</title><rect x="390.9" y="435.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="393.9" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.03%)</title><rect x="391.7" y="467.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.7" y="478.0"></text>
</g>
<g>
<title>ret_from_intr (3 samples, 0.03%)</title><rect x="391.7" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.7" y="462.0"></text>
</g>
<g>
<title>do_IRQ (3 samples, 0.03%)</title><rect x="391.7" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.7" y="446.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.03%)</title><rect x="391.7" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.7" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="391.7" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.7" y="414.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.03%)</title><rect x="391.7" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="394.7" y="398.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.03%)</title><rect x="391.7" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.7" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.03%)</title><rect x="391.7" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="394.7" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.03%)</title><rect x="391.7" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.7" y="350.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.03%)</title><rect x="391.7" y="323.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="394.7" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="392.1" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="395.1" y="510.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.03%)</title><rect x="393.1" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="396.1" y="574.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.06%)</title><rect x="393.6" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="396.6" y="590.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.05%)</title><rect x="393.7" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.7" y="574.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="394.0" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="397.0" y="558.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (27 samples, 0.24%)</title><rect x="394.7" y="595.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="397.7" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.04%)</title><rect x="397.7" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="400.7" y="606.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.04%)</title><rect x="398.2" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.2" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (26 samples, 0.24%)</title><rect x="398.8" y="595.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.8" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (18 samples, 0.16%)</title><rect x="399.7" y="579.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.7" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.11%)</title><rect x="400.3" y="563.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="403.3" y="574.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.11%)</title><rect x="400.3" y="547.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="403.3" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.09%)</title><rect x="400.4" y="531.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="403.4" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="401.9" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="404.9" y="606.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.04%)</title><rect x="402.4" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="405.4" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (18 samples, 0.16%)</title><rect x="403.1" y="643.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="406.1" y="654.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (10 samples, 0.09%)</title><rect x="403.2" y="627.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.2" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.05%)</title><rect x="404.5" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="407.5" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="404.7" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="407.7" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (19 samples, 0.17%)</title><rect x="405.3" y="691.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="408.3" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (19 samples, 0.17%)</title><rect x="405.3" y="675.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="408.3" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (19 samples, 0.17%)</title><rect x="405.3" y="659.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="408.3" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (19 samples, 0.17%)</title><rect x="405.3" y="643.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="408.3" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (7 samples, 0.06%)</title><rect x="406.6" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="409.6" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.10%)</title><rect x="407.4" y="707.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.4" y="718.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.09%)</title><rect x="407.5" y="691.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="410.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.08%)</title><rect x="407.6" y="675.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="410.6" y="686.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.07%)</title><rect x="407.7" y="659.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.09%)</title><rect x="408.8" y="739.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.8" y="750.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.05%)</title><rect x="409.2" y="723.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="412.2" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.05%)</title><rect x="409.2" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.2" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.05%)</title><rect x="409.2" y="691.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="412.2" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (37 samples, 0.34%)</title><rect x="409.8" y="803.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.8" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)</title><rect x="410.4" y="787.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="413.4" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (28 samples, 0.25%)</title><rect x="410.8" y="787.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.8" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (28 samples, 0.25%)</title><rect x="410.8" y="771.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.03%)</title><rect x="413.5" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.5" y="766.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (6 samples, 0.05%)</title><rect x="413.8" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.8" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="414.1" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="417.1" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="414.1" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="417.1" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.03%)</title><rect x="414.1" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="417.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.04%)</title><rect x="414.5" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.13%)</title><rect x="415.0" y="851.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.09%)</title><rect x="415.3" y="835.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.09%)</title><rect x="415.3" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (47 samples, 0.43%)</title><rect x="416.5" y="851.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.05%)</title><rect x="417.5" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.05%)</title><rect x="417.5" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.5" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (27 samples, 0.24%)</title><rect x="418.3" y="835.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="421.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.03%)</title><rect x="421.2" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.putTimestamp (3,653 samples, 33.11%)</title><rect x="421.6" y="851.0" width="390.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.6" y="862.0">ru/mail/polis/service/manikhin/ReplicasRequests.putTi..</text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsertTimestampRecord (3,653 samples, 33.11%)</title><rect x="421.6" y="835.0" width="390.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.6" y="846.0">ru/mail/polis/dao/manikhin/DAOImpl.upsertTimestampRec..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (3,563 samples, 32.30%)</title><rect x="421.6" y="819.0" width="381.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.6" y="830.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.07%)</title><rect x="422.3" y="803.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="425.3" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (3,548 samples, 32.16%)</title><rect x="423.2" y="803.0" width="379.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.2" y="814.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.03%)</title><rect x="427.8" y="787.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="430.8" y="798.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (3,099 samples, 28.09%)</title><rect x="428.1" y="787.0" width="331.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="431.1" y="798.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (8 samples, 0.07%)</title><rect x="429.2" y="771.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="432.2" y="782.0"></text>
</g>
<g>
<title>cfree (3 samples, 0.03%)</title><rect x="430.1" y="771.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="433.1" y="782.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (16 samples, 0.15%)</title><rect x="430.5" y="771.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="433.5" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.12%)</title><rect x="432.2" y="771.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="435.2" y="782.0"></text>
</g>
<g>
<title>operator delete[](void*) (7 samples, 0.06%)</title><rect x="433.6" y="771.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="436.6" y="782.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.03%)</title><rect x="434.4" y="771.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="437.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 0.15%)</title><rect x="434.7" y="771.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="437.7" y="782.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3,019 samples, 27.37%)</title><rect x="436.7" y="771.0" width="322.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="439.7" y="782.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.05%)</title><rect x="437.5" y="755.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="440.5" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (9 samples, 0.08%)</title><rect x="438.2" y="755.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="441.2" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (15 samples, 0.14%)</title><rect x="439.3" y="755.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="442.3" y="766.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (5 samples, 0.05%)</title><rect x="440.3" y="739.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="443.3" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (32 samples, 0.29%)</title><rect x="440.9" y="755.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="443.9" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (11 samples, 0.10%)</title><rect x="441.6" y="739.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="444.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (13 samples, 0.12%)</title><rect x="442.8" y="739.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="445.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2,927 samples, 26.53%)</title><rect x="444.4" y="755.0" width="313.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="447.4" y="766.0">rocksdb::DB::Put(rocksdb::WriteOptions con..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2,918 samples, 26.45%)</title><rect x="445.3" y="739.0" width="312.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="448.3" y="750.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2,890 samples, 26.20%)</title><rect x="445.4" y="723.0" width="309.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="448.4" y="734.0">rocksdb::DB::Put(rocksdb::WriteOptions con..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (7 samples, 0.06%)</title><rect x="445.8" y="707.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="448.8" y="718.0"></text>
</g>
<g>
<title>cfree (11 samples, 0.10%)</title><rect x="446.5" y="707.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="449.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (4 samples, 0.04%)</title><rect x="447.8" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="450.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2,773 samples, 25.14%)</title><rect x="448.2" y="707.0" width="296.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="451.2" y="718.0">rocksdb::DBImpl::Write(rocksdb::WriteOpt..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (6 samples, 0.05%)</title><rect x="448.6" y="691.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="451.6" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.05%)</title><rect x="449.5" y="691.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="452.5" y="702.0"></text>
</g>
<g>
<title>pthread_cond_destroy@@GLIBC_2.3.2 (5 samples, 0.05%)</title><rect x="450.1" y="691.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="453.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2,687 samples, 24.36%)</title><rect x="451.0" y="691.0" width="287.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="454.0" y="702.0">rocksdb::DBImpl::WriteImpl(rocksdb::Wri..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.04%)</title><rect x="460.2" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="463.2" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (3 samples, 0.03%)</title><rect x="460.6" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="463.6" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (45 samples, 0.41%)</title><rect x="460.9" y="675.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="463.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.29%)</title><rect x="462.3" y="659.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.28%)</title><rect x="462.4" y="643.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.24%)</title><rect x="462.8" y="627.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="465.8" y="638.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.24%)</title><rect x="462.8" y="611.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.8" y="622.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.24%)</title><rect x="462.9" y="595.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.19%)</title><rect x="463.4" y="579.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.4" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.19%)</title><rect x="463.4" y="563.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.4" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.19%)</title><rect x="463.4" y="547.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.11%)</title><rect x="466.0" y="675.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="469.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.05%)</title><rect x="467.6" y="675.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="470.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (4 samples, 0.04%)</title><rect x="468.1" y="675.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="471.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (13 samples, 0.12%)</title><rect x="468.5" y="675.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="471.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (10 samples, 0.09%)</title><rect x="469.9" y="675.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="472.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (7 samples, 0.06%)</title><rect x="470.3" y="659.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="473.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1,245 samples, 11.29%)</title><rect x="471.2" y="675.0" width="133.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="474.2" y="686.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (7 samples, 0.06%)</title><rect x="472.4" y="659.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="475.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1,216 samples, 11.02%)</title><rect x="473.1" y="659.0" width="130.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="476.1" y="670.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.04%)</title><rect x="475.3" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="478.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1,189 samples, 10.78%)</title><rect x="475.7" y="643.0" width="127.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="478.7" y="654.0">rocksdb::log::Wr..</text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (26 samples, 0.24%)</title><rect x="477.3" y="627.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="480.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (47 samples, 0.43%)</title><rect x="480.3" y="627.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="483.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1,011 samples, 9.16%)</title><rect x="485.3" y="627.0" width="108.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="488.3" y="638.0">rocksdb::Writ..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.03%)</title><rect x="486.2" y="611.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="489.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (3 samples, 0.03%)</title><rect x="487.3" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="490.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (989 samples, 8.96%)</title><rect x="487.7" y="611.0" width="105.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="490.7" y="622.0">rocksdb::Writ..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (28 samples, 0.25%)</title><rect x="489.7" y="595.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="492.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.08%)</title><rect x="492.7" y="595.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="495.7" y="606.0"></text>
</g>
<g>
<title>__write (923 samples, 8.37%)</title><rect x="493.7" y="595.0" width="98.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="496.7" y="606.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (869 samples, 7.88%)</title><rect x="499.5" y="579.0" width="92.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.5" y="590.0">entry_SYSCA..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.03%)</title><rect x="499.6" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (865 samples, 7.84%)</title><rect x="499.9" y="563.0" width="92.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="502.9" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (846 samples, 7.67%)</title><rect x="501.7" y="547.0" width="90.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="504.7" y="558.0">__x64_sys_..</text>
</g>
<g>
<title>__f_unlock_pos (3 samples, 0.03%)</title><rect x="501.7" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="504.7" y="542.0"></text>
</g>
<g>
<title>ksys_write (842 samples, 7.63%)</title><rect x="502.1" y="531.0" width="90.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="505.1" y="542.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (18 samples, 0.16%)</title><rect x="502.7" y="515.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.7" y="526.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.14%)</title><rect x="502.7" y="499.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="505.7" y="510.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.14%)</title><rect x="502.7" y="483.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="505.7" y="494.0"></text>
</g>
<g>
<title>mutex_unlock (14 samples, 0.13%)</title><rect x="505.1" y="515.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="508.1" y="526.0"></text>
</g>
<g>
<title>vfs_write (800 samples, 7.25%)</title><rect x="506.6" y="515.0" width="85.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.6" y="526.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (5 samples, 0.05%)</title><rect x="507.9" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.9" y="510.0"></text>
</g>
<g>
<title>__vfs_write (750 samples, 6.80%)</title><rect x="508.4" y="499.0" width="80.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.4" y="510.0">__vfs_write</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (12 samples, 0.11%)</title><rect x="508.4" y="483.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="511.4" y="494.0"></text>
</g>
<g>
<title>ext4_file_write_iter (4 samples, 0.04%)</title><rect x="509.7" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="512.7" y="494.0"></text>
</g>
<g>
<title>new_sync_write (734 samples, 6.65%)</title><rect x="510.2" y="483.0" width="78.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="513.2" y="494.0">new_sync_..</text>
</g>
<g>
<title>ext4_file_write_iter (720 samples, 6.53%)</title><rect x="510.9" y="467.0" width="77.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.9" y="478.0">ext4_file..</text>
</g>
<g>
<title>__generic_file_write_iter (689 samples, 6.25%)</title><rect x="511.6" y="451.0" width="73.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.6" y="462.0">__generi..</text>
</g>
<g>
<title>__x86_indirect_thunk_r11 (9 samples, 0.08%)</title><rect x="512.5" y="435.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="515.5" y="446.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.05%)</title><rect x="513.5" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="516.5" y="446.0"></text>
</g>
<g>
<title>file_update_time (55 samples, 0.50%)</title><rect x="514.8" y="435.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="517.8" y="446.0"></text>
</g>
<g>
<title>generic_update_time (48 samples, 0.44%)</title><rect x="515.3" y="419.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.3" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (44 samples, 0.40%)</title><rect x="515.3" y="403.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="518.3" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode (44 samples, 0.40%)</title><rect x="515.3" y="387.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.3" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (8 samples, 0.07%)</title><rect x="515.3" y="371.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.3" y="382.0"></text>
</g>
<g>
<title>jbd2__journal_start (8 samples, 0.07%)</title><rect x="515.3" y="355.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.03%)</title><rect x="515.5" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.5" y="350.0"></text>
</g>
<g>
<title>start_this_handle (3 samples, 0.03%)</title><rect x="515.8" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="518.8" y="350.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.05%)</title><rect x="516.1" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="519.1" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.04%)</title><rect x="516.2" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="519.2" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (31 samples, 0.28%)</title><rect x="516.7" y="371.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.7" y="382.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (20 samples, 0.18%)</title><rect x="516.7" y="355.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="519.7" y="366.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.03%)</title><rect x="516.9" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="519.9" y="350.0"></text>
</g>
<g>
<title>ext4_do_update_inode (15 samples, 0.14%)</title><rect x="517.2" y="339.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="520.2" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (11 samples, 0.10%)</title><rect x="517.5" y="323.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="520.5" y="334.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (11 samples, 0.10%)</title><rect x="517.5" y="307.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="520.5" y="318.0"></text>
</g>
<g>
<title>crypto_shash_update (7 samples, 0.06%)</title><rect x="518.0" y="291.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.0" y="302.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (7 samples, 0.06%)</title><rect x="518.0" y="275.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="521.0" y="286.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (11 samples, 0.10%)</title><rect x="518.8" y="355.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="521.8" y="366.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (8 samples, 0.07%)</title><rect x="518.9" y="339.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="521.9" y="350.0"></text>
</g>
<g>
<title>__getblk_gfp (6 samples, 0.05%)</title><rect x="518.9" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.9" y="334.0"></text>
</g>
<g>
<title>__find_get_block (5 samples, 0.05%)</title><rect x="519.0" y="307.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="522.0" y="318.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="520.0" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.0" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (601 samples, 5.45%)</title><rect x="520.6" y="435.0" width="64.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="523.6" y="446.0">generic..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.03%)</title><rect x="520.8" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="523.8" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (194 samples, 1.76%)</title><rect x="521.3" y="419.0" width="20.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="524.3" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (99 samples, 0.90%)</title><rect x="522.3" y="403.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.3" y="414.0"></text>
</g>
<g>
<title>ext4_journal_check_start (8 samples, 0.07%)</title><rect x="522.5" y="387.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="525.5" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (90 samples, 0.82%)</title><rect x="523.3" y="387.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.3" y="398.0"></text>
</g>
<g>
<title>_raw_read_lock (17 samples, 0.15%)</title><rect x="523.4" y="371.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.4" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc (29 samples, 0.26%)</title><rect x="525.2" y="371.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.2" y="382.0"></text>
</g>
<g>
<title>memset (3 samples, 0.03%)</title><rect x="528.3" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="531.3" y="382.0"></text>
</g>
<g>
<title>start_this_handle (40 samples, 0.36%)</title><rect x="528.7" y="371.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="531.7" y="382.0"></text>
</g>
<g>
<title>add_transaction_credits (12 samples, 0.11%)</title><rect x="531.7" y="355.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="534.7" y="366.0"></text>
</g>
<g>
<title>ext4_block_write_begin (12 samples, 0.11%)</title><rect x="532.9" y="403.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.9" y="414.0"></text>
</g>
<g>
<title>ext4_nonda_switch (5 samples, 0.05%)</title><rect x="534.2" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="537.2" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (64 samples, 0.58%)</title><rect x="534.8" y="403.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="537.8" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (62 samples, 0.56%)</title><rect x="535.0" y="387.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="538.0" y="398.0"></text>
</g>
<g>
<title>__page_cache_alloc (7 samples, 0.06%)</title><rect x="536.8" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="539.8" y="382.0"></text>
</g>
<g>
<title>alloc_pages_current (7 samples, 0.06%)</title><rect x="536.8" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="539.8" y="366.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (7 samples, 0.06%)</title><rect x="536.8" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="539.8" y="350.0"></text>
</g>
<g>
<title>get_page_from_freelist (7 samples, 0.06%)</title><rect x="536.8" y="323.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="539.8" y="334.0"></text>
</g>
<g>
<title>clear_page_rep (6 samples, 0.05%)</title><rect x="536.8" y="307.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="539.8" y="318.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (3 samples, 0.03%)</title><rect x="537.7" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.7" y="382.0"></text>
</g>
<g>
<title>find_get_entry (32 samples, 0.29%)</title><rect x="538.1" y="371.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="541.1" y="382.0"></text>
</g>
<g>
<title>xas_load (10 samples, 0.09%)</title><rect x="539.9" y="355.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.9" y="366.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.05%)</title><rect x="541.0" y="355.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="544.0" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end (360 samples, 3.26%)</title><rect x="542.0" y="419.0" width="38.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="545.0" y="430.0">ext..</text>
</g>
<g>
<title>__ext4_journal_stop (51 samples, 0.46%)</title><rect x="542.7" y="403.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="545.7" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_stop (50 samples, 0.45%)</title><rect x="542.8" y="387.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="545.8" y="398.0"></text>
</g>
<g>
<title>__wake_up (22 samples, 0.20%)</title><rect x="544.1" y="371.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.1" y="382.0"></text>
</g>
<g>
<title>__wake_up_common_lock (22 samples, 0.20%)</title><rect x="544.1" y="355.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="547.1" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.13%)</title><rect x="544.2" y="339.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="547.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (7 samples, 0.06%)</title><rect x="545.7" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="548.7" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (16 samples, 0.15%)</title><rect x="546.4" y="371.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.4" y="382.0"></text>
</g>
<g>
<title>generic_write_end (298 samples, 2.70%)</title><rect x="548.2" y="403.0" width="31.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="551.2" y="414.0">ge..</text>
</g>
<g>
<title>__mark_inode_dirty (278 samples, 2.52%)</title><rect x="548.9" y="387.0" width="29.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.9" y="398.0">__..</text>
</g>
<g>
<title>ext4_dirty_inode (277 samples, 2.51%)</title><rect x="549.0" y="371.0" width="29.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.0" y="382.0">ex..</text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.05%)</title><rect x="549.0" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="552.0" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_stop (7 samples, 0.06%)</title><rect x="549.5" y="355.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="552.5" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.04%)</title><rect x="549.8" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="552.8" y="350.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (262 samples, 2.37%)</title><rect x="550.4" y="355.0" width="28.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="553.4" y="366.0">ex..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (197 samples, 1.79%)</title><rect x="550.6" y="339.0" width="21.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="553.6" y="350.0">e..</text>
</g>
<g>
<title>_raw_spin_lock (12 samples, 0.11%)</title><rect x="551.3" y="323.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="554.3" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (178 samples, 1.61%)</title><rect x="552.6" y="323.0" width="19.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="555.6" y="334.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (7 samples, 0.06%)</title><rect x="556.3" y="307.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="559.3" y="318.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.03%)</title><rect x="556.5" y="291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.5" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (134 samples, 1.21%)</title><rect x="557.2" y="307.0" width="14.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.2" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (126 samples, 1.14%)</title><rect x="558.1" y="291.0" width="13.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.1" y="302.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (24 samples, 0.22%)</title><rect x="558.5" y="275.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.5" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.04%)</title><rect x="561.1" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="564.1" y="286.0"></text>
</g>
<g>
<title>crypto_shash_update (94 samples, 0.85%)</title><rect x="561.5" y="275.0" width="10.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="564.5" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (93 samples, 0.84%)</title><rect x="561.6" y="259.0" width="9.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="564.6" y="270.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (63 samples, 0.57%)</title><rect x="571.7" y="339.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="574.7" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (48 samples, 0.44%)</title><rect x="571.8" y="323.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="574.8" y="334.0"></text>
</g>
<g>
<title>__getblk_gfp (39 samples, 0.35%)</title><rect x="572.4" y="307.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="575.4" y="318.0"></text>
</g>
<g>
<title>__find_get_block (36 samples, 0.33%)</title><rect x="572.6" y="291.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="575.6" y="302.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.05%)</title><rect x="575.8" y="275.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="578.8" y="286.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (7 samples, 0.06%)</title><rect x="576.9" y="323.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="579.9" y="334.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (6 samples, 0.05%)</title><rect x="576.9" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="579.9" y="318.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (5 samples, 0.05%)</title><rect x="577.0" y="291.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="580.0" y="302.0"></text>
</g>
<g>
<title>ext4_inode_table (5 samples, 0.05%)</title><rect x="577.8" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="580.8" y="334.0"></text>
</g>
<g>
<title>block_write_end (11 samples, 0.10%)</title><rect x="578.8" y="387.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="581.8" y="398.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (11 samples, 0.10%)</title><rect x="578.8" y="371.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="581.8" y="382.0"></text>
</g>
<g>
<title>mark_buffer_dirty (4 samples, 0.04%)</title><rect x="579.6" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.6" y="366.0"></text>
</g>
<g>
<title>unlock_page (4 samples, 0.04%)</title><rect x="580.1" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="583.1" y="414.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.03%)</title><rect x="580.6" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="583.6" y="430.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (21 samples, 0.19%)</title><rect x="581.0" y="419.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="584.0" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_string (15 samples, 0.14%)</title><rect x="581.6" y="403.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="584.6" y="414.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (15 samples, 0.14%)</title><rect x="583.2" y="419.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.2" y="430.0"></text>
</g>
<g>
<title>down_write_trylock (11 samples, 0.10%)</title><rect x="585.5" y="451.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="588.5" y="462.0"></text>
</g>
<g>
<title>ext4_write_checks (7 samples, 0.06%)</title><rect x="586.6" y="451.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="589.6" y="462.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (3 samples, 0.03%)</title><rect x="586.6" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="589.6" y="446.0"></text>
</g>
<g>
<title>generic_write_checks (4 samples, 0.04%)</title><rect x="587.0" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="590.0" y="446.0"></text>
</g>
<g>
<title>generic_write_checks (3 samples, 0.03%)</title><rect x="587.6" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.6" y="462.0"></text>
</g>
<g>
<title>up_write (7 samples, 0.06%)</title><rect x="587.9" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.9" y="478.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.04%)</title><rect x="588.9" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="591.9" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (27 samples, 0.24%)</title><rect x="589.3" y="499.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="592.3" y="510.0"></text>
</g>
<g>
<title>security_file_permission (20 samples, 0.18%)</title><rect x="590.1" y="483.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="593.1" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (11 samples, 0.10%)</title><rect x="590.9" y="467.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="593.9" y="478.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.09%)</title><rect x="591.0" y="451.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="594.0" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.04%)</title><rect x="591.7" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (8 samples, 0.07%)</title><rect x="592.5" y="595.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="595.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (83 samples, 0.75%)</title><rect x="593.9" y="627.0" width="8.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="596.9" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.06%)</title><rect x="594.3" y="611.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="597.3" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.05%)</title><rect x="595.1" y="611.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="598.1" y="622.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.03%)</title><rect x="595.7" y="611.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="598.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.04%)</title><rect x="596.0" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="599.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (33 samples, 0.30%)</title><rect x="596.5" y="611.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="599.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (14 samples, 0.13%)</title><rect x="600.0" y="611.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="603.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (12 samples, 0.11%)</title><rect x="601.5" y="611.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="604.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.03%)</title><rect x="602.9" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="605.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.03%)</title><rect x="603.6" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="606.6" y="670.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.03%)</title><rect x="604.0" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="607.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (5 samples, 0.05%)</title><rect x="604.4" y="675.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="607.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (35 samples, 0.32%)</title><rect x="604.9" y="675.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="607.9" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.04%)</title><rect x="605.7" y="659.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="608.7" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (24 samples, 0.22%)</title><rect x="606.1" y="659.0" width="2.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="609.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (4 samples, 0.04%)</title><rect x="609.2" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="612.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (5 samples, 0.05%)</title><rect x="609.6" y="675.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="612.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.06%)</title><rect x="610.2" y="675.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="613.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (827 samples, 7.50%)</title><rect x="610.9" y="675.0" width="88.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="613.9" y="686.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (812 samples, 7.36%)</title><rect x="612.2" y="659.0" width="86.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="615.2" y="670.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.09%)</title><rect x="612.2" y="643.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="615.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (5 samples, 0.05%)</title><rect x="613.5" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="616.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (795 samples, 7.21%)</title><rect x="614.0" y="643.0" width="85.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="617.0" y="654.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (773 samples, 7.01%)</title><rect x="615.7" y="627.0" width="82.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="618.7" y="638.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (6 samples, 0.05%)</title><rect x="616.2" y="611.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="619.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (8 samples, 0.07%)</title><rect x="616.8" y="611.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="619.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.03%)</title><rect x="617.6" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="620.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (752 samples, 6.82%)</title><rect x="618.0" y="611.0" width="80.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="621.0" y="622.0">rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (11 samples, 0.10%)</title><rect x="619.6" y="595.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="622.6" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.04%)</title><rect x="620.8" y="595.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="623.8" y="606.0"></text>
</g>
<g>
<title>memcpy (6 samples, 0.05%)</title><rect x="621.4" y="595.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="624.4" y="606.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.03%)</title><rect x="621.7" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="624.7" y="590.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.03%)</title><rect x="621.7" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="624.7" y="574.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.03%)</title><rect x="621.7" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="624.7" y="558.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.03%)</title><rect x="621.7" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (6 samples, 0.05%)</title><rect x="622.1" y="595.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="625.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (700 samples, 6.35%)</title><rect x="623.0" y="595.0" width="74.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="626.0" y="606.0">rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (38 samples, 0.34%)</title><rect x="624.7" y="579.0" width="4.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="627.7" y="590.0"></text>
</g>
<g>
<title>page_fault (8 samples, 0.07%)</title><rect x="625.8" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="628.8" y="574.0"></text>
</g>
<g>
<title>do_page_fault (8 samples, 0.07%)</title><rect x="625.8" y="547.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="628.8" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (8 samples, 0.07%)</title><rect x="625.8" y="531.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.8" y="542.0"></text>
</g>
<g>
<title>do_user_addr_fault (7 samples, 0.06%)</title><rect x="625.8" y="515.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="628.8" y="526.0"></text>
</g>
<g>
<title>handle_mm_fault (6 samples, 0.05%)</title><rect x="625.9" y="499.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="628.9" y="510.0"></text>
</g>
<g>
<title>__handle_mm_fault (4 samples, 0.04%)</title><rect x="626.1" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="629.1" y="494.0"></text>
</g>
<g>
<title>do_anonymous_page (4 samples, 0.04%)</title><rect x="626.1" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="629.1" y="478.0"></text>
</g>
<g>
<title>alloc_pages_vma (3 samples, 0.03%)</title><rect x="626.2" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="629.2" y="462.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (3 samples, 0.03%)</title><rect x="626.2" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="629.2" y="446.0"></text>
</g>
<g>
<title>get_page_from_freelist (3 samples, 0.03%)</title><rect x="626.2" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (18 samples, 0.16%)</title><rect x="626.6" y="563.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="629.6" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (606 samples, 5.49%)</title><rect x="628.8" y="579.0" width="64.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="631.8" y="590.0">bool ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (573 samples, 5.19%)</title><rect x="630.5" y="563.0" width="61.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="633.5" y="574.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (160 samples, 1.45%)</title><rect x="654.8" y="547.0" width="17.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="657.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (38 samples, 0.34%)</title><rect x="655.1" y="531.0" width="4.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="658.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (19 samples, 0.17%)</title><rect x="659.5" y="531.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="662.5" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.03%)</title><rect x="661.5" y="531.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="664.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (94 samples, 0.85%)</title><rect x="661.8" y="531.0" width="10.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="664.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (13 samples, 0.12%)</title><rect x="665.5" y="515.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="668.5" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (37 samples, 0.34%)</title><rect x="666.9" y="515.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="669.9" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.04%)</title><rect x="670.8" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="673.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.03%)</title><rect x="671.2" y="515.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="674.2" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (3 samples, 0.03%)</title><rect x="671.6" y="515.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="674.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (183 samples, 1.66%)</title><rect x="672.2" y="547.0" width="19.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="675.2" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.10%)</title><rect x="690.2" y="531.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="693.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (5 samples, 0.05%)</title><rect x="692.0" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="695.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.09%)</title><rect x="692.5" y="563.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="695.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (7 samples, 0.06%)</title><rect x="693.6" y="579.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="696.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (12 samples, 0.11%)</title><rect x="694.3" y="579.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="697.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (5 samples, 0.05%)</title><rect x="695.6" y="579.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="698.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (15 samples, 0.14%)</title><rect x="696.2" y="579.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="699.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (8 samples, 0.07%)</title><rect x="696.4" y="563.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="699.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (5 samples, 0.05%)</title><rect x="697.2" y="563.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="700.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.03%)</title><rect x="697.9" y="595.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="700.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.03%)</title><rect x="698.6" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="701.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (136 samples, 1.23%)</title><rect x="699.4" y="675.0" width="14.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="702.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (129 samples, 1.17%)</title><rect x="700.1" y="659.0" width="13.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="703.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (128 samples, 1.16%)</title><rect x="700.2" y="643.0" width="13.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="703.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (127 samples, 1.15%)</title><rect x="700.2" y="627.0" width="13.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="703.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (118 samples, 1.07%)</title><rect x="700.8" y="611.0" width="12.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="703.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (3 samples, 0.03%)</title><rect x="701.0" y="595.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="704.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.03%)</title><rect x="701.6" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="704.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (104 samples, 0.94%)</title><rect x="701.9" y="595.0" width="11.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="704.9" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (6 samples, 0.05%)</title><rect x="702.5" y="579.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="705.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.03%)</title><rect x="703.2" y="579.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="706.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (89 samples, 0.81%)</title><rect x="703.5" y="579.0" width="9.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="706.5" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (86 samples, 0.78%)</title><rect x="703.5" y="563.0" width="9.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="706.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (80 samples, 0.73%)</title><rect x="703.9" y="547.0" width="8.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="706.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (29 samples, 0.26%)</title><rect x="707.4" y="531.0" width="3.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="710.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (6 samples, 0.05%)</title><rect x="707.4" y="515.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="710.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (22 samples, 0.20%)</title><rect x="708.1" y="515.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="711.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16919602326730826146.so (4 samples, 0.04%)</title><rect x="708.9" y="499.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="711.9" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.08%)</title><rect x="709.3" y="499.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="712.3" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.03%)</title><rect x="710.5" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="713.5" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="710.5" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.5" y="526.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.03%)</title><rect x="710.5" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="713.5" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="710.5" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="713.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 0.14%)</title><rect x="710.8" y="531.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="713.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.03%)</title><rect x="712.7" y="563.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="715.7" y="574.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (4 samples, 0.04%)</title><rect x="713.4" y="611.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="716.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (3 samples, 0.03%)</title><rect x="713.9" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="716.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (105 samples, 0.95%)</title><rect x="714.3" y="675.0" width="11.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="717.3" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (23 samples, 0.21%)</title><rect x="722.6" y="659.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="725.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.15%)</title><rect x="723.3" y="643.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.15%)</title><rect x="723.3" y="627.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.06%)</title><rect x="724.3" y="611.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.3" y="622.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.05%)</title><rect x="724.4" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="727.4" y="606.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.04%)</title><rect x="724.5" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="727.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (32 samples, 0.29%)</title><rect x="725.7" y="675.0" width="3.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="728.7" y="686.0"></text>
</g>
<g>
<title>__sched_yield (4 samples, 0.04%)</title><rect x="725.8" y="659.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="728.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 0.24%)</title><rect x="726.2" y="659.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="729.2" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.06%)</title><rect x="728.0" y="643.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="731.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="728.5" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="731.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="728.5" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.03%)</title><rect x="728.5" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (8 samples, 0.07%)</title><rect x="729.1" y="675.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="732.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (4 samples, 0.04%)</title><rect x="730.0" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="733.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (10 samples, 0.09%)</title><rect x="730.4" y="675.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="733.4" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="730.4" y="659.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="733.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (4 samples, 0.04%)</title><rect x="730.7" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="733.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (3 samples, 0.03%)</title><rect x="731.1" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (22 samples, 0.20%)</title><rect x="731.5" y="675.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="734.5" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.04%)</title><rect x="733.0" y="659.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="736.0" y="670.0"></text>
</g>
<g>
<title>std::condition_variable::notify_one() (3 samples, 0.03%)</title><rect x="733.4" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="736.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (21 samples, 0.19%)</title><rect x="733.8" y="675.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="736.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (21 samples, 0.19%)</title><rect x="733.8" y="659.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="736.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (4 samples, 0.04%)</title><rect x="736.1" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (7 samples, 0.06%)</title><rect x="736.7" y="675.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="739.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.03%)</title><rect x="737.7" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="740.7" y="686.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (3 samples, 0.03%)</title><rect x="738.0" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="741.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (5 samples, 0.05%)</title><rect x="738.4" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="741.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (8 samples, 0.07%)</title><rect x="739.2" y="691.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="742.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (8 samples, 0.07%)</title><rect x="740.0" y="691.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="740.9" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (4 samples, 0.04%)</title><rect x="741.3" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="744.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (3 samples, 0.03%)</title><rect x="742.9" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="745.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (11 samples, 0.10%)</title><rect x="743.3" y="691.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="746.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.03%)</title><rect x="744.8" y="707.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="747.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (7 samples, 0.06%)</title><rect x="745.1" y="707.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="748.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 0.34%)</title><rect x="745.9" y="707.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="748.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (8 samples, 0.07%)</title><rect x="745.9" y="691.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="748.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (7 samples, 0.06%)</title><rect x="746.8" y="691.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="749.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.03%)</title><rect x="747.6" y="691.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="750.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.10%)</title><rect x="748.1" y="691.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="751.1" y="702.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (6 samples, 0.05%)</title><rect x="749.3" y="691.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="752.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (6 samples, 0.05%)</title><rect x="750.0" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="753.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (17 samples, 0.15%)</title><rect x="750.6" y="707.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="753.6" y="718.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (8 samples, 0.07%)</title><rect x="752.6" y="707.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.6" y="718.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (10 samples, 0.09%)</title><rect x="753.5" y="707.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="756.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (14 samples, 0.13%)</title><rect x="754.6" y="723.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="757.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (8 samples, 0.07%)</title><rect x="756.2" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="759.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (4 samples, 0.04%)</title><rect x="757.0" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="760.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (12 samples, 0.11%)</title><rect x="757.4" y="755.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="760.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.05%)</title><rect x="758.7" y="755.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="761.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 0.82%)</title><rect x="759.6" y="787.0" width="9.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="762.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (17 samples, 0.15%)</title><rect x="759.6" y="771.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="762.6" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (5 samples, 0.05%)</title><rect x="761.4" y="771.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="764.4" y="782.0"></text>
</g>
<g>
<title>__lll_lock_wait (9 samples, 0.08%)</title><rect x="762.2" y="771.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="765.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.06%)</title><rect x="762.4" y="755.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="765.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.06%)</title><rect x="762.4" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="765.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.06%)</title><rect x="762.4" y="723.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="765.4" y="734.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.06%)</title><rect x="762.4" y="707.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.4" y="718.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.06%)</title><rect x="762.4" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="765.4" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.04%)</title><rect x="762.5" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="765.5" y="686.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.04%)</title><rect x="762.5" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="765.5" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.03%)</title><rect x="762.6" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="765.6" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.03%)</title><rect x="762.6" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.6" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (47 samples, 0.43%)</title><rect x="763.2" y="771.0" width="5.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="766.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.32%)</title><rect x="764.5" y="755.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="767.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.30%)</title><rect x="764.7" y="739.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="767.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.26%)</title><rect x="765.1" y="723.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="768.1" y="734.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.24%)</title><rect x="765.3" y="707.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="768.3" y="718.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 0.22%)</title><rect x="765.6" y="691.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="768.6" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.11%)</title><rect x="765.9" y="675.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="768.9" y="686.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.10%)</title><rect x="766.0" y="659.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="769.0" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (10 samples, 0.09%)</title><rect x="766.1" y="643.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="769.1" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.06%)</title><rect x="766.4" y="627.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="769.4" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.07%)</title><rect x="767.2" y="675.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.2" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.03%)</title><rect x="768.4" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="771.4" y="782.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (4 samples, 0.04%)</title><rect x="768.9" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="771.9" y="782.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.03%)</title><rect x="769.0" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="772.0" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (21 samples, 0.19%)</title><rect x="769.3" y="787.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="772.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (281 samples, 2.55%)</title><rect x="771.6" y="787.0" width="30.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="774.6" y="798.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (241 samples, 2.18%)</title><rect x="775.8" y="771.0" width="25.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="778.8" y="782.0">e..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.03%)</title><rect x="775.8" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="778.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (238 samples, 2.16%)</title><rect x="776.2" y="755.0" width="25.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="779.2" y="766.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (229 samples, 2.08%)</title><rect x="777.1" y="739.0" width="24.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="780.1" y="750.0">_..</text>
</g>
<g>
<title>do_futex (228 samples, 2.07%)</title><rect x="777.2" y="723.0" width="24.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="780.2" y="734.0">d..</text>
</g>
<g>
<title>_raw_spin_lock (9 samples, 0.08%)</title><rect x="777.2" y="707.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="780.2" y="718.0"></text>
</g>
<g>
<title>futex_wake (219 samples, 1.99%)</title><rect x="778.2" y="707.0" width="23.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="781.2" y="718.0">f..</text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.05%)</title><rect x="779.6" y="691.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="782.6" y="702.0"></text>
</g>
<g>
<title>wake_q_add_safe (9 samples, 0.08%)</title><rect x="780.2" y="691.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="783.2" y="702.0"></text>
</g>
<g>
<title>wake_up_q (191 samples, 1.73%)</title><rect x="781.2" y="691.0" width="20.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="784.2" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (190 samples, 1.72%)</title><rect x="781.3" y="675.0" width="20.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.3" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (180 samples, 1.63%)</title><rect x="781.3" y="659.0" width="19.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="784.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (10 samples, 0.09%)</title><rect x="800.6" y="659.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="803.6" y="670.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (5 samples, 0.05%)</title><rect x="801.9" y="787.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="804.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (70 samples, 0.63%)</title><rect x="802.7" y="819.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.7" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (45 samples, 0.41%)</title><rect x="804.2" y="803.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.41%)</title><rect x="804.2" y="787.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (45 samples, 0.41%)</title><rect x="804.2" y="771.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.2" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (45 samples, 0.41%)</title><rect x="804.2" y="755.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (38 samples, 0.34%)</title><rect x="804.2" y="739.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (38 samples, 0.34%)</title><rect x="804.2" y="723.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.2" y="734.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.07%)</title><rect x="806.0" y="707.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="809.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="806.9" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.9" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.07%)</title><rect x="807.4" y="707.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="810.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.07%)</title><rect x="807.4" y="691.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="810.4" y="702.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.07%)</title><rect x="807.4" y="675.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="810.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.06%)</title><rect x="808.3" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.06%)</title><rect x="808.3" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.05%)</title><rect x="808.3" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.3" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.08%)</title><rect x="809.1" y="803.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="812.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/TimestampRecord.toBytes (20 samples, 0.18%)</title><rect x="810.2" y="819.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.07%)</title><rect x="810.2" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="810.4" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="810.4" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="810.4" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.05%)</title><rect x="810.4" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.05%)</title><rect x="810.4" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.11%)</title><rect x="811.0" y="803.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="811.0" y="787.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="811.0" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.0" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="811.0" y="755.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="811.0" y="739.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="811.0" y="723.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.sendResponse (2,419 samples, 21.93%)</title><rect x="812.3" y="851.0" width="258.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.3" y="862.0">ru/mail/polis/service/manikhin/Rep..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (17 samples, 0.15%)</title><rect x="814.0" y="835.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="817.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,386 samples, 21.63%)</title><rect x="815.8" y="835.0" width="255.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.8" y="846.0">one/nio/http/HttpSession.sendRespo..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (49 samples, 0.44%)</title><rect x="819.6" y="819.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (49 samples, 0.44%)</title><rect x="819.6" y="803.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (49 samples, 0.44%)</title><rect x="819.6" y="787.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.6" y="798.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.05%)</title><rect x="821.7" y="771.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="824.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (23 samples, 0.21%)</title><rect x="822.4" y="771.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.4" y="782.0"></text>
</g>
<g>
<title>gettimeofday (21 samples, 0.19%)</title><rect x="822.6" y="755.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="825.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (18 samples, 0.16%)</title><rect x="822.9" y="739.0" width="1.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="825.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,269 samples, 20.57%)</title><rect x="824.8" y="819.0" width="242.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.8" y="830.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (90 samples, 0.82%)</title><rect x="825.6" y="803.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (52 samples, 0.47%)</title><rect x="829.6" y="787.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (52 samples, 0.47%)</title><rect x="829.6" y="771.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (52 samples, 0.47%)</title><rect x="829.6" y="755.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (13 samples, 0.12%)</title><rect x="833.8" y="739.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="836.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,172 samples, 19.69%)</title><rect x="835.2" y="803.0" width="232.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.2" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (2,172 samples, 19.69%)</title><rect x="835.2" y="787.0" width="232.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.2" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,168 samples, 19.65%)</title><rect x="835.6" y="771.0" width="231.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.6" y="782.0">one/nio/net/Session$ArrayQueueI..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,158 samples, 19.56%)</title><rect x="836.7" y="755.0" width="230.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.7" y="766.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (17 samples, 0.15%)</title><rect x="841.8" y="739.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="844.8" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (49 samples, 0.44%)</title><rect x="843.7" y="739.0" width="5.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="846.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.06%)</title><rect x="844.8" y="723.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="847.8" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.07%)</title><rect x="845.6" y="723.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="848.6" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (22 samples, 0.20%)</title><rect x="846.5" y="723.0" width="2.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="849.5" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.05%)</title><rect x="847.2" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="850.2" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (10 samples, 0.09%)</title><rect x="847.7" y="707.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="850.7" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.05%)</title><rect x="849.0" y="739.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="852.0" y="750.0"></text>
</g>
<g>
<title>send (2,038 samples, 18.47%)</title><rect x="849.5" y="739.0" width="218.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="852.5" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,001 samples, 18.14%)</title><rect x="853.5" y="723.0" width="214.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="856.5" y="734.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.03%)</title><rect x="853.5" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.5" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.07%)</title><rect x="853.8" y="707.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="856.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1,990 samples, 18.04%)</title><rect x="854.7" y="707.0" width="212.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="857.7" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,961 samples, 17.78%)</title><rect x="857.0" y="691.0" width="209.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="860.0" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,956 samples, 17.73%)</title><rect x="857.0" y="675.0" width="209.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="860.0" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (4 samples, 0.04%)</title><rect x="858.3" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="861.3" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (1,920 samples, 17.40%)</title><rect x="858.8" y="659.0" width="205.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="861.8" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="859.3" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.3" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,870 samples, 16.95%)</title><rect x="859.9" y="643.0" width="200.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.9" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.03%)</title><rect x="860.2" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="863.2" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,863 samples, 16.89%)</title><rect x="860.6" y="627.0" width="199.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.6" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (14 samples, 0.13%)</title><rect x="861.6" y="611.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="864.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (22 samples, 0.20%)</title><rect x="863.4" y="611.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="866.4" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.03%)</title><rect x="865.8" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="868.8" y="622.0"></text>
</g>
<g>
<title>release_sock (26 samples, 0.24%)</title><rect x="866.1" y="611.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="869.1" y="622.0"></text>
</g>
<g>
<title>__release_sock (20 samples, 0.18%)</title><rect x="866.3" y="595.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.3" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 0.17%)</title><rect x="866.4" y="579.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.4" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 0.17%)</title><rect x="866.4" y="563.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.4" y="574.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.05%)</title><rect x="866.8" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="869.8" y="558.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.05%)</title><rect x="866.8" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="869.8" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.05%)</title><rect x="866.8" y="515.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="869.8" y="526.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.04%)</title><rect x="866.9" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="869.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.04%)</title><rect x="866.9" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="869.9" y="494.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.05%)</title><rect x="867.3" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.3" y="558.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.04%)</title><rect x="867.3" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.3" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.03%)</title><rect x="867.4" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="870.4" y="526.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.03%)</title><rect x="867.9" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.9" y="558.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.03%)</title><rect x="867.9" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="870.9" y="542.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.04%)</title><rect x="869.2" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="872.2" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.05%)</title><rect x="869.7" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="872.7" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,769 samples, 16.04%)</title><rect x="870.3" y="611.0" width="189.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.3" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.07%)</title><rect x="872.0" y="595.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="875.0" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.07%)</title><rect x="872.0" y="579.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.0" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (21 samples, 0.19%)</title><rect x="872.9" y="595.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="875.9" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (15 samples, 0.14%)</title><rect x="873.1" y="579.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="876.1" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (4 samples, 0.04%)</title><rect x="874.7" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.7" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (12 samples, 0.11%)</title><rect x="875.2" y="595.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="878.2" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (10 samples, 0.09%)</title><rect x="875.4" y="579.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="878.4" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (167 samples, 1.51%)</title><rect x="876.5" y="595.0" width="17.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (164 samples, 1.49%)</title><rect x="876.8" y="579.0" width="17.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="879.8" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (85 samples, 0.77%)</title><rect x="878.2" y="563.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="881.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (45 samples, 0.41%)</title><rect x="878.5" y="547.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="881.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (18 samples, 0.16%)</title><rect x="880.1" y="531.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="883.1" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (9 samples, 0.08%)</title><rect x="882.3" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="885.3" y="542.0"></text>
</g>
<g>
<title>memset (35 samples, 0.32%)</title><rect x="883.6" y="547.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="886.6" y="558.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.04%)</title><rect x="887.3" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="890.3" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (32 samples, 0.29%)</title><rect x="887.8" y="563.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="890.8" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.07%)</title><rect x="890.2" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="893.2" y="558.0"></text>
</g>
<g>
<title>ksize (7 samples, 0.06%)</title><rect x="891.3" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="894.3" y="574.0"></text>
</g>
<g>
<title>__ksize (7 samples, 0.06%)</title><rect x="891.3" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="894.3" y="558.0"></text>
</g>
<g>
<title>memset (19 samples, 0.17%)</title><rect x="892.2" y="563.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.2" y="574.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.05%)</title><rect x="894.4" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="897.4" y="606.0"></text>
</g>
<g>
<title>tcp_push (1,519 samples, 13.77%)</title><rect x="894.9" y="595.0" width="162.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.9" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,518 samples, 13.76%)</title><rect x="894.9" y="579.0" width="162.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="897.9" y="590.0">__tcp_push_pending_fr..</text>
</g>
<g>
<title>ktime_get (5 samples, 0.05%)</title><rect x="894.9" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="897.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,510 samples, 13.69%)</title><rect x="895.7" y="563.0" width="161.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="898.7" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.03%)</title><rect x="897.5" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.5" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1,376 samples, 12.47%)</title><rect x="897.8" y="547.0" width="147.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="900.8" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (1,333 samples, 12.08%)</title><rect x="900.1" y="531.0" width="142.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.1" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (1,330 samples, 12.06%)</title><rect x="900.2" y="515.0" width="142.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="903.2" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (13 samples, 0.12%)</title><rect x="900.8" y="499.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="903.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (1,310 samples, 11.87%)</title><rect x="902.2" y="499.0" width="140.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="905.2" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.07%)</title><rect x="902.5" y="483.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.5" y="494.0"></text>
</g>
<g>
<title>ip_output (1,299 samples, 11.77%)</title><rect x="903.3" y="483.0" width="139.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="906.3" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (1,291 samples, 11.70%)</title><rect x="904.2" y="467.0" width="138.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="907.2" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.07%)</title><rect x="904.9" y="451.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.9" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (1,265 samples, 11.47%)</title><rect x="905.8" y="451.0" width="135.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.8" y="462.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (1,260 samples, 11.42%)</title><rect x="906.3" y="435.0" width="134.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="909.3" y="446.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (1,137 samples, 10.31%)</title><rect x="908.6" y="419.0" width="121.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="911.6" y="430.0">__local_bh_enab..</text>
</g>
<g>
<title>do_softirq.part.0 (1,129 samples, 10.23%)</title><rect x="908.9" y="403.0" width="120.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="911.9" y="414.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (1,096 samples, 9.93%)</title><rect x="912.1" y="387.0" width="117.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="915.1" y="398.0">do_softirq_own..</text>
</g>
<g>
<title>__softirqentry_text_start (1,093 samples, 9.91%)</title><rect x="912.1" y="371.0" width="116.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="915.1" y="382.0">__softirqentry..</text>
</g>
<g>
<title>__kfree_skb_flush (5 samples, 0.05%)</title><rect x="914.7" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="917.7" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1,052 samples, 9.54%)</title><rect x="915.4" y="355.0" width="112.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.4" y="366.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (1,040 samples, 9.43%)</title><rect x="916.7" y="339.0" width="111.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="919.7" y="350.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (988 samples, 8.96%)</title><rect x="922.3" y="323.0" width="105.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="925.3" y="334.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (986 samples, 8.94%)</title><rect x="922.4" y="307.0" width="105.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="925.4" y="318.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.12%)</title><rect x="922.6" y="291.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="925.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv (969 samples, 8.78%)</title><rect x="924.0" y="291.0" width="103.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="927.0" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.07%)</title><rect x="924.1" y="275.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.04%)</title><rect x="925.2" y="275.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="928.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (954 samples, 8.65%)</title><rect x="925.6" y="275.0" width="102.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="928.6" y="286.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (946 samples, 8.58%)</title><rect x="926.0" y="259.0" width="101.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="929.0" y="270.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (944 samples, 8.56%)</title><rect x="926.1" y="243.0" width="101.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="929.1" y="254.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (942 samples, 8.54%)</title><rect x="926.1" y="227.0" width="100.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="929.1" y="238.0">ip_protocol_..</text>
</g>
<g>
<title>_raw_spin_lock (13 samples, 0.12%)</title><rect x="926.2" y="211.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.2" y="222.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.03%)</title><rect x="927.7" y="211.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="930.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (923 samples, 8.37%)</title><rect x="928.2" y="211.0" width="98.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.2" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (23 samples, 0.21%)</title><rect x="929.7" y="195.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="932.7" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.05%)</title><rect x="932.1" y="195.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="935.1" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (28 samples, 0.25%)</title><rect x="933.0" y="195.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="936.0" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (20 samples, 0.18%)</title><rect x="933.4" y="179.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.4" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.03%)</title><rect x="935.6" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="938.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (848 samples, 7.69%)</title><rect x="936.0" y="195.0" width="90.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="939.0" y="206.0">tcp_v4_do_..</text>
</g>
<g>
<title>tcp_check_space (15 samples, 0.14%)</title><rect x="936.4" y="179.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="939.4" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (826 samples, 7.49%)</title><rect x="938.3" y="179.0" width="88.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.3" y="190.0">tcp_rcv_es..</text>
</g>
<g>
<title>__tcp_ack_snd_check (42 samples, 0.38%)</title><rect x="939.2" y="163.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="942.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (40 samples, 0.36%)</title><rect x="939.4" y="147.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.4" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (38 samples, 0.34%)</title><rect x="939.6" y="131.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (36 samples, 0.33%)</title><rect x="939.8" y="115.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="942.8" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 0.26%)</title><rect x="939.8" y="99.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="942.8" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (7 samples, 0.06%)</title><rect x="942.9" y="99.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (7 samples, 0.06%)</title><rect x="942.9" y="83.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="945.9" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (15 samples, 0.14%)</title><rect x="943.7" y="163.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="946.7" y="174.0"></text>
</g>
<g>
<title>tcp_ack (143 samples, 1.30%)</title><rect x="945.8" y="163.0" width="15.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.8" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.08%)</title><rect x="947.4" y="147.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="950.4" y="158.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.03%)</title><rect x="948.8" y="147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.8" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (105 samples, 0.95%)</title><rect x="949.4" y="147.0" width="11.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.4" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (76 samples, 0.69%)</title><rect x="951.4" y="131.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="954.4" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (22 samples, 0.20%)</title><rect x="951.5" y="115.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="954.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (22 samples, 0.20%)</title><rect x="951.5" y="99.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="954.5" y="110.0"></text>
</g>
<g>
<title>__slab_free (14 samples, 0.13%)</title><rect x="952.3" y="83.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="955.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (52 samples, 0.47%)</title><rect x="953.9" y="115.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="956.9" y="126.0"></text>
</g>
<g>
<title>skb_release_data (50 samples, 0.45%)</title><rect x="954.0" y="99.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.0" y="110.0"></text>
</g>
<g>
<title>skb_free_head (29 samples, 0.26%)</title><rect x="956.3" y="83.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.3" y="94.0"></text>
</g>
<g>
<title>kfree (29 samples, 0.26%)</title><rect x="956.3" y="67.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="959.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (27 samples, 0.24%)</title><rect x="956.5" y="51.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="959.5" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (5 samples, 0.05%)</title><rect x="958.9" y="35.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="961.9" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (10 samples, 0.09%)</title><rect x="959.5" y="131.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="962.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.04%)</title><rect x="961.1" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="964.1" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (582 samples, 5.28%)</title><rect x="961.6" y="163.0" width="62.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.6" y="174.0">tcp_da..</text>
</g>
<g>
<title>sock_def_readable (582 samples, 5.28%)</title><rect x="961.6" y="147.0" width="62.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="964.6" y="158.0">sock_d..</text>
</g>
<g>
<title>__wake_up_sync_key (576 samples, 5.22%)</title><rect x="962.3" y="131.0" width="61.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="965.3" y="142.0">__wake..</text>
</g>
<g>
<title>__wake_up_common_lock (576 samples, 5.22%)</title><rect x="962.3" y="115.0" width="61.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="965.3" y="126.0">__wake..</text>
</g>
<g>
<title>__lock_text_start (570 samples, 5.17%)</title><rect x="962.4" y="99.0" width="61.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="965.4" y="110.0">__lock..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (5 samples, 0.05%)</title><rect x="1023.4" y="99.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1026.4" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (10 samples, 0.09%)</title><rect x="1023.9" y="163.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.9" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.08%)</title><rect x="1025.0" y="163.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1028.0" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.05%)</title><rect x="1025.0" y="147.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1028.0" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.04%)</title><rect x="1026.0" y="163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.0" y="174.0"></text>
</g>
<g>
<title>run_rebalance_domains (5 samples, 0.05%)</title><rect x="1028.4" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1031.4" y="366.0"></text>
</g>
<g>
<title>update_blocked_averages (5 samples, 0.05%)</title><rect x="1028.4" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1031.4" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.05%)</title><rect x="1028.4" y="323.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1031.4" y="334.0"></text>
</g>
<g>
<title>ret_from_intr (3 samples, 0.03%)</title><rect x="1029.3" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1032.3" y="398.0"></text>
</g>
<g>
<title>do_IRQ (3 samples, 0.03%)</title><rect x="1029.3" y="371.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1032.3" y="382.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.03%)</title><rect x="1029.3" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1032.3" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="1029.3" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.03%)</title><rect x="1029.3" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.3" y="334.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.03%)</title><rect x="1029.3" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1032.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.03%)</title><rect x="1029.3" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1032.3" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.03%)</title><rect x="1029.3" y="275.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1032.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.03%)</title><rect x="1029.3" y="259.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.03%)</title><rect x="1029.3" y="243.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1032.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.03%)</title><rect x="1029.3" y="227.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1032.3" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="1029.3" y="211.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1032.3" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="1029.3" y="195.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="1029.3" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1032.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="1029.3" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="1029.3" y="147.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1032.3" y="158.0"></text>
</g>
<g>
<title>ret_from_intr (5 samples, 0.05%)</title><rect x="1029.7" y="403.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1032.7" y="414.0"></text>
</g>
<g>
<title>do_IRQ (5 samples, 0.05%)</title><rect x="1029.7" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1032.7" y="398.0"></text>
</g>
<g>
<title>irq_exit (5 samples, 0.05%)</title><rect x="1029.7" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1032.7" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.05%)</title><rect x="1029.7" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1032.7" y="366.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.04%)</title><rect x="1029.8" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1032.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.04%)</title><rect x="1029.8" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1032.8" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.04%)</title><rect x="1029.8" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1032.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.04%)</title><rect x="1029.8" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.04%)</title><rect x="1029.8" y="275.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1032.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.04%)</title><rect x="1029.8" y="259.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1032.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.04%)</title><rect x="1029.8" y="243.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1032.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.04%)</title><rect x="1029.8" y="227.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1032.8" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.04%)</title><rect x="1029.8" y="211.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1032.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.04%)</title><rect x="1029.8" y="195.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.04%)</title><rect x="1029.8" y="179.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1032.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="1029.9" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1032.9" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (99 samples, 0.90%)</title><rect x="1030.2" y="419.0" width="10.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1033.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (93 samples, 0.84%)</title><rect x="1030.2" y="403.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1033.2" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (12 samples, 0.11%)</title><rect x="1034.1" y="387.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1037.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (36 samples, 0.33%)</title><rect x="1035.3" y="387.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1038.3" y="398.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="1035.4" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1038.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (29 samples, 0.26%)</title><rect x="1035.9" y="371.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.9" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.04%)</title><rect x="1036.6" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1039.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.10%)</title><rect x="1037.0" y="355.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1040.0" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.09%)</title><rect x="1037.2" y="339.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1040.2" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.08%)</title><rect x="1037.3" y="323.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1040.3" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="1038.6" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.07%)</title><rect x="1039.3" y="387.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1042.3" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="1040.1" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.03%)</title><rect x="1040.5" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.5" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.03%)</title><rect x="1040.8" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1043.8" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.08%)</title><rect x="1041.1" y="451.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.1" y="462.0"></text>
</g>
<g>
<title>skb_clone (15 samples, 0.14%)</title><rect x="1042.7" y="531.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1045.7" y="542.0"></text>
</g>
<g>
<title>__skb_clone (13 samples, 0.12%)</title><rect x="1042.9" y="515.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1045.9" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.05%)</title><rect x="1043.8" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1046.8" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.03%)</title><rect x="1044.5" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.5" y="542.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (50 samples, 0.45%)</title><rect x="1045.2" y="547.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1048.2" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.03%)</title><rect x="1050.6" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1053.6" y="558.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.04%)</title><rect x="1050.9" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1053.9" y="558.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.05%)</title><rect x="1051.4" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1054.4" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (36 samples, 0.33%)</title><rect x="1052.2" y="547.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1055.2" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (27 samples, 0.24%)</title><rect x="1053.2" y="531.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1056.2" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (26 samples, 0.24%)</title><rect x="1053.3" y="515.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1056.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (26 samples, 0.24%)</title><rect x="1053.3" y="499.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1056.3" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.19%)</title><rect x="1053.6" y="483.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1056.6" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.05%)</title><rect x="1056.5" y="547.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1059.5" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="1056.8" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1059.8" y="542.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="1056.8" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1059.8" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (18 samples, 0.16%)</title><rect x="1057.6" y="595.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1060.6" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="1057.6" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1060.6" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.11%)</title><rect x="1058.2" y="579.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.2" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.04%)</title><rect x="1059.1" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1062.1" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (38 samples, 0.34%)</title><rect x="1060.0" y="643.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1063.0" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (31 samples, 0.28%)</title><rect x="1060.8" y="627.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1063.8" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (30 samples, 0.27%)</title><rect x="1060.9" y="611.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1063.9" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (24 samples, 0.22%)</title><rect x="1061.4" y="595.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.4" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (10 samples, 0.09%)</title><rect x="1062.8" y="579.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1065.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (19 samples, 0.17%)</title><rect x="1064.2" y="659.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.2" y="670.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.13%)</title><rect x="1064.4" y="643.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.4" y="654.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.13%)</title><rect x="1064.4" y="627.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.4" y="638.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.13%)</title><rect x="1064.4" y="611.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1065.9" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1068.9" y="654.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.04%)</title><rect x="1066.4" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1069.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.06%)</title><rect x="1066.8" y="691.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1069.8" y="702.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.05%)</title><rect x="1067.0" y="675.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1070.0" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.05%)</title><rect x="1067.0" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.0" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.05%)</title><rect x="1067.0" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (33 samples, 0.30%)</title><rect x="1067.5" y="819.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (24 samples, 0.22%)</title><rect x="1068.3" y="803.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (24 samples, 0.22%)</title><rect x="1068.3" y="787.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.3" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.08%)</title><rect x="1069.9" y="771.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1072.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Topology.getReplicas (39 samples, 0.35%)</title><rect x="1071.1" y="883.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (19 samples, 0.17%)</title><rect x="1071.3" y="867.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.3" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (9 samples, 0.08%)</title><rect x="1072.0" y="851.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1075.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/Replicas.replicaFactor (3 samples, 0.03%)</title><rect x="1073.0" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.add (15 samples, 0.14%)</title><rect x="1073.3" y="867.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.3" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (15 samples, 0.14%)</title><rect x="1073.3" y="851.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.13%)</title><rect x="1073.4" y="835.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (8 samples, 0.07%)</title><rect x="1073.8" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ReplicasRequests.handleMultiRequest (3 samples, 0.03%)</title><rect x="1074.9" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (95 samples, 0.86%)</title><rect x="1075.2" y="915.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.2" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (95 samples, 0.86%)</title><rect x="1075.2" y="899.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1078.2" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (77 samples, 0.70%)</title><rect x="1075.2" y="883.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.2" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (37 samples, 0.34%)</title><rect x="1079.5" y="867.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1082.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.16%)</title><rect x="1083.5" y="883.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (18 samples, 0.16%)</title><rect x="1083.5" y="867.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (18 samples, 0.16%)</title><rect x="1083.5" y="851.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.03%)</title><rect x="1085.4" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="1085.4" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1088.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="1085.4" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1088.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (73 samples, 0.66%)</title><rect x="1085.7" y="947.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.12%)</title><rect x="1086.1" y="931.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="1086.1" y="915.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.1" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.03%)</title><rect x="1086.1" y="899.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.1" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1086.1" y="883.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1089.1" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="1086.1" y="867.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.09%)</title><rect x="1086.5" y="915.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.09%)</title><rect x="1086.5" y="899.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.5" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.09%)</title><rect x="1086.5" y="883.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 0.35%)</title><rect x="1087.5" y="931.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.5" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.33%)</title><rect x="1087.9" y="915.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.9" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (17 samples, 0.15%)</title><rect x="1091.7" y="931.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (82 samples, 0.74%)</title><rect x="1093.5" y="947.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (59 samples, 0.53%)</title><rect x="1096.0" y="931.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (59 samples, 0.53%)</title><rect x="1096.0" y="915.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.0" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (21 samples, 0.19%)</title><rect x="1099.9" y="899.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1102.9" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 0.90%)</title><rect x="1102.3" y="947.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1105.3" y="958.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (13 samples, 0.12%)</title><rect x="1103.0" y="931.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.0" y="942.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.06%)</title><rect x="1104.4" y="931.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1107.4" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 0.65%)</title><rect x="1105.2" y="931.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1108.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (654 samples, 5.93%)</title><rect x="1113.0" y="963.0" width="69.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1116.0" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (644 samples, 5.84%)</title><rect x="1114.1" y="947.0" width="68.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.1" y="958.0">one/nio..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (22 samples, 0.20%)</title><rect x="1116.4" y="931.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1119.4" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (60 samples, 0.54%)</title><rect x="1118.8" y="931.0" width="6.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1121.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.06%)</title><rect x="1119.5" y="915.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1122.5" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (41 samples, 0.37%)</title><rect x="1120.6" y="915.0" width="4.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1123.6" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.05%)</title><rect x="1122.0" y="899.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.0" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (14 samples, 0.13%)</title><rect x="1122.6" y="899.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.6" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.07%)</title><rect x="1124.1" y="899.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1127.1" y="910.0"></text>
</g>
<g>
<title>__recv (536 samples, 4.86%)</title><rect x="1125.2" y="931.0" width="57.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1128.2" y="942.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (497 samples, 4.51%)</title><rect x="1129.4" y="915.0" width="53.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.4" y="926.0">entry..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="1129.6" y="899.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (491 samples, 4.45%)</title><rect x="1130.0" y="899.0" width="52.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.0" y="910.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (473 samples, 4.29%)</title><rect x="1131.7" y="883.0" width="50.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1134.7" y="894.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (468 samples, 4.24%)</title><rect x="1131.7" y="867.0" width="50.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.7" y="878.0">__sys..</text>
</g>
<g>
<title>sock_recvmsg (429 samples, 3.89%)</title><rect x="1132.7" y="851.0" width="45.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.7" y="862.0">sock..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.05%)</title><rect x="1132.9" y="835.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1135.9" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.04%)</title><rect x="1133.4" y="835.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1136.4" y="846.0"></text>
</g>
<g>
<title>inet6_recvmsg (374 samples, 3.39%)</title><rect x="1133.8" y="835.0" width="40.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1136.8" y="846.0">ine..</text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.03%)</title><rect x="1134.2" y="819.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1137.2" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (368 samples, 3.34%)</title><rect x="1134.5" y="819.0" width="39.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1137.5" y="830.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (54 samples, 0.49%)</title><rect x="1136.5" y="803.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.05%)</title><rect x="1136.5" y="787.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1139.5" y="798.0"></text>
</g>
<g>
<title>skb_release_all (49 samples, 0.44%)</title><rect x="1137.1" y="787.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1140.1" y="798.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.15%)</title><rect x="1137.3" y="771.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1140.3" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (21 samples, 0.19%)</title><rect x="1139.1" y="771.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1142.1" y="782.0"></text>
</g>
<g>
<title>dst_release (21 samples, 0.19%)</title><rect x="1139.1" y="755.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1142.1" y="766.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.08%)</title><rect x="1141.3" y="771.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1144.3" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (32 samples, 0.29%)</title><rect x="1142.5" y="803.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1145.5" y="814.0"></text>
</g>
<g>
<title>lock_sock_nested (15 samples, 0.14%)</title><rect x="1146.1" y="803.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.1" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (13 samples, 0.12%)</title><rect x="1146.4" y="787.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1149.4" y="798.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (13 samples, 0.12%)</title><rect x="1146.4" y="771.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.4" y="782.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="1147.8" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.8" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (65 samples, 0.59%)</title><rect x="1148.1" y="803.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1151.1" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (63 samples, 0.57%)</title><rect x="1148.3" y="787.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.3" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (46 samples, 0.42%)</title><rect x="1150.1" y="771.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.1" y="782.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.08%)</title><rect x="1150.1" y="755.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.1" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.05%)</title><rect x="1150.4" y="739.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.4" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (32 samples, 0.29%)</title><rect x="1151.1" y="755.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.1" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_string (29 samples, 0.26%)</title><rect x="1151.4" y="739.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.4" y="750.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.03%)</title><rect x="1154.7" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.7" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (155 samples, 1.41%)</title><rect x="1155.0" y="803.0" width="16.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1158.0" y="814.0"></text>
</g>
<g>
<title>tcp_send_ack (149 samples, 1.35%)</title><rect x="1155.7" y="787.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.7" y="798.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (148 samples, 1.34%)</title><rect x="1155.8" y="771.0" width="15.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.8" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (20 samples, 0.18%)</title><rect x="1155.9" y="755.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1158.9" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.09%)</title><rect x="1156.1" y="739.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1159.1" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.09%)</title><rect x="1156.1" y="723.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.1" y="734.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.07%)</title><rect x="1156.2" y="707.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.2" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.05%)</title><rect x="1157.3" y="739.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.3" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (125 samples, 1.13%)</title><rect x="1158.0" y="755.0" width="13.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1161.0" y="766.0"></text>
</g>
<g>
<title>ip_queue_xmit (124 samples, 1.12%)</title><rect x="1158.1" y="739.0" width="13.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.1" y="750.0"></text>
</g>
<g>
<title>__ip_queue_xmit (124 samples, 1.12%)</title><rect x="1158.1" y="723.0" width="13.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1161.1" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="1158.4" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.4" y="718.0"></text>
</g>
<g>
<title>ip_local_out (116 samples, 1.05%)</title><rect x="1158.9" y="707.0" width="12.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.9" y="718.0"></text>
</g>
<g>
<title>ip_output (116 samples, 1.05%)</title><rect x="1158.9" y="691.0" width="12.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1161.9" y="702.0"></text>
</g>
<g>
<title>ip_finish_output (112 samples, 1.02%)</title><rect x="1159.3" y="675.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.3" y="686.0"></text>
</g>
<g>
<title>__ip_finish_output (111 samples, 1.01%)</title><rect x="1159.4" y="659.0" width="11.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1162.4" y="670.0"></text>
</g>
<g>
<title>ip_finish_output2 (110 samples, 1.00%)</title><rect x="1159.5" y="643.0" width="11.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1162.5" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (85 samples, 0.77%)</title><rect x="1159.8" y="627.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1162.8" y="638.0"></text>
</g>
<g>
<title>do_softirq.part.0 (84 samples, 0.76%)</title><rect x="1159.8" y="611.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1162.8" y="622.0"></text>
</g>
<g>
<title>do_softirq_own_stack (82 samples, 0.74%)</title><rect x="1160.1" y="595.0" width="8.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.1" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (81 samples, 0.73%)</title><rect x="1160.1" y="579.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.1" y="590.0"></text>
</g>
<g>
<title>net_rx_action (78 samples, 0.71%)</title><rect x="1160.4" y="563.0" width="8.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.4" y="574.0"></text>
</g>
<g>
<title>process_backlog (76 samples, 0.69%)</title><rect x="1160.6" y="547.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1163.6" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb (71 samples, 0.64%)</title><rect x="1161.1" y="531.0" width="7.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1164.1" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (71 samples, 0.64%)</title><rect x="1161.1" y="515.0" width="7.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1164.1" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.04%)</title><rect x="1161.1" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.1" y="510.0"></text>
</g>
<g>
<title>ip_rcv (67 samples, 0.61%)</title><rect x="1161.5" y="499.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1164.5" y="510.0"></text>
</g>
<g>
<title>ip_rcv_finish (66 samples, 0.60%)</title><rect x="1161.7" y="483.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1164.7" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (64 samples, 0.58%)</title><rect x="1161.8" y="467.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1164.8" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (63 samples, 0.57%)</title><rect x="1161.8" y="451.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1164.8" y="462.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (63 samples, 0.57%)</title><rect x="1161.8" y="435.0" width="6.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.8" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (60 samples, 0.54%)</title><rect x="1162.1" y="419.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1165.1" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.03%)</title><rect x="1162.7" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1165.7" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (48 samples, 0.44%)</title><rect x="1163.4" y="403.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1166.4" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (45 samples, 0.41%)</title><rect x="1163.7" y="387.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1166.7" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.08%)</title><rect x="1163.8" y="371.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1166.8" y="382.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.07%)</title><rect x="1163.9" y="355.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1166.9" y="366.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.03%)</title><rect x="1163.9" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.9" y="350.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.03%)</title><rect x="1163.9" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1166.9" y="334.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.03%)</title><rect x="1163.9" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.9" y="318.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.05%)</title><rect x="1164.2" y="339.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1167.2" y="350.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.05%)</title><rect x="1164.2" y="323.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1167.2" y="334.0"></text>
</g>
<g>
<title>tcp_ack (31 samples, 0.28%)</title><rect x="1164.9" y="371.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1167.9" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.19%)</title><rect x="1165.5" y="355.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1168.5" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.13%)</title><rect x="1165.8" y="339.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1168.8" y="350.0"></text>
</g>
<g>
<title>kfree_skbmem (8 samples, 0.07%)</title><rect x="1165.8" y="323.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.8" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.07%)</title><rect x="1165.8" y="307.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1168.8" y="318.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.05%)</title><rect x="1166.0" y="291.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.0" y="302.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.05%)</title><rect x="1166.7" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1169.7" y="334.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.05%)</title><rect x="1166.8" y="307.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1169.8" y="318.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.03%)</title><rect x="1167.0" y="291.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.0" y="302.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.03%)</title><rect x="1167.0" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.0" y="286.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="1167.0" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.0" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.18%)</title><rect x="1168.9" y="627.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.9" y="638.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.18%)</title><rect x="1168.9" y="611.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1171.9" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.11%)</title><rect x="1169.6" y="595.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1172.6" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.07%)</title><rect x="1170.0" y="579.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1173.0" y="590.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.05%)</title><rect x="1170.2" y="563.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.2" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.05%)</title><rect x="1170.3" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1173.3" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.05%)</title><rect x="1170.3" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1173.3" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (21 samples, 0.19%)</title><rect x="1171.6" y="803.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1174.6" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (19 samples, 0.17%)</title><rect x="1171.8" y="787.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1174.8" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (12 samples, 0.11%)</title><rect x="1172.0" y="771.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.0" y="782.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.05%)</title><rect x="1173.3" y="771.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1176.3" y="782.0"></text>
</g>
<g>
<title>security_socket_recvmsg (44 samples, 0.40%)</title><rect x="1173.8" y="835.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.8" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (40 samples, 0.36%)</title><rect x="1174.3" y="819.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1177.3" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (40 samples, 0.36%)</title><rect x="1174.3" y="803.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1177.3" y="814.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (32 samples, 0.29%)</title><rect x="1175.1" y="787.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1178.1" y="798.0"></text>
</g>
<g>
<title>aa_profile_af_perm (11 samples, 0.10%)</title><rect x="1177.3" y="771.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.3" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (30 samples, 0.27%)</title><rect x="1178.6" y="851.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.6" y="862.0"></text>
</g>
<g>
<title>__fdget (24 samples, 0.22%)</title><rect x="1178.7" y="835.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1181.7" y="846.0"></text>
</g>
<g>
<title>__fget_light (24 samples, 0.22%)</title><rect x="1178.7" y="819.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.7" y="830.0"></text>
</g>
<g>
<title>__fget (24 samples, 0.22%)</title><rect x="1178.7" y="803.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.7" y="814.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.05%)</title><rect x="1181.2" y="835.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.03%)</title><rect x="1182.5" y="931.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1185.5" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.04%)</title><rect x="1183.0" y="979.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.0" y="990.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="1183.0" y="963.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1186.0" y="974.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.04%)</title><rect x="1183.0" y="947.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1186.0" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.12%)</title><rect x="1183.6" y="995.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.6" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (12 samples, 0.11%)</title><rect x="1183.7" y="979.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1186.7" y="990.0"></text>
</g>
<g>
<title>[vdso] (11 samples, 0.10%)</title><rect x="1183.8" y="963.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1186.8" y="974.0"></text>
</g>
<g>
<title>start_thread (47 samples, 0.43%)</title><rect x="1185.0" y="1011.0" width="5.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.0" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (47 samples, 0.43%)</title><rect x="1185.0" y="995.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1188.0" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (47 samples, 0.43%)</title><rect x="1185.0" y="979.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.0" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (34 samples, 0.31%)</title><rect x="1185.1" y="963.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (34 samples, 0.31%)</title><rect x="1185.1" y="947.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (31 samples, 0.28%)</title><rect x="1185.1" y="931.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.1" y="942.0"></text>
</g>
<g>
<title>SpinPause (29 samples, 0.26%)</title><rect x="1185.3" y="915.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1188.3" y="926.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1188.4" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.4" y="942.0"></text>
</g>
<g>
<title>VMThread::run() (9 samples, 0.08%)</title><rect x="1188.8" y="963.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.8" y="974.0"></text>
</g>
<g>
<title>VMThread::loop() (9 samples, 0.08%)</title><rect x="1188.8" y="947.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.8" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.04%)</title><rect x="1188.8" y="931.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.8" y="942.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (3 samples, 0.03%)</title><rect x="1189.3" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.3" y="942.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.03%)</title><rect x="1189.3" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.3" y="926.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.03%)</title><rect x="1189.3" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.03%)</title><rect x="1189.3" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
</g>
</svg>
