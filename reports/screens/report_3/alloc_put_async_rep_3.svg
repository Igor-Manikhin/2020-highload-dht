<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="325"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="325"> </text>
<g id="frames">
<g>
<title>all (5,019 samples, 100.00%)</title><rect x="10.0" y="291.0" width="1180.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="302.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=4569] (654 samples, 13.03%)</title><rect x="10.0" y="275.0" width="153.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="286.0">[NIO Selector #0 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (654 samples, 13.03%)</title><rect x="10.0" y="259.0" width="153.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="270.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (39 samples, 0.78%)</title><rect x="10.0" y="243.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (39 samples, 0.78%)</title><rect x="10.0" y="227.0" width="9.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (615 samples, 12.25%)</title><rect x="19.2" y="243.0" width="144.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.2" y="254.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (615 samples, 12.25%)</title><rect x="19.2" y="227.0" width="144.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.2" y="238.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (615 samples, 12.25%)</title><rect x="19.2" y="211.0" width="144.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.2" y="222.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (183 samples, 3.65%)</title><rect x="19.2" y="195.0" width="43.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.2" y="206.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (183 samples, 3.65%)</title><rect x="19.2" y="179.0" width="43.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.2" y="190.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (123 samples, 2.45%)</title><rect x="19.2" y="163.0" width="28.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.2" y="174.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (56 samples, 1.12%)</title><rect x="19.2" y="147.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (56 samples, 1.12%)</title><rect x="19.2" y="131.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 1.12%)</title><rect x="19.2" y="115.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 1.12%)</title><rect x="19.2" y="99.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.56%)</title><rect x="19.2" y="83.0" width="6.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="22.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.56%)</title><rect x="25.8" y="83.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.8" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.56%)</title><rect x="25.8" y="67.0" width="6.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="28.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (67 samples, 1.33%)</title><rect x="32.3" y="147.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.56%)</title><rect x="32.3" y="131.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.56%)</title><rect x="32.3" y="115.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (28 samples, 0.56%)</title><rect x="32.3" y="99.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (28 samples, 0.56%)</title><rect x="32.3" y="83.0" width="6.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="35.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (39 samples, 0.78%)</title><rect x="38.9" y="131.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (38 samples, 0.76%)</title><rect x="38.9" y="115.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (17 samples, 0.34%)</title><rect x="38.9" y="99.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="41.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (21 samples, 0.42%)</title><rect x="42.9" y="99.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (21 samples, 0.42%)</title><rect x="42.9" y="83.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.9" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (21 samples, 0.42%)</title><rect x="42.9" y="67.0" width="5.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="45.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (60 samples, 1.20%)</title><rect x="48.1" y="163.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (60 samples, 1.20%)</title><rect x="48.1" y="147.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 1.20%)</title><rect x="48.1" y="131.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.58%)</title><rect x="48.1" y="115.0" width="6.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="51.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.62%)</title><rect x="54.9" y="115.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.9" y="126.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.62%)</title><rect x="54.9" y="99.0" width="7.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="57.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (187 samples, 3.73%)</title><rect x="62.2" y="195.0" width="44.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.2" y="206.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (25 samples, 0.50%)</title><rect x="62.2" y="179.0" width="5.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="65.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (63 samples, 1.26%)</title><rect x="68.1" y="179.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (63 samples, 1.26%)</title><rect x="68.1" y="163.0" width="14.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="71.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 1.97%)</title><rect x="82.9" y="179.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.9" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 1.97%)</title><rect x="82.9" y="163.0" width="23.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.9" y="174.0">o..</text>
</g>
<g>
<title>char[] (54 samples, 1.08%)</title><rect x="82.9" y="147.0" width="12.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="85.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.36%)</title><rect x="95.6" y="147.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="98.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.54%)</title><rect x="99.8" y="147.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.54%)</title><rect x="99.8" y="131.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.54%)</title><rect x="99.8" y="115.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.8" y="126.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.54%)</title><rect x="99.8" y="99.0" width="6.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="102.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (17 samples, 0.34%)</title><rect x="106.2" y="195.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.2" y="206.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.34%)</title><rect x="106.2" y="179.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="109.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (47 samples, 0.94%)</title><rect x="110.2" y="195.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.94%)</title><rect x="110.2" y="179.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.94%)</title><rect x="110.2" y="163.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.58%)</title><rect x="110.2" y="147.0" width="6.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="113.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.36%)</title><rect x="117.0" y="147.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.0" y="158.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.36%)</title><rect x="117.0" y="131.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="120.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (181 samples, 3.61%)</title><rect x="121.2" y="195.0" width="42.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.2" y="206.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (181 samples, 3.61%)</title><rect x="121.2" y="179.0" width="42.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.2" y="190.0">one/..</text>
</g>
<g>
<title>char[] (86 samples, 1.71%)</title><rect x="121.2" y="163.0" width="20.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="124.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.84%)</title><rect x="141.4" y="163.0" width="9.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="144.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 1.06%)</title><rect x="151.3" y="163.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 1.06%)</title><rect x="151.3" y="147.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 1.06%)</title><rect x="151.3" y="131.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.3" y="142.0"></text>
</g>
<g>
<title>byte[] (53 samples, 1.06%)</title><rect x="151.3" y="115.0" width="12.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="154.3" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4570] (611 samples, 12.17%)</title><rect x="163.8" y="275.0" width="143.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="166.8" y="286.0">[NIO Selector #1 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (611 samples, 12.17%)</title><rect x="163.8" y="259.0" width="143.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.8" y="270.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 0.62%)</title><rect x="163.8" y="243.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.8" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (31 samples, 0.62%)</title><rect x="163.8" y="227.0" width="7.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="166.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (580 samples, 11.56%)</title><rect x="171.0" y="243.0" width="136.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.0" y="254.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (580 samples, 11.56%)</title><rect x="171.0" y="227.0" width="136.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.0" y="238.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (580 samples, 11.56%)</title><rect x="171.0" y="211.0" width="136.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.0" y="222.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (147 samples, 2.93%)</title><rect x="171.0" y="195.0" width="34.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.0" y="206.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (147 samples, 2.93%)</title><rect x="171.0" y="179.0" width="34.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.0" y="190.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (113 samples, 2.25%)</title><rect x="171.0" y="163.0" width="26.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.0" y="174.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (52 samples, 1.04%)</title><rect x="171.0" y="147.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 1.04%)</title><rect x="171.0" y="131.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 1.04%)</title><rect x="171.0" y="115.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 1.04%)</title><rect x="171.0" y="99.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.48%)</title><rect x="171.0" y="83.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="174.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.56%)</title><rect x="176.7" y="83.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.7" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.56%)</title><rect x="176.7" y="67.0" width="6.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="179.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (61 samples, 1.22%)</title><rect x="183.3" y="147.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.40%)</title><rect x="183.3" y="131.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.40%)</title><rect x="183.3" y="115.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (20 samples, 0.40%)</title><rect x="183.3" y="99.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (20 samples, 0.40%)</title><rect x="183.3" y="83.0" width="4.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="186.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (41 samples, 0.82%)</title><rect x="188.0" y="131.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (39 samples, 0.78%)</title><rect x="188.0" y="115.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.0" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (24 samples, 0.48%)</title><rect x="188.0" y="99.0" width="5.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="191.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (15 samples, 0.30%)</title><rect x="193.6" y="99.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (15 samples, 0.30%)</title><rect x="193.6" y="83.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (15 samples, 0.30%)</title><rect x="193.6" y="67.0" width="3.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="196.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="197.1" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="197.1" y="99.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="197.1" y="83.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="197.1" y="67.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title><rect x="197.1" y="51.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.04%)</title><rect x="197.1" y="35.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="200.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.68%)</title><rect x="197.6" y="163.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.68%)</title><rect x="197.6" y="147.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.68%)</title><rect x="197.6" y="131.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.28%)</title><rect x="197.6" y="115.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="200.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.40%)</title><rect x="200.9" y="115.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.9" y="126.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.40%)</title><rect x="200.9" y="99.0" width="4.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="203.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (211 samples, 4.20%)</title><rect x="205.6" y="195.0" width="49.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.6" y="206.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.38%)</title><rect x="205.6" y="179.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="208.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (82 samples, 1.63%)</title><rect x="210.1" y="179.0" width="19.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (82 samples, 1.63%)</title><rect x="210.1" y="163.0" width="19.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="213.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 2.19%)</title><rect x="229.4" y="179.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.4" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 2.19%)</title><rect x="229.4" y="163.0" width="25.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.4" y="174.0">o..</text>
</g>
<g>
<title>char[] (60 samples, 1.20%)</title><rect x="229.4" y="147.0" width="14.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="232.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.50%)</title><rect x="243.5" y="147.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="246.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.50%)</title><rect x="249.3" y="147.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.50%)</title><rect x="249.3" y="131.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.50%)</title><rect x="249.3" y="115.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.3" y="126.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.50%)</title><rect x="249.3" y="99.0" width="5.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="252.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (22 samples, 0.44%)</title><rect x="255.2" y="195.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.2" y="206.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.44%)</title><rect x="255.2" y="179.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="258.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (26 samples, 0.52%)</title><rect x="260.4" y="195.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.52%)</title><rect x="260.4" y="179.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.52%)</title><rect x="260.4" y="163.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.26%)</title><rect x="260.4" y="147.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="263.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.26%)</title><rect x="263.4" y="147.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.4" y="158.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.26%)</title><rect x="263.4" y="131.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="266.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (174 samples, 3.47%)</title><rect x="266.5" y="195.0" width="40.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.5" y="206.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (174 samples, 3.47%)</title><rect x="266.5" y="179.0" width="40.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.5" y="190.0">one..</text>
</g>
<g>
<title>char[] (83 samples, 1.65%)</title><rect x="266.5" y="163.0" width="19.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="269.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.54%)</title><rect x="286.0" y="163.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="289.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (64 samples, 1.28%)</title><rect x="292.4" y="163.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (64 samples, 1.28%)</title><rect x="292.4" y="147.0" width="15.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (64 samples, 1.28%)</title><rect x="292.4" y="131.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.4" y="142.0"></text>
</g>
<g>
<title>byte[] (64 samples, 1.28%)</title><rect x="292.4" y="115.0" width="15.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="295.4" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4571] (649 samples, 12.93%)</title><rect x="307.4" y="275.0" width="152.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="310.4" y="286.0">[NIO Selector #2 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (649 samples, 12.93%)</title><rect x="307.4" y="259.0" width="152.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.4" y="270.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.72%)</title><rect x="307.4" y="243.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.4" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (36 samples, 0.72%)</title><rect x="307.4" y="227.0" width="8.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="310.4" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (613 samples, 12.21%)</title><rect x="315.9" y="243.0" width="144.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="254.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (613 samples, 12.21%)</title><rect x="315.9" y="227.0" width="144.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.9" y="238.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (613 samples, 12.21%)</title><rect x="315.9" y="211.0" width="144.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.9" y="222.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (153 samples, 3.05%)</title><rect x="315.9" y="195.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.9" y="206.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (153 samples, 3.05%)</title><rect x="315.9" y="179.0" width="35.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.9" y="190.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (115 samples, 2.29%)</title><rect x="315.9" y="163.0" width="27.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.9" y="174.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (39 samples, 0.78%)</title><rect x="315.9" y="147.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (39 samples, 0.78%)</title><rect x="315.9" y="131.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.78%)</title><rect x="315.9" y="115.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.78%)</title><rect x="315.9" y="99.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.32%)</title><rect x="315.9" y="83.0" width="3.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="318.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.46%)</title><rect x="319.6" y="83.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.6" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.46%)</title><rect x="319.6" y="67.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="322.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (76 samples, 1.51%)</title><rect x="325.0" y="147.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.0" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.62%)</title><rect x="325.0" y="131.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.62%)</title><rect x="325.0" y="115.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (31 samples, 0.62%)</title><rect x="325.0" y="99.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (31 samples, 0.62%)</title><rect x="325.0" y="83.0" width="7.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="328.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (45 samples, 0.90%)</title><rect x="332.3" y="131.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (45 samples, 0.90%)</title><rect x="332.3" y="115.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (24 samples, 0.48%)</title><rect x="332.3" y="99.0" width="5.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="335.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (21 samples, 0.42%)</title><rect x="338.0" y="99.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (21 samples, 0.42%)</title><rect x="338.0" y="83.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (21 samples, 0.42%)</title><rect x="338.0" y="67.0" width="4.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="341.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (38 samples, 0.76%)</title><rect x="342.9" y="163.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="345.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (38 samples, 0.76%)</title><rect x="342.9" y="147.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.76%)</title><rect x="342.9" y="131.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.34%)</title><rect x="342.9" y="115.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="345.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.42%)</title><rect x="346.9" y="115.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.9" y="126.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.42%)</title><rect x="346.9" y="99.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="349.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (182 samples, 3.63%)</title><rect x="351.8" y="195.0" width="42.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.8" y="206.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (24 samples, 0.48%)</title><rect x="351.8" y="179.0" width="5.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="354.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (61 samples, 1.22%)</title><rect x="357.5" y="179.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (61 samples, 1.22%)</title><rect x="357.5" y="163.0" width="14.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="360.5" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.93%)</title><rect x="371.8" y="179.0" width="22.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.8" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.93%)</title><rect x="371.8" y="163.0" width="22.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.8" y="174.0">o..</text>
</g>
<g>
<title>char[] (52 samples, 1.04%)</title><rect x="371.8" y="147.0" width="12.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="374.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.26%)</title><rect x="384.1" y="147.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="387.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.64%)</title><rect x="387.1" y="147.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.64%)</title><rect x="387.1" y="131.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.64%)</title><rect x="387.1" y="115.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.1" y="126.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.64%)</title><rect x="387.1" y="99.0" width="7.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="390.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (34 samples, 0.68%)</title><rect x="394.6" y="195.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.6" y="206.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.68%)</title><rect x="394.6" y="179.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="397.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (44 samples, 0.88%)</title><rect x="402.6" y="195.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="405.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.88%)</title><rect x="402.6" y="179.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.88%)</title><rect x="402.6" y="163.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.48%)</title><rect x="402.6" y="147.0" width="5.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="405.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.40%)</title><rect x="408.3" y="147.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.3" y="158.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.40%)</title><rect x="408.3" y="131.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="411.3" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (200 samples, 3.98%)</title><rect x="413.0" y="195.0" width="47.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.0" y="206.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (200 samples, 3.98%)</title><rect x="413.0" y="179.0" width="47.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.0" y="190.0">one/..</text>
</g>
<g>
<title>char[] (106 samples, 2.11%)</title><rect x="413.0" y="163.0" width="24.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="416.0" y="174.0">c..</text>
</g>
<g>
<title>java.lang.String (40 samples, 0.80%)</title><rect x="437.9" y="163.0" width="9.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="440.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 1.08%)</title><rect x="447.3" y="163.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 1.08%)</title><rect x="447.3" y="147.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (54 samples, 1.08%)</title><rect x="447.3" y="131.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.3" y="142.0"></text>
</g>
<g>
<title>byte[] (54 samples, 1.08%)</title><rect x="447.3" y="115.0" width="12.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="450.3" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4572] (608 samples, 12.11%)</title><rect x="460.0" y="275.0" width="142.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="463.0" y="286.0">[NIO Selector #3 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (608 samples, 12.11%)</title><rect x="460.0" y="259.0" width="142.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.0" y="270.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 0.62%)</title><rect x="460.0" y="243.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.0" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (31 samples, 0.62%)</title><rect x="460.0" y="227.0" width="7.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="463.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (577 samples, 11.50%)</title><rect x="467.3" y="243.0" width="135.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.3" y="254.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (577 samples, 11.50%)</title><rect x="467.3" y="227.0" width="135.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.3" y="238.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (577 samples, 11.50%)</title><rect x="467.3" y="211.0" width="135.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.3" y="222.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (166 samples, 3.31%)</title><rect x="467.3" y="195.0" width="39.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.3" y="206.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (166 samples, 3.31%)</title><rect x="467.3" y="179.0" width="39.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.3" y="190.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (132 samples, 2.63%)</title><rect x="467.3" y="163.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.3" y="174.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (47 samples, 0.94%)</title><rect x="467.3" y="147.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (47 samples, 0.94%)</title><rect x="467.3" y="131.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.94%)</title><rect x="467.3" y="115.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.94%)</title><rect x="467.3" y="99.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.46%)</title><rect x="467.3" y="83.0" width="5.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="470.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.48%)</title><rect x="472.7" y="83.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.7" y="94.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.48%)</title><rect x="472.7" y="67.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="475.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (85 samples, 1.69%)</title><rect x="478.3" y="147.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.46%)</title><rect x="478.3" y="131.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.46%)</title><rect x="478.3" y="115.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (23 samples, 0.46%)</title><rect x="478.3" y="99.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (23 samples, 0.46%)</title><rect x="478.3" y="83.0" width="5.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="481.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (62 samples, 1.24%)</title><rect x="483.7" y="131.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (62 samples, 1.24%)</title><rect x="483.7" y="115.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (34 samples, 0.68%)</title><rect x="483.7" y="99.0" width="8.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="486.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (28 samples, 0.56%)</title><rect x="491.7" y="99.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (28 samples, 0.56%)</title><rect x="491.7" y="83.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.7" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (28 samples, 0.56%)</title><rect x="491.7" y="67.0" width="6.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="494.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.68%)</title><rect x="498.3" y="163.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.68%)</title><rect x="498.3" y="147.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.68%)</title><rect x="498.3" y="131.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.30%)</title><rect x="498.3" y="115.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="501.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.38%)</title><rect x="501.8" y="115.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.8" y="126.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.38%)</title><rect x="501.8" y="99.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="504.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (180 samples, 3.59%)</title><rect x="506.3" y="195.0" width="42.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.3" y="206.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.56%)</title><rect x="506.3" y="179.0" width="6.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="509.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (54 samples, 1.08%)</title><rect x="512.9" y="179.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (54 samples, 1.08%)</title><rect x="512.9" y="163.0" width="12.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="515.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 1.95%)</title><rect x="525.6" y="179.0" width="23.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.6" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 1.95%)</title><rect x="525.6" y="163.0" width="23.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.6" y="174.0">o..</text>
</g>
<g>
<title>char[] (52 samples, 1.04%)</title><rect x="525.6" y="147.0" width="12.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="528.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.30%)</title><rect x="537.8" y="147.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="540.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.62%)</title><rect x="541.3" y="147.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.62%)</title><rect x="541.3" y="131.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.62%)</title><rect x="541.3" y="115.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.3" y="126.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.62%)</title><rect x="541.3" y="99.0" width="7.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="544.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (24 samples, 0.48%)</title><rect x="548.6" y="195.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.6" y="206.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.48%)</title><rect x="548.6" y="179.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="551.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (32 samples, 0.64%)</title><rect x="554.3" y="195.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.64%)</title><rect x="554.3" y="179.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.64%)</title><rect x="554.3" y="163.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.40%)</title><rect x="554.3" y="147.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="557.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.24%)</title><rect x="559.0" y="147.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.0" y="158.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.24%)</title><rect x="559.0" y="131.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="562.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 3.49%)</title><rect x="561.8" y="195.0" width="41.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.8" y="206.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 3.49%)</title><rect x="561.8" y="179.0" width="41.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.8" y="190.0">one..</text>
</g>
<g>
<title>char[] (78 samples, 1.55%)</title><rect x="561.8" y="163.0" width="18.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="564.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.74%)</title><rect x="580.1" y="163.0" width="8.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="583.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (60 samples, 1.20%)</title><rect x="588.8" y="163.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (60 samples, 1.20%)</title><rect x="588.8" y="147.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (60 samples, 1.20%)</title><rect x="588.8" y="131.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.8" y="142.0"></text>
</g>
<g>
<title>byte[] (60 samples, 1.20%)</title><rect x="588.8" y="115.0" width="14.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="591.8" y="126.0"></text>
</g>
<g>
<title>[async_worker-0 tid=4584] (625 samples, 12.45%)</title><rect x="602.9" y="275.0" width="147.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="605.9" y="286.0">[async_worker-0 ti..</text>
</g>
<g>
<title>java/lang/Thread.run (625 samples, 12.45%)</title><rect x="602.9" y="259.0" width="147.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.9" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (625 samples, 12.45%)</title><rect x="602.9" y="243.0" width="147.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.9" y="254.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (625 samples, 12.45%)</title><rect x="602.9" y="227.0" width="147.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.9" y="238.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (604 samples, 12.03%)</title><rect x="602.9" y="211.0" width="142.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.9" y="222.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (604 samples, 12.03%)</title><rect x="602.9" y="195.0" width="142.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.9" y="206.0">java/util/concurre..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (604 samples, 12.03%)</title><rect x="602.9" y="179.0" width="142.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.9" y="190.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (604 samples, 12.03%)</title><rect x="602.9" y="163.0" width="142.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.9" y="174.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.getBytes (45 samples, 0.90%)</title><rect x="602.9" y="147.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (45 samples, 0.90%)</title><rect x="602.9" y="131.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (45 samples, 0.90%)</title><rect x="602.9" y="115.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.90%)</title><rect x="602.9" y="99.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.9" y="110.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.90%)</title><rect x="602.9" y="83.0" width="10.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="605.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 1.20%)</title><rect x="613.5" y="147.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 1.20%)</title><rect x="613.5" y="131.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 1.20%)</title><rect x="613.5" y="115.0" width="14.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="616.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (499 samples, 9.94%)</title><rect x="627.6" y="147.0" width="117.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.6" y="158.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (59 samples, 1.18%)</title><rect x="627.6" y="131.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (59 samples, 1.18%)</title><rect x="627.6" y="115.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (59 samples, 1.18%)</title><rect x="627.6" y="99.0" width="13.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="630.6" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (37 samples, 0.74%)</title><rect x="641.5" y="131.0" width="8.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="644.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (182 samples, 3.63%)</title><rect x="650.2" y="131.0" width="42.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.2" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (182 samples, 3.63%)</title><rect x="650.2" y="115.0" width="42.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.2" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (129 samples, 2.57%)</title><rect x="650.2" y="99.0" width="30.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.2" y="110.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (129 samples, 2.57%)</title><rect x="650.2" y="83.0" width="30.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.2" y="94.0">on..</text>
</g>
<g>
<title>byte[] (129 samples, 2.57%)</title><rect x="650.2" y="67.0" width="30.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="653.2" y="78.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (53 samples, 1.06%)</title><rect x="680.5" y="99.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.5" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (53 samples, 1.06%)</title><rect x="680.5" y="83.0" width="12.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="683.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (135 samples, 2.69%)</title><rect x="693.0" y="131.0" width="31.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.0" y="142.0">on..</text>
</g>
<g>
<title>byte[] (56 samples, 1.12%)</title><rect x="693.0" y="115.0" width="13.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="696.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.94%)</title><rect x="706.2" y="115.0" width="11.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="709.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.64%)</title><rect x="717.2" y="115.0" width="7.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="720.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (86 samples, 1.71%)</title><rect x="724.7" y="131.0" width="20.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (52 samples, 1.04%)</title><rect x="724.7" y="115.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.7" y="126.0"></text>
</g>
<g>
<title>byte[] (52 samples, 1.04%)</title><rect x="724.7" y="99.0" width="12.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="727.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (34 samples, 0.68%)</title><rect x="736.9" y="115.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.9" y="126.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.68%)</title><rect x="736.9" y="99.0" width="8.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="739.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 0.42%)</title><rect x="744.9" y="211.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (21 samples, 0.42%)</title><rect x="744.9" y="195.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 0.38%)</title><rect x="744.9" y="179.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (19 samples, 0.38%)</title><rect x="744.9" y="163.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (19 samples, 0.38%)</title><rect x="744.9" y="147.0" width="4.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="747.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="749.4" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="749.4" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="749.4" y="147.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title><rect x="749.4" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.04%)</title><rect x="749.4" y="115.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="752.4" y="126.0"></text>
</g>
<g>
<title>[async_worker-1 tid=4585] (629 samples, 12.53%)</title><rect x="749.9" y="275.0" width="147.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="752.9" y="286.0">[async_worker-1 tid..</text>
</g>
<g>
<title>java/lang/Thread.run (629 samples, 12.53%)</title><rect x="749.9" y="259.0" width="147.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.9" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (629 samples, 12.53%)</title><rect x="749.9" y="243.0" width="147.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.9" y="254.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (629 samples, 12.53%)</title><rect x="749.9" y="227.0" width="147.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.9" y="238.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (605 samples, 12.05%)</title><rect x="749.9" y="211.0" width="142.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.9" y="222.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (605 samples, 12.05%)</title><rect x="749.9" y="195.0" width="142.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.9" y="206.0">java/util/concurre..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (605 samples, 12.05%)</title><rect x="749.9" y="179.0" width="142.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.9" y="190.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (605 samples, 12.05%)</title><rect x="749.9" y="163.0" width="142.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.9" y="174.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.getBytes (34 samples, 0.68%)</title><rect x="749.9" y="147.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (34 samples, 0.68%)</title><rect x="749.9" y="131.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (34 samples, 0.68%)</title><rect x="749.9" y="115.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.68%)</title><rect x="749.9" y="99.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.9" y="110.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.68%)</title><rect x="749.9" y="83.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="752.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 1.06%)</title><rect x="757.9" y="147.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 1.06%)</title><rect x="757.9" y="131.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 1.06%)</title><rect x="757.9" y="115.0" width="12.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="760.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (518 samples, 10.32%)</title><rect x="770.3" y="147.0" width="121.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.3" y="158.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (68 samples, 1.35%)</title><rect x="770.3" y="131.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (68 samples, 1.35%)</title><rect x="770.3" y="115.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (68 samples, 1.35%)</title><rect x="770.3" y="99.0" width="16.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="773.3" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (37 samples, 0.74%)</title><rect x="786.3" y="131.0" width="8.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="789.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (205 samples, 4.08%)</title><rect x="795.0" y="131.0" width="48.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.0" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (205 samples, 4.08%)</title><rect x="795.0" y="115.0" width="48.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.0" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (129 samples, 2.57%)</title><rect x="795.0" y="99.0" width="30.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.0" y="110.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (129 samples, 2.57%)</title><rect x="795.0" y="83.0" width="30.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.0" y="94.0">on..</text>
</g>
<g>
<title>byte[] (129 samples, 2.57%)</title><rect x="795.0" y="67.0" width="30.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="798.0" y="78.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (76 samples, 1.51%)</title><rect x="825.3" y="99.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.3" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (76 samples, 1.51%)</title><rect x="825.3" y="83.0" width="17.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="828.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (117 samples, 2.33%)</title><rect x="843.2" y="131.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.2" y="142.0">o..</text>
</g>
<g>
<title>byte[] (50 samples, 1.00%)</title><rect x="843.2" y="115.0" width="11.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="846.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String[] (39 samples, 0.78%)</title><rect x="855.0" y="115.0" width="9.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="858.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.56%)</title><rect x="864.1" y="115.0" width="6.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="867.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (91 samples, 1.81%)</title><rect x="870.7" y="131.0" width="21.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.7" y="142.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (53 samples, 1.06%)</title><rect x="870.7" y="115.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.7" y="126.0"></text>
</g>
<g>
<title>byte[] (53 samples, 1.06%)</title><rect x="870.7" y="99.0" width="12.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="873.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (38 samples, 0.76%)</title><rect x="883.2" y="115.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.2" y="126.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.76%)</title><rect x="883.2" y="99.0" width="8.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="886.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.48%)</title><rect x="892.1" y="211.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (24 samples, 0.48%)</title><rect x="892.1" y="195.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 0.38%)</title><rect x="892.1" y="179.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (19 samples, 0.38%)</title><rect x="892.1" y="163.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (19 samples, 0.38%)</title><rect x="892.1" y="147.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="895.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.10%)</title><rect x="896.6" y="179.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.10%)</title><rect x="896.6" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.10%)</title><rect x="896.6" y="147.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.10%)</title><rect x="896.6" y="131.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.10%)</title><rect x="896.6" y="115.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="899.6" y="126.0"></text>
</g>
<g>
<title>[async_worker-2 tid=4587] (608 samples, 12.11%)</title><rect x="897.8" y="275.0" width="142.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="900.8" y="286.0">[async_worker-2 ti..</text>
</g>
<g>
<title>java/lang/Thread.run (608 samples, 12.11%)</title><rect x="897.8" y="259.0" width="142.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.8" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (608 samples, 12.11%)</title><rect x="897.8" y="243.0" width="142.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.8" y="254.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (608 samples, 12.11%)</title><rect x="897.8" y="227.0" width="142.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.8" y="238.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (593 samples, 11.82%)</title><rect x="897.8" y="211.0" width="139.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.8" y="222.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (593 samples, 11.82%)</title><rect x="897.8" y="195.0" width="139.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.8" y="206.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (593 samples, 11.82%)</title><rect x="897.8" y="179.0" width="139.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.8" y="190.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (593 samples, 11.82%)</title><rect x="897.8" y="163.0" width="139.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.8" y="174.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (39 samples, 0.78%)</title><rect x="897.8" y="147.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (39 samples, 0.78%)</title><rect x="897.8" y="131.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (39 samples, 0.78%)</title><rect x="897.8" y="115.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.78%)</title><rect x="897.8" y="99.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.8" y="110.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.78%)</title><rect x="897.8" y="83.0" width="9.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 1.43%)</title><rect x="906.9" y="147.0" width="17.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 1.43%)</title><rect x="906.9" y="131.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 1.43%)</title><rect x="906.9" y="115.0" width="17.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="909.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (482 samples, 9.60%)</title><rect x="923.9" y="147.0" width="113.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.9" y="158.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (65 samples, 1.30%)</title><rect x="923.9" y="131.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (65 samples, 1.30%)</title><rect x="923.9" y="115.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="926.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (65 samples, 1.30%)</title><rect x="923.9" y="99.0" width="15.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="926.9" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (35 samples, 0.70%)</title><rect x="939.1" y="131.0" width="8.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="942.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (171 samples, 3.41%)</title><rect x="947.4" y="131.0" width="40.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.4" y="142.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (171 samples, 3.41%)</title><rect x="947.4" y="115.0" width="40.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.4" y="126.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (113 samples, 2.25%)</title><rect x="947.4" y="99.0" width="26.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.4" y="110.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (113 samples, 2.25%)</title><rect x="947.4" y="83.0" width="26.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.4" y="94.0">o..</text>
</g>
<g>
<title>byte[] (113 samples, 2.25%)</title><rect x="947.4" y="67.0" width="26.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="950.4" y="78.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 1.16%)</title><rect x="973.9" y="99.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.9" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (58 samples, 1.16%)</title><rect x="973.9" y="83.0" width="13.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="976.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (124 samples, 2.47%)</title><rect x="987.6" y="131.0" width="29.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.6" y="142.0">on..</text>
</g>
<g>
<title>byte[] (49 samples, 0.98%)</title><rect x="987.6" y="115.0" width="11.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="990.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String[] (44 samples, 0.88%)</title><rect x="999.1" y="115.0" width="10.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1002.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.62%)</title><rect x="1009.4" y="115.0" width="7.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1012.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (87 samples, 1.73%)</title><rect x="1016.7" y="131.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (42 samples, 0.84%)</title><rect x="1016.7" y="115.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1019.7" y="126.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.84%)</title><rect x="1016.7" y="99.0" width="9.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1019.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (45 samples, 0.90%)</title><rect x="1026.6" y="115.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.6" y="126.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.90%)</title><rect x="1026.6" y="99.0" width="10.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1029.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.30%)</title><rect x="1037.2" y="211.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1040.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.30%)</title><rect x="1037.2" y="195.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.26%)</title><rect x="1037.2" y="179.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1040.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (13 samples, 0.26%)</title><rect x="1037.2" y="163.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (13 samples, 0.26%)</title><rect x="1037.2" y="147.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1040.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="1040.2" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="1040.2" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="1040.2" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title><rect x="1040.2" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.04%)</title><rect x="1040.2" y="115.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1043.2" y="126.0"></text>
</g>
<g>
<title>[async_worker-3 tid=4586] (635 samples, 12.65%)</title><rect x="1040.7" y="275.0" width="149.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1043.7" y="286.0">[async_worker-3 tid..</text>
</g>
<g>
<title>java/lang/Thread.run (635 samples, 12.65%)</title><rect x="1040.7" y="259.0" width="149.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.7" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (635 samples, 12.65%)</title><rect x="1040.7" y="243.0" width="149.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.7" y="254.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (635 samples, 12.65%)</title><rect x="1040.7" y="227.0" width="149.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.7" y="238.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (619 samples, 12.33%)</title><rect x="1040.7" y="211.0" width="145.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.7" y="222.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (619 samples, 12.33%)</title><rect x="1040.7" y="195.0" width="145.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.7" y="206.0">java/util/concurre..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (619 samples, 12.33%)</title><rect x="1040.7" y="179.0" width="145.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.7" y="190.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (619 samples, 12.33%)</title><rect x="1040.7" y="163.0" width="145.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.7" y="174.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.getBytes (44 samples, 0.88%)</title><rect x="1040.7" y="147.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (44 samples, 0.88%)</title><rect x="1040.7" y="131.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (44 samples, 0.88%)</title><rect x="1040.7" y="115.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.88%)</title><rect x="1040.7" y="99.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.7" y="110.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.88%)</title><rect x="1040.7" y="83.0" width="10.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1043.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 1.47%)</title><rect x="1051.1" y="147.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 1.47%)</title><rect x="1051.1" y="131.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.1" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 1.47%)</title><rect x="1051.1" y="115.0" width="17.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1054.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (501 samples, 9.98%)</title><rect x="1068.4" y="147.0" width="117.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.4" y="158.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 1.28%)</title><rect x="1068.4" y="131.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 1.28%)</title><rect x="1068.4" y="115.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 1.28%)</title><rect x="1068.4" y="99.0" width="15.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1071.4" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.48%)</title><rect x="1083.5" y="131.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1086.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (189 samples, 3.77%)</title><rect x="1089.1" y="131.0" width="44.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.1" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (189 samples, 3.77%)</title><rect x="1089.1" y="115.0" width="44.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.1" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (126 samples, 2.51%)</title><rect x="1089.1" y="99.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.1" y="110.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (126 samples, 2.51%)</title><rect x="1089.1" y="83.0" width="29.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.1" y="94.0">on..</text>
</g>
<g>
<title>byte[] (126 samples, 2.51%)</title><rect x="1089.1" y="67.0" width="29.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1092.1" y="78.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 1.26%)</title><rect x="1118.8" y="99.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.8" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (63 samples, 1.26%)</title><rect x="1118.8" y="83.0" width="14.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1121.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (150 samples, 2.99%)</title><rect x="1133.6" y="131.0" width="35.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.6" y="142.0">one..</text>
</g>
<g>
<title>byte[] (66 samples, 1.32%)</title><rect x="1133.6" y="115.0" width="15.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1136.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String[] (53 samples, 1.06%)</title><rect x="1149.1" y="115.0" width="12.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1152.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.62%)</title><rect x="1161.6" y="115.0" width="7.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1164.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (74 samples, 1.47%)</title><rect x="1168.8" y="131.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (41 samples, 0.82%)</title><rect x="1168.8" y="115.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.8" y="126.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.82%)</title><rect x="1168.8" y="99.0" width="9.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1171.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (33 samples, 0.66%)</title><rect x="1178.5" y="115.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.5" y="126.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.66%)</title><rect x="1178.5" y="99.0" width="7.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1181.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.32%)</title><rect x="1186.2" y="211.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 0.32%)</title><rect x="1186.2" y="195.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.24%)</title><rect x="1186.2" y="179.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (12 samples, 0.24%)</title><rect x="1186.2" y="163.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.24%)</title><rect x="1186.2" y="147.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1189.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.08%)</title><rect x="1189.1" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.08%)</title><rect x="1189.1" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.08%)</title><rect x="1189.1" y="147.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.08%)</title><rect x="1189.1" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.1" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.08%)</title><rect x="1189.1" y="115.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1192.1" y="126.0"></text>
</g>
</g>
</svg>
