<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (7,820 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=5865] (10 samples, 0.13%)</title><rect x="10.0" y="963.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.13%)</title><rect x="10.0" y="947.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.13%)</title><rect x="10.0" y="931.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.13%)</title><rect x="10.0" y="915.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (10 samples, 0.13%)</title><rect x="10.0" y="899.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (10 samples, 0.13%)</title><rect x="10.0" y="883.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (10 samples, 0.13%)</title><rect x="10.0" y="867.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (10 samples, 0.13%)</title><rect x="10.0" y="851.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (10 samples, 0.13%)</title><rect x="10.0" y="835.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>Compilation::compile_method() (10 samples, 0.13%)</title><rect x="10.0" y="819.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (9 samples, 0.12%)</title><rect x="10.0" y="803.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.0] (2 samples, 0.03%)</title><rect x="10.0" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.03%)</title><rect x="10.0" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.03%)</title><rect x="10.0" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.03%)</title><rect x="10.0" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (6 samples, 0.08%)</title><rect x="10.5" y="787.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.5" y="798.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (5 samples, 0.06%)</title><rect x="10.6" y="771.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.6" y="782.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (2 samples, 0.03%)</title><rect x="10.8" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.8" y="766.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (2 samples, 0.03%)</title><rect x="10.8" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.8" y="750.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (2 samples, 0.03%)</title><rect x="10.8" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.8" y="734.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (2 samples, 0.03%)</title><rect x="10.8" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.8" y="718.0"></text>
</g>
<g>
<title>[C2 CompilerThre tid=5864] (127 samples, 1.62%)</title><rect x="11.5" y="963.0" width="19.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="11.7" y="947.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.7" y="958.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.03%)</title><rect x="11.7" y="931.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="14.7" y="942.0"></text>
</g>
<g>
<title>start_thread (124 samples, 1.59%)</title><rect x="12.0" y="947.0" width="18.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="15.0" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (124 samples, 1.59%)</title><rect x="12.0" y="931.0" width="18.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="15.0" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (124 samples, 1.59%)</title><rect x="12.0" y="915.0" width="18.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (124 samples, 1.59%)</title><rect x="12.0" y="899.0" width="18.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.0" y="910.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (124 samples, 1.59%)</title><rect x="12.0" y="883.0" width="18.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.0" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (124 samples, 1.59%)</title><rect x="12.0" y="867.0" width="18.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.0" y="878.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (124 samples, 1.59%)</title><rect x="12.0" y="851.0" width="18.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.0" y="862.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (124 samples, 1.59%)</title><rect x="12.0" y="835.0" width="18.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.0" y="846.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (72 samples, 0.92%)</title><rect x="12.0" y="819.0" width="10.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.0" y="830.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.03%)</title><rect x="12.0" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.0" y="814.0"></text>
</g>
<g>
<title>Matcher::match() (6 samples, 0.08%)</title><rect x="12.6" y="803.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.04%)</title><rect x="12.9" y="787.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.9" y="798.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.03%)</title><rect x="13.0" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.0" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (9 samples, 0.12%)</title><rect x="13.8" y="803.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.8" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (9 samples, 0.12%)</title><rect x="13.8" y="787.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.8" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="13.8" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.8" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.03%)</title><rect x="14.2" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.2" y="782.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.04%)</title><rect x="14.7" y="771.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.7" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (51 samples, 0.65%)</title><rect x="15.1" y="803.0" width="7.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.1" y="814.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (3 samples, 0.04%)</title><rect x="15.4" y="787.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.4" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (10 samples, 0.13%)</title><rect x="16.2" y="787.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.2" y="798.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (2 samples, 0.03%)</title><rect x="17.1" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.1" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (10 samples, 0.13%)</title><rect x="17.7" y="787.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="20.7" y="798.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (2 samples, 0.03%)</title><rect x="18.0" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="21.0" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.03%)</title><rect x="18.6" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="21.6" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.03%)</title><rect x="19.5" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.5" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.03%)</title><rect x="20.0" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.0" y="798.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (4 samples, 0.05%)</title><rect x="20.3" y="787.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.3" y="798.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.03%)</title><rect x="20.6" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.6" y="782.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.03%)</title><rect x="21.0" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="24.0" y="798.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (6 samples, 0.08%)</title><rect x="21.3" y="787.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.3" y="798.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="21.6" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.6" y="782.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="21.9" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.9" y="782.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="22.2" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="25.2" y="798.0"></text>
</g>
<g>
<title>Compile::Optimize() (43 samples, 0.55%)</title><rect x="22.8" y="819.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.8" y="830.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (21 samples, 0.27%)</title><rect x="23.0" y="803.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.0" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (21 samples, 0.27%)</title><rect x="23.0" y="787.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="26.0" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.04%)</title><rect x="23.1" y="771.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.1" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="23.6" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.6" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.08%)</title><rect x="23.9" y="771.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.9" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (5 samples, 0.06%)</title><rect x="24.0" y="755.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="27.0" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.04%)</title><rect x="24.3" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="27.3" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.03%)</title><rect x="24.5" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.5" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.06%)</title><rect x="24.8" y="771.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.8" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.03%)</title><rect x="25.2" y="755.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="28.2" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.04%)</title><rect x="25.5" y="771.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.5" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.04%)</title><rect x="25.5" y="755.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="28.5" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.03%)</title><rect x="26.1" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.1" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.03%)</title><rect x="26.1" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.1" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (10 samples, 0.13%)</title><rect x="26.7" y="803.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.7" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="27.1" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.1" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="27.4" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.4" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.05%)</title><rect x="27.7" y="787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.7" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.05%)</title><rect x="27.7" y="771.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.7" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.06%)</title><rect x="28.3" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.3" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.06%)</title><rect x="28.3" y="787.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.3" y="798.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="28.4" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="31.4" y="782.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="28.4" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.4" y="766.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="28.7" y="771.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.7" y="782.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.0] (2 samples, 0.03%)</title><rect x="28.7" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.7" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="31.7" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.7" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="707.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.7" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.7" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.7" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.7" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="31.7" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.7" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="31.7" y="622.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="595.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.7" y="606.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.7" y="590.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="31.7" y="574.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.7" y="558.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="531.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.7" y="542.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.7" y="526.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.7" y="510.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="483.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.7" y="494.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (2 samples, 0.03%)</title><rect x="28.7" y="467.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.7" y="478.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="28.7" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.7" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.10%)</title><rect x="29.3" y="819.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.3" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.10%)</title><rect x="29.3" y="803.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.10%)</title><rect x="29.3" y="787.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.10%)</title><rect x="29.3" y="771.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.10%)</title><rect x="29.3" y="755.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.10%)</title><rect x="29.3" y="739.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.3" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.10%)</title><rect x="29.3" y="723.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.10%)</title><rect x="29.3" y="707.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="32.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.09%)</title><rect x="29.3" y="691.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.09%)</title><rect x="29.3" y="675.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.09%)</title><rect x="29.3" y="659.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.09%)</title><rect x="29.3" y="643.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.3" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.08%)</title><rect x="29.5" y="627.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.5" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.08%)</title><rect x="29.5" y="611.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.08%)</title><rect x="29.5" y="595.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.08%)</title><rect x="29.5" y="579.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.08%)</title><rect x="29.5" y="563.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="29.5" y="547.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.5" y="558.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="29.6" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.6" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="29.6" y="515.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.6" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="29.6" y="499.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="29.6" y="483.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="29.6" y="467.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="32.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="29.6" y="451.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="29.6" y="435.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.6" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="29.8" y="419.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.8" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="29.8" y="403.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="29.8" y="387.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="29.8" y="371.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="32.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="29.8" y="355.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="29.8" y="339.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.8" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="29.8" y="323.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.8" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="29.8" y="307.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.8" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="29.8" y="291.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.8" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="29.8" y="275.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="29.8" y="259.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="29.8" y="243.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.8" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="29.8" y="227.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.8" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="29.8" y="211.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.8" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="29.8" y="195.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.8" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="29.8" y="179.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="29.8" y="163.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="29.8" y="147.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.8" y="158.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="30.1" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="33.1" y="558.0"></text>
</g>
<g>
<title>[G1 Young RemSet tid=5859] (2 samples, 0.03%)</title><rect x="30.7" y="963.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="33.7" y="974.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=5855] (2 samples, 0.03%)</title><rect x="31.0" y="963.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="34.0" y="974.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="31.0" y="947.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="34.0" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="31.0" y="931.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="34.0" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="31.0" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.0" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.03%)</title><rect x="31.0" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.0" y="910.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=5951] (2 samples, 0.03%)</title><rect x="31.3" y="963.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.3" y="974.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="31.3" y="947.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="34.3" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="31.3" y="931.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="34.3" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="31.3" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="34.3" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.03%)</title><rect x="31.3" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="34.3" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="31.3" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="34.3" y="894.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=5953] (2 samples, 0.03%)</title><rect x="31.7" y="963.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="34.7" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=5903] (1,901 samples, 24.31%)</title><rect x="32.2" y="963.0" width="286.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="35.2" y="974.0">[NIO Selector #0 tid=5903]</text>
</g>
<g>
<title>[deoptimization] (2 samples, 0.03%)</title><rect x="32.2" y="947.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="35.2" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,899 samples, 24.28%)</title><rect x="32.5" y="947.0" width="286.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.5" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.12%)</title><rect x="34.1" y="931.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.12%)</title><rect x="34.1" y="915.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.06%)</title><rect x="34.7" y="899.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.7" y="910.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (4 samples, 0.05%)</title><rect x="34.9" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (4 samples, 0.05%)</title><rect x="34.9" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (102 samples, 1.30%)</title><rect x="35.5" y="931.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (7 samples, 0.09%)</title><rect x="36.1" y="915.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (7 samples, 0.09%)</title><rect x="36.1" y="899.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (91 samples, 1.16%)</title><rect x="37.2" y="915.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.2" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="38.1" y="899.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="41.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.08%)</title><rect x="38.7" y="899.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="41.7" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="39.1" y="883.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="42.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="39.1" y="867.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="42.1" y="878.0"></text>
</g>
<g>
<title>epoll_wait (75 samples, 0.96%)</title><rect x="39.6" y="899.0" width="11.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="42.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.83%)</title><rect x="41.1" y="883.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="44.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.83%)</title><rect x="41.1" y="867.0" width="9.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (63 samples, 0.81%)</title><rect x="41.2" y="851.0" width="9.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="44.2" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (63 samples, 0.81%)</title><rect x="41.2" y="835.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="44.2" y="846.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="41.4" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="44.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="41.4" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="44.4" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="41.4" y="787.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="44.4" y="798.0"></text>
</g>
<g>
<title>ep_poll (56 samples, 0.72%)</title><rect x="41.8" y="819.0" width="8.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="44.8" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (44 samples, 0.56%)</title><rect x="42.9" y="803.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.9" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (33 samples, 0.42%)</title><rect x="44.1" y="787.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.1" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (23 samples, 0.29%)</title><rect x="45.5" y="771.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.5" y="782.0"></text>
</g>
<g>
<title>sock_poll (19 samples, 0.24%)</title><rect x="45.9" y="755.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="48.9" y="766.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.10%)</title><rect x="47.6" y="739.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="50.6" y="750.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="49.1" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="52.1" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.04%)</title><rect x="49.8" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.8" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.04%)</title><rect x="49.8" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="52.8" y="798.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="49.8" y="771.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="52.8" y="782.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="50.0" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.0" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="50.0" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="53.0" y="750.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="50.4" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="53.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,777 samples, 22.72%)</title><rect x="50.9" y="931.0" width="268.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.9" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,764 samples, 22.56%)</title><rect x="52.1" y="915.0" width="266.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.1" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,627 samples, 20.81%)</title><rect x="52.4" y="899.0" width="245.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.4" y="910.0">one/nio/http/HttpSession.processH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,564 samples, 20.00%)</title><rect x="54.1" y="883.0" width="236.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.1" y="894.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,562 samples, 19.97%)</title><rect x="54.2" y="867.0" width="235.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.2" y="878.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,537 samples, 19.65%)</title><rect x="54.2" y="851.0" width="231.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.2" y="862.0">RequestHandler1_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (566 samples, 7.24%)</title><rect x="54.5" y="835.0" width="85.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.5" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.06%)</title><rect x="54.7" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="54.8" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (549 samples, 7.02%)</title><rect x="55.4" y="819.0" width="82.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.4" y="830.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.24%)</title><rect x="55.4" y="803.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.19%)</title><rect x="56.0" y="787.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.08%)</title><rect x="56.2" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="56.5" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.05%)</title><rect x="56.5" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="57.1" y="771.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="57.1" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.09%)</title><rect x="57.2" y="739.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="58.0" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (530 samples, 6.78%)</title><rect x="58.3" y="803.0" width="80.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.3" y="814.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (530 samples, 6.78%)</title><rect x="58.3" y="787.0" width="80.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.3" y="798.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (530 samples, 6.78%)</title><rect x="58.3" y="771.0" width="80.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.3" y="782.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (529 samples, 6.76%)</title><rect x="58.4" y="755.0" width="79.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.4" y="766.0">one/nio/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="59.6" y="739.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="62.6" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (22 samples, 0.28%)</title><rect x="60.1" y="739.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="63.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="61.5" y="723.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="64.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="61.8" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.12%)</title><rect x="62.1" y="723.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="65.1" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="62.8" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="65.8" y="718.0"></text>
</g>
<g>
<title>send (496 samples, 6.34%)</title><rect x="63.4" y="739.0" width="74.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="66.4" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (485 samples, 6.20%)</title><rect x="65.1" y="723.0" width="73.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.1" y="734.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (484 samples, 6.19%)</title><rect x="65.2" y="707.0" width="73.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.2" y="718.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (478 samples, 6.11%)</title><rect x="66.1" y="691.0" width="72.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="69.1" y="702.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (478 samples, 6.11%)</title><rect x="66.1" y="675.0" width="72.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.1" y="686.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (472 samples, 6.04%)</title><rect x="66.3" y="659.0" width="71.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.3" y="670.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (451 samples, 5.77%)</title><rect x="66.7" y="643.0" width="68.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="69.7" y="654.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (451 samples, 5.77%)</title><rect x="66.7" y="627.0" width="68.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.7" y="638.0">tcp_sen..</text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="67.2" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="70.2" y="622.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="67.5" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.5" y="622.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="67.8" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.8" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (439 samples, 5.61%)</title><rect x="68.2" y="611.0" width="66.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.2" y="622.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.06%)</title><rect x="70.1" y="595.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.1" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.06%)</title><rect x="70.1" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="73.1" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.05%)</title><rect x="71.0" y="595.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.0" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="71.0" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.0" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.05%)</title><rect x="71.9" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="74.9" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="72.0" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="75.0" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (30 samples, 0.38%)</title><rect x="72.5" y="595.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (28 samples, 0.36%)</title><rect x="72.8" y="579.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="75.8" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (9 samples, 0.12%)</title><rect x="73.1" y="563.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.05%)</title><rect x="73.2" y="547.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="76.2" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="73.5" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.5" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.03%)</title><rect x="74.1" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="77.1" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.14%)</title><rect x="74.4" y="563.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.4" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.06%)</title><rect x="75.3" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.3" y="558.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="75.8" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.8" y="542.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.03%)</title><rect x="75.8" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="78.8" y="526.0"></text>
</g>
<g>
<title>allocate_slab (2 samples, 0.03%)</title><rect x="75.8" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="78.8" y="510.0"></text>
</g>
<g>
<title>alloc_slab_page (2 samples, 0.03%)</title><rect x="75.8" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="78.8" y="494.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.03%)</title><rect x="75.8" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="78.8" y="478.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="75.8" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.8" y="462.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="75.8" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="78.8" y="446.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="76.1" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.1" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="76.1" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.1" y="558.0"></text>
</g>
<g>
<title>memset (4 samples, 0.05%)</title><rect x="76.4" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.4" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="77.0" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="80.0" y="606.0"></text>
</g>
<g>
<title>tcp_push (371 samples, 4.74%)</title><rect x="77.6" y="595.0" width="56.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="80.6" y="606.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (371 samples, 4.74%)</title><rect x="77.6" y="579.0" width="56.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.6" y="590.0">__tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.03%)</title><rect x="77.6" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="80.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (369 samples, 4.72%)</title><rect x="77.9" y="563.0" width="55.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.9" y="574.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (335 samples, 4.28%)</title><rect x="78.7" y="547.0" width="50.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.7" y="558.0">__tcp..</text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="80.2" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="83.2" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (315 samples, 4.03%)</title><rect x="80.6" y="531.0" width="47.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.6" y="542.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (313 samples, 4.00%)</title><rect x="80.6" y="515.0" width="47.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="83.6" y="526.0">__ip..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="80.8" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.8" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="81.1" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="84.1" y="510.0"></text>
</g>
<g>
<title>ip_local_out (307 samples, 3.93%)</title><rect x="81.4" y="499.0" width="46.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.4" y="510.0">ip_l..</text>
</g>
<g>
<title>ip_output (307 samples, 3.93%)</title><rect x="81.4" y="483.0" width="46.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="84.4" y="494.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (305 samples, 3.90%)</title><rect x="81.7" y="467.0" width="46.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="84.7" y="478.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.06%)</title><rect x="81.8" y="451.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="84.8" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (298 samples, 3.81%)</title><rect x="82.6" y="451.0" width="44.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.6" y="462.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (295 samples, 3.77%)</title><rect x="83.0" y="435.0" width="44.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="86.0" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (262 samples, 3.35%)</title><rect x="83.8" y="419.0" width="39.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.8" y="430.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (262 samples, 3.35%)</title><rect x="83.8" y="403.0" width="39.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="86.8" y="414.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (257 samples, 3.29%)</title><rect x="84.5" y="387.0" width="38.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="87.5" y="398.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (256 samples, 3.27%)</title><rect x="84.5" y="371.0" width="38.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.5" y="382.0">__s..</text>
</g>
<g>
<title>net_rx_action (246 samples, 3.15%)</title><rect x="86.1" y="355.0" width="37.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.1" y="366.0">net..</text>
</g>
<g>
<title>process_backlog (244 samples, 3.12%)</title><rect x="86.4" y="339.0" width="36.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.4" y="350.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (243 samples, 3.11%)</title><rect x="86.5" y="323.0" width="36.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.5" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (242 samples, 3.09%)</title><rect x="86.7" y="307.0" width="36.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.7" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="86.7" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (239 samples, 3.06%)</title><rect x="87.1" y="291.0" width="36.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="90.1" y="302.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="87.4" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="90.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (234 samples, 2.99%)</title><rect x="87.7" y="275.0" width="35.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="90.7" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (234 samples, 2.99%)</title><rect x="87.7" y="259.0" width="35.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="90.7" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (233 samples, 2.98%)</title><rect x="87.9" y="243.0" width="35.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.9" y="254.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (232 samples, 2.97%)</title><rect x="87.9" y="227.0" width="35.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.9" y="238.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (225 samples, 2.88%)</title><rect x="88.9" y="211.0" width="34.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="91.9" y="222.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.08%)</title><rect x="89.7" y="195.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="92.7" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.10%)</title><rect x="90.6" y="195.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.6" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="90.7" y="179.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="93.7" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="91.0" y="179.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.0" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="91.5" y="179.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="94.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (205 samples, 2.62%)</title><rect x="91.8" y="195.0" width="30.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.8" y="206.0">tc..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.05%)</title><rect x="91.8" y="179.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (201 samples, 2.57%)</title><rect x="92.4" y="179.0" width="30.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="95.4" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.06%)</title><rect x="93.1" y="163.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="96.1" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.06%)</title><rect x="93.1" y="147.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="96.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="93.1" y="131.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="93.1" y="115.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="96.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="93.1" y="99.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="96.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="94.5" y="163.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (48 samples, 0.61%)</title><rect x="94.8" y="163.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.8" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (29 samples, 0.37%)</title><rect x="96.8" y="147.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.8" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.27%)</title><rect x="98.0" y="131.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.0" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.12%)</title><rect x="98.0" y="115.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.0" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (9 samples, 0.12%)</title><rect x="98.0" y="99.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="101.0" y="110.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.09%)</title><rect x="98.3" y="83.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="101.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.14%)</title><rect x="99.3" y="115.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="102.3" y="126.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.14%)</title><rect x="99.3" y="99.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.3" y="110.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.08%)</title><rect x="100.1" y="83.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="103.1" y="94.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.08%)</title><rect x="100.1" y="67.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="100.5" y="51.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="103.5" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="101.1" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="104.1" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="101.4" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="104.4" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (127 samples, 1.62%)</title><rect x="102.0" y="163.0" width="19.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.0" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (127 samples, 1.62%)</title><rect x="102.0" y="147.0" width="19.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.0" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (122 samples, 1.56%)</title><rect x="102.8" y="131.0" width="18.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (122 samples, 1.56%)</title><rect x="102.8" y="115.0" width="18.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.8" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (122 samples, 1.56%)</title><rect x="102.8" y="99.0" width="18.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="105.8" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="121.2" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="124.2" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="121.5" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.5" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="122.0" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="125.0" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (26 samples, 0.33%)</title><rect x="123.3" y="419.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.3" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (25 samples, 0.32%)</title><rect x="123.3" y="403.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.3" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (18 samples, 0.23%)</title><rect x="124.2" y="387.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="127.2" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.17%)</title><rect x="124.8" y="371.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.8" y="382.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.14%)</title><rect x="124.8" y="355.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="127.8" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (11 samples, 0.14%)</title><rect x="124.8" y="339.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="127.8" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.12%)</title><rect x="125.1" y="323.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="128.1" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.03%)</title><rect x="127.2" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="130.2" y="430.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="127.8" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="130.8" y="526.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="128.2" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.2" y="542.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="128.3" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="131.3" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="129.4" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.4" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.06%)</title><rect x="129.8" y="547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="132.8" y="558.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="130.6" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="133.6" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.13%)</title><rect x="131.2" y="547.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.2" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.10%)</title><rect x="131.5" y="531.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="134.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.10%)</title><rect x="131.5" y="515.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="134.5" y="526.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.10%)</title><rect x="131.5" y="499.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.5" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.09%)</title><rect x="131.5" y="483.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="134.5" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="133.0" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="136.0" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.08%)</title><rect x="133.6" y="595.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="136.6" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="133.9" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="136.9" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="134.5" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="137.5" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (17 samples, 0.22%)</title><rect x="134.9" y="643.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (13 samples, 0.17%)</title><rect x="135.5" y="627.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.5" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (13 samples, 0.17%)</title><rect x="135.5" y="611.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.5" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (7 samples, 0.09%)</title><rect x="136.5" y="595.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="139.5" y="606.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="136.5" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.5" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (5 samples, 0.06%)</title><rect x="136.8" y="579.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="139.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="137.5" y="659.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="140.5" y="670.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="137.8" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="140.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="137.8" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.8" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="137.8" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="140.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.14%)</title><rect x="138.3" y="819.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.14%)</title><rect x="138.3" y="803.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.14%)</title><rect x="138.3" y="787.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.08%)</title><rect x="139.0" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.06%)</title><rect x="139.2" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.06%)</title><rect x="139.2" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.2" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.04%)</title><rect x="139.5" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 0.27%)</title><rect x="139.9" y="835.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.22%)</title><rect x="140.5" y="819.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.15%)</title><rect x="141.0" y="803.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="141.3" y="787.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.3" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.13%)</title><rect x="141.3" y="771.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.3" y="782.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="141.6" y="755.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="144.6" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="142.3" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="145.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="142.5" y="739.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="145.5" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="142.5" y="723.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="145.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (948 samples, 12.12%)</title><rect x="143.1" y="835.0" width="143.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.1" y="846.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (944 samples, 12.07%)</title><rect x="143.7" y="819.0" width="142.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.7" y="830.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="143.7" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="143.7" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.7" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="143.7" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="143.7" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.7" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="143.7" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.06%)</title><rect x="144.0" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.0" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="144.4" y="787.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="147.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (937 samples, 11.98%)</title><rect x="144.7" y="803.0" width="141.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.7" y="814.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (930 samples, 11.89%)</title><rect x="144.7" y="787.0" width="140.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.7" y="798.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (930 samples, 11.89%)</title><rect x="144.7" y="771.0" width="140.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.7" y="782.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="146.0" y="755.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="149.0" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (785 samples, 10.04%)</title><rect x="146.7" y="755.0" width="118.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="149.7" y="766.0">Java_org_rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="147.3" y="739.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="150.3" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.03%)</title><rect x="147.6" y="739.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="150.6" y="750.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.03%)</title><rect x="148.2" y="739.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="151.2" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="148.5" y="739.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="151.5" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (770 samples, 9.85%)</title><rect x="149.0" y="739.0" width="116.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="152.0" y="750.0">rocksdb_put_he..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="149.6" y="723.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="152.6" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.05%)</title><rect x="150.0" y="723.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="153.0" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.04%)</title><rect x="150.2" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="153.2" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.10%)</title><rect x="150.6" y="723.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="153.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="150.8" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="153.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.06%)</title><rect x="151.1" y="707.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="154.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (751 samples, 9.60%)</title><rect x="151.8" y="723.0" width="113.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="154.8" y="734.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="152.1" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="155.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (747 samples, 9.55%)</title><rect x="152.4" y="707.0" width="112.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="155.4" y="718.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (744 samples, 9.51%)</title><rect x="152.4" y="691.0" width="112.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="155.4" y="702.0">rocksdb::DB::P..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="152.7" y="675.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="155.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (4 samples, 0.05%)</title><rect x="153.4" y="675.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="156.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (708 samples, 9.05%)</title><rect x="154.0" y="675.0" width="106.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="157.0" y="686.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.03%)</title><rect x="154.9" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="157.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="155.2" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="158.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (679 samples, 8.68%)</title><rect x="155.5" y="659.0" width="102.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="158.5" y="670.0">rocksdb::DBI..</text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.06%)</title><rect x="160.3" y="643.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="163.3" y="654.0"></text>
</g>
<g>
<title>__sched_yield (22 samples, 0.28%)</title><rect x="161.0" y="643.0" width="3.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="164.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.22%)</title><rect x="161.8" y="627.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="164.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.22%)</title><rect x="161.8" y="611.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (10 samples, 0.13%)</title><rect x="162.9" y="595.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.9" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (10 samples, 0.13%)</title><rect x="162.9" y="579.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.9" y="590.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.13%)</title><rect x="162.9" y="563.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.9" y="574.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.13%)</title><rect x="162.9" y="547.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.9" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="164.4" y="643.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="167.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.04%)</title><rect x="165.4" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="168.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (279 samples, 3.57%)</title><rect x="165.9" y="643.0" width="42.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="168.9" y="654.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (270 samples, 3.45%)</title><rect x="166.6" y="627.0" width="40.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="169.6" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.03%)</title><rect x="167.4" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="170.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (262 samples, 3.35%)</title><rect x="167.7" y="611.0" width="39.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="170.7" y="622.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (9 samples, 0.12%)</title><rect x="167.7" y="595.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="170.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.03%)</title><rect x="169.0" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="172.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (236 samples, 3.02%)</title><rect x="169.3" y="595.0" width="35.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="172.3" y="606.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="169.9" y="579.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="172.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (229 samples, 2.93%)</title><rect x="170.4" y="579.0" width="34.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="173.4" y="590.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="171.2" y="563.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="174.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="171.5" y="563.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="174.5" y="574.0"></text>
</g>
<g>
<title>__write (218 samples, 2.79%)</title><rect x="171.8" y="563.0" width="32.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="174.8" y="574.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (214 samples, 2.74%)</title><rect x="172.4" y="547.0" width="32.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.4" y="558.0">en..</text>
</g>
<g>
<title>do_syscall_64 (213 samples, 2.72%)</title><rect x="172.5" y="531.0" width="32.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="175.5" y="542.0">do..</text>
</g>
<g>
<title>__x64_sys_write (206 samples, 2.63%)</title><rect x="173.6" y="515.0" width="31.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="176.6" y="526.0">__..</text>
</g>
<g>
<title>ksys_write (206 samples, 2.63%)</title><rect x="173.6" y="499.0" width="31.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.6" y="510.0">ks..</text>
</g>
<g>
<title>__fdget_pos (9 samples, 0.12%)</title><rect x="173.6" y="483.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="176.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="173.6" y="467.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.6" y="478.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="173.6" y="451.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="176.6" y="462.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="174.6" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.6" y="478.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="174.9" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.9" y="494.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="175.5" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="178.5" y="494.0"></text>
</g>
<g>
<title>vfs_write (190 samples, 2.43%)</title><rect x="176.0" y="483.0" width="28.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.0" y="494.0">vf..</text>
</g>
<g>
<title>__vfs_write (177 samples, 2.26%)</title><rect x="176.7" y="467.0" width="26.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.7" y="478.0">_..</text>
</g>
<g>
<title>new_sync_write (176 samples, 2.25%)</title><rect x="176.9" y="451.0" width="26.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.9" y="462.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (174 samples, 2.23%)</title><rect x="177.0" y="435.0" width="26.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="180.0" y="446.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (167 samples, 2.14%)</title><rect x="177.3" y="419.0" width="25.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="180.3" y="430.0">_..</text>
</g>
<g>
<title>file_update_time (6 samples, 0.08%)</title><rect x="177.9" y="403.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.9" y="414.0"></text>
</g>
<g>
<title>generic_update_time (4 samples, 0.05%)</title><rect x="178.1" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="181.1" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.04%)</title><rect x="178.2" y="371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="181.2" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.04%)</title><rect x="178.2" y="355.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.2" y="366.0"></text>
</g>
<g>
<title>generic_perform_write (153 samples, 1.96%)</title><rect x="178.9" y="403.0" width="23.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="181.9" y="414.0">g..</text>
</g>
<g>
<title>ext4_da_write_begin (45 samples, 0.58%)</title><rect x="179.3" y="387.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.3" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (13 samples, 0.17%)</title><rect x="180.8" y="371.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="183.8" y="382.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.03%)</title><rect x="180.8" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="183.8" y="366.0"></text>
</g>
<g>
<title>jbd2__journal_start (11 samples, 0.14%)</title><rect x="181.1" y="355.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="184.1" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.05%)</title><rect x="181.4" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.4" y="350.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.06%)</title><rect x="182.0" y="339.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.0" y="350.0"></text>
</g>
<g>
<title>ext4_block_write_begin (5 samples, 0.06%)</title><rect x="182.8" y="371.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="185.8" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (17 samples, 0.22%)</title><rect x="183.5" y="371.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="186.5" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (17 samples, 0.22%)</title><rect x="183.5" y="355.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="186.5" y="366.0"></text>
</g>
<g>
<title>find_get_entry (14 samples, 0.18%)</title><rect x="184.0" y="339.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.0" y="350.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="185.6" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="188.6" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end (93 samples, 1.19%)</title><rect x="186.1" y="387.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.1" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_stop (17 samples, 0.22%)</title><rect x="186.2" y="371.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="189.2" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (17 samples, 0.22%)</title><rect x="186.2" y="355.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="189.2" y="366.0"></text>
</g>
<g>
<title>__wake_up (6 samples, 0.08%)</title><rect x="186.7" y="339.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="189.7" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.08%)</title><rect x="186.7" y="323.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="189.7" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="186.7" y="307.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="189.7" y="318.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.10%)</title><rect x="187.6" y="339.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.6" y="350.0"></text>
</g>
<g>
<title>generic_write_end (74 samples, 0.95%)</title><rect x="188.8" y="371.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="191.8" y="382.0"></text>
</g>
<g>
<title>__mark_inode_dirty (62 samples, 0.79%)</title><rect x="189.1" y="355.0" width="9.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.1" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode (59 samples, 0.75%)</title><rect x="189.6" y="339.0" width="8.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.6" y="350.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (59 samples, 0.75%)</title><rect x="189.6" y="323.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="192.6" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (36 samples, 0.46%)</title><rect x="190.2" y="307.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="193.2" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="190.3" y="291.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.3" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (32 samples, 0.41%)</title><rect x="190.8" y="291.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="193.8" y="302.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.03%)</title><rect x="192.1" y="275.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="195.1" y="286.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.03%)</title><rect x="192.1" y="259.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.1" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (21 samples, 0.27%)</title><rect x="192.4" y="275.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.4" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (20 samples, 0.26%)</title><rect x="192.6" y="259.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.6" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="193.0" y="243.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.0" y="254.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.04%)</title><rect x="193.5" y="243.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="196.5" y="254.0"></text>
</g>
<g>
<title>crypto_shash_update (11 samples, 0.14%)</title><rect x="193.9" y="243.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.9" y="254.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (10 samples, 0.13%)</title><rect x="194.1" y="227.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.1" y="238.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (19 samples, 0.24%)</title><rect x="195.6" y="307.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="198.6" y="318.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (14 samples, 0.18%)</title><rect x="195.6" y="291.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="198.6" y="302.0"></text>
</g>
<g>
<title>__getblk_gfp (4 samples, 0.05%)</title><rect x="196.7" y="275.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.7" y="286.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.05%)</title><rect x="196.7" y="259.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.7" y="270.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.04%)</title><rect x="197.3" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.3" y="286.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.06%)</title><rect x="197.7" y="291.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.7" y="302.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.03%)</title><rect x="197.9" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.9" y="286.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (2 samples, 0.03%)</title><rect x="198.2" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="201.2" y="286.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="198.5" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="201.5" y="366.0"></text>
</g>
<g>
<title>block_write_end (7 samples, 0.09%)</title><rect x="198.8" y="355.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="201.8" y="366.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (4 samples, 0.05%)</title><rect x="198.9" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.9" y="350.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.03%)</title><rect x="199.5" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="202.5" y="350.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (5 samples, 0.06%)</title><rect x="200.3" y="387.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="203.3" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.05%)</title><rect x="200.4" y="371.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.4" y="382.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (4 samples, 0.05%)</title><rect x="201.0" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.0" y="398.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="201.6" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.6" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="202.1" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.1" y="414.0"></text>
</g>
<g>
<title>ext4_write_checks (3 samples, 0.04%)</title><rect x="202.7" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="205.7" y="430.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.03%)</title><rect x="202.8" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.8" y="414.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="203.4" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.4" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="203.9" y="467.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="206.9" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="203.9" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.9" y="462.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="204.2" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.2" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="204.2" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="207.2" y="446.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="204.2" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="207.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="205.0" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="208.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (13 samples, 0.17%)</title><rect x="205.3" y="595.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="208.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="205.3" y="579.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="208.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.05%)</title><rect x="205.6" y="579.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="208.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (6 samples, 0.08%)</title><rect x="206.3" y="579.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="209.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="207.7" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="210.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.03%)</title><rect x="208.0" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="211.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.05%)</title><rect x="208.3" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="211.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.03%)</title><rect x="209.2" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="212.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (110 samples, 1.41%)</title><rect x="209.6" y="643.0" width="16.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="212.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (110 samples, 1.41%)</title><rect x="209.6" y="627.0" width="16.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="212.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (108 samples, 1.38%)</title><rect x="209.9" y="611.0" width="16.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="212.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (95 samples, 1.21%)</title><rect x="211.0" y="595.0" width="14.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="214.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (94 samples, 1.20%)</title><rect x="211.1" y="579.0" width="14.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="214.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (88 samples, 1.13%)</title><rect x="211.7" y="563.0" width="13.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="214.7" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (10 samples, 0.13%)</title><rect x="212.0" y="547.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="215.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="212.5" y="531.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="215.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.04%)</title><rect x="213.1" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="216.1" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (70 samples, 0.90%)</title><rect x="213.6" y="547.0" width="10.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="216.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (63 samples, 0.81%)</title><rect x="214.0" y="531.0" width="9.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="217.0" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (24 samples, 0.31%)</title><rect x="218.8" y="515.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="221.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="219.0" y="499.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="222.0" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="219.3" y="499.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="222.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (17 samples, 0.22%)</title><rect x="219.9" y="499.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="222.9" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.09%)</title><rect x="221.0" y="483.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="224.0" y="494.0"></text>
</g>
<g>
<title>memcmp@plt (3 samples, 0.04%)</title><rect x="222.0" y="483.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="225.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.08%)</title><rect x="222.6" y="515.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="225.6" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="223.1" y="499.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="226.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="223.8" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="226.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.04%)</title><rect x="224.3" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="227.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="224.7" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="227.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="225.0" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="228.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (5 samples, 0.06%)</title><rect x="225.5" y="595.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="228.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (67 samples, 0.86%)</title><rect x="226.2" y="643.0" width="10.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="229.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (63 samples, 0.81%)</title><rect x="226.7" y="627.0" width="9.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="229.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (59 samples, 0.75%)</title><rect x="227.3" y="611.0" width="8.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="230.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 0.72%)</title><rect x="227.4" y="595.0" width="8.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="230.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (54 samples, 0.69%)</title><rect x="227.6" y="579.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="230.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (48 samples, 0.61%)</title><rect x="228.3" y="563.0" width="7.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="231.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (3 samples, 0.04%)</title><rect x="229.3" y="547.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="232.3" y="558.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="229.7" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="232.7" y="558.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="229.7" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="232.7" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="229.7" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="232.7" y="526.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="229.7" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.7" y="510.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="229.7" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.7" y="494.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="229.7" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="232.7" y="478.0"></text>
</g>
<g>
<title>do_anonymous_page (2 samples, 0.03%)</title><rect x="229.7" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="230.0" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="233.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (34 samples, 0.43%)</title><rect x="230.3" y="547.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="233.3" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (34 samples, 0.43%)</title><rect x="230.3" y="531.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="233.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (30 samples, 0.38%)</title><rect x="230.8" y="515.0" width="4.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="233.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (13 samples, 0.17%)</title><rect x="232.7" y="499.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="235.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="232.7" y="483.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="235.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.14%)</title><rect x="233.0" y="483.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="236.0" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="233.6" y="467.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="236.6" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="233.9" y="467.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="236.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.04%)</title><rect x="234.8" y="499.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="237.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="235.9" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="238.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (68 samples, 0.87%)</title><rect x="236.3" y="643.0" width="10.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="239.3" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (18 samples, 0.23%)</title><rect x="242.8" y="627.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="245.8" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.18%)</title><rect x="243.4" y="611.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="246.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.18%)</title><rect x="243.4" y="595.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.4" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.12%)</title><rect x="244.0" y="579.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="247.0" y="590.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.12%)</title><rect x="244.0" y="563.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="247.0" y="574.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.09%)</title><rect x="244.2" y="547.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="247.2" y="558.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.05%)</title><rect x="244.6" y="531.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="247.6" y="542.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="244.9" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="247.9" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="245.7" y="627.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="248.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (47 samples, 0.60%)</title><rect x="246.6" y="643.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="249.6" y="654.0"></text>
</g>
<g>
<title>__sched_yield (21 samples, 0.27%)</title><rect x="246.8" y="627.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="249.8" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.24%)</title><rect x="247.1" y="611.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="250.1" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.24%)</title><rect x="247.1" y="595.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.1" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (12 samples, 0.15%)</title><rect x="248.1" y="579.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="251.1" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (12 samples, 0.15%)</title><rect x="248.1" y="563.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.1" y="574.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.14%)</title><rect x="248.3" y="547.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.3" y="558.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.14%)</title><rect x="248.3" y="531.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="251.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (25 samples, 0.32%)</title><rect x="249.9" y="627.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="252.9" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (9 samples, 0.12%)</title><rect x="252.2" y="611.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="255.2" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="252.8" y="595.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="252.8" y="579.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="255.8" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="252.9" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.9" y="574.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="252.9" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="255.9" y="558.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="252.9" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.9" y="542.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="253.1" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.1" y="526.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="253.1" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="253.7" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="256.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.04%)</title><rect x="254.0" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="257.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (6 samples, 0.08%)</title><rect x="254.6" y="643.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="257.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (6 samples, 0.08%)</title><rect x="255.5" y="643.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="258.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (6 samples, 0.08%)</title><rect x="255.5" y="627.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="258.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.03%)</title><rect x="256.4" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="259.4" y="654.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*) (2 samples, 0.03%)</title><rect x="257.2" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="260.2" y="654.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) (2 samples, 0.03%)</title><rect x="257.5" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="260.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.04%)</title><rect x="257.9" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="260.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="259.0" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="262.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="259.4" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="262.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="259.7" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="262.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="260.3" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="263.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.03%)</title><rect x="260.9" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="263.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 0.20%)</title><rect x="261.2" y="675.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="264.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="261.2" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="264.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.04%)</title><rect x="261.5" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="264.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="262.3" y="659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="265.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.03%)</title><rect x="262.9" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="265.9" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="263.2" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="266.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="263.7" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="266.7" y="686.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="264.1" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="267.1" y="686.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="264.4" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="267.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="264.7" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="267.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="265.2" y="755.0" width="6.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="268.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.08%)</title><rect x="265.2" y="739.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="268.2" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.04%)</title><rect x="266.1" y="739.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="269.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (22 samples, 0.28%)</title><rect x="266.5" y="739.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="269.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.19%)</title><rect x="267.4" y="723.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="270.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.19%)</title><rect x="267.4" y="707.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.15%)</title><rect x="267.9" y="691.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.9" y="702.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.15%)</title><rect x="267.9" y="675.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.9" y="686.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.13%)</title><rect x="268.2" y="659.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="271.2" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="268.6" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="271.6" y="654.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="268.6" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="271.6" y="638.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="268.6" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.6" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.04%)</title><rect x="268.9" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="271.9" y="654.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="268.9" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="271.9" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (4 samples, 0.05%)</title><rect x="270.0" y="739.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="273.0" y="750.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.04%)</title><rect x="270.9" y="739.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="273.9" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="270.9" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="273.9" y="734.0"></text>
</g>
<g>
<title>__libc_malloc (6 samples, 0.08%)</title><rect x="271.4" y="755.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="274.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (81 samples, 1.04%)</title><rect x="272.3" y="755.0" width="12.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="275.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.95%)</title><rect x="273.3" y="739.0" width="11.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="276.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 0.95%)</title><rect x="273.3" y="723.0" width="11.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="276.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (74 samples, 0.95%)</title><rect x="273.3" y="707.0" width="11.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="276.3" y="718.0"></text>
</g>
<g>
<title>do_futex (73 samples, 0.93%)</title><rect x="273.5" y="691.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.5" y="702.0"></text>
</g>
<g>
<title>futex_wake (72 samples, 0.92%)</title><rect x="273.6" y="675.0" width="10.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="276.6" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.06%)</title><rect x="274.2" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.2" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.04%)</title><rect x="274.5" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="277.5" y="654.0"></text>
</g>
<g>
<title>wake_q_add_safe (4 samples, 0.05%)</title><rect x="275.0" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (59 samples, 0.75%)</title><rect x="275.6" y="659.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="278.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 0.75%)</title><rect x="275.6" y="643.0" width="8.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="278.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (59 samples, 0.75%)</title><rect x="275.6" y="627.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.6" y="638.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.04%)</title><rect x="284.6" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="287.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (4 samples, 0.05%)</title><rect x="285.1" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="285.2" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="285.4" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="285.4" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (3 samples, 0.04%)</title><rect x="285.7" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.7" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="285.7" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="285.7" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="285.7" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="285.7" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (19 samples, 0.24%)</title><rect x="286.1" y="851.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.17%)</title><rect x="286.7" y="835.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.06%)</title><rect x="286.9" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="287.0" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="287.3" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.09%)</title><rect x="287.6" y="819.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="288.7" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.08%)</title><rect x="289.0" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="289.0" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="289.0" y="819.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="289.6" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.35%)</title><rect x="290.1" y="883.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.13%)</title><rect x="291.0" y="867.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.13%)</title><rect x="291.0" y="851.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.0" y="862.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="292.2" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (11 samples, 0.14%)</title><rect x="292.5" y="867.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.06%)</title><rect x="294.1" y="883.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.06%)</title><rect x="294.1" y="867.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.1" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.06%)</title><rect x="294.1" y="851.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="294.4" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="294.4" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.4" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.03%)</title><rect x="294.4" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.12%)</title><rect x="294.9" y="883.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="294.9" y="867.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="295.0" y="851.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.0" y="862.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="295.6" y="835.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="298.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="296.2" y="883.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="299.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="296.2" y="867.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="297.0" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.0" y="862.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (3 samples, 0.04%)</title><rect x="297.5" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (135 samples, 1.73%)</title><rect x="297.9" y="899.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (135 samples, 1.73%)</title><rect x="297.9" y="883.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.9" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="298.8" y="867.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="301.8" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (25 samples, 0.32%)</title><rect x="299.6" y="867.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="302.6" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.08%)</title><rect x="299.6" y="851.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="302.6" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="300.5" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="303.5" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.19%)</title><rect x="301.1" y="851.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="304.1" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="301.7" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="304.7" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.06%)</title><rect x="302.0" y="835.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="305.0" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="302.7" y="835.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="305.7" y="846.0"></text>
</g>
<g>
<title>__recv (97 samples, 1.24%)</title><rect x="303.5" y="867.0" width="14.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="306.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.07%)</title><rect x="305.5" y="851.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="308.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (83 samples, 1.06%)</title><rect x="305.6" y="835.0" width="12.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (75 samples, 0.96%)</title><rect x="306.8" y="819.0" width="11.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.8" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (73 samples, 0.93%)</title><rect x="306.8" y="803.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.8" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (60 samples, 0.77%)</title><rect x="307.0" y="787.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="310.0" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (46 samples, 0.59%)</title><rect x="307.6" y="771.0" width="6.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="310.6" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (45 samples, 0.58%)</title><rect x="307.7" y="755.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="310.7" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.17%)</title><rect x="308.5" y="739.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="311.5" y="750.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.15%)</title><rect x="308.6" y="723.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="311.6" y="734.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="308.9" y="707.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="311.9" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.06%)</title><rect x="309.7" y="707.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="312.7" y="718.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.06%)</title><rect x="309.7" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="312.7" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="310.6" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="313.6" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.14%)</title><rect x="311.2" y="739.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="314.2" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.12%)</title><rect x="311.2" y="723.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.2" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.08%)</title><rect x="311.6" y="707.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.6" y="718.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="311.6" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="314.6" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="311.8" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.8" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.04%)</title><rect x="312.1" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.1" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="312.1" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="315.1" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.12%)</title><rect x="313.1" y="739.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="316.1" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="313.5" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="316.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="313.8" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.8" y="734.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="313.9" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="316.9" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.13%)</title><rect x="314.5" y="771.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="317.5" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="314.7" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="317.7" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.09%)</title><rect x="315.0" y="755.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.0" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.09%)</title><rect x="315.0" y="739.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="318.0" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.04%)</title><rect x="315.6" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="318.6" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.15%)</title><rect x="316.0" y="787.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="319.0" y="798.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.12%)</title><rect x="316.0" y="771.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="319.0" y="782.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.12%)</title><rect x="316.0" y="755.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="319.0" y="766.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.12%)</title><rect x="316.0" y="739.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="317.4" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="320.4" y="782.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="317.8" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="320.8" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="318.3" y="915.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="321.3" y="926.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="318.3" y="899.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="321.3" y="910.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="318.3" y="883.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="321.3" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=5904] (1,962 samples, 25.09%)</title><rect x="319.0" y="963.0" width="296.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="322.0" y="974.0">[NIO Selector #1 tid=5904]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,961 samples, 25.08%)</title><rect x="319.2" y="947.0" width="295.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.2" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="320.7" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.06%)</title><rect x="320.8" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (99 samples, 1.27%)</title><rect x="321.6" y="931.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (94 samples, 1.20%)</title><rect x="322.4" y="915.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="323.3" y="899.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="326.3" y="910.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.08%)</title><rect x="323.9" y="899.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="326.9" y="910.0"></text>
</g>
<g>
<title>epoll_wait (78 samples, 1.00%)</title><rect x="324.8" y="899.0" width="11.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="327.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (63 samples, 0.81%)</title><rect x="327.0" y="883.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 0.79%)</title><rect x="327.2" y="867.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (57 samples, 0.73%)</title><rect x="327.8" y="851.0" width="8.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.8" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (57 samples, 0.73%)</title><rect x="327.8" y="835.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="330.8" y="846.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="327.9" y="819.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="330.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="327.9" y="803.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.9" y="814.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="327.9" y="787.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="330.9" y="798.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="328.5" y="819.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.5" y="830.0"></text>
</g>
<g>
<title>ep_poll (41 samples, 0.52%)</title><rect x="329.0" y="819.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="332.0" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (33 samples, 0.42%)</title><rect x="329.4" y="803.0" width="5.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="332.4" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (29 samples, 0.37%)</title><rect x="329.9" y="787.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.9" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (22 samples, 0.28%)</title><rect x="330.7" y="771.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="333.7" y="782.0"></text>
</g>
<g>
<title>sock_poll (19 samples, 0.24%)</title><rect x="331.1" y="755.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="334.1" y="766.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.09%)</title><rect x="332.6" y="739.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="335.6" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="333.7" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.7" y="750.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="334.0" y="771.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="337.0" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.06%)</title><rect x="334.4" y="803.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="337.4" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.06%)</title><rect x="334.4" y="787.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="337.4" y="798.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.06%)</title><rect x="334.4" y="771.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="337.4" y="782.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.06%)</title><rect x="334.4" y="755.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="337.4" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="334.6" y="739.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="337.6" y="750.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.09%)</title><rect x="335.2" y="819.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="338.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,846 samples, 23.61%)</title><rect x="336.5" y="931.0" width="278.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.5" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,834 samples, 23.45%)</title><rect x="337.7" y="915.0" width="276.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.7" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,697 samples, 21.70%)</title><rect x="338.2" y="899.0" width="256.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.2" y="910.0">one/nio/http/HttpSession.processHt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,628 samples, 20.82%)</title><rect x="340.3" y="883.0" width="245.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.3" y="894.0">one/nio/http/HttpSession.handlePa..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,626 samples, 20.79%)</title><rect x="340.3" y="867.0" width="245.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.3" y="878.0">one/nio/http/HttpServer.handleReq..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,597 samples, 20.42%)</title><rect x="340.5" y="851.0" width="240.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.5" y="862.0">RequestHandler1_entity.handleReq..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (573 samples, 7.33%)</title><rect x="340.5" y="835.0" width="86.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.5" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="340.5" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (562 samples, 7.19%)</title><rect x="340.8" y="819.0" width="84.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.8" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.24%)</title><rect x="340.8" y="803.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="341.2" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.18%)</title><rect x="341.5" y="787.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.05%)</title><rect x="341.8" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="342.4" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="342.4" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="342.4" y="739.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (543 samples, 6.94%)</title><rect x="343.6" y="803.0" width="82.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.6" y="814.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (543 samples, 6.94%)</title><rect x="343.6" y="787.0" width="82.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.6" y="798.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (543 samples, 6.94%)</title><rect x="343.6" y="771.0" width="82.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.6" y="782.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (543 samples, 6.94%)</title><rect x="343.6" y="755.0" width="82.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.6" y="766.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.12%)</title><rect x="345.0" y="739.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="348.0" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="345.4" y="723.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="348.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="345.7" y="723.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="348.7" y="734.0"></text>
</g>
<g>
<title>send (524 samples, 6.70%)</title><rect x="346.5" y="739.0" width="79.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="349.5" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (514 samples, 6.57%)</title><rect x="348.0" y="723.0" width="77.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="351.0" y="734.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (514 samples, 6.57%)</title><rect x="348.0" y="707.0" width="77.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="351.0" y="718.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (508 samples, 6.50%)</title><rect x="348.8" y="691.0" width="76.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="351.8" y="702.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (507 samples, 6.48%)</title><rect x="348.8" y="675.0" width="76.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="351.8" y="686.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (493 samples, 6.30%)</title><rect x="349.7" y="659.0" width="74.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.7" y="670.0">sock_sen..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="350.1" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="353.1" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (475 samples, 6.07%)</title><rect x="350.4" y="643.0" width="71.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.4" y="654.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (474 samples, 6.06%)</title><rect x="350.6" y="627.0" width="71.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="353.6" y="638.0">tcp_send..</text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="351.6" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="354.6" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (460 samples, 5.88%)</title><rect x="352.5" y="611.0" width="69.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.5" y="622.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.06%)</title><rect x="353.9" y="595.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="356.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="354.2" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="357.2" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.09%)</title><rect x="354.8" y="595.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="357.8" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.08%)</title><rect x="354.9" y="579.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="357.9" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (37 samples, 0.47%)</title><rect x="356.0" y="595.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="359.0" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (35 samples, 0.45%)</title><rect x="356.3" y="579.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.3" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (24 samples, 0.31%)</title><rect x="356.5" y="563.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="359.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (14 samples, 0.18%)</title><rect x="356.5" y="547.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="359.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.06%)</title><rect x="357.5" y="531.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.5" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="358.3" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="361.3" y="542.0"></text>
</g>
<g>
<title>memset (8 samples, 0.10%)</title><rect x="358.9" y="547.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.9" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.08%)</title><rect x="360.1" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="363.1" y="574.0"></text>
</g>
<g>
<title>memset (2 samples, 0.03%)</title><rect x="361.3" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.3" y="574.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="361.6" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="364.6" y="606.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="361.9" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (390 samples, 4.99%)</title><rect x="362.2" y="595.0" width="58.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="365.2" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (390 samples, 4.99%)</title><rect x="362.2" y="579.0" width="58.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="365.2" y="590.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (389 samples, 4.97%)</title><rect x="362.3" y="563.0" width="58.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.3" y="574.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (359 samples, 4.59%)</title><rect x="363.7" y="547.0" width="54.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="366.7" y="558.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (343 samples, 4.39%)</title><rect x="365.4" y="531.0" width="51.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="368.4" y="542.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (342 samples, 4.37%)</title><rect x="365.4" y="515.0" width="51.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="368.4" y="526.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (337 samples, 4.31%)</title><rect x="366.0" y="499.0" width="50.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.0" y="510.0">ip_lo..</text>
</g>
<g>
<title>ip_output (336 samples, 4.30%)</title><rect x="366.1" y="483.0" width="50.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="369.1" y="494.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (333 samples, 4.26%)</title><rect x="366.6" y="467.0" width="50.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="369.6" y="478.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.08%)</title><rect x="366.6" y="451.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.6" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (326 samples, 4.17%)</title><rect x="367.5" y="451.0" width="49.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="370.5" y="462.0">__ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="367.6" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="370.6" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (322 samples, 4.12%)</title><rect x="367.9" y="435.0" width="48.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="370.9" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (297 samples, 3.80%)</title><rect x="367.9" y="419.0" width="44.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="370.9" y="430.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (296 samples, 3.79%)</title><rect x="368.1" y="403.0" width="44.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.1" y="414.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (293 samples, 3.75%)</title><rect x="368.5" y="387.0" width="44.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="371.5" y="398.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (292 samples, 3.73%)</title><rect x="368.5" y="371.0" width="44.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.5" y="382.0">__so..</text>
</g>
<g>
<title>net_rx_action (283 samples, 3.62%)</title><rect x="369.9" y="355.0" width="42.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="372.9" y="366.0">net_..</text>
</g>
<g>
<title>process_backlog (276 samples, 3.53%)</title><rect x="370.9" y="339.0" width="41.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="373.9" y="350.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (274 samples, 3.50%)</title><rect x="371.2" y="323.0" width="41.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.2" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (274 samples, 3.50%)</title><rect x="371.2" y="307.0" width="41.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="374.2" y="318.0">__n..</text>
</g>
<g>
<title>ip_rcv (274 samples, 3.50%)</title><rect x="371.2" y="291.0" width="41.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.2" y="302.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.04%)</title><rect x="371.4" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (270 samples, 3.45%)</title><rect x="371.8" y="275.0" width="40.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="374.8" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (269 samples, 3.44%)</title><rect x="372.0" y="259.0" width="40.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.0" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (267 samples, 3.41%)</title><rect x="372.1" y="243.0" width="40.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.1" y="254.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (266 samples, 3.40%)</title><rect x="372.3" y="227.0" width="40.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="375.3" y="238.0">ip_..</text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="372.8" y="211.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (261 samples, 3.34%)</title><rect x="373.1" y="211.0" width="39.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="376.1" y="222.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.13%)</title><rect x="373.5" y="195.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="376.5" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="374.7" y="179.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="377.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="375.3" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="378.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (242 samples, 3.09%)</title><rect x="375.8" y="195.0" width="36.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.8" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.10%)</title><rect x="376.1" y="179.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (231 samples, 2.95%)</title><rect x="377.4" y="179.0" width="34.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="380.4" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.19%)</title><rect x="378.3" y="163.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.3" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (15 samples, 0.19%)</title><rect x="378.3" y="147.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.19%)</title><rect x="378.3" y="131.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="381.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.19%)</title><rect x="378.3" y="115.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="381.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.17%)</title><rect x="378.5" y="99.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="381.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (47 samples, 0.60%)</title><rect x="380.9" y="163.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.9" y="174.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="382.3" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="385.3" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (34 samples, 0.43%)</title><rect x="382.7" y="147.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="385.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.33%)</title><rect x="383.2" y="131.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="386.2" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.13%)</title><rect x="383.2" y="115.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="386.2" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (9 samples, 0.12%)</title><rect x="383.3" y="99.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="386.3" y="110.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.10%)</title><rect x="383.5" y="83.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="386.5" y="94.0"></text>
</g>
<g>
<title>skb_release_all (16 samples, 0.20%)</title><rect x="384.7" y="115.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.7" y="126.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.19%)</title><rect x="384.8" y="99.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.8" y="110.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.12%)</title><rect x="385.7" y="83.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="388.7" y="94.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.12%)</title><rect x="385.7" y="67.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="388.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="386.6" y="51.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="389.6" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.04%)</title><rect x="387.4" y="131.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.4" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (155 samples, 1.98%)</title><rect x="388.0" y="163.0" width="23.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="391.0" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (155 samples, 1.98%)</title><rect x="388.0" y="147.0" width="23.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="391.0" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (154 samples, 1.97%)</title><rect x="388.1" y="131.0" width="23.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="391.1" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (154 samples, 1.97%)</title><rect x="388.1" y="115.0" width="23.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="391.1" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (153 samples, 1.96%)</title><rect x="388.3" y="99.0" width="23.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="391.3" y="110.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="411.4" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.4" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="411.7" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.7" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="411.7" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.7" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (25 samples, 0.32%)</title><rect x="412.7" y="419.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="415.7" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (25 samples, 0.32%)</title><rect x="412.7" y="403.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="415.7" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.09%)</title><rect x="414.1" y="387.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="417.1" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.08%)</title><rect x="414.2" y="371.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="417.2" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="414.4" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="417.4" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="415.2" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="418.2" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.06%)</title><rect x="415.8" y="387.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.8" y="398.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="417.1" y="531.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="420.1" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="417.3" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="420.3" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (16 samples, 0.20%)</title><rect x="418.2" y="547.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.2" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (12 samples, 0.15%)</title><rect x="418.8" y="531.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.8" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.15%)</title><rect x="418.8" y="515.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="421.8" y="526.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.15%)</title><rect x="418.8" y="499.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="421.8" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.12%)</title><rect x="418.9" y="483.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="421.9" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="420.3" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="423.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="420.3" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="423.3" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="420.6" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="423.6" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.06%)</title><rect x="421.2" y="595.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="424.2" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="421.2" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="424.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.04%)</title><rect x="421.5" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="424.5" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.17%)</title><rect x="422.1" y="643.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="425.1" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (11 samples, 0.14%)</title><rect x="422.4" y="627.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.4" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.14%)</title><rect x="422.4" y="611.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.4" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (6 samples, 0.08%)</title><rect x="423.2" y="595.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.2" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="423.8" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="426.8" y="590.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (2 samples, 0.03%)</title><rect x="423.8" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.8" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.10%)</title><rect x="424.1" y="659.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.1" y="670.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.09%)</title><rect x="424.1" y="643.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="427.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="424.1" y="627.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.1" y="638.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="424.1" y="611.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="427.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.12%)</title><rect x="425.6" y="819.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="425.7" y="803.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="425.9" y="787.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.04%)</title><rect x="426.5" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.04%)</title><rect x="426.5" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.5" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (3 samples, 0.04%)</title><rect x="426.5" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.5" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.03%)</title><rect x="426.6" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.33%)</title><rect x="426.9" y="835.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.33%)</title><rect x="426.9" y="819.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.04%)</title><rect x="428.1" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.14%)</title><rect x="428.6" y="803.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="428.7" y="787.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.7" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.13%)</title><rect x="428.7" y="771.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.7" y="782.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="428.9" y="755.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="431.9" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.08%)</title><rect x="429.3" y="755.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="432.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="429.8" y="739.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="432.8" y="750.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="429.8" y="723.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="432.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="430.2" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="430.2" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="430.2" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="430.2" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (998 samples, 12.76%)</title><rect x="430.8" y="835.0" width="150.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.8" y="846.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="431.0" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="431.0" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (993 samples, 12.70%)</title><rect x="431.6" y="819.0" width="149.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.6" y="830.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.14%)</title><rect x="431.6" y="803.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.6" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="432.4" y="787.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="435.4" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="432.7" y="787.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="435.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (982 samples, 12.56%)</title><rect x="433.3" y="803.0" width="148.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.3" y="814.0">ru/mail/polis/dao/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (974 samples, 12.46%)</title><rect x="433.3" y="787.0" width="146.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.3" y="798.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (974 samples, 12.46%)</title><rect x="433.3" y="771.0" width="146.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.3" y="782.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="434.0" y="755.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="437.0" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (834 samples, 10.66%)</title><rect x="434.5" y="755.0" width="125.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="437.5" y="766.0">Java_org_rocksd..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="435.2" y="739.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="438.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="435.8" y="739.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="438.8" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (823 samples, 10.52%)</title><rect x="436.1" y="739.0" width="124.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="439.1" y="750.0">rocksdb_put_hel..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="436.6" y="723.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="439.6" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.06%)</title><rect x="437.0" y="723.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="440.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.12%)</title><rect x="437.8" y="723.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="440.8" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="437.9" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="440.9" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.06%)</title><rect x="438.4" y="707.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="441.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (800 samples, 10.23%)</title><rect x="439.1" y="723.0" width="120.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="442.1" y="734.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (799 samples, 10.22%)</title><rect x="439.3" y="707.0" width="120.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="442.3" y="718.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (794 samples, 10.15%)</title><rect x="439.3" y="691.0" width="119.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="442.3" y="702.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="440.1" y="675.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="443.1" y="686.0"></text>
</g>
<g>
<title>cfree (4 samples, 0.05%)</title><rect x="440.4" y="675.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="443.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.03%)</title><rect x="441.1" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="444.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (753 samples, 9.63%)</title><rect x="441.4" y="675.0" width="113.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="444.4" y="686.0">rocksdb::DBImp..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.03%)</title><rect x="442.0" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="445.0" y="670.0"></text>
</g>
<g>
<title>pthread_cond_destroy@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="442.5" y="659.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="445.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (727 samples, 9.30%)</title><rect x="443.1" y="659.0" width="109.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="446.1" y="670.0">rocksdb::DBIm..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="447.6" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="450.6" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="448.2" y="643.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="451.2" y="654.0"></text>
</g>
<g>
<title>__sched_yield (23 samples, 0.29%)</title><rect x="448.5" y="643.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="451.5" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.23%)</title><rect x="449.3" y="627.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="452.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.23%)</title><rect x="449.3" y="611.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="452.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (13 samples, 0.17%)</title><rect x="450.0" y="595.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.0" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (13 samples, 0.17%)</title><rect x="450.0" y="579.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="453.0" y="590.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.17%)</title><rect x="450.0" y="563.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="453.0" y="574.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.17%)</title><rect x="450.0" y="547.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="453.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.12%)</title><rect x="452.0" y="643.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="455.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.03%)</title><rect x="453.5" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="456.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (6 samples, 0.08%)</title><rect x="453.8" y="643.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="456.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.03%)</title><rect x="454.7" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="457.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.03%)</title><rect x="454.7" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="457.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (271 samples, 3.47%)</title><rect x="455.0" y="643.0" width="40.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="458.0" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.03%)</title><rect x="455.4" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="458.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (264 samples, 3.38%)</title><rect x="455.7" y="627.0" width="39.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="458.7" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (251 samples, 3.21%)</title><rect x="457.4" y="611.0" width="37.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="460.4" y="622.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (10 samples, 0.13%)</title><rect x="457.7" y="595.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="460.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (224 samples, 2.86%)</title><rect x="459.4" y="595.0" width="33.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="462.4" y="606.0">ro..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="459.5" y="579.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="462.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="460.1" y="579.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="463.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (216 samples, 2.76%)</title><rect x="460.6" y="579.0" width="32.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="463.6" y="590.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="461.3" y="563.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="464.3" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="461.6" y="563.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="464.6" y="574.0"></text>
</g>
<g>
<title>__write (205 samples, 2.62%)</title><rect x="462.1" y="563.0" width="30.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="465.1" y="574.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (199 samples, 2.54%)</title><rect x="463.0" y="547.0" width="30.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="466.0" y="558.0">en..</text>
</g>
<g>
<title>do_syscall_64 (198 samples, 2.53%)</title><rect x="463.1" y="531.0" width="29.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.1" y="542.0">do..</text>
</g>
<g>
<title>__x64_sys_write (195 samples, 2.49%)</title><rect x="463.6" y="515.0" width="29.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.6" y="526.0">__..</text>
</g>
<g>
<title>ksys_write (195 samples, 2.49%)</title><rect x="463.6" y="499.0" width="29.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.6" y="510.0">ks..</text>
</g>
<g>
<title>__fdget_pos (13 samples, 0.17%)</title><rect x="463.6" y="483.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="466.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="463.7" y="467.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="466.7" y="478.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="463.7" y="451.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="466.7" y="462.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.06%)</title><rect x="464.8" y="467.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="467.8" y="478.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="465.6" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="468.6" y="494.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="466.2" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.2" y="494.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="466.8" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.8" y="494.0"></text>
</g>
<g>
<title>vfs_write (172 samples, 2.20%)</title><rect x="467.1" y="483.0" width="25.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.1" y="494.0">v..</text>
</g>
<g>
<title>__vfs_write (154 samples, 1.97%)</title><rect x="467.8" y="467.0" width="23.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="470.8" y="478.0">_..</text>
</g>
<g>
<title>new_sync_write (154 samples, 1.97%)</title><rect x="467.8" y="451.0" width="23.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.8" y="462.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (150 samples, 1.92%)</title><rect x="468.1" y="435.0" width="22.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.1" y="446.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (146 samples, 1.87%)</title><rect x="468.3" y="419.0" width="22.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.3" y="430.0">_..</text>
</g>
<g>
<title>file_update_time (5 samples, 0.06%)</title><rect x="469.0" y="403.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="472.0" y="414.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="469.0" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.0" y="398.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.03%)</title><rect x="469.0" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.0" y="382.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.03%)</title><rect x="469.3" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.3" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="469.3" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="472.3" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="469.3" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.3" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="469.3" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="472.3" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (134 samples, 1.71%)</title><rect x="469.8" y="403.0" width="20.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.8" y="414.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.04%)</title><rect x="470.2" y="387.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="473.2" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (38 samples, 0.49%)</title><rect x="470.7" y="387.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.7" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (17 samples, 0.22%)</title><rect x="470.7" y="371.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.7" y="382.0"></text>
</g>
<g>
<title>ext4_journal_check_start (3 samples, 0.04%)</title><rect x="470.7" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="473.7" y="366.0"></text>
</g>
<g>
<title>jbd2__journal_start (14 samples, 0.18%)</title><rect x="471.1" y="355.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="474.1" y="366.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.03%)</title><rect x="471.3" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.3" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.05%)</title><rect x="471.6" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="474.6" y="350.0"></text>
</g>
<g>
<title>start_this_handle (7 samples, 0.09%)</title><rect x="472.2" y="339.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="475.2" y="350.0"></text>
</g>
<g>
<title>ext4_block_write_begin (5 samples, 0.06%)</title><rect x="473.2" y="371.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.2" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (16 samples, 0.20%)</title><rect x="474.0" y="371.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.0" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (14 samples, 0.18%)</title><rect x="474.0" y="355.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="477.0" y="366.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (3 samples, 0.04%)</title><rect x="474.0" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.0" y="350.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (3 samples, 0.04%)</title><rect x="474.0" y="323.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="477.0" y="334.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.14%)</title><rect x="474.5" y="339.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.5" y="350.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.05%)</title><rect x="475.4" y="323.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="478.4" y="334.0"></text>
</g>
<g>
<title>wait_for_stable_page (2 samples, 0.03%)</title><rect x="476.1" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="479.1" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end (82 samples, 1.05%)</title><rect x="476.4" y="387.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="479.4" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_stop (13 samples, 0.17%)</title><rect x="476.7" y="371.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="479.7" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (13 samples, 0.17%)</title><rect x="476.7" y="355.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="479.7" y="366.0"></text>
</g>
<g>
<title>__wake_up (7 samples, 0.09%)</title><rect x="477.3" y="339.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.3" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.08%)</title><rect x="477.3" y="323.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.3" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="477.3" y="307.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.3" y="318.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="478.4" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="481.4" y="350.0"></text>
</g>
<g>
<title>generic_write_end (65 samples, 0.83%)</title><rect x="478.7" y="371.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="481.7" y="382.0"></text>
</g>
<g>
<title>__mark_inode_dirty (60 samples, 0.77%)</title><rect x="478.8" y="355.0" width="9.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="481.8" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode (58 samples, 0.74%)</title><rect x="479.1" y="339.0" width="8.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.1" y="350.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.03%)</title><rect x="479.1" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="482.1" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (55 samples, 0.70%)</title><rect x="479.6" y="323.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="482.6" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (37 samples, 0.47%)</title><rect x="479.9" y="307.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="482.9" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="480.0" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.0" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (34 samples, 0.43%)</title><rect x="480.3" y="291.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.3" y="302.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.03%)</title><rect x="482.2" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.2" y="286.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.03%)</title><rect x="482.2" y="259.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="485.2" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (16 samples, 0.20%)</title><rect x="482.5" y="275.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="485.5" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (15 samples, 0.19%)</title><rect x="482.6" y="259.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.6" y="270.0"></text>
</g>
<g>
<title>crypto_shash_update (12 samples, 0.15%)</title><rect x="483.1" y="243.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="486.1" y="254.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (11 samples, 0.14%)</title><rect x="483.2" y="227.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="486.2" y="238.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.04%)</title><rect x="484.9" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="487.9" y="286.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (16 samples, 0.20%)</title><rect x="485.5" y="307.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.5" y="318.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (13 samples, 0.17%)</title><rect x="485.5" y="291.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.5" y="302.0"></text>
</g>
<g>
<title>__getblk_gfp (9 samples, 0.12%)</title><rect x="485.5" y="275.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="488.5" y="286.0"></text>
</g>
<g>
<title>__find_get_block (9 samples, 0.12%)</title><rect x="485.5" y="259.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.5" y="270.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.04%)</title><rect x="486.4" y="243.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="489.4" y="254.0"></text>
</g>
<g>
<title>ext4_get_group_desc (4 samples, 0.05%)</title><rect x="486.8" y="275.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="489.8" y="286.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.05%)</title><rect x="487.9" y="355.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="490.9" y="366.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (4 samples, 0.05%)</title><rect x="487.9" y="339.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="490.9" y="350.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="488.5" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.5" y="382.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (4 samples, 0.05%)</title><rect x="488.9" y="387.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="491.9" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.03%)</title><rect x="489.1" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="492.1" y="382.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.03%)</title><rect x="489.5" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="492.5" y="398.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.03%)</title><rect x="490.0" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="493.0" y="414.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.03%)</title><rect x="490.5" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.5" y="430.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.03%)</title><rect x="490.5" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="493.5" y="414.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.03%)</title><rect x="490.8" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="493.8" y="446.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="491.1" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.1" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.14%)</title><rect x="491.4" y="467.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="494.4" y="478.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.08%)</title><rect x="492.1" y="451.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.1" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="492.4" y="435.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.4" y="446.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="492.4" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="495.4" y="430.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.03%)</title><rect x="492.6" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="495.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (13 samples, 0.17%)</title><rect x="493.3" y="595.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="496.3" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="493.5" y="579.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="496.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="494.1" y="579.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="497.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (6 samples, 0.08%)</title><rect x="494.4" y="579.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="497.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.03%)</title><rect x="495.3" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="498.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (5 samples, 0.06%)</title><rect x="496.0" y="643.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="499.0" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.06%)</title><rect x="496.0" y="627.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="499.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.03%)</title><rect x="497.2" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="500.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Clear() (2 samples, 0.03%)</title><rect x="497.5" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="500.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.04%)</title><rect x="498.1" y="643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="501.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (124 samples, 1.59%)</title><rect x="498.6" y="643.0" width="18.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="501.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (120 samples, 1.53%)</title><rect x="499.1" y="627.0" width="18.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="502.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="499.1" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="502.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (117 samples, 1.50%)</title><rect x="499.5" y="611.0" width="17.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="502.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (110 samples, 1.41%)</title><rect x="500.3" y="595.0" width="16.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="503.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (108 samples, 1.38%)</title><rect x="500.6" y="579.0" width="16.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="503.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="501.5" y="563.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="504.5" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="501.8" y="563.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="504.8" y="574.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="501.8" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.8" y="558.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="501.8" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="504.8" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="501.8" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="504.8" y="526.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="501.8" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.8" y="510.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="501.8" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="504.8" y="494.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="501.8" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="504.8" y="478.0"></text>
</g>
<g>
<title>do_anonymous_page (2 samples, 0.03%)</title><rect x="501.8" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="504.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (4 samples, 0.05%)</title><rect x="502.4" y="563.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="505.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.04%)</title><rect x="503.0" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="506.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (87 samples, 1.11%)</title><rect x="503.4" y="563.0" width="13.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="506.4" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (5 samples, 0.06%)</title><rect x="504.2" y="547.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="507.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.04%)</title><rect x="504.5" y="531.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="507.5" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (73 samples, 0.93%)</title><rect x="504.9" y="547.0" width="11.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="507.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (63 samples, 0.81%)</title><rect x="505.8" y="531.0" width="9.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="508.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (31 samples, 0.40%)</title><rect x="509.5" y="515.0" width="4.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="512.5" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (3 samples, 0.04%)</title><rect x="509.8" y="499.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="512.8" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.03%)</title><rect x="510.2" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="513.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (22 samples, 0.28%)</title><rect x="510.8" y="499.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (5 samples, 0.06%)</title><rect x="511.6" y="483.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="514.6" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.10%)</title><rect x="512.3" y="483.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="515.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.10%)</title><rect x="514.1" y="515.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="517.1" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="514.7" y="499.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="517.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="515.3" y="531.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="518.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.03%)</title><rect x="515.6" y="531.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="518.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="516.0" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="519.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="516.9" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="519.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (84 samples, 1.07%)</title><rect x="517.3" y="643.0" width="12.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="520.3" y="654.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.03%)</title><rect x="517.5" y="627.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="520.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (78 samples, 1.00%)</title><rect x="517.9" y="627.0" width="11.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="520.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="518.1" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="521.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (75 samples, 0.96%)</title><rect x="518.4" y="611.0" width="11.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="521.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (72 samples, 0.92%)</title><rect x="518.5" y="595.0" width="10.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="521.5" y="606.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="518.7" y="579.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="521.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (65 samples, 0.83%)</title><rect x="519.1" y="579.0" width="9.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="522.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (59 samples, 0.75%)</title><rect x="519.9" y="563.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="522.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="520.8" y="547.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="523.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="520.8" y="531.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="523.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (50 samples, 0.64%)</title><rect x="521.1" y="547.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="524.1" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (49 samples, 0.63%)</title><rect x="521.1" y="531.0" width="7.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="524.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (44 samples, 0.56%)</title><rect x="521.7" y="515.0" width="6.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="524.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (24 samples, 0.31%)</title><rect x="524.6" y="499.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="527.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (3 samples, 0.04%)</title><rect x="524.6" y="483.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="527.6" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="525.2" y="483.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="528.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 0.19%)</title><rect x="525.9" y="483.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="528.9" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="527.1" y="467.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="530.1" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="527.4" y="467.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="530.4" y="478.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (3 samples, 0.04%)</title><rect x="528.9" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="531.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="529.4" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="532.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (78 samples, 1.00%)</title><rect x="530.1" y="643.0" width="11.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="533.1" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="537.7" y="627.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="540.7" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (20 samples, 0.26%)</title><rect x="538.0" y="627.0" width="3.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="541.0" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.24%)</title><rect x="538.1" y="611.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="541.1" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.23%)</title><rect x="538.3" y="595.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="541.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.17%)</title><rect x="539.0" y="579.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="542.0" y="590.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.14%)</title><rect x="539.0" y="563.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="542.0" y="574.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.12%)</title><rect x="539.2" y="547.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="542.2" y="558.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.08%)</title><rect x="539.6" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="542.6" y="542.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="540.2" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="543.2" y="526.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="540.7" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.7" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.05%)</title><rect x="541.2" y="627.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="544.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (53 samples, 0.68%)</title><rect x="541.9" y="643.0" width="8.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="544.9" y="654.0"></text>
</g>
<g>
<title>__sched_yield (17 samples, 0.22%)</title><rect x="542.1" y="627.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="545.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.17%)</title><rect x="542.7" y="611.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="545.7" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.17%)</title><rect x="542.7" y="595.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="545.7" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (7 samples, 0.09%)</title><rect x="543.6" y="579.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="546.6" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (7 samples, 0.09%)</title><rect x="543.6" y="563.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.6" y="574.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.09%)</title><rect x="543.6" y="547.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="546.6" y="558.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.09%)</title><rect x="543.6" y="531.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (35 samples, 0.45%)</title><rect x="544.6" y="627.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="547.6" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.05%)</title><rect x="548.8" y="611.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="551.8" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="549.6" y="611.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="552.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="550.1" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="553.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="550.4" y="643.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="553.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="550.5" y="627.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="553.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.05%)</title><rect x="550.8" y="643.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="553.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.04%)</title><rect x="551.0" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="554.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (3 samples, 0.04%)</title><rect x="551.4" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="554.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.04%)</title><rect x="552.0" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="555.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (4 samples, 0.05%)</title><rect x="552.8" y="659.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="555.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="553.5" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="556.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="553.8" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="556.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="554.4" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="557.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="554.7" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="557.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.04%)</title><rect x="555.0" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="558.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (15 samples, 0.19%)</title><rect x="555.5" y="675.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="558.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="555.5" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="558.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="555.9" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="558.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="556.2" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="559.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.03%)</title><rect x="556.5" y="659.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="559.5" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (6 samples, 0.08%)</title><rect x="556.8" y="659.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="559.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="557.7" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="560.7" y="686.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.04%)</title><rect x="558.4" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="561.4" y="686.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="558.8" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="561.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.05%)</title><rect x="559.1" y="691.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="562.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.03%)</title><rect x="559.9" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="562.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.45%)</title><rect x="560.3" y="755.0" width="5.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="563.3" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="560.3" y="739.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="563.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (18 samples, 0.23%)</title><rect x="561.4" y="739.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="564.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.12%)</title><rect x="562.7" y="723.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="565.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.12%)</title><rect x="562.7" y="707.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="565.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.10%)</title><rect x="562.9" y="691.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.9" y="702.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.10%)</title><rect x="562.9" y="675.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="565.9" y="686.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.09%)</title><rect x="562.9" y="659.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="565.9" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="563.0" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="566.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="563.3" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="566.3" y="654.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="563.3" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="566.3" y="638.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="563.3" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="566.3" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="564.4" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="567.4" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.03%)</title><rect x="564.8" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="567.8" y="750.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="565.3" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="568.3" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (10 samples, 0.13%)</title><rect x="565.6" y="755.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="568.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (82 samples, 1.05%)</title><rect x="567.1" y="755.0" width="12.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="570.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.93%)</title><rect x="568.5" y="739.0" width="11.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="571.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 0.93%)</title><rect x="568.5" y="723.0" width="11.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="571.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (71 samples, 0.91%)</title><rect x="568.8" y="707.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.8" y="718.0"></text>
</g>
<g>
<title>do_futex (70 samples, 0.90%)</title><rect x="568.9" y="691.0" width="10.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.9" y="702.0"></text>
</g>
<g>
<title>futex_wake (70 samples, 0.90%)</title><rect x="568.9" y="675.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.9" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.06%)</title><rect x="569.4" y="659.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="572.4" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (5 samples, 0.06%)</title><rect x="569.4" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="572.4" y="654.0"></text>
</g>
<g>
<title>wake_up_q (62 samples, 0.79%)</title><rect x="570.1" y="659.0" width="9.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 0.75%)</title><rect x="570.6" y="643.0" width="8.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="573.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (58 samples, 0.74%)</title><rect x="570.7" y="627.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="573.7" y="638.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="579.5" y="755.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="582.5" y="766.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.05%)</title><rect x="579.6" y="739.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="582.6" y="750.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="579.6" y="723.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="582.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (4 samples, 0.05%)</title><rect x="580.2" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.2" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="580.4" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (4 samples, 0.05%)</title><rect x="580.8" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="580.8" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="580.8" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="580.8" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="581.0" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="581.0" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="581.1" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.1" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="581.1" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (21 samples, 0.27%)</title><rect x="581.4" y="851.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.17%)</title><rect x="582.2" y="835.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.14%)</title><rect x="582.2" y="819.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="582.9" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="583.3" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="583.9" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="583.9" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="584.2" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.09%)</title><rect x="584.6" y="851.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="584.6" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="584.9" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="585.1" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="585.7" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.38%)</title><rect x="586.0" y="883.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="587.8" y="867.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="587.8" y="851.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="589.4" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.06%)</title><rect x="589.7" y="867.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.04%)</title><rect x="590.5" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="590.6" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="590.6" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="590.9" y="883.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="590.9" y="867.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="591.1" y="851.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.1" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="591.5" y="835.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="594.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (2 samples, 0.03%)</title><rect x="592.0" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.03%)</title><rect x="592.0" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="592.3" y="883.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.3" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="592.5" y="867.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (134 samples, 1.71%)</title><rect x="594.3" y="899.0" width="20.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (133 samples, 1.70%)</title><rect x="594.4" y="883.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.4" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="595.2" y="867.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="598.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (26 samples, 0.33%)</title><rect x="595.9" y="867.0" width="3.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="598.9" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.10%)</title><rect x="596.1" y="851.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="599.1" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="597.3" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="600.3" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.17%)</title><rect x="597.9" y="851.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="600.9" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (6 samples, 0.08%)</title><rect x="598.5" y="835.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="601.5" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="599.4" y="835.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="602.4" y="846.0"></text>
</g>
<g>
<title>__recv (97 samples, 1.24%)</title><rect x="599.8" y="867.0" width="14.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="602.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (90 samples, 1.15%)</title><rect x="600.9" y="851.0" width="13.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="603.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 1.14%)</title><rect x="601.1" y="835.0" width="13.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="604.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (85 samples, 1.09%)</title><rect x="601.7" y="819.0" width="12.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.7" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (85 samples, 1.09%)</title><rect x="601.7" y="803.0" width="12.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.7" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (70 samples, 0.90%)</title><rect x="602.4" y="787.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.4" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (60 samples, 0.77%)</title><rect x="602.4" y="771.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="605.4" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="602.7" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="605.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (56 samples, 0.72%)</title><rect x="603.0" y="755.0" width="8.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="606.0" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.27%)</title><rect x="604.5" y="739.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.5" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="604.5" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="607.5" y="734.0"></text>
</g>
<g>
<title>skb_release_all (19 samples, 0.24%)</title><rect x="604.8" y="723.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.8" y="734.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.08%)</title><rect x="605.0" y="707.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.09%)</title><rect x="605.9" y="707.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="608.9" y="718.0"></text>
</g>
<g>
<title>dst_release (7 samples, 0.09%)</title><rect x="605.9" y="691.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="608.9" y="702.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.06%)</title><rect x="606.9" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.08%)</title><rect x="607.8" y="739.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="610.8" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.13%)</title><rect x="608.9" y="739.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.9" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.13%)</title><rect x="608.9" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="611.9" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.06%)</title><rect x="609.7" y="707.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.7" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.04%)</title><rect x="609.8" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="612.8" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="609.8" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.8" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="610.4" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="613.4" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.06%)</title><rect x="610.7" y="739.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="613.7" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="611.2" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.2" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (9 samples, 0.12%)</title><rect x="611.5" y="771.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="614.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.09%)</title><rect x="611.8" y="755.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.8" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.09%)</title><rect x="611.8" y="739.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.8" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (5 samples, 0.06%)</title><rect x="612.1" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.1" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.04%)</title><rect x="612.4" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="615.4" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.13%)</title><rect x="613.0" y="787.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.0" y="798.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.10%)</title><rect x="613.0" y="771.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="616.0" y="782.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="613.0" y="755.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="616.0" y="766.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.10%)</title><rect x="613.0" y="739.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="616.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="614.2" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="617.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="614.5" y="915.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="617.5" y="926.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="614.6" y="899.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="617.6" y="910.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="614.6" y="883.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="617.6" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=5905] (1,866 samples, 23.86%)</title><rect x="615.1" y="963.0" width="281.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="618.1" y="974.0">[NIO Selector #2 tid=5905]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,866 samples, 23.86%)</title><rect x="615.1" y="947.0" width="281.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.1" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="616.7" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="616.7" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (105 samples, 1.34%)</title><rect x="617.4" y="931.0" width="15.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.04%)</title><rect x="617.7" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="617.7" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (100 samples, 1.28%)</title><rect x="618.1" y="915.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.1" y="926.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="619.2" y="899.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="622.2" y="910.0"></text>
</g>
<g>
<title>epoll_wait (88 samples, 1.13%)</title><rect x="619.9" y="899.0" width="13.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="622.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 0.91%)</title><rect x="622.5" y="883.0" width="10.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="625.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 0.91%)</title><rect x="622.5" y="867.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="625.5" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (66 samples, 0.84%)</title><rect x="622.8" y="851.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="625.8" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (65 samples, 0.83%)</title><rect x="622.9" y="835.0" width="9.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="625.9" y="846.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="623.2" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="626.2" y="830.0"></text>
</g>
<g>
<title>ep_poll (57 samples, 0.73%)</title><rect x="623.5" y="819.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="626.5" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (40 samples, 0.51%)</title><rect x="624.9" y="803.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="627.9" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (24 samples, 0.31%)</title><rect x="626.4" y="787.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="629.4" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="626.9" y="771.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="629.9" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (18 samples, 0.23%)</title><rect x="627.3" y="771.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.3" y="782.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.15%)</title><rect x="628.1" y="755.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="631.1" y="766.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.04%)</title><rect x="629.1" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="632.1" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="629.6" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="632.6" y="750.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.08%)</title><rect x="630.0" y="787.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.0" y="798.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="630.5" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.5" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="631.1" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="634.1" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.06%)</title><rect x="631.4" y="803.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="634.4" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.05%)</title><rect x="631.5" y="787.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.5" y="798.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="631.5" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="634.5" y="782.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.05%)</title><rect x="631.5" y="755.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="634.5" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="631.7" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.7" y="750.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="632.1" y="819.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="635.1" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.03%)</title><rect x="632.7" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="635.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,746 samples, 22.33%)</title><rect x="633.2" y="931.0" width="263.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.2" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,738 samples, 22.23%)</title><rect x="633.8" y="915.0" width="262.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.8" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,602 samples, 20.49%)</title><rect x="634.3" y="899.0" width="241.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.3" y="910.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,529 samples, 19.55%)</title><rect x="635.8" y="883.0" width="230.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.8" y="894.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,528 samples, 19.54%)</title><rect x="635.8" y="867.0" width="230.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.8" y="878.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,501 samples, 19.19%)</title><rect x="635.8" y="851.0" width="226.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.8" y="862.0">RequestHandler1_entity.handleR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (543 samples, 6.94%)</title><rect x="635.8" y="835.0" width="81.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.8" y="846.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.06%)</title><rect x="636.1" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="636.1" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="636.4" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (532 samples, 6.80%)</title><rect x="636.8" y="819.0" width="80.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.8" y="830.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.13%)</title><rect x="636.8" y="803.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.10%)</title><rect x="637.1" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.05%)</title><rect x="637.3" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="637.4" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="637.9" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="637.9" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="637.9" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (522 samples, 6.68%)</title><rect x="638.3" y="803.0" width="78.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.3" y="814.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (522 samples, 6.68%)</title><rect x="638.3" y="787.0" width="78.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.3" y="798.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (522 samples, 6.68%)</title><rect x="638.3" y="771.0" width="78.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.3" y="782.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (521 samples, 6.66%)</title><rect x="638.5" y="755.0" width="78.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.5" y="766.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.17%)</title><rect x="640.1" y="739.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="643.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="640.6" y="723.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="643.6" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="641.0" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="644.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.06%)</title><rect x="641.3" y="723.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="644.3" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="641.6" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="644.6" y="718.0"></text>
</g>
<g>
<title>send (497 samples, 6.36%)</title><rect x="642.1" y="739.0" width="75.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="645.1" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (491 samples, 6.28%)</title><rect x="643.0" y="723.0" width="74.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="646.0" y="734.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.03%)</title><rect x="643.0" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (489 samples, 6.25%)</title><rect x="643.3" y="707.0" width="73.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.3" y="718.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (481 samples, 6.15%)</title><rect x="644.4" y="691.0" width="72.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.4" y="702.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (477 samples, 6.10%)</title><rect x="644.5" y="675.0" width="72.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="647.5" y="686.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (468 samples, 5.98%)</title><rect x="645.1" y="659.0" width="70.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="648.1" y="670.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (454 samples, 5.81%)</title><rect x="645.6" y="643.0" width="68.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.6" y="654.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (453 samples, 5.79%)</title><rect x="645.7" y="627.0" width="68.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="648.7" y="638.0">tcp_sen..</text>
</g>
<g>
<title>tcp_push (4 samples, 0.05%)</title><rect x="646.3" y="611.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.3" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (444 samples, 5.68%)</title><rect x="646.9" y="611.0" width="67.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="649.9" y="622.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="648.9" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="651.9" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.05%)</title><rect x="649.5" y="595.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.5" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.03%)</title><rect x="649.6" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.6" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.04%)</title><rect x="650.2" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.2" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="650.2" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="653.2" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (38 samples, 0.49%)</title><rect x="650.7" y="595.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="653.7" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (35 samples, 0.45%)</title><rect x="650.7" y="579.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="653.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.20%)</title><rect x="651.3" y="563.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="654.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.14%)</title><rect x="651.3" y="547.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.3" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.08%)</title><rect x="651.9" y="531.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="654.9" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="653.1" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="656.1" y="558.0"></text>
</g>
<g>
<title>memset (2 samples, 0.03%)</title><rect x="653.4" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="656.4" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.09%)</title><rect x="653.7" y="563.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="656.7" y="574.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.04%)</title><rect x="654.8" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="657.8" y="574.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.04%)</title><rect x="654.8" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="657.8" y="558.0"></text>
</g>
<g>
<title>memset (5 samples, 0.06%)</title><rect x="655.2" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="658.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.03%)</title><rect x="656.0" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="659.0" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="656.4" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="659.4" y="606.0"></text>
</g>
<g>
<title>tcp_push (370 samples, 4.73%)</title><rect x="657.0" y="595.0" width="55.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.0" y="606.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (369 samples, 4.72%)</title><rect x="657.2" y="579.0" width="55.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="660.2" y="590.0">__tcp..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="657.3" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="660.3" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.03%)</title><rect x="657.6" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="660.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (364 samples, 4.65%)</title><rect x="657.9" y="563.0" width="55.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="660.9" y="574.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (337 samples, 4.31%)</title><rect x="658.4" y="547.0" width="50.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="661.4" y="558.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (324 samples, 4.14%)</title><rect x="659.3" y="531.0" width="48.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="662.3" y="542.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (321 samples, 4.10%)</title><rect x="659.3" y="515.0" width="48.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="662.3" y="526.0">__ip..</text>
</g>
<g>
<title>ip_local_out (319 samples, 4.08%)</title><rect x="659.6" y="499.0" width="48.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="662.6" y="510.0">ip_l..</text>
</g>
<g>
<title>ip_output (317 samples, 4.05%)</title><rect x="659.9" y="483.0" width="47.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="662.9" y="494.0">ip_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="660.5" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="663.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (311 samples, 3.98%)</title><rect x="660.8" y="467.0" width="46.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.8" y="478.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="661.0" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.0" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (304 samples, 3.89%)</title><rect x="661.4" y="451.0" width="45.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="664.4" y="462.0">__ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="661.6" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="664.6" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (300 samples, 3.84%)</title><rect x="661.9" y="435.0" width="45.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="664.9" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (269 samples, 3.44%)</title><rect x="662.5" y="419.0" width="40.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="665.5" y="430.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (268 samples, 3.43%)</title><rect x="662.6" y="403.0" width="40.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="665.6" y="414.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (261 samples, 3.34%)</title><rect x="663.7" y="387.0" width="39.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="666.7" y="398.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (260 samples, 3.32%)</title><rect x="663.7" y="371.0" width="39.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="666.7" y="382.0">__s..</text>
</g>
<g>
<title>net_rx_action (254 samples, 3.25%)</title><rect x="664.6" y="355.0" width="38.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="667.6" y="366.0">net..</text>
</g>
<g>
<title>process_backlog (252 samples, 3.22%)</title><rect x="664.9" y="339.0" width="38.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="667.9" y="350.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (247 samples, 3.16%)</title><rect x="665.6" y="323.0" width="37.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="668.6" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (246 samples, 3.15%)</title><rect x="665.8" y="307.0" width="37.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="668.8" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.05%)</title><rect x="666.2" y="291.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv (238 samples, 3.04%)</title><rect x="666.8" y="291.0" width="36.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="669.8" y="302.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (235 samples, 3.01%)</title><rect x="667.3" y="275.0" width="35.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="670.3" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (233 samples, 2.98%)</title><rect x="667.5" y="259.0" width="35.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.5" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (233 samples, 2.98%)</title><rect x="667.5" y="243.0" width="35.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="670.5" y="254.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (233 samples, 2.98%)</title><rect x="667.5" y="227.0" width="35.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="670.5" y="238.0">ip_..</text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="667.8" y="211.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="670.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (228 samples, 2.92%)</title><rect x="668.2" y="211.0" width="34.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="671.2" y="222.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.13%)</title><rect x="669.1" y="195.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.1" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="670.6" y="195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="673.6" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.04%)</title><rect x="670.9" y="195.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="673.9" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="671.1" y="179.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="674.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (202 samples, 2.58%)</title><rect x="671.5" y="195.0" width="30.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="674.5" y="206.0">tc..</text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.06%)</title><rect x="671.7" y="179.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="674.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (195 samples, 2.49%)</title><rect x="672.6" y="179.0" width="29.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.6" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.19%)</title><rect x="673.0" y="163.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="676.0" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (14 samples, 0.18%)</title><rect x="673.2" y="147.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.2" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.17%)</title><rect x="673.3" y="131.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="676.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.17%)</title><rect x="673.3" y="115.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="676.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.14%)</title><rect x="673.6" y="99.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="676.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (46 samples, 0.59%)</title><rect x="675.7" y="163.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="678.7" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (35 samples, 0.45%)</title><rect x="677.1" y="147.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.1" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.29%)</title><rect x="677.9" y="131.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="680.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.09%)</title><rect x="678.0" y="115.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="681.0" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.09%)</title><rect x="678.0" y="99.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="681.0" y="110.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.18%)</title><rect x="679.1" y="115.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.17%)</title><rect x="679.2" y="99.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="682.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.10%)</title><rect x="680.0" y="83.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="683.0" y="94.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.10%)</title><rect x="680.0" y="67.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="683.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.06%)</title><rect x="680.4" y="51.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="683.4" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="680.9" y="35.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="683.9" y="46.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="681.3" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="684.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.04%)</title><rect x="681.9" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.9" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="682.4" y="147.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="685.4" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (126 samples, 1.61%)</title><rect x="682.7" y="163.0" width="19.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="685.7" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (125 samples, 1.60%)</title><rect x="682.8" y="147.0" width="18.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.8" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (124 samples, 1.59%)</title><rect x="683.0" y="131.0" width="18.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (124 samples, 1.59%)</title><rect x="683.0" y="115.0" width="18.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="686.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (124 samples, 1.59%)</title><rect x="683.0" y="99.0" width="18.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="686.0" y="110.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.04%)</title><rect x="702.2" y="195.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.2" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (23 samples, 0.29%)</title><rect x="703.1" y="419.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="706.1" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (22 samples, 0.28%)</title><rect x="703.1" y="403.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="706.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.10%)</title><rect x="704.3" y="387.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="707.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.09%)</title><rect x="704.4" y="371.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="707.4" y="382.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="704.7" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="707.7" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="704.7" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="704.7" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="707.7" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.08%)</title><rect x="705.5" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.05%)</title><rect x="706.5" y="419.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.5" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="707.4" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.4" y="462.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.04%)</title><rect x="707.7" y="515.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="710.7" y="526.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="708.2" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="711.2" y="542.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="708.2" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="711.2" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="709.4" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.4" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="709.7" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="712.7" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.14%)</title><rect x="710.5" y="547.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.5" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (10 samples, 0.13%)</title><rect x="710.6" y="531.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="713.6" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.10%)</title><rect x="710.9" y="515.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.10%)</title><rect x="710.9" y="499.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.10%)</title><rect x="710.9" y="483.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.9" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="712.3" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.3" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.09%)</title><rect x="712.9" y="595.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.9" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="713.3" y="579.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="716.3" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="713.3" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.3" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.12%)</title><rect x="714.1" y="643.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="717.1" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.08%)</title><rect x="714.5" y="627.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="717.5" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.08%)</title><rect x="714.5" y="611.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.5" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.04%)</title><rect x="715.0" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="718.0" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.04%)</title><rect x="715.0" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="718.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="715.4" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.4" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="715.7" y="659.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="718.7" y="670.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="715.9" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="718.9" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="715.9" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="718.9" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="715.9" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="718.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="716.2" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.2" y="654.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="716.5" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="717.1" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="717.1" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="717.1" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="717.2" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="717.2" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="717.2" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.2" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.03%)</title><rect x="717.2" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (27 samples, 0.35%)</title><rect x="717.7" y="835.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.31%)</title><rect x="718.2" y="819.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="718.9" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="719.1" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.10%)</title><rect x="719.7" y="803.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.10%)</title><rect x="719.7" y="787.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.7" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.10%)</title><rect x="719.7" y="771.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.7" y="782.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="719.8" y="755.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="722.8" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="720.3" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="723.3" y="766.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="720.3" y="739.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="723.3" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="720.6" y="739.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="723.6" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="721.0" y="803.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="724.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="721.3" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (931 samples, 11.91%)</title><rect x="721.8" y="835.0" width="140.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.8" y="846.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="721.8" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="721.8" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.8" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="721.8" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (927 samples, 11.85%)</title><rect x="722.4" y="819.0" width="139.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.4" y="830.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.12%)</title><rect x="722.4" y="803.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.4" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="723.3" y="787.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="726.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (918 samples, 11.74%)</title><rect x="723.7" y="803.0" width="138.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.7" y="814.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (917 samples, 11.73%)</title><rect x="723.7" y="787.0" width="138.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.7" y="798.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (917 samples, 11.73%)</title><rect x="723.7" y="771.0" width="138.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.7" y="782.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="725.2" y="755.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="728.2" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (774 samples, 9.90%)</title><rect x="725.8" y="755.0" width="116.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="728.8" y="766.0">Java_org_rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="726.6" y="739.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="729.6" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="727.2" y="739.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="730.2" y="750.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.03%)</title><rect x="727.5" y="739.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="730.5" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="727.8" y="739.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="730.8" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="728.1" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="731.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="728.4" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="731.4" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (755 samples, 9.65%)</title><rect x="728.7" y="739.0" width="113.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="731.7" y="750.0">rocksdb_put_he..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="729.0" y="723.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="732.0" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="729.8" y="723.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="732.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.12%)</title><rect x="730.1" y="723.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="733.1" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="730.4" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="733.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.05%)</title><rect x="730.7" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="733.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (735 samples, 9.40%)</title><rect x="731.4" y="723.0" width="110.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="734.4" y="734.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="731.4" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="734.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (733 samples, 9.37%)</title><rect x="731.7" y="707.0" width="110.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.7" y="718.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (726 samples, 9.28%)</title><rect x="731.7" y="691.0" width="109.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="734.7" y="702.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.03%)</title><rect x="732.6" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="735.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (698 samples, 8.93%)</title><rect x="732.9" y="675.0" width="105.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="735.9" y="686.0">rocksdb::DBIm..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="732.9" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="735.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::~ColumnFamilyHandleImpl() (2 samples, 0.03%)</title><rect x="733.8" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="736.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (673 samples, 8.61%)</title><rect x="734.3" y="659.0" width="101.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="737.3" y="670.0">rocksdb::DBI..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.03%)</title><rect x="739.3" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.3" y="654.0"></text>
</g>
<g>
<title>__sched_yield (24 samples, 0.31%)</title><rect x="739.7" y="643.0" width="3.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="742.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.22%)</title><rect x="740.8" y="627.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="743.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.22%)</title><rect x="740.8" y="611.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="743.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (13 samples, 0.17%)</title><rect x="741.4" y="595.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="744.4" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (13 samples, 0.17%)</title><rect x="741.4" y="579.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="744.4" y="590.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.17%)</title><rect x="741.4" y="563.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="744.4" y="574.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.17%)</title><rect x="741.4" y="547.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="744.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.08%)</title><rect x="743.4" y="643.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="746.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.05%)</title><rect x="744.4" y="643.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="747.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.04%)</title><rect x="745.0" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="748.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (241 samples, 3.08%)</title><rect x="745.5" y="643.0" width="36.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="748.5" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.04%)</title><rect x="745.9" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="748.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="746.1" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="749.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (228 samples, 2.92%)</title><rect x="746.4" y="627.0" width="34.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="749.4" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (221 samples, 2.83%)</title><rect x="747.0" y="611.0" width="33.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="750.0" y="622.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (9 samples, 0.12%)</title><rect x="747.1" y="595.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="750.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (196 samples, 2.51%)</title><rect x="748.6" y="595.0" width="29.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="751.6" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="749.5" y="579.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="752.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (187 samples, 2.39%)</title><rect x="750.0" y="579.0" width="28.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="753.0" y="590.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="751.0" y="563.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="754.0" y="574.0"></text>
</g>
<g>
<title>__write (177 samples, 2.26%)</title><rect x="751.5" y="563.0" width="26.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="754.5" y="574.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (171 samples, 2.19%)</title><rect x="752.4" y="547.0" width="25.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.4" y="558.0">e..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="752.4" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (169 samples, 2.16%)</title><rect x="752.7" y="531.0" width="25.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="755.7" y="542.0">d..</text>
</g>
<g>
<title>__x64_sys_write (162 samples, 2.07%)</title><rect x="753.5" y="515.0" width="24.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="756.5" y="526.0">_..</text>
</g>
<g>
<title>ksys_write (162 samples, 2.07%)</title><rect x="753.5" y="499.0" width="24.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="756.5" y="510.0">k..</text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.10%)</title><rect x="753.6" y="483.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="753.6" y="467.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.6" y="478.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="753.6" y="451.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="756.6" y="462.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="754.5" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="757.5" y="478.0"></text>
</g>
<g>
<title>vfs_write (150 samples, 1.92%)</title><rect x="755.3" y="483.0" width="22.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="758.3" y="494.0">v..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="756.2" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="759.2" y="478.0"></text>
</g>
<g>
<title>__vfs_write (132 samples, 1.69%)</title><rect x="756.5" y="467.0" width="19.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.5" y="478.0"></text>
</g>
<g>
<title>new_sync_write (132 samples, 1.69%)</title><rect x="756.5" y="451.0" width="19.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.5" y="462.0"></text>
</g>
<g>
<title>ext4_file_write_iter (130 samples, 1.66%)</title><rect x="756.8" y="435.0" width="19.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="759.8" y="446.0"></text>
</g>
<g>
<title>__generic_file_write_iter (126 samples, 1.61%)</title><rect x="756.8" y="419.0" width="19.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.8" y="430.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="756.9" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="759.9" y="414.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.04%)</title><rect x="757.2" y="403.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="760.2" y="414.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.05%)</title><rect x="757.8" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="760.8" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (113 samples, 1.45%)</title><rect x="758.4" y="403.0" width="17.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="761.4" y="414.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (4 samples, 0.05%)</title><rect x="759.0" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.0" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (30 samples, 0.38%)</title><rect x="759.6" y="387.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.6" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (12 samples, 0.15%)</title><rect x="759.9" y="371.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.9" y="382.0"></text>
</g>
<g>
<title>jbd2__journal_start (12 samples, 0.15%)</title><rect x="759.9" y="355.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="762.9" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.05%)</title><rect x="760.3" y="339.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="763.3" y="350.0"></text>
</g>
<g>
<title>start_this_handle (6 samples, 0.08%)</title><rect x="760.9" y="339.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="763.9" y="350.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.03%)</title><rect x="761.5" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="764.5" y="334.0"></text>
</g>
<g>
<title>ext4_block_write_begin (5 samples, 0.06%)</title><rect x="761.8" y="371.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.8" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (11 samples, 0.14%)</title><rect x="762.5" y="371.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="765.5" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.13%)</title><rect x="762.7" y="355.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="765.7" y="366.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.10%)</title><rect x="763.0" y="339.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.0" y="350.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.06%)</title><rect x="763.3" y="323.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="766.3" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end (64 samples, 0.82%)</title><rect x="764.2" y="387.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="767.2" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="764.3" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="767.3" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="764.3" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="767.3" y="366.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.03%)</title><rect x="764.3" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="767.3" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="764.3" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="767.3" y="334.0"></text>
</g>
<g>
<title>generic_write_end (59 samples, 0.75%)</title><rect x="764.6" y="371.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="767.6" y="382.0"></text>
</g>
<g>
<title>__mark_inode_dirty (49 samples, 0.63%)</title><rect x="765.1" y="355.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="768.1" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode (48 samples, 0.61%)</title><rect x="765.2" y="339.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="768.2" y="350.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (48 samples, 0.61%)</title><rect x="765.2" y="323.0" width="7.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="768.2" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (32 samples, 0.41%)</title><rect x="765.5" y="307.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="768.5" y="318.0"></text>
</g>
<g>
<title>__brelse (2 samples, 0.03%)</title><rect x="765.7" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="768.7" y="302.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="766.0" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="769.0" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (25 samples, 0.32%)</title><rect x="766.4" y="291.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.4" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (16 samples, 0.20%)</title><rect x="767.5" y="275.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="770.5" y="286.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.03%)</title><rect x="767.6" y="259.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="770.6" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (13 samples, 0.17%)</title><rect x="767.9" y="259.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="770.9" y="270.0"></text>
</g>
<g>
<title>crypto_shash_update (9 samples, 0.12%)</title><rect x="768.5" y="243.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.5" y="254.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (9 samples, 0.12%)</title><rect x="768.5" y="227.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.5" y="238.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (14 samples, 0.18%)</title><rect x="770.4" y="307.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.4" y="318.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (8 samples, 0.10%)</title><rect x="770.5" y="291.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.5" y="302.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.04%)</title><rect x="770.7" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.7" y="286.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.04%)</title><rect x="770.7" y="259.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.7" y="270.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.04%)</title><rect x="771.3" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="774.3" y="286.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.06%)</title><rect x="771.7" y="291.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="774.7" y="302.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (4 samples, 0.05%)</title><rect x="771.9" y="275.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.9" y="286.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (4 samples, 0.05%)</title><rect x="771.9" y="259.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="774.9" y="270.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.05%)</title><rect x="772.6" y="355.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="775.6" y="366.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (3 samples, 0.04%)</title><rect x="772.8" y="339.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="775.8" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="773.2" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="776.2" y="366.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="773.5" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="776.5" y="382.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.09%)</title><rect x="774.3" y="387.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="777.3" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.05%)</title><rect x="774.7" y="371.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="777.7" y="382.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.03%)</title><rect x="775.5" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="778.5" y="414.0"></text>
</g>
<g>
<title>down_write_trylock (2 samples, 0.03%)</title><rect x="775.8" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="778.8" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.03%)</title><rect x="776.1" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="779.1" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.12%)</title><rect x="776.5" y="467.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="779.5" y="478.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.10%)</title><rect x="776.7" y="451.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.7" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.09%)</title><rect x="776.8" y="435.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.8" y="446.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.09%)</title><rect x="776.8" y="419.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="779.8" y="430.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.04%)</title><rect x="777.3" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="780.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (14 samples, 0.18%)</title><rect x="778.2" y="595.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="781.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="778.4" y="579.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="781.4" y="590.0"></text>
</g>
<g>
<title>memcpy (2 samples, 0.03%)</title><rect x="778.8" y="579.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="781.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="779.3" y="579.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="782.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="779.9" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="782.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.04%)</title><rect x="780.3" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="783.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="780.9" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="783.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="781.2" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="784.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (7 samples, 0.09%)</title><rect x="782.0" y="643.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="785.0" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.05%)</title><rect x="782.4" y="627.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="785.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.03%)</title><rect x="783.2" y="643.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="786.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (6 samples, 0.08%)</title><rect x="783.6" y="643.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="786.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Clear() (2 samples, 0.03%)</title><rect x="784.5" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="787.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.03%)</title><rect x="784.8" y="643.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="787.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.06%)</title><rect x="785.1" y="643.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="788.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (104 samples, 1.33%)</title><rect x="785.9" y="643.0" width="15.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="788.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (103 samples, 1.32%)</title><rect x="786.1" y="627.0" width="15.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="789.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (102 samples, 1.30%)</title><rect x="786.2" y="611.0" width="15.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="789.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (97 samples, 1.24%)</title><rect x="786.4" y="595.0" width="14.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="789.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.03%)</title><rect x="786.8" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="789.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (92 samples, 1.18%)</title><rect x="787.1" y="579.0" width="13.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="790.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (3 samples, 0.04%)</title><rect x="788.0" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="791.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (83 samples, 1.06%)</title><rect x="788.5" y="563.0" width="12.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="791.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (4 samples, 0.05%)</title><rect x="789.2" y="547.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="792.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.05%)</title><rect x="789.2" y="531.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="792.2" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (69 samples, 0.88%)</title><rect x="789.8" y="547.0" width="10.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="792.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (62 samples, 0.79%)</title><rect x="790.3" y="531.0" width="9.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="793.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (32 samples, 0.41%)</title><rect x="794.1" y="515.0" width="4.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="797.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (4 samples, 0.05%)</title><rect x="794.2" y="499.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="797.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (24 samples, 0.31%)</title><rect x="795.3" y="499.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="798.3" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (3 samples, 0.04%)</title><rect x="796.3" y="483.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="799.3" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.12%)</title><rect x="796.8" y="483.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="799.8" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="798.1" y="483.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="801.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="798.4" y="483.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="801.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.05%)</title><rect x="799.0" y="515.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="802.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.04%)</title><rect x="799.6" y="531.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="802.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="800.7" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="803.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="801.0" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="804.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="801.3" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="804.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (89 samples, 1.14%)</title><rect x="801.6" y="643.0" width="13.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="804.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="802.7" y="627.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (80 samples, 1.02%)</title><rect x="803.0" y="627.0" width="12.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="806.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (80 samples, 1.02%)</title><rect x="803.0" y="611.0" width="12.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="806.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (76 samples, 0.97%)</title><rect x="803.4" y="595.0" width="11.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="806.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (69 samples, 0.88%)</title><rect x="803.6" y="579.0" width="10.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="806.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="804.0" y="563.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="807.0" y="574.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="804.0" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="807.0" y="558.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="804.0" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="807.0" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="804.0" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="807.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (60 samples, 0.77%)</title><rect x="804.5" y="563.0" width="9.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="807.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (5 samples, 0.06%)</title><rect x="804.8" y="547.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="807.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="805.2" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="808.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (52 samples, 0.66%)</title><rect x="805.7" y="547.0" width="7.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="808.7" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (52 samples, 0.66%)</title><rect x="805.7" y="531.0" width="7.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="808.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (43 samples, 0.55%)</title><rect x="806.9" y="515.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="809.9" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (19 samples, 0.24%)</title><rect x="810.2" y="499.0" width="2.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="813.2" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="810.3" y="483.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="813.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.17%)</title><rect x="811.1" y="483.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="814.1" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="812.2" y="467.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="815.2" y="478.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, rocksdb::MemTable* const&amp;) (2 samples, 0.03%)</title><rect x="814.0" y="579.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="817.0" y="590.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos(rocksdb::MemTable* const&amp;) (3 samples, 0.04%)</title><rect x="814.3" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="817.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.03%)</title><rect x="815.2" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="818.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (78 samples, 1.00%)</title><rect x="815.5" y="643.0" width="11.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="818.5" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (17 samples, 0.22%)</title><rect x="824.1" y="627.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="827.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.19%)</title><rect x="824.4" y="611.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.18%)</title><rect x="824.5" y="595.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="827.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="826.0" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="829.0" y="590.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="826.3" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.3" y="574.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="826.3" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="829.3" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="826.6" y="627.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="829.6" y="638.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="826.9" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="829.9" y="638.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="826.9" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="829.9" y="622.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="826.9" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="829.9" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="826.9" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (32 samples, 0.41%)</title><rect x="827.2" y="643.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="830.2" y="654.0"></text>
</g>
<g>
<title>__sched_yield (7 samples, 0.09%)</title><rect x="827.9" y="627.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="830.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.09%)</title><rect x="827.9" y="611.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="830.9" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.09%)</title><rect x="827.9" y="595.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="830.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (6 samples, 0.08%)</title><rect x="828.0" y="579.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="831.0" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (6 samples, 0.08%)</title><rect x="828.0" y="563.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="831.0" y="574.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.08%)</title><rect x="828.0" y="547.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="831.0" y="558.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.08%)</title><rect x="828.0" y="531.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="831.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (21 samples, 0.27%)</title><rect x="828.9" y="627.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="831.9" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.06%)</title><rect x="830.9" y="611.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="833.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="830.9" y="595.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="833.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="831.2" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="832.1" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="835.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (6 samples, 0.08%)</title><rect x="832.7" y="643.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="835.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="833.1" y="627.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="836.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (3 samples, 0.04%)</title><rect x="833.6" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="836.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.05%)</title><rect x="834.0" y="643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="837.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (4 samples, 0.05%)</title><rect x="834.0" y="627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="837.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (4 samples, 0.05%)</title><rect x="834.6" y="643.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="837.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.03%)</title><rect x="835.4" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="838.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.03%)</title><rect x="836.0" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="839.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="836.5" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="839.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.03%)</title><rect x="836.9" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="839.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.03%)</title><rect x="837.2" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="840.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.04%)</title><rect x="838.3" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="841.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.10%)</title><rect x="838.7" y="675.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="841.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="838.7" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="841.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="839.0" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="842.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.04%)</title><rect x="839.9" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="842.9" y="686.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (3 samples, 0.04%)</title><rect x="840.8" y="675.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="843.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.03%)</title><rect x="841.3" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="844.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="841.6" y="691.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="844.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.03%)</title><rect x="842.3" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="845.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.41%)</title><rect x="842.6" y="755.0" width="4.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="845.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (22 samples, 0.28%)</title><rect x="843.1" y="739.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="846.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.20%)</title><rect x="844.0" y="723.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.20%)</title><rect x="844.0" y="707.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="847.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.17%)</title><rect x="844.3" y="691.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="847.3" y="702.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.15%)</title><rect x="844.5" y="675.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="847.5" y="686.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.15%)</title><rect x="844.5" y="659.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.5" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.12%)</title><rect x="844.5" y="643.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="847.5" y="654.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.10%)</title><rect x="844.6" y="627.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="847.6" y="638.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.09%)</title><rect x="844.8" y="611.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="847.8" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="845.8" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="848.8" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="846.4" y="739.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="849.4" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.04%)</title><rect x="846.9" y="739.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="849.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (86 samples, 1.10%)</title><rect x="847.6" y="755.0" width="13.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="850.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 0.92%)</title><rect x="849.7" y="739.0" width="10.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="852.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.92%)</title><rect x="849.7" y="723.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (71 samples, 0.91%)</title><rect x="849.9" y="707.0" width="10.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="852.9" y="718.0"></text>
</g>
<g>
<title>do_futex (71 samples, 0.91%)</title><rect x="849.9" y="691.0" width="10.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.9" y="702.0"></text>
</g>
<g>
<title>futex_wake (70 samples, 0.90%)</title><rect x="850.0" y="675.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="853.0" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="850.6" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="853.6" y="670.0"></text>
</g>
<g>
<title>wake_up_q (63 samples, 0.81%)</title><rect x="851.1" y="659.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="854.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (63 samples, 0.81%)</title><rect x="851.1" y="643.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="854.1" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 0.79%)</title><rect x="851.2" y="627.0" width="9.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.2" y="638.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.09%)</title><rect x="860.6" y="755.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="863.6" y="766.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.09%)</title><rect x="860.6" y="739.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="863.6" y="750.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.08%)</title><rect x="860.7" y="723.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="863.7" y="734.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.03%)</title><rect x="861.8" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="864.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (20 samples, 0.26%)</title><rect x="862.4" y="851.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.17%)</title><rect x="863.3" y="835.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.09%)</title><rect x="863.3" y="819.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="863.6" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="863.9" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.08%)</title><rect x="864.4" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="864.7" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="864.8" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.08%)</title><rect x="865.4" y="851.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="865.6" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="865.6" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="865.6" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.6" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="866.0" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (36 samples, 0.46%)</title><rect x="866.5" y="883.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.20%)</title><rect x="867.5" y="867.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="870.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.20%)</title><rect x="867.5" y="851.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="869.0" y="835.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="869.0" y="819.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.06%)</title><rect x="869.0" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (13 samples, 0.17%)</title><rect x="870.0" y="867.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.05%)</title><rect x="871.9" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.05%)</title><rect x="871.9" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.05%)</title><rect x="871.9" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="871.9" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="871.9" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.9" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.04%)</title><rect x="871.9" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.18%)</title><rect x="872.5" y="883.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.14%)</title><rect x="872.8" y="867.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.14%)</title><rect x="872.8" y="851.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.8" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="874.0" y="835.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="877.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.10%)</title><rect x="874.6" y="883.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="874.8" y="867.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (133 samples, 1.70%)</title><rect x="876.0" y="899.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (133 samples, 1.70%)</title><rect x="876.0" y="883.0" width="20.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.0" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (25 samples, 0.32%)</title><rect x="876.6" y="867.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="879.6" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="877.0" y="851.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="880.0" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="877.8" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="880.8" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.18%)</title><rect x="878.3" y="851.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="881.3" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.06%)</title><rect x="879.6" y="835.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="882.6" y="846.0"></text>
</g>
<g>
<title>__recv (103 samples, 1.32%)</title><rect x="880.4" y="867.0" width="15.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="883.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 1.24%)</title><rect x="881.3" y="851.0" width="14.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="884.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (97 samples, 1.24%)</title><rect x="881.3" y="835.0" width="14.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="884.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (90 samples, 1.15%)</title><rect x="882.3" y="819.0" width="13.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="885.3" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (88 samples, 1.13%)</title><rect x="882.3" y="803.0" width="13.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="885.3" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (74 samples, 0.95%)</title><rect x="882.8" y="787.0" width="11.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="885.8" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (65 samples, 0.83%)</title><rect x="882.9" y="771.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="885.9" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (64 samples, 0.82%)</title><rect x="883.1" y="755.0" width="9.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="886.1" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (20 samples, 0.26%)</title><rect x="884.6" y="739.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="887.6" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.08%)</title><rect x="884.6" y="723.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.6" y="734.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.18%)</title><rect x="885.5" y="723.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.5" y="734.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="885.5" y="707.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="888.5" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="886.1" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="889.1" y="718.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.04%)</title><rect x="886.1" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="889.1" y="702.0"></text>
</g>
<g>
<title>sock_rfree (7 samples, 0.09%)</title><rect x="886.5" y="707.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="887.6" y="739.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="890.6" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (19 samples, 0.24%)</title><rect x="888.5" y="739.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="891.5" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (19 samples, 0.24%)</title><rect x="888.5" y="723.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="891.5" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.18%)</title><rect x="889.3" y="707.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.3" y="718.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="889.3" y="691.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="892.3" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="889.6" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="892.6" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.10%)</title><rect x="890.2" y="691.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.2" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.06%)</title><rect x="890.6" y="675.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.6" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (8 samples, 0.10%)</title><rect x="891.4" y="739.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="894.4" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="891.7" y="723.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="894.7" y="734.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="891.7" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="894.7" y="718.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="892.3" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="895.3" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.10%)</title><rect x="892.7" y="771.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.7" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.08%)</title><rect x="893.0" y="755.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="896.0" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.08%)</title><rect x="893.0" y="739.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.0" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.04%)</title><rect x="893.5" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="896.5" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="893.6" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="896.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.14%)</title><rect x="893.9" y="787.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="896.9" y="798.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.09%)</title><rect x="893.9" y="771.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="896.9" y="782.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="893.9" y="755.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="896.9" y="766.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="893.9" y="739.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="896.9" y="750.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="895.0" y="771.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="898.0" y="782.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="895.6" y="803.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="898.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="896.1" y="915.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="899.1" y="926.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="896.1" y="899.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="899.1" y="910.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="896.1" y="883.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="899.1" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=5906] (1,932 samples, 24.71%)</title><rect x="896.7" y="963.0" width="291.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="899.7" y="974.0">[NIO Selector #3 tid=5906]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,931 samples, 24.69%)</title><rect x="896.8" y="947.0" width="291.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.8" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="898.0" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.04%)</title><rect x="898.2" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="898.2" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (98 samples, 1.25%)</title><rect x="898.6" y="931.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.6" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (5 samples, 0.06%)</title><rect x="898.8" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.05%)</title><rect x="898.9" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (92 samples, 1.18%)</title><rect x="899.5" y="915.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.5" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.04%)</title><rect x="899.7" y="899.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="902.7" y="910.0"></text>
</g>
<g>
<title>clock_gettime (11 samples, 0.14%)</title><rect x="900.3" y="899.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="903.3" y="910.0"></text>
</g>
<g>
<title>epoll_wait (76 samples, 0.97%)</title><rect x="901.9" y="899.0" width="11.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="904.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 0.82%)</title><rect x="903.8" y="883.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="906.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 0.82%)</title><rect x="903.8" y="867.0" width="9.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="906.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 0.75%)</title><rect x="904.2" y="851.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="907.2" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (57 samples, 0.73%)</title><rect x="904.4" y="835.0" width="8.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="907.4" y="846.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="904.5" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="907.5" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="904.5" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.5" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="904.5" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="907.5" y="798.0"></text>
</g>
<g>
<title>ep_poll (53 samples, 0.68%)</title><rect x="905.0" y="819.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="908.0" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (42 samples, 0.54%)</title><rect x="905.4" y="803.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="908.4" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (34 samples, 0.43%)</title><rect x="906.5" y="787.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="909.5" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="907.4" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="910.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (25 samples, 0.32%)</title><rect x="907.7" y="771.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="910.7" y="782.0"></text>
</g>
<g>
<title>sock_poll (23 samples, 0.29%)</title><rect x="908.0" y="755.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="911.0" y="766.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.05%)</title><rect x="910.1" y="739.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="913.1" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.06%)</title><rect x="910.7" y="739.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="913.7" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.06%)</title><rect x="911.7" y="803.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.7" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="912.5" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="915.5" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="912.5" y="787.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.5" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.03%)</title><rect x="913.1" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="916.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,821 samples, 23.29%)</title><rect x="913.4" y="931.0" width="274.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.4" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,814 samples, 23.20%)</title><rect x="914.0" y="915.0" width="273.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.0" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,674 samples, 21.41%)</title><rect x="914.9" y="899.0" width="252.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.9" y="910.0">one/nio/http/HttpSession.processHt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,593 samples, 20.37%)</title><rect x="917.0" y="883.0" width="240.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.0" y="894.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,592 samples, 20.36%)</title><rect x="917.0" y="867.0" width="240.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.0" y="878.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,562 samples, 19.97%)</title><rect x="917.2" y="851.0" width="235.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.2" y="862.0">RequestHandler1_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (533 samples, 6.82%)</title><rect x="917.3" y="835.0" width="80.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.3" y="846.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="917.6" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (522 samples, 6.68%)</title><rect x="918.1" y="819.0" width="78.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.1" y="830.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 0.33%)</title><rect x="918.1" y="803.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="918.5" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.27%)</title><rect x="918.8" y="787.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.08%)</title><rect x="919.1" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.17%)</title><rect x="920.0" y="771.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.17%)</title><rect x="920.0" y="755.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.17%)</title><rect x="920.0" y="739.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="921.3" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.05%)</title><rect x="921.3" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (496 samples, 6.34%)</title><rect x="922.0" y="803.0" width="74.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.0" y="814.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (496 samples, 6.34%)</title><rect x="922.0" y="787.0" width="74.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.0" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (496 samples, 6.34%)</title><rect x="922.0" y="771.0" width="74.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.0" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (496 samples, 6.34%)</title><rect x="922.0" y="755.0" width="74.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.0" y="766.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.18%)</title><rect x="923.4" y="739.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="926.4" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.15%)</title><rect x="923.5" y="723.0" width="1.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="926.5" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="923.8" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.06%)</title><rect x="924.4" y="707.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="927.4" y="718.0"></text>
</g>
<g>
<title>send (473 samples, 6.05%)</title><rect x="925.5" y="739.0" width="71.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="928.5" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (469 samples, 6.00%)</title><rect x="926.1" y="723.0" width="70.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="929.1" y="734.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (469 samples, 6.00%)</title><rect x="926.1" y="707.0" width="70.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="929.1" y="718.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (462 samples, 5.91%)</title><rect x="926.8" y="691.0" width="69.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.8" y="702.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (460 samples, 5.88%)</title><rect x="926.8" y="675.0" width="69.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.8" y="686.0">__sys_s..</text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="926.8" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.8" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (453 samples, 5.79%)</title><rect x="927.3" y="659.0" width="68.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="930.3" y="670.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (441 samples, 5.64%)</title><rect x="927.6" y="643.0" width="66.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="930.6" y="654.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (437 samples, 5.59%)</title><rect x="928.2" y="627.0" width="65.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.2" y="638.0">tcp_sen..</text>
</g>
<g>
<title>tcp_sendmsg_locked (430 samples, 5.50%)</title><rect x="929.1" y="611.0" width="64.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="932.1" y="622.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="930.3" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.3" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="930.3" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="933.3" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.05%)</title><rect x="930.6" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="933.6" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="930.8" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.8" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.43%)</title><rect x="931.2" y="595.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.2" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (29 samples, 0.37%)</title><rect x="931.7" y="579.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (20 samples, 0.26%)</title><rect x="931.8" y="563.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="934.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.15%)</title><rect x="931.8" y="547.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="934.8" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (7 samples, 0.09%)</title><rect x="932.4" y="531.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="935.4" y="542.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="933.6" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="936.6" y="558.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="933.9" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.9" y="558.0"></text>
</g>
<g>
<title>memset (4 samples, 0.05%)</title><rect x="934.2" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="937.2" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="934.8" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="937.8" y="574.0"></text>
</g>
<g>
<title>memset (4 samples, 0.05%)</title><rect x="935.4" y="563.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="938.4" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="936.3" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="939.3" y="606.0"></text>
</g>
<g>
<title>tcp_push (374 samples, 4.78%)</title><rect x="936.6" y="595.0" width="56.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="939.6" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (374 samples, 4.78%)</title><rect x="936.6" y="579.0" width="56.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="939.6" y="590.0">__tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.03%)</title><rect x="936.6" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (370 samples, 4.73%)</title><rect x="937.3" y="563.0" width="55.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.3" y="574.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (351 samples, 4.49%)</title><rect x="937.7" y="547.0" width="53.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.7" y="558.0">__tcp..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="938.3" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="941.3" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (336 samples, 4.30%)</title><rect x="938.9" y="531.0" width="50.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.9" y="542.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (332 samples, 4.25%)</title><rect x="939.1" y="515.0" width="50.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="942.1" y="526.0">__ip_..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="939.1" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.1" y="510.0"></text>
</g>
<g>
<title>ip_local_out (327 samples, 4.18%)</title><rect x="939.7" y="499.0" width="49.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.7" y="510.0">ip_lo..</text>
</g>
<g>
<title>ip_output (327 samples, 4.18%)</title><rect x="939.7" y="483.0" width="49.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="942.7" y="494.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (322 samples, 4.12%)</title><rect x="940.4" y="467.0" width="48.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="943.4" y="478.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="940.4" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="943.4" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (320 samples, 4.09%)</title><rect x="940.7" y="451.0" width="48.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="943.7" y="462.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (319 samples, 4.08%)</title><rect x="940.9" y="435.0" width="48.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="943.9" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (297 samples, 3.80%)</title><rect x="941.6" y="419.0" width="44.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.6" y="430.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (297 samples, 3.80%)</title><rect x="941.6" y="403.0" width="44.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="944.6" y="414.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (292 samples, 3.73%)</title><rect x="942.4" y="387.0" width="44.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="945.4" y="398.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (292 samples, 3.73%)</title><rect x="942.4" y="371.0" width="44.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="945.4" y="382.0">__so..</text>
</g>
<g>
<title>net_rx_action (285 samples, 3.64%)</title><rect x="943.4" y="355.0" width="43.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="946.4" y="366.0">net_..</text>
</g>
<g>
<title>process_backlog (281 samples, 3.59%)</title><rect x="944.0" y="339.0" width="42.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.0" y="350.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (275 samples, 3.52%)</title><rect x="944.9" y="323.0" width="41.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="947.9" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (274 samples, 3.50%)</title><rect x="944.9" y="307.0" width="41.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.9" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.06%)</title><rect x="945.1" y="291.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="948.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv (268 samples, 3.43%)</title><rect x="945.9" y="291.0" width="40.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.9" y="302.0">ip_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="946.2" y="275.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.06%)</title><rect x="946.6" y="275.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="949.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (258 samples, 3.30%)</title><rect x="947.4" y="275.0" width="38.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="950.4" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (255 samples, 3.26%)</title><rect x="947.5" y="259.0" width="38.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.5" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (252 samples, 3.22%)</title><rect x="947.7" y="243.0" width="38.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.7" y="254.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (252 samples, 3.22%)</title><rect x="947.7" y="227.0" width="38.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.7" y="238.0">ip_..</text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="948.4" y="211.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="951.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (244 samples, 3.12%)</title><rect x="948.9" y="211.0" width="36.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.9" y="222.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.13%)</title><rect x="949.9" y="195.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.9" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="951.4" y="195.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="954.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (224 samples, 2.86%)</title><rect x="951.9" y="195.0" width="33.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="954.9" y="206.0">tc..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.05%)</title><rect x="952.0" y="179.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="955.0" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (219 samples, 2.80%)</title><rect x="952.6" y="179.0" width="33.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.6" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (12 samples, 0.15%)</title><rect x="952.9" y="163.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.9" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (11 samples, 0.14%)</title><rect x="953.1" y="147.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="956.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.14%)</title><rect x="953.1" y="131.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="956.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.14%)</title><rect x="953.1" y="115.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="956.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.12%)</title><rect x="953.2" y="99.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack (47 samples, 0.60%)</title><rect x="955.1" y="163.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.1" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="956.6" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="959.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (30 samples, 0.38%)</title><rect x="957.0" y="147.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="960.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.27%)</title><rect x="958.1" y="131.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="961.1" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.12%)</title><rect x="958.1" y="115.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="961.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (9 samples, 0.12%)</title><rect x="958.1" y="99.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="961.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="958.8" y="83.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="961.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.15%)</title><rect x="959.4" y="115.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.14%)</title><rect x="959.4" y="99.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="962.4" y="110.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.08%)</title><rect x="960.2" y="83.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.2" y="94.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.08%)</title><rect x="960.2" y="67.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="963.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="960.5" y="51.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="963.5" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (146 samples, 1.87%)</title><rect x="962.1" y="163.0" width="22.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="965.1" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (146 samples, 1.87%)</title><rect x="962.1" y="147.0" width="22.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="965.1" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (146 samples, 1.87%)</title><rect x="962.1" y="131.0" width="22.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="965.1" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (146 samples, 1.87%)</title><rect x="962.1" y="115.0" width="22.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="965.1" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (145 samples, 1.85%)</title><rect x="962.3" y="99.0" width="21.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="965.3" y="110.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="984.2" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="987.2" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="984.5" y="163.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.5" y="174.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="984.8" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.8" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="985.7" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="988.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="986.0" y="259.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="989.0" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.22%)</title><rect x="986.4" y="419.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="989.4" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (16 samples, 0.20%)</title><rect x="986.4" y="403.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="989.4" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.10%)</title><rect x="987.0" y="387.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="990.0" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.10%)</title><rect x="987.0" y="371.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="990.0" y="382.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="987.0" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="990.0" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="987.0" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.0" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.05%)</title><rect x="987.3" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="990.3" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="988.0" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="991.0" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="988.4" y="387.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="991.4" y="398.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="989.2" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="992.2" y="526.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="989.6" y="531.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.6" y="542.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="989.8" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="992.8" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="990.8" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="993.8" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.10%)</title><rect x="991.6" y="547.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.09%)</title><rect x="991.7" y="531.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.7" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.09%)</title><rect x="991.7" y="515.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="994.7" y="526.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.09%)</title><rect x="991.7" y="499.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="994.7" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="991.9" y="483.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="994.9" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="992.8" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="995.8" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.08%)</title><rect x="993.1" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="996.1" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="993.1" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.1" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="993.4" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.4" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.13%)</title><rect x="994.1" y="643.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="997.1" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.08%)</title><rect x="994.7" y="627.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="997.7" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.08%)</title><rect x="994.7" y="611.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="997.7" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (4 samples, 0.05%)</title><rect x="994.9" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="997.9" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.05%)</title><rect x="995.6" y="659.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="998.6" y="670.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="995.6" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="998.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="995.6" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="998.6" y="638.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="995.6" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.6" y="622.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="996.3" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="996.6" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="996.9" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="996.9" y="803.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="996.9" y="787.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.04%)</title><rect x="997.3" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.04%)</title><rect x="997.3" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.3" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (3 samples, 0.04%)</title><rect x="997.3" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.3" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.04%)</title><rect x="997.3" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (31 samples, 0.40%)</title><rect x="997.8" y="835.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.36%)</title><rect x="998.2" y="819.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="998.7" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="998.7" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.22%)</title><rect x="999.1" y="803.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.20%)</title><rect x="999.3" y="787.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.3" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.20%)</title><rect x="999.3" y="771.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.3" y="782.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.10%)</title><rect x="999.7" y="755.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1002.7" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="1000.9" y="755.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1003.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="1001.1" y="739.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1004.1" y="750.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="1001.1" y="723.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1004.1" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="1001.7" y="803.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1004.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (997 samples, 12.75%)</title><rect x="1002.4" y="835.0" width="150.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.4" y="846.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (994 samples, 12.71%)</title><rect x="1002.9" y="819.0" width="150.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.9" y="830.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1002.9" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1002.9" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.9" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1002.9" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1002.9" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1002.9" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1002.9" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1002.9" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.10%)</title><rect x="1003.2" y="803.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.2" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="1003.6" y="787.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1006.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (984 samples, 12.58%)</title><rect x="1004.4" y="803.0" width="148.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.4" y="814.0">ru/mail/polis/dao/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (978 samples, 12.51%)</title><rect x="1004.5" y="787.0" width="147.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.5" y="798.0">org/rocksdb/RocksDB..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (978 samples, 12.51%)</title><rect x="1004.5" y="771.0" width="147.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1007.5" y="782.0">org/rocksdb/RocksDB..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="1005.3" y="755.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1008.3" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (843 samples, 10.78%)</title><rect x="1006.1" y="755.0" width="127.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1009.1" y="766.0">Java_org_rocksdb..</text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="1007.1" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1010.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="1007.4" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.4" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (830 samples, 10.61%)</title><rect x="1008.0" y="739.0" width="125.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1011.0" y="750.0">rocksdb_put_hel..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="1008.6" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1011.6" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (10 samples, 0.13%)</title><rect x="1008.9" y="723.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1011.9" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.05%)</title><rect x="1009.8" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1012.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.13%)</title><rect x="1010.4" y="723.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1013.4" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1011.0" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.05%)</title><rect x="1011.3" y="707.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (803 samples, 10.27%)</title><rect x="1011.9" y="723.0" width="121.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1014.9" y="734.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.08%)</title><rect x="1012.2" y="707.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1015.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (795 samples, 10.17%)</title><rect x="1013.2" y="707.0" width="119.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1016.2" y="718.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (788 samples, 10.08%)</title><rect x="1013.6" y="691.0" width="118.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1016.6" y="702.0">rocksdb::DB::P..</text>
</g>
<g>
<title>cfree (3 samples, 0.04%)</title><rect x="1014.2" y="675.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1017.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (4 samples, 0.05%)</title><rect x="1014.8" y="675.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (752 samples, 9.62%)</title><rect x="1015.4" y="675.0" width="113.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1018.4" y="686.0">rocksdb::DBImp..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="1015.6" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1018.6" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1016.0" y="659.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1019.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.04%)</title><rect x="1016.3" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1019.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (726 samples, 9.28%)</title><rect x="1016.8" y="659.0" width="109.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1019.8" y="670.0">rocksdb::DBIm..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1021.9" y="643.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1024.9" y="654.0"></text>
</g>
<g>
<title>__sched_yield (22 samples, 0.28%)</title><rect x="1022.2" y="643.0" width="3.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1025.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.20%)</title><rect x="1023.1" y="627.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1026.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.20%)</title><rect x="1023.1" y="611.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1026.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (12 samples, 0.15%)</title><rect x="1023.7" y="595.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1026.7" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (12 samples, 0.15%)</title><rect x="1023.7" y="579.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1026.7" y="590.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.15%)</title><rect x="1023.7" y="563.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1026.7" y="574.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.15%)</title><rect x="1023.7" y="547.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="1025.5" y="643.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1028.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.04%)</title><rect x="1026.6" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1029.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (3 samples, 0.04%)</title><rect x="1026.6" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1029.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.04%)</title><rect x="1027.0" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (281 samples, 3.59%)</title><rect x="1027.5" y="643.0" width="42.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1030.5" y="654.0">rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="1027.9" y="627.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1030.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.04%)</title><rect x="1028.2" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1031.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (272 samples, 3.48%)</title><rect x="1028.7" y="627.0" width="41.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1031.7" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (269 samples, 3.44%)</title><rect x="1029.1" y="611.0" width="40.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1032.1" y="622.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (12 samples, 0.15%)</title><rect x="1029.6" y="595.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1032.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (232 samples, 2.97%)</title><rect x="1031.6" y="595.0" width="35.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1034.6" y="606.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="1031.9" y="579.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1034.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (3 samples, 0.04%)</title><rect x="1032.6" y="579.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1035.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (222 samples, 2.84%)</title><rect x="1033.1" y="579.0" width="33.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1036.1" y="590.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="1033.8" y="563.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1036.8" y="574.0"></text>
</g>
<g>
<title>__write (213 samples, 2.72%)</title><rect x="1034.3" y="563.0" width="32.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1037.3" y="574.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (195 samples, 2.49%)</title><rect x="1037.0" y="547.0" width="29.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1040.0" y="558.0">en..</text>
</g>
<g>
<title>do_syscall_64 (194 samples, 2.48%)</title><rect x="1037.1" y="531.0" width="29.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1040.1" y="542.0">do..</text>
</g>
<g>
<title>__x64_sys_write (186 samples, 2.38%)</title><rect x="1038.2" y="515.0" width="28.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1041.2" y="526.0">__..</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.03%)</title><rect x="1038.2" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1041.2" y="510.0"></text>
</g>
<g>
<title>ksys_write (184 samples, 2.35%)</title><rect x="1038.5" y="499.0" width="27.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1041.5" y="510.0">k..</text>
</g>
<g>
<title>__fdget_pos (10 samples, 0.13%)</title><rect x="1038.7" y="483.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1041.7" y="494.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="1038.7" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1041.7" y="478.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="1038.7" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1041.7" y="462.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.08%)</title><rect x="1039.3" y="467.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.3" y="478.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="1040.5" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1043.5" y="494.0"></text>
</g>
<g>
<title>vfs_write (169 samples, 2.16%)</title><rect x="1040.8" y="483.0" width="25.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1043.8" y="494.0">v..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="1040.9" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1043.9" y="478.0"></text>
</g>
<g>
<title>__vfs_write (158 samples, 2.02%)</title><rect x="1041.2" y="467.0" width="23.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1044.2" y="478.0">_..</text>
</g>
<g>
<title>new_sync_write (157 samples, 2.01%)</title><rect x="1041.4" y="451.0" width="23.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1044.4" y="462.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (154 samples, 1.97%)</title><rect x="1041.7" y="435.0" width="23.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.7" y="446.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (145 samples, 1.85%)</title><rect x="1042.1" y="419.0" width="21.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1045.1" y="430.0">_..</text>
</g>
<g>
<title>__mnt_want_write_file (2 samples, 0.03%)</title><rect x="1042.3" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1045.3" y="414.0"></text>
</g>
<g>
<title>file_update_time (9 samples, 0.12%)</title><rect x="1042.9" y="403.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1045.9" y="414.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="1042.9" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1045.9" y="398.0"></text>
</g>
<g>
<title>generic_update_time (5 samples, 0.06%)</title><rect x="1043.2" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1046.2" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (5 samples, 0.06%)</title><rect x="1043.2" y="371.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1046.2" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.04%)</title><rect x="1043.5" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1046.5" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.04%)</title><rect x="1043.5" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.5" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.03%)</title><rect x="1043.5" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1046.5" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.03%)</title><rect x="1043.5" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1046.5" y="318.0"></text>
</g>
<g>
<title>generic_perform_write (131 samples, 1.68%)</title><rect x="1044.2" y="403.0" width="19.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1047.2" y="414.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.03%)</title><rect x="1044.4" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.4" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_begin (40 samples, 0.51%)</title><rect x="1044.7" y="387.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1047.7" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (26 samples, 0.33%)</title><rect x="1044.8" y="371.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1047.8" y="382.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.03%)</title><rect x="1045.0" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.0" y="366.0"></text>
</g>
<g>
<title>jbd2__journal_start (23 samples, 0.29%)</title><rect x="1045.3" y="355.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.3" y="366.0"></text>
</g>
<g>
<title>_raw_read_lock (8 samples, 0.10%)</title><rect x="1045.4" y="339.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1048.4" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.06%)</title><rect x="1046.6" y="339.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1049.6" y="350.0"></text>
</g>
<g>
<title>start_this_handle (9 samples, 0.12%)</title><rect x="1047.4" y="339.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1050.4" y="350.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.04%)</title><rect x="1048.8" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.8" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (9 samples, 0.12%)</title><rect x="1049.4" y="371.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1052.4" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (9 samples, 0.12%)</title><rect x="1049.4" y="355.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1052.4" y="366.0"></text>
</g>
<g>
<title>__page_cache_alloc (2 samples, 0.03%)</title><rect x="1049.5" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1052.5" y="350.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="1050.0" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.0" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end (80 samples, 1.02%)</title><rect x="1050.7" y="387.0" width="12.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1053.7" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_stop (13 samples, 0.17%)</title><rect x="1050.9" y="371.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1053.9" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (13 samples, 0.17%)</title><rect x="1050.9" y="355.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1053.9" y="366.0"></text>
</g>
<g>
<title>__wake_up (6 samples, 0.08%)</title><rect x="1051.3" y="339.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1054.3" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.08%)</title><rect x="1051.3" y="323.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1054.3" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="1051.6" y="307.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.6" y="318.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="1052.2" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1055.2" y="350.0"></text>
</g>
<g>
<title>generic_write_end (64 samples, 0.82%)</title><rect x="1052.8" y="371.0" width="9.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1055.8" y="382.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (3 samples, 0.04%)</title><rect x="1053.1" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1056.1" y="366.0"></text>
</g>
<g>
<title>__mark_inode_dirty (54 samples, 0.69%)</title><rect x="1053.6" y="355.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.6" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode (54 samples, 0.69%)</title><rect x="1053.6" y="339.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1056.6" y="350.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (53 samples, 0.68%)</title><rect x="1053.7" y="323.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1056.7" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (37 samples, 0.47%)</title><rect x="1053.9" y="307.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1056.9" y="318.0"></text>
</g>
<g>
<title>__brelse (2 samples, 0.03%)</title><rect x="1054.2" y="291.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1057.2" y="302.0"></text>
</g>
<g>
<title>ext4_do_update_inode (31 samples, 0.40%)</title><rect x="1054.6" y="291.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1057.6" y="302.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.03%)</title><rect x="1056.2" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1059.2" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (17 samples, 0.22%)</title><rect x="1056.5" y="275.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1059.5" y="286.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.05%)</title><rect x="1056.5" y="259.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1059.5" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (13 samples, 0.17%)</title><rect x="1057.1" y="259.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1060.1" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="1057.2" y="243.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1060.2" y="254.0"></text>
</g>
<g>
<title>crypto_shash_update (9 samples, 0.12%)</title><rect x="1057.7" y="243.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1060.7" y="254.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.08%)</title><rect x="1058.1" y="227.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.1" y="238.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (15 samples, 0.19%)</title><rect x="1059.5" y="307.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1062.5" y="318.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (10 samples, 0.13%)</title><rect x="1059.8" y="291.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1062.8" y="302.0"></text>
</g>
<g>
<title>__getblk_gfp (6 samples, 0.08%)</title><rect x="1059.9" y="275.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1062.9" y="286.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.05%)</title><rect x="1060.1" y="259.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1063.1" y="270.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.04%)</title><rect x="1060.8" y="275.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1063.8" y="286.0"></text>
</g>
<g>
<title>block_write_end (3 samples, 0.04%)</title><rect x="1061.7" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1064.7" y="366.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (3 samples, 0.04%)</title><rect x="1061.7" y="339.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1064.7" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="1062.2" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1065.2" y="366.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="1062.5" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1065.5" y="382.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (3 samples, 0.04%)</title><rect x="1063.1" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1066.1" y="398.0"></text>
</g>
<g>
<title>unlock_page (3 samples, 0.04%)</title><rect x="1063.5" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1066.5" y="398.0"></text>
</g>
<g>
<title>ext4_write_checks (5 samples, 0.06%)</title><rect x="1064.0" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1067.0" y="430.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (4 samples, 0.05%)</title><rect x="1064.2" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.2" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.10%)</title><rect x="1065.1" y="467.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1068.1" y="478.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.08%)</title><rect x="1065.4" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1068.4" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.05%)</title><rect x="1065.7" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1068.7" y="446.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.05%)</title><rect x="1065.7" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1068.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="1066.6" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1069.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.03%)</title><rect x="1066.9" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (17 samples, 0.22%)</title><rect x="1067.2" y="595.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1070.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="1067.3" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1070.3" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="1067.8" y="579.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1070.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (6 samples, 0.08%)</title><rect x="1068.7" y="579.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1071.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (12 samples, 0.15%)</title><rect x="1069.9" y="643.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1072.9" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1070.3" y="627.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1073.3" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.09%)</title><rect x="1070.6" y="627.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1073.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="1071.7" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1074.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (3 samples, 0.04%)</title><rect x="1072.0" y="643.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1075.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.05%)</title><rect x="1072.9" y="643.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (117 samples, 1.50%)</title><rect x="1073.5" y="643.0" width="17.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1076.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (114 samples, 1.46%)</title><rect x="1073.8" y="627.0" width="17.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (113 samples, 1.45%)</title><rect x="1074.0" y="611.0" width="17.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1077.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (109 samples, 1.39%)</title><rect x="1074.1" y="595.0" width="16.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1077.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (3 samples, 0.04%)</title><rect x="1074.1" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1077.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (2 samples, 0.03%)</title><rect x="1074.6" y="579.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1077.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (103 samples, 1.32%)</title><rect x="1075.0" y="579.0" width="15.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1078.0" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (3 samples, 0.04%)</title><rect x="1075.6" y="563.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1078.6" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="1076.1" y="563.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1079.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (88 samples, 1.13%)</title><rect x="1077.1" y="563.0" width="13.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (6 samples, 0.08%)</title><rect x="1078.0" y="547.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1081.0" y="558.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="1078.5" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1081.5" y="542.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="1078.5" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1081.5" y="526.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="1078.5" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1081.5" y="510.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="1078.5" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1081.5" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="1078.5" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1081.5" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="1078.5" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1081.5" y="462.0"></text>
</g>
<g>
<title>do_anonymous_page (2 samples, 0.03%)</title><rect x="1078.5" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1081.5" y="446.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (72 samples, 0.92%)</title><rect x="1078.9" y="547.0" width="10.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1081.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (65 samples, 0.83%)</title><rect x="1079.7" y="531.0" width="9.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1082.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (28 samples, 0.36%)</title><rect x="1083.6" y="515.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1086.6" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (4 samples, 0.05%)</title><rect x="1083.9" y="499.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1086.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1084.5" y="499.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1087.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (20 samples, 0.26%)</title><rect x="1084.8" y="499.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1087.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (6 samples, 0.08%)</title><rect x="1085.9" y="483.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1088.9" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.08%)</title><rect x="1086.8" y="483.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1089.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.13%)</title><rect x="1088.0" y="515.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1091.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="1088.9" y="499.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1091.9" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="1089.2" y="499.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1092.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.03%)</title><rect x="1089.5" y="531.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1092.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="1090.7" y="595.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (85 samples, 1.09%)</title><rect x="1091.2" y="643.0" width="12.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.2" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="1091.6" y="627.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1094.6" y="638.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.03%)</title><rect x="1091.9" y="627.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1094.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (75 samples, 0.96%)</title><rect x="1092.5" y="627.0" width="11.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1095.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (75 samples, 0.96%)</title><rect x="1092.5" y="611.0" width="11.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1095.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (73 samples, 0.93%)</title><rect x="1092.7" y="595.0" width="11.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1095.7" y="606.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.04%)</title><rect x="1092.7" y="579.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1095.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (64 samples, 0.82%)</title><rect x="1093.3" y="579.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (56 samples, 0.72%)</title><rect x="1094.5" y="563.0" width="8.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1097.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (4 samples, 0.05%)</title><rect x="1094.8" y="547.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1097.8" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1095.1" y="531.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1098.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (49 samples, 0.63%)</title><rect x="1095.5" y="547.0" width="7.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.5" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (48 samples, 0.61%)</title><rect x="1095.5" y="531.0" width="7.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (44 samples, 0.56%)</title><rect x="1095.7" y="515.0" width="6.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1098.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (21 samples, 0.27%)</title><rect x="1099.2" y="499.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1102.2" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="1099.2" y="483.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1102.2" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="1099.5" y="483.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1102.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 0.19%)</title><rect x="1100.1" y="483.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1103.1" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (5 samples, 0.06%)</title><rect x="1100.5" y="467.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1103.5" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.09%)</title><rect x="1101.3" y="467.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1104.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.04%)</title><rect x="1102.3" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1105.3" y="526.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos(rocksdb::MemTable* const&amp;) (2 samples, 0.03%)</title><rect x="1103.1" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1106.1" y="590.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.03%)</title><rect x="1103.4" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1106.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (80 samples, 1.02%)</title><rect x="1104.1" y="643.0" width="12.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.1" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (28 samples, 0.36%)</title><rect x="1111.5" y="627.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1114.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.32%)</title><rect x="1112.0" y="611.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1115.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.31%)</title><rect x="1112.1" y="595.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1115.1" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.26%)</title><rect x="1112.7" y="579.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.7" y="590.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.23%)</title><rect x="1112.9" y="563.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1115.9" y="574.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.17%)</title><rect x="1113.5" y="547.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1116.5" y="558.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.05%)</title><rect x="1114.6" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.6" y="542.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (4 samples, 0.05%)</title><rect x="1114.6" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1117.6" y="526.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="1115.2" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1118.2" y="542.0"></text>
</g>
<g>
<title>pthread_cond_wait (2 samples, 0.03%)</title><rect x="1115.8" y="627.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1118.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="1116.2" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1119.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (42 samples, 0.54%)</title><rect x="1116.5" y="643.0" width="6.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.5" y="654.0"></text>
</g>
<g>
<title>__sched_yield (9 samples, 0.12%)</title><rect x="1117.0" y="627.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1120.0" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.10%)</title><rect x="1117.1" y="611.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.1" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.10%)</title><rect x="1117.1" y="595.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.1" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (6 samples, 0.08%)</title><rect x="1117.4" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1120.4" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (5 samples, 0.06%)</title><rect x="1117.6" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1120.6" y="574.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.06%)</title><rect x="1117.6" y="547.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.6" y="558.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.06%)</title><rect x="1117.6" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1120.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (30 samples, 0.38%)</title><rect x="1118.3" y="627.0" width="4.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.3" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.06%)</title><rect x="1121.8" y="611.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1124.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="1121.9" y="595.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="1121.9" y="579.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1124.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.04%)</title><rect x="1122.1" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1125.1" y="574.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="1122.1" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.1" y="558.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1122.1" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1125.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (4 samples, 0.05%)</title><rect x="1122.9" y="643.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="1123.5" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1126.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (4 samples, 0.05%)</title><rect x="1123.9" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="1124.5" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1127.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.04%)</title><rect x="1124.5" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1127.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="1125.0" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.04%)</title><rect x="1125.3" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.04%)</title><rect x="1125.7" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1128.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="1126.8" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1129.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="1127.1" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1127.5" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.03%)</title><rect x="1128.9" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.04%)</title><rect x="1129.2" y="675.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.15%)</title><rect x="1129.6" y="675.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1132.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="1130.1" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1133.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1130.5" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (3 samples, 0.04%)</title><rect x="1130.8" y="659.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.8" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="1132.1" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1132.5" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1135.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.55%)</title><rect x="1133.3" y="755.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1136.3" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="1133.3" y="739.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1136.3" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="1133.6" y="739.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1136.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1133.9" y="739.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1136.9" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="1133.9" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.9" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (23 samples, 0.29%)</title><rect x="1134.2" y="739.0" width="3.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1137.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.20%)</title><rect x="1135.2" y="723.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1138.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.19%)</title><rect x="1135.4" y="707.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.17%)</title><rect x="1135.7" y="691.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.7" y="702.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.17%)</title><rect x="1135.7" y="675.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.7" y="686.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.15%)</title><rect x="1135.8" y="659.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1138.8" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.06%)</title><rect x="1136.0" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.0" y="654.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.06%)</title><rect x="1136.0" y="627.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1139.0" y="638.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="1136.3" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1139.3" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="1136.4" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1139.4" y="606.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.05%)</title><rect x="1137.0" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.0" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1137.6" y="739.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1140.6" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.04%)</title><rect x="1138.1" y="739.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1141.1" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.05%)</title><rect x="1138.8" y="739.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.8" y="750.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="1139.5" y="739.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.5" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.05%)</title><rect x="1139.8" y="755.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1142.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (71 samples, 0.91%)</title><rect x="1140.4" y="755.0" width="10.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1143.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 0.79%)</title><rect x="1141.6" y="739.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1144.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 0.79%)</title><rect x="1141.6" y="723.0" width="9.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1144.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (61 samples, 0.78%)</title><rect x="1141.7" y="707.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.7" y="718.0"></text>
</g>
<g>
<title>do_futex (61 samples, 0.78%)</title><rect x="1141.7" y="691.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (59 samples, 0.75%)</title><rect x="1142.0" y="675.0" width="8.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.0" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="1142.8" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1145.8" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="1142.8" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.8" y="654.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.03%)</title><rect x="1143.2" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1146.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.63%)</title><rect x="1143.5" y="659.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.5" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (48 samples, 0.61%)</title><rect x="1143.7" y="643.0" width="7.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (48 samples, 0.61%)</title><rect x="1143.7" y="627.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.7" y="638.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="1151.1" y="755.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1154.1" y="766.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="1151.1" y="739.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1154.1" y="750.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="1151.1" y="723.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1154.1" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.03%)</title><rect x="1151.8" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (5 samples, 0.06%)</title><rect x="1152.1" y="787.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="1152.1" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1152.1" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1152.1" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.1" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1152.6" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1155.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (23 samples, 0.29%)</title><rect x="1152.9" y="851.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1155.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.23%)</title><rect x="1153.5" y="835.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.17%)</title><rect x="1153.5" y="819.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1154.4" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="1155.0" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1158.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.06%)</title><rect x="1155.4" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="1155.6" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="1155.6" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1158.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.08%)</title><rect x="1156.4" y="851.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="1156.4" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="1156.4" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1156.5" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 0.42%)</title><rect x="1157.4" y="883.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1158.3" y="867.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1158.5" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1158.5" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1158.6" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="1159.1" y="867.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="1159.1" y="851.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (10 samples, 0.13%)</title><rect x="1160.9" y="867.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1161.8" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.04%)</title><rect x="1162.4" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.4" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="1162.5" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.5" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="1162.5" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.26%)</title><rect x="1162.8" y="883.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1165.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.14%)</title><rect x="1163.6" y="867.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1166.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="1163.6" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1166.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.12%)</title><rect x="1163.9" y="851.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.9" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1165.0" y="835.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1168.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="1165.3" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="1165.3" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.3" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="1165.4" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (2 samples, 0.03%)</title><rect x="1165.9" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.9" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.12%)</title><rect x="1166.2" y="883.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.10%)</title><rect x="1166.3" y="867.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1166.8" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1166.8" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1166.8" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.8" y="830.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="1167.2" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (134 samples, 1.71%)</title><rect x="1167.5" y="899.0" width="20.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (134 samples, 1.71%)</title><rect x="1167.5" y="883.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.5" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (20 samples, 0.26%)</title><rect x="1168.9" y="867.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1171.9" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.09%)</title><rect x="1168.9" y="851.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1171.9" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="1169.9" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.9" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.10%)</title><rect x="1170.7" y="851.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1173.7" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="1171.4" y="835.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>__recv (99 samples, 1.27%)</title><rect x="1171.9" y="867.0" width="14.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1174.9" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 1.19%)</title><rect x="1172.8" y="851.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1175.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (93 samples, 1.19%)</title><rect x="1172.8" y="835.0" width="14.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1175.8" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (87 samples, 1.11%)</title><rect x="1173.7" y="819.0" width="13.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1176.7" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (87 samples, 1.11%)</title><rect x="1173.7" y="803.0" width="13.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1176.7" y="814.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1173.9" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.9" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (73 samples, 0.93%)</title><rect x="1174.3" y="787.0" width="11.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1177.3" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (59 samples, 0.75%)</title><rect x="1174.6" y="771.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.6" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (54 samples, 0.69%)</title><rect x="1175.4" y="755.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.4" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.18%)</title><rect x="1177.3" y="739.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.3" y="750.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.17%)</title><rect x="1177.3" y="723.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.3" y="734.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="1177.3" y="707.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.3" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.05%)</title><rect x="1178.1" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.05%)</title><rect x="1178.1" y="691.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.1" y="702.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.05%)</title><rect x="1178.7" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1181.7" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.08%)</title><rect x="1179.6" y="739.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1182.6" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (14 samples, 0.18%)</title><rect x="1180.5" y="739.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.5" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (14 samples, 0.18%)</title><rect x="1180.5" y="723.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.12%)</title><rect x="1181.2" y="707.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="1181.2" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.06%)</title><rect x="1181.9" y="691.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.9" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.06%)</title><rect x="1181.9" y="675.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1184.9" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.06%)</title><rect x="1182.8" y="739.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1185.8" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="1183.2" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1186.2" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.15%)</title><rect x="1183.5" y="771.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (11 samples, 0.14%)</title><rect x="1183.7" y="755.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1186.7" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.14%)</title><rect x="1183.7" y="739.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.7" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (9 samples, 0.12%)</title><rect x="1184.0" y="723.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.0" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.08%)</title><rect x="1184.4" y="707.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.4" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.13%)</title><rect x="1185.3" y="787.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1188.3" y="798.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.09%)</title><rect x="1185.5" y="771.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="1185.5" y="755.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1188.5" y="766.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="1185.5" y="739.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1186.5" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.08%)</title><rect x="1186.8" y="867.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1189.8" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1187.7" y="915.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.7" y="926.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="1187.9" y="899.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1187.9" y="883.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>[Service Thread tid=5867] (2 samples, 0.03%)</title><rect x="1188.2" y="963.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.2" y="974.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=5868] (8 samples, 0.10%)</title><rect x="1188.5" y="963.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1191.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="1188.5" y="947.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1191.5" y="958.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1188.6" y="931.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1191.6" y="942.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.04%)</title><rect x="1189.2" y="947.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1192.2" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.04%)</title><rect x="1189.2" y="931.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.2" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.04%)</title><rect x="1189.2" y="915.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.2" y="926.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1189.2" y="899.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.03%)</title><rect x="1189.2" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="1189.2" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>[VM Thread tid=5860] (2 samples, 0.03%)</title><rect x="1189.7" y="963.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.7" y="974.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1189.7" y="931.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1192.7" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
</g>
</svg>
