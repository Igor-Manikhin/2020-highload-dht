<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (7,390 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=5903] (1,704 samples, 23.06%)</title><rect x="10.3" y="963.0" width="272.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.3" y="974.0">[NIO Selector #0 tid=5903]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,703 samples, 23.04%)</title><rect x="10.5" y="947.0" width="271.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.5" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.11%)</title><rect x="10.5" y="931.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.11%)</title><rect x="10.5" y="915.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="11.3" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (88 samples, 1.19%)</title><rect x="11.9" y="931.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="12.1" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="12.1" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (85 samples, 1.15%)</title><rect x="12.4" y="915.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.4" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="13.5" y="899.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.5" y="910.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.05%)</title><rect x="14.2" y="899.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="17.2" y="910.0"></text>
</g>
<g>
<title>epoll_wait (70 samples, 0.95%)</title><rect x="14.8" y="899.0" width="11.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="17.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.77%)</title><rect x="16.9" y="883.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.9" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.77%)</title><rect x="16.9" y="867.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.9" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (55 samples, 0.74%)</title><rect x="17.2" y="851.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="20.2" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (53 samples, 0.72%)</title><rect x="17.3" y="835.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.3" y="846.0"></text>
</g>
<g>
<title>ep_poll (48 samples, 0.65%)</title><rect x="17.7" y="819.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="20.7" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (38 samples, 0.51%)</title><rect x="18.3" y="803.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="21.3" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (26 samples, 0.35%)</title><rect x="20.1" y="787.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.1" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="21.0" y="771.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.0" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.19%)</title><rect x="22.0" y="771.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.0" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="22.3" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="25.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.14%)</title><rect x="22.6" y="755.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.6" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="23.3" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="26.3" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="23.7" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.07%)</title><rect x="24.5" y="803.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.5" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.07%)</title><rect x="24.5" y="787.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.5" y="798.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.07%)</title><rect x="24.5" y="771.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="27.5" y="782.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.07%)</title><rect x="24.5" y="755.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="27.5" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="24.7" y="739.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.7" y="750.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="25.3" y="819.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="28.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,606 samples, 21.73%)</title><rect x="26.0" y="931.0" width="256.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.0" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,597 samples, 21.61%)</title><rect x="26.8" y="915.0" width="255.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.8" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,374 samples, 18.59%)</title><rect x="27.2" y="899.0" width="219.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.2" y="910.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,303 samples, 17.63%)</title><rect x="27.9" y="883.0" width="208.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.9" y="894.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="28.5" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,296 samples, 17.54%)</title><rect x="28.8" y="867.0" width="207.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.8" y="878.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,276 samples, 17.27%)</title><rect x="28.8" y="851.0" width="203.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.8" y="862.0">RequestHandler1_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (777 samples, 10.51%)</title><rect x="29.0" y="835.0" width="124.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.0" y="846.0">one/nio/http/Ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="30.3" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="30.3" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="30.3" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (760 samples, 10.28%)</title><rect x="30.9" y="819.0" width="121.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.9" y="830.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.37%)</title><rect x="30.9" y="803.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="31.2" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.2" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.09%)</title><rect x="31.6" y="787.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="34.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.22%)</title><rect x="32.7" y="787.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="35.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="32.8" y="771.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="33.5" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="33.5" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="34.0" y="771.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="34.0" y="755.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.09%)</title><rect x="34.1" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="34.7" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.04%)</title><rect x="34.7" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (733 samples, 9.92%)</title><rect x="35.2" y="803.0" width="117.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.2" y="814.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (731 samples, 9.89%)</title><rect x="35.5" y="787.0" width="116.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.5" y="798.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (726 samples, 9.82%)</title><rect x="35.5" y="771.0" width="116.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.5" y="782.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (725 samples, 9.81%)</title><rect x="35.7" y="755.0" width="115.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.7" y="766.0">one/nio/net/Na..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (12 samples, 0.16%)</title><rect x="37.8" y="739.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="40.8" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (15 samples, 0.20%)</title><rect x="39.7" y="739.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="42.7" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="40.8" y="723.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="43.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.07%)</title><rect x="41.3" y="723.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="44.3" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="41.8" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="44.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="42.1" y="739.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="45.1" y="750.0"></text>
</g>
<g>
<title>send (682 samples, 9.23%)</title><rect x="42.6" y="739.0" width="108.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="45.6" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (672 samples, 9.09%)</title><rect x="44.2" y="723.0" width="107.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="47.2" y="734.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (671 samples, 9.08%)</title><rect x="44.3" y="707.0" width="107.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.3" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (656 samples, 8.88%)</title><rect x="46.4" y="691.0" width="104.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="49.4" y="702.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (653 samples, 8.84%)</title><rect x="46.4" y="675.0" width="104.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="49.4" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="46.9" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="49.9" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (640 samples, 8.66%)</title><rect x="47.2" y="659.0" width="102.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="50.2" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="47.5" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.5" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (625 samples, 8.46%)</title><rect x="48.0" y="643.0" width="99.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="51.0" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (623 samples, 8.43%)</title><rect x="48.3" y="627.0" width="99.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="51.3" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="48.5" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.12%)</title><rect x="48.8" y="611.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.8" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="50.2" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.2" y="622.0"></text>
</g>
<g>
<title>release_sock (22 samples, 0.30%)</title><rect x="50.6" y="611.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="53.6" y="622.0"></text>
</g>
<g>
<title>__release_sock (20 samples, 0.27%)</title><rect x="50.7" y="595.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="53.7" y="606.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="50.9" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="53.9" y="590.0"></text>
</g>
<g>
<title>preempt_schedule_common (2 samples, 0.03%)</title><rect x="50.9" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.9" y="574.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="50.9" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="53.9" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="50.9" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.22%)</title><rect x="51.4" y="579.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="54.4" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.22%)</title><rect x="51.4" y="563.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="54.4" y="574.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.11%)</title><rect x="51.5" y="547.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.5" y="558.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.08%)</title><rect x="51.8" y="531.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="54.8" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.07%)</title><rect x="52.0" y="515.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="55.0" y="526.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="52.2" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.2" y="510.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="52.2" y="483.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="55.2" y="494.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 0.07%)</title><rect x="52.8" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="55.8" y="558.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.07%)</title><rect x="52.8" y="531.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="55.8" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.05%)</title><rect x="53.0" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="56.0" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.05%)</title><rect x="53.0" y="499.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="56.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="53.0" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="56.0" y="494.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="53.6" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="56.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (585 samples, 7.92%)</title><rect x="54.4" y="611.0" width="93.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="57.4" y="622.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="55.2" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.2" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.07%)</title><rect x="55.7" y="595.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.7" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.05%)</title><rect x="55.7" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.7" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (59 samples, 0.80%)</title><rect x="56.8" y="595.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="59.8" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (58 samples, 0.78%)</title><rect x="56.8" y="579.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.8" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (17 samples, 0.23%)</title><rect x="58.5" y="563.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.16%)</title><rect x="58.5" y="547.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.08%)</title><rect x="58.9" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.9" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (4 samples, 0.05%)</title><rect x="59.8" y="531.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="62.8" y="542.0"></text>
</g>
<g>
<title>memset (5 samples, 0.07%)</title><rect x="60.5" y="547.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="63.5" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (17 samples, 0.23%)</title><rect x="61.4" y="563.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.4" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="63.7" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="66.7" y="558.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="63.7" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="66.7" y="542.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.03%)</title><rect x="63.7" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="66.7" y="526.0"></text>
</g>
<g>
<title>allocate_slab (2 samples, 0.03%)</title><rect x="63.7" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="66.7" y="510.0"></text>
</g>
<g>
<title>alloc_slab_page (2 samples, 0.03%)</title><rect x="63.7" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.7" y="494.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.03%)</title><rect x="63.7" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.7" y="478.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="63.7" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="66.7" y="462.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="63.7" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="66.7" y="446.0"></text>
</g>
<g>
<title>clear_page_rep (2 samples, 0.03%)</title><rect x="63.7" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="66.7" y="430.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="64.1" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.1" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="64.1" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.1" y="558.0"></text>
</g>
<g>
<title>memset (10 samples, 0.14%)</title><rect x="64.4" y="563.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="67.4" y="574.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="66.2" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.2" y="606.0"></text>
</g>
<g>
<title>tcp_push (502 samples, 6.79%)</title><rect x="67.0" y="595.0" width="80.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.0" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (502 samples, 6.79%)</title><rect x="67.0" y="579.0" width="80.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="70.0" y="590.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (502 samples, 6.79%)</title><rect x="67.0" y="563.0" width="80.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="70.0" y="574.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (434 samples, 5.87%)</title><rect x="67.6" y="547.0" width="69.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="70.6" y="558.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.03%)</title><rect x="68.9" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="71.9" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (414 samples, 5.60%)</title><rect x="69.2" y="531.0" width="66.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="72.2" y="542.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (413 samples, 5.59%)</title><rect x="69.2" y="515.0" width="66.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="72.2" y="526.0">__ip_qu..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="69.7" y="499.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="72.7" y="510.0"></text>
</g>
<g>
<title>ip_local_out (403 samples, 5.45%)</title><rect x="70.7" y="499.0" width="64.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.7" y="510.0">ip_loca..</text>
</g>
<g>
<title>ip_output (403 samples, 5.45%)</title><rect x="70.7" y="483.0" width="64.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="73.7" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (399 samples, 5.40%)</title><rect x="71.3" y="467.0" width="63.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="74.3" y="478.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (391 samples, 5.29%)</title><rect x="72.0" y="451.0" width="62.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="75.0" y="462.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (388 samples, 5.25%)</title><rect x="72.4" y="435.0" width="62.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="75.4" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (343 samples, 4.64%)</title><rect x="73.9" y="419.0" width="54.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.9" y="430.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (342 samples, 4.63%)</title><rect x="73.9" y="403.0" width="54.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="76.9" y="414.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (332 samples, 4.49%)</title><rect x="75.1" y="387.0" width="53.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.1" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (332 samples, 4.49%)</title><rect x="75.1" y="371.0" width="53.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.1" y="382.0">__sof..</text>
</g>
<g>
<title>net_rx_action (320 samples, 4.33%)</title><rect x="76.7" y="355.0" width="51.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="79.7" y="366.0">net_r..</text>
</g>
<g>
<title>process_backlog (309 samples, 4.18%)</title><rect x="78.5" y="339.0" width="49.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.5" y="350.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (297 samples, 4.02%)</title><rect x="80.4" y="323.0" width="47.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.4" y="334.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (296 samples, 4.01%)</title><rect x="80.6" y="307.0" width="47.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.6" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.05%)</title><rect x="80.7" y="291.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (291 samples, 3.94%)</title><rect x="81.4" y="291.0" width="46.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="84.4" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="81.4" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.04%)</title><rect x="81.7" y="275.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="84.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (286 samples, 3.87%)</title><rect x="82.2" y="275.0" width="45.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="85.2" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (283 samples, 3.83%)</title><rect x="82.2" y="259.0" width="45.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="85.2" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (281 samples, 3.80%)</title><rect x="82.3" y="243.0" width="44.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="85.3" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (281 samples, 3.80%)</title><rect x="82.3" y="227.0" width="44.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="85.3" y="238.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (11 samples, 0.15%)</title><rect x="82.5" y="211.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="85.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (267 samples, 3.61%)</title><rect x="84.6" y="211.0" width="42.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.6" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.14%)</title><rect x="85.5" y="195.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="88.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.14%)</title><rect x="87.4" y="195.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.4" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.12%)</title><rect x="87.6" y="179.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (237 samples, 3.21%)</title><rect x="89.4" y="195.0" width="37.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.4" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.07%)</title><rect x="89.8" y="179.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (229 samples, 3.10%)</title><rect x="90.6" y="179.0" width="36.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.6" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (10 samples, 0.14%)</title><rect x="90.8" y="163.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="93.8" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (10 samples, 0.14%)</title><rect x="90.8" y="147.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="93.8" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.12%)</title><rect x="91.0" y="131.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.12%)</title><rect x="91.0" y="115.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.09%)</title><rect x="91.0" y="99.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="94.0" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="92.1" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="95.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="92.1" y="83.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.1" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="92.4" y="163.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="95.4" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="93.2" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="96.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack (47 samples, 0.64%)</title><rect x="93.7" y="163.0" width="7.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.7" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="94.3" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="97.3" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="94.6" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="97.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (34 samples, 0.46%)</title><rect x="95.1" y="147.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.1" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (30 samples, 0.41%)</title><rect x="95.4" y="131.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="98.4" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.14%)</title><rect x="95.4" y="115.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="98.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.14%)</title><rect x="95.4" y="99.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.4" y="110.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.12%)</title><rect x="95.6" y="83.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.6" y="94.0"></text>
</g>
<g>
<title>skb_release_all (19 samples, 0.26%)</title><rect x="97.0" y="115.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="100.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.24%)</title><rect x="97.2" y="99.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="100.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (14 samples, 0.19%)</title><rect x="97.8" y="83.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="100.8" y="94.0"></text>
</g>
<g>
<title>kfree (13 samples, 0.18%)</title><rect x="98.0" y="67.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="101.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (11 samples, 0.15%)</title><rect x="98.3" y="51.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.3" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (3 samples, 0.04%)</title><rect x="99.6" y="35.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="102.6" y="46.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="100.9" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="103.9" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (150 samples, 2.03%)</title><rect x="101.2" y="163.0" width="23.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.2" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (150 samples, 2.03%)</title><rect x="101.2" y="147.0" width="23.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.2" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (146 samples, 1.98%)</title><rect x="101.8" y="131.0" width="23.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="104.8" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (146 samples, 1.98%)</title><rect x="101.8" y="115.0" width="23.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.8" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (143 samples, 1.94%)</title><rect x="101.8" y="99.0" width="22.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.8" y="110.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="124.6" y="99.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.6" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.15%)</title><rect x="125.1" y="163.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.1" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="125.1" y="147.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="128.1" y="158.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.07%)</title><rect x="126.1" y="147.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="129.1" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="126.9" y="163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.9" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="127.5" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="130.5" y="270.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="128.2" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="131.2" y="398.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="128.2" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="131.2" y="382.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="128.2" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="131.2" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="128.2" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="128.2" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.2" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="128.2" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="131.2" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="128.2" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.03%)</title><rect x="128.2" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="128.2" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="131.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="128.2" y="243.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="128.2" y="227.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="128.2" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.2" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="128.2" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="131.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="128.2" y="179.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="131.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="128.2" y="163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="128.2" y="147.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.2" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (35 samples, 0.47%)</title><rect x="128.6" y="419.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.6" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (35 samples, 0.47%)</title><rect x="128.6" y="403.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="131.6" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.20%)</title><rect x="130.6" y="387.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="133.6" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.15%)</title><rect x="131.0" y="371.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.0" y="382.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.08%)</title><rect x="131.4" y="355.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.4" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.08%)</title><rect x="131.4" y="339.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.4" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.08%)</title><rect x="131.4" y="323.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.4" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.08%)</title><rect x="133.3" y="387.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.3" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="133.7" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="136.7" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="133.7" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.7" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="134.4" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="137.4" y="462.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.07%)</title><rect x="135.3" y="531.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.3" y="542.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.07%)</title><rect x="135.3" y="515.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.3" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="136.3" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="136.6" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.6" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="136.6" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.6" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (35 samples, 0.47%)</title><rect x="136.9" y="547.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="139.9" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (22 samples, 0.30%)</title><rect x="142.7" y="547.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="145.7" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (18 samples, 0.24%)</title><rect x="143.3" y="531.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="146.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (18 samples, 0.24%)</title><rect x="143.3" y="515.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="146.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (18 samples, 0.24%)</title><rect x="143.3" y="499.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="146.3" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.16%)</title><rect x="143.3" y="483.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.3" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (5 samples, 0.07%)</title><rect x="145.4" y="483.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (5 samples, 0.07%)</title><rect x="145.4" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="148.4" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.07%)</title><rect x="146.4" y="547.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="149.4" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.05%)</title><rect x="147.2" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="150.2" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="147.2" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="150.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="147.5" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.5" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.14%)</title><rect x="147.8" y="643.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="150.8" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (9 samples, 0.12%)</title><rect x="148.0" y="627.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.11%)</title><rect x="148.1" y="611.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.1" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (7 samples, 0.09%)</title><rect x="148.3" y="595.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="151.3" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="149.1" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.11%)</title><rect x="149.4" y="659.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.4" y="670.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.08%)</title><rect x="149.4" y="643.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="152.4" y="654.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="149.4" y="627.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="152.4" y="638.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="149.4" y="611.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="150.4" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="153.4" y="654.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="150.7" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="153.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="151.2" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.2" y="702.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="151.2" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="154.2" y="686.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="151.2" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.2" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="151.2" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.2" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.07%)</title><rect x="151.5" y="771.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="154.5" y="782.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="151.6" y="755.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="154.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="151.6" y="739.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="154.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="152.3" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.3" y="830.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.03%)</title><rect x="152.7" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (20 samples, 0.27%)</title><rect x="153.1" y="835.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.23%)</title><rect x="153.1" y="819.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.18%)</title><rect x="153.1" y="803.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.18%)</title><rect x="153.1" y="787.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.1" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.11%)</title><rect x="153.9" y="771.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="156.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="155.5" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="155.5" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="155.5" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="155.5" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="155.8" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (478 samples, 6.47%)</title><rect x="156.3" y="835.0" width="76.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.3" y="846.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="156.3" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="156.3" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (468 samples, 6.33%)</title><rect x="156.6" y="819.0" width="74.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.6" y="830.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="156.9" y="803.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.9" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="156.9" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="157.5" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.5" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="157.5" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="157.5" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="157.5" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.04%)</title><rect x="157.5" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (5 samples, 0.07%)</title><rect x="158.0" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.07%)</title><rect x="158.0" y="787.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (454 samples, 6.14%)</title><rect x="158.8" y="803.0" width="72.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.8" y="814.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (448 samples, 6.06%)</title><rect x="159.3" y="787.0" width="71.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.3" y="798.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (448 samples, 6.06%)</title><rect x="159.3" y="771.0" width="71.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.3" y="782.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (429 samples, 5.81%)</title><rect x="160.7" y="755.0" width="68.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="163.7" y="766.0">Java_or..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (7 samples, 0.09%)</title><rect x="161.2" y="739.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="164.2" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (5 samples, 0.07%)</title><rect x="162.3" y="739.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="165.3" y="750.0"></text>
</g>
<g>
<title>cfree (4 samples, 0.05%)</title><rect x="163.1" y="739.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="166.1" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="163.8" y="739.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="166.8" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.07%)</title><rect x="164.1" y="739.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="167.1" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (394 samples, 5.33%)</title><rect x="165.7" y="739.0" width="62.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="168.7" y="750.0">rocksd..</text>
</g>
<g>
<title>jni_ExceptionCheck (10 samples, 0.14%)</title><rect x="166.5" y="723.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="169.5" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="168.1" y="723.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="171.1" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.07%)</title><rect x="168.6" y="723.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="171.6" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="169.4" y="723.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="172.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (315 samples, 4.26%)</title><rect x="170.0" y="723.0" width="50.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="173.0" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (314 samples, 4.25%)</title><rect x="170.2" y="707.0" width="50.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="173.2" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (312 samples, 4.22%)</title><rect x="170.5" y="691.0" width="49.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="173.5" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (310 samples, 4.19%)</title><rect x="170.6" y="675.0" width="49.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="173.6" y="686.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (5 samples, 0.07%)</title><rect x="171.1" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="174.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (297 samples, 4.02%)</title><rect x="172.2" y="659.0" width="47.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="175.2" y="670.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.07%)</title><rect x="174.1" y="643.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="177.1" y="654.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.04%)</title><rect x="175.1" y="643.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="178.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (6 samples, 0.08%)</title><rect x="175.6" y="643.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="178.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.03%)</title><rect x="175.7" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="178.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.03%)</title><rect x="176.1" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="179.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (11 samples, 0.15%)</title><rect x="176.7" y="643.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="179.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (9 samples, 0.12%)</title><rect x="176.7" y="627.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="179.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (6 samples, 0.08%)</title><rect x="177.0" y="611.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="180.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="178.5" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="181.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (250 samples, 3.38%)</title><rect x="178.9" y="643.0" width="40.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="181.9" y="654.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (6 samples, 0.08%)</title><rect x="179.7" y="627.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="182.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (237 samples, 3.21%)</title><rect x="181.0" y="627.0" width="37.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="184.0" y="638.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (233 samples, 3.15%)</title><rect x="181.5" y="611.0" width="37.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="184.5" y="622.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (7 samples, 0.09%)</title><rect x="181.5" y="595.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="184.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (156 samples, 2.11%)</title><rect x="182.6" y="595.0" width="24.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="185.6" y="606.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (29 samples, 0.39%)</title><rect x="191.4" y="579.0" width="4.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="194.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.08%)</title><rect x="196.0" y="579.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="199.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.04%)</title><rect x="197.0" y="579.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="200.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (63 samples, 0.85%)</title><rect x="197.5" y="579.0" width="10.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="200.5" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (9 samples, 0.12%)</title><rect x="200.8" y="563.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="203.8" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (29 samples, 0.39%)</title><rect x="202.2" y="563.0" width="4.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="205.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (64 samples, 0.87%)</title><rect x="207.5" y="595.0" width="10.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="210.5" y="606.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (5 samples, 0.07%)</title><rect x="217.7" y="595.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="220.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (3 samples, 0.04%)</title><rect x="219.0" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="222.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.03%)</title><rect x="219.8" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="222.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.03%)</title><rect x="220.3" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="223.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (50 samples, 0.68%)</title><rect x="220.6" y="723.0" width="8.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="223.6" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.07%)</title><rect x="220.9" y="707.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="223.9" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (43 samples, 0.58%)</title><rect x="221.7" y="707.0" width="6.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="224.7" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (8 samples, 0.11%)</title><rect x="222.4" y="691.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="225.4" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.09%)</title><rect x="223.6" y="691.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="226.6" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (22 samples, 0.30%)</title><rect x="225.1" y="691.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="228.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (19 samples, 0.26%)</title><rect x="225.6" y="675.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="228.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.15%)</title><rect x="225.7" y="659.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="228.7" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (8 samples, 0.11%)</title><rect x="226.0" y="643.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="229.0" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (7 samples, 0.09%)</title><rect x="227.5" y="659.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="230.5" y="670.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (3 samples, 0.04%)</title><rect x="228.6" y="739.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="231.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="229.2" y="755.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="232.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="229.2" y="739.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="232.2" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.03%)</title><rect x="229.7" y="755.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="232.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.04%)</title><rect x="230.0" y="755.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="233.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (3 samples, 0.04%)</title><rect x="230.8" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="231.0" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="231.0" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="231.0" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.0" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="231.0" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (8 samples, 0.11%)</title><rect x="231.3" y="819.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.3" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="231.3" y="803.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="234.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="231.8" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (2 samples, 0.03%)</title><rect x="232.3" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.08%)</title><rect x="232.6" y="851.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.08%)</title><rect x="232.6" y="835.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.07%)</title><rect x="232.6" y="819.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="232.7" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.7" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="232.7" y="787.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="235.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (14 samples, 0.19%)</title><rect x="233.5" y="851.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.19%)</title><rect x="233.5" y="835.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (14 samples, 0.19%)</title><rect x="233.5" y="819.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.5" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (8 samples, 0.11%)</title><rect x="234.5" y="803.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="237.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.41%)</title><rect x="235.9" y="883.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.16%)</title><rect x="236.9" y="867.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="238.3" y="851.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="238.3" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.16%)</title><rect x="238.8" y="867.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.16%)</title><rect x="238.8" y="851.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (17 samples, 0.23%)</title><rect x="240.7" y="883.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (17 samples, 0.23%)</title><rect x="240.7" y="867.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (17 samples, 0.23%)</title><rect x="240.7" y="851.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.07%)</title><rect x="240.7" y="835.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="240.9" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="241.2" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="241.5" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.5" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.12%)</title><rect x="242.0" y="835.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="245.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.07%)</title><rect x="243.4" y="883.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.11%)</title><rect x="244.2" y="883.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="245.2" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="245.2" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="245.5" y="883.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="245.5" y="867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (220 samples, 2.98%)</title><rect x="246.6" y="899.0" width="35.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.6" y="910.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (218 samples, 2.95%)</title><rect x="247.0" y="883.0" width="34.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.0" y="894.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.11%)</title><rect x="248.9" y="867.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="251.9" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (21 samples, 0.28%)</title><rect x="250.2" y="867.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="253.2" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="250.6" y="851.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="253.6" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="250.9" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="253.9" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.15%)</title><rect x="251.6" y="851.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="254.6" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (6 samples, 0.08%)</title><rect x="252.2" y="835.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="255.2" y="846.0"></text>
</g>
<g>
<title>__recv (174 samples, 2.35%)</title><rect x="253.5" y="867.0" width="27.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="256.5" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (157 samples, 2.12%)</title><rect x="256.2" y="851.0" width="25.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.2" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (157 samples, 2.12%)</title><rect x="256.2" y="835.0" width="25.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="259.2" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (148 samples, 2.00%)</title><rect x="257.5" y="819.0" width="23.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="260.5" y="830.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (146 samples, 1.98%)</title><rect x="257.5" y="803.0" width="23.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.5" y="814.0">_..</text>
</g>
<g>
<title>sock_recvmsg (141 samples, 1.91%)</title><rect x="257.5" y="787.0" width="22.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="260.5" y="798.0">s..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="257.5" y="771.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="260.5" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (118 samples, 1.60%)</title><rect x="258.3" y="771.0" width="18.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.3" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (117 samples, 1.58%)</title><rect x="258.5" y="755.0" width="18.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="261.5" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.31%)</title><rect x="259.9" y="739.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="262.9" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.05%)</title><rect x="259.9" y="723.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="262.9" y="734.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.24%)</title><rect x="260.5" y="723.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="263.5" y="734.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="260.5" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="263.5" y="718.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.04%)</title><rect x="260.8" y="707.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="263.8" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.12%)</title><rect x="261.3" y="707.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.3" y="718.0"></text>
</g>
<g>
<title>dst_release (9 samples, 0.12%)</title><rect x="261.3" y="691.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="264.3" y="702.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.05%)</title><rect x="262.8" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="263.7" y="739.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="266.7" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.08%)</title><rect x="264.5" y="739.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="264.7" y="723.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="267.7" y="734.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (5 samples, 0.07%)</title><rect x="264.7" y="707.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="267.7" y="718.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="265.5" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="268.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="265.5" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="268.5" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.24%)</title><rect x="266.0" y="739.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="269.0" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (18 samples, 0.24%)</title><rect x="266.0" y="723.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="269.0" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.19%)</title><rect x="266.6" y="707.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="269.6" y="718.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.09%)</title><rect x="266.6" y="691.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.6" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.07%)</title><rect x="266.9" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.9" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.09%)</title><rect x="267.7" y="691.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="270.7" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.09%)</title><rect x="267.7" y="675.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.7" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (41 samples, 0.55%)</title><rect x="268.8" y="739.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="271.8" y="750.0"></text>
</g>
<g>
<title>tcp_send_ack (38 samples, 0.51%)</title><rect x="269.3" y="723.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="272.3" y="734.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (38 samples, 0.51%)</title><rect x="269.3" y="707.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.3" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.04%)</title><rect x="269.3" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.3" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.04%)</title><rect x="269.3" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.3" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="269.3" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.3" y="670.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="269.3" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.3" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 0.46%)</title><rect x="269.8" y="691.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="272.8" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (33 samples, 0.45%)</title><rect x="269.8" y="675.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.8" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (33 samples, 0.45%)</title><rect x="269.8" y="659.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="272.8" y="670.0"></text>
</g>
<g>
<title>ip_local_out (30 samples, 0.41%)</title><rect x="270.1" y="643.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="273.1" y="654.0"></text>
</g>
<g>
<title>ip_output (30 samples, 0.41%)</title><rect x="270.1" y="627.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.1" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (30 samples, 0.41%)</title><rect x="270.1" y="611.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.1" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (29 samples, 0.39%)</title><rect x="270.3" y="595.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="273.3" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (28 samples, 0.38%)</title><rect x="270.3" y="579.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="273.3" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 0.35%)</title><rect x="270.3" y="563.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.3" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 0.34%)</title><rect x="270.4" y="547.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.4" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 0.32%)</title><rect x="270.4" y="531.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="273.4" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 0.32%)</title><rect x="270.4" y="515.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.4" y="526.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 0.30%)</title><rect x="270.7" y="499.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="273.7" y="510.0"></text>
</g>
<g>
<title>process_backlog (20 samples, 0.27%)</title><rect x="271.1" y="483.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="274.1" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (19 samples, 0.26%)</title><rect x="271.2" y="467.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="274.2" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (19 samples, 0.26%)</title><rect x="271.2" y="451.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.2" y="462.0"></text>
</g>
<g>
<title>ip_rcv (19 samples, 0.26%)</title><rect x="271.2" y="435.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="274.2" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (18 samples, 0.24%)</title><rect x="271.4" y="419.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="274.4" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (18 samples, 0.24%)</title><rect x="271.4" y="403.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.4" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (18 samples, 0.24%)</title><rect x="271.4" y="387.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.4" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (18 samples, 0.24%)</title><rect x="271.4" y="371.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.4" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (18 samples, 0.24%)</title><rect x="271.4" y="355.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="274.4" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 0.19%)</title><rect x="271.9" y="339.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="274.9" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 0.19%)</title><rect x="271.9" y="323.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.9" y="334.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="271.9" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="274.9" y="318.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="271.9" y="291.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.9" y="302.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="271.9" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="274.9" y="286.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.15%)</title><rect x="272.2" y="307.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.2" y="318.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.12%)</title><rect x="272.5" y="291.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.5" y="302.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.08%)</title><rect x="272.7" y="275.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.7" y="286.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="272.7" y="259.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="275.7" y="270.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.08%)</title><rect x="272.7" y="243.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="275.7" y="254.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.07%)</title><rect x="272.8" y="227.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.8" y="238.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.07%)</title><rect x="272.8" y="211.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.8" y="222.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="273.1" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="276.1" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="274.4" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="277.4" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="274.4" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="277.4" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.14%)</title><rect x="275.4" y="739.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.4" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="275.5" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="278.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.09%)</title><rect x="275.9" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="278.9" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="275.9" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.9" y="718.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="276.2" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="279.2" y="718.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="276.5" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="279.5" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (18 samples, 0.24%)</title><rect x="277.1" y="771.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="280.1" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (17 samples, 0.23%)</title><rect x="277.3" y="755.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="280.3" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (17 samples, 0.23%)</title><rect x="277.3" y="739.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.3" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (15 samples, 0.20%)</title><rect x="277.6" y="723.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="280.6" y="734.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="278.3" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="281.3" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (9 samples, 0.12%)</title><rect x="278.6" y="707.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.6" y="718.0"></text>
</g>
<g>
<title>aa_check_perms (2 samples, 0.03%)</title><rect x="279.7" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="282.7" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.07%)</title><rect x="280.0" y="787.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.0" y="798.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="280.0" y="771.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="283.0" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="280.0" y="755.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.0" y="766.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="280.0" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.0" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="281.3" y="867.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="284.3" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="281.8" y="915.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="284.8" y="926.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="281.8" y="899.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="284.8" y="910.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="281.9" y="883.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="284.9" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=5904] (1,969 samples, 26.64%)</title><rect x="282.4" y="963.0" width="314.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="285.4" y="974.0">[NIO Selector #1 tid=5904]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,969 samples, 26.64%)</title><rect x="282.4" y="947.0" width="314.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.4" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.09%)</title><rect x="282.7" y="931.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.09%)</title><rect x="282.7" y="915.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="283.4" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.4" y="910.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (2 samples, 0.03%)</title><rect x="283.5" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (2 samples, 0.03%)</title><rect x="283.5" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (96 samples, 1.30%)</title><rect x="283.8" y="931.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.04%)</title><rect x="284.0" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="284.0" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (91 samples, 1.23%)</title><rect x="284.5" y="915.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.5" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="285.1" y="899.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="288.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.11%)</title><rect x="285.4" y="899.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="288.4" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="286.2" y="883.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="289.2" y="894.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="286.2" y="867.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="289.2" y="878.0"></text>
</g>
<g>
<title>epoll_wait (77 samples, 1.04%)</title><rect x="286.7" y="899.0" width="12.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="289.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 0.83%)</title><rect x="289.3" y="883.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 0.83%)</title><rect x="289.3" y="867.0" width="9.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.3" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 0.80%)</title><rect x="289.6" y="851.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="292.6" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (59 samples, 0.80%)</title><rect x="289.6" y="835.0" width="9.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.6" y="846.0"></text>
</g>
<g>
<title>ep_poll (55 samples, 0.74%)</title><rect x="289.8" y="819.0" width="8.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="292.8" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (47 samples, 0.64%)</title><rect x="290.2" y="803.0" width="7.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="293.2" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (42 samples, 0.57%)</title><rect x="290.7" y="787.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="293.7" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="291.2" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="294.2" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (35 samples, 0.47%)</title><rect x="291.7" y="771.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="294.7" y="782.0"></text>
</g>
<g>
<title>sock_poll (33 samples, 0.45%)</title><rect x="292.0" y="755.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="295.0" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (11 samples, 0.15%)</title><rect x="293.3" y="739.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="296.3" y="750.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.12%)</title><rect x="295.2" y="739.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="298.2" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.05%)</title><rect x="296.6" y="739.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="299.6" y="750.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="297.4" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="300.4" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.04%)</title><rect x="298.1" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="301.1" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.04%)</title><rect x="298.1" y="787.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="301.1" y="798.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="298.1" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="301.1" y="782.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="298.5" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,864 samples, 25.22%)</title><rect x="299.2" y="931.0" width="297.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.2" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,850 samples, 25.03%)</title><rect x="300.3" y="915.0" width="295.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.3" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,590 samples, 21.52%)</title><rect x="301.2" y="899.0" width="253.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.2" y="910.0">one/nio/http/HttpSession.processHt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,524 samples, 20.62%)</title><rect x="302.4" y="883.0" width="243.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.4" y="894.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,518 samples, 20.54%)</title><rect x="303.0" y="867.0" width="242.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.0" y="878.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,487 samples, 20.12%)</title><rect x="303.2" y="851.0" width="237.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.2" y="862.0">RequestHandler1_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (910 samples, 12.31%)</title><rect x="303.2" y="835.0" width="145.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.2" y="846.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="305.7" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="305.7" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="305.7" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (880 samples, 11.91%)</title><rect x="306.4" y="819.0" width="140.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.4" y="830.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 0.51%)</title><rect x="306.4" y="803.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="307.0" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.11%)</title><rect x="307.3" y="787.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="310.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (23 samples, 0.31%)</title><rect x="308.8" y="787.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.03%)</title><rect x="308.8" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (9 samples, 0.12%)</title><rect x="309.1" y="771.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="309.9" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="309.9" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.16%)</title><rect x="310.5" y="771.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.16%)</title><rect x="310.5" y="755.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.16%)</title><rect x="310.5" y="739.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="311.9" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="311.9" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (842 samples, 11.39%)</title><rect x="312.4" y="803.0" width="134.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.4" y="814.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (841 samples, 11.38%)</title><rect x="312.6" y="787.0" width="134.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.6" y="798.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="312.9" y="771.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="315.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (820 samples, 11.10%)</title><rect x="313.9" y="771.0" width="130.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.9" y="782.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (819 samples, 11.08%)</title><rect x="314.0" y="755.0" width="130.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.0" y="766.0">one/nio/net/Nati..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.07%)</title><rect x="317.2" y="739.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="320.2" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.19%)</title><rect x="318.0" y="739.0" width="2.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="321.0" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.07%)</title><rect x="319.0" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="322.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="319.8" y="723.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="322.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="320.4" y="739.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="323.4" y="750.0"></text>
</g>
<g>
<title>send (774 samples, 10.47%)</title><rect x="321.0" y="739.0" width="123.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="324.0" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (750 samples, 10.15%)</title><rect x="324.9" y="723.0" width="119.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="327.9" y="734.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="325.0" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (747 samples, 10.11%)</title><rect x="325.4" y="707.0" width="119.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="328.4" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (735 samples, 9.95%)</title><rect x="327.0" y="691.0" width="117.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="330.0" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (734 samples, 9.93%)</title><rect x="327.0" y="675.0" width="117.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="330.0" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="327.9" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.9" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (714 samples, 9.66%)</title><rect x="328.4" y="659.0" width="114.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.4" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="328.6" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="331.6" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (691 samples, 9.35%)</title><rect x="329.0" y="643.0" width="110.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="332.0" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (687 samples, 9.30%)</title><rect x="329.7" y="627.0" width="109.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="332.7" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="329.8" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.8" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.08%)</title><rect x="330.6" y="611.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.6" y="622.0"></text>
</g>
<g>
<title>release_sock (38 samples, 0.51%)</title><rect x="331.7" y="611.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="334.7" y="622.0"></text>
</g>
<g>
<title>__release_sock (34 samples, 0.46%)</title><rect x="331.9" y="595.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="334.9" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 0.42%)</title><rect x="332.4" y="579.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="335.4" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (28 samples, 0.38%)</title><rect x="332.9" y="563.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.9" y="574.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.05%)</title><rect x="333.0" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.0" y="558.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.05%)</title><rect x="333.0" y="531.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="336.0" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="333.2" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.2" y="526.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="333.2" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="336.2" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="333.3" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="336.3" y="494.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.18%)</title><rect x="334.0" y="547.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="337.0" y="558.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.14%)</title><rect x="334.0" y="531.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="337.0" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.12%)</title><rect x="334.1" y="515.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="337.1" y="526.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.11%)</title><rect x="334.3" y="499.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="337.3" y="510.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.11%)</title><rect x="334.3" y="483.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="337.3" y="494.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.04%)</title><rect x="335.1" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="338.1" y="478.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="335.1" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.1" y="462.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.05%)</title><rect x="336.1" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="339.1" y="558.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.05%)</title><rect x="336.1" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.1" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.05%)</title><rect x="336.1" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.1" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.05%)</title><rect x="336.1" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="339.1" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="336.1" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.1" y="494.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="336.9" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="339.9" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="337.5" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="340.5" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="337.5" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="340.5" y="590.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="337.8" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="340.8" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (633 samples, 8.57%)</title><rect x="338.3" y="611.0" width="101.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="341.3" y="622.0">tcp_sendmsg_..</text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.11%)</title><rect x="339.1" y="595.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.1" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.11%)</title><rect x="339.1" y="579.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.1" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="340.4" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="343.4" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="340.4" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="343.4" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (52 samples, 0.70%)</title><rect x="340.7" y="595.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="343.7" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (50 samples, 0.68%)</title><rect x="340.7" y="579.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="343.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (24 samples, 0.32%)</title><rect x="341.8" y="563.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="344.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (15 samples, 0.20%)</title><rect x="341.8" y="547.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="344.8" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="343.2" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="346.2" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="343.7" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.7" y="542.0"></text>
</g>
<g>
<title>memset (8 samples, 0.11%)</title><rect x="344.2" y="547.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="347.2" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (10 samples, 0.14%)</title><rect x="345.6" y="563.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="348.6" y="574.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="347.2" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="350.2" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="347.2" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="350.2" y="558.0"></text>
</g>
<g>
<title>memset (7 samples, 0.09%)</title><rect x="347.6" y="563.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="350.6" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="349.0" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.0" y="606.0"></text>
</g>
<g>
<title>tcp_push (554 samples, 7.50%)</title><rect x="349.3" y="595.0" width="88.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.3" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (554 samples, 7.50%)</title><rect x="349.3" y="579.0" width="88.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.3" y="590.0">__tcp_push..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="349.5" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.5" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (550 samples, 7.44%)</title><rect x="349.9" y="563.0" width="87.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.9" y="574.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (460 samples, 6.22%)</title><rect x="351.2" y="547.0" width="73.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.2" y="558.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (448 samples, 6.06%)</title><rect x="352.3" y="531.0" width="71.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="355.3" y="542.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (445 samples, 6.02%)</title><rect x="352.3" y="515.0" width="71.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.3" y="526.0">__ip_que..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.09%)</title><rect x="353.1" y="499.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="356.1" y="510.0"></text>
</g>
<g>
<title>ip_local_out (432 samples, 5.85%)</title><rect x="354.3" y="499.0" width="68.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="357.3" y="510.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.04%)</title><rect x="354.7" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.7" y="494.0"></text>
</g>
<g>
<title>ip_output (426 samples, 5.76%)</title><rect x="355.2" y="483.0" width="68.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.2" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (422 samples, 5.71%)</title><rect x="355.9" y="467.0" width="67.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.9" y="478.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.07%)</title><rect x="356.0" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="359.0" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (415 samples, 5.62%)</title><rect x="356.8" y="451.0" width="66.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="359.8" y="462.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (413 samples, 5.59%)</title><rect x="357.0" y="435.0" width="65.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.0" y="446.0">ip_fini..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="358.4" y="419.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="361.4" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (362 samples, 4.90%)</title><rect x="358.7" y="419.0" width="57.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.7" y="430.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (359 samples, 4.86%)</title><rect x="359.1" y="403.0" width="57.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="362.1" y="414.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (347 samples, 4.70%)</title><rect x="360.5" y="387.0" width="55.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="363.5" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (346 samples, 4.68%)</title><rect x="360.5" y="371.0" width="55.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="363.5" y="382.0">__sof..</text>
</g>
<g>
<title>net_rx_action (335 samples, 4.53%)</title><rect x="361.8" y="355.0" width="53.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="364.8" y="366.0">net_r..</text>
</g>
<g>
<title>process_backlog (330 samples, 4.47%)</title><rect x="362.6" y="339.0" width="52.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.6" y="350.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (318 samples, 4.30%)</title><rect x="364.3" y="323.0" width="50.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="367.3" y="334.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (318 samples, 4.30%)</title><rect x="364.3" y="307.0" width="50.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="367.3" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.07%)</title><rect x="364.3" y="291.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="367.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (313 samples, 4.24%)</title><rect x="365.1" y="291.0" width="50.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.1" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="365.1" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="368.1" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.04%)</title><rect x="365.4" y="275.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="368.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="365.9" y="275.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="368.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (306 samples, 4.14%)</title><rect x="366.2" y="275.0" width="48.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="369.2" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (305 samples, 4.13%)</title><rect x="366.2" y="259.0" width="48.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="369.2" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (303 samples, 4.10%)</title><rect x="366.4" y="243.0" width="48.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="369.4" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (302 samples, 4.09%)</title><rect x="366.4" y="227.0" width="48.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="369.4" y="238.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (9 samples, 0.12%)</title><rect x="366.6" y="211.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="369.6" y="222.0"></text>
</g>
<g>
<title>sock_put (4 samples, 0.05%)</title><rect x="368.0" y="211.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (287 samples, 3.88%)</title><rect x="368.8" y="211.0" width="45.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.8" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.16%)</title><rect x="369.4" y="195.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.4" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (17 samples, 0.23%)</title><rect x="371.7" y="195.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="374.7" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="372.0" y="179.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="375.0" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.12%)</title><rect x="372.5" y="179.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="375.5" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="374.1" y="179.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="377.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (251 samples, 3.40%)</title><rect x="374.5" y="195.0" width="40.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="377.5" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.11%)</title><rect x="375.0" y="179.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="378.0" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (240 samples, 3.25%)</title><rect x="376.3" y="179.0" width="38.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.3" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (17 samples, 0.23%)</title><rect x="377.1" y="163.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="380.1" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.23%)</title><rect x="377.1" y="147.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.23%)</title><rect x="377.1" y="131.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="380.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (17 samples, 0.23%)</title><rect x="377.1" y="115.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.19%)</title><rect x="377.3" y="99.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.3" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="379.5" y="99.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.5" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="379.5" y="83.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.5" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="379.8" y="163.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.8" y="174.0"></text>
</g>
<g>
<title>tcp_ack (50 samples, 0.68%)</title><rect x="381.1" y="163.0" width="8.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="384.1" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="382.0" y="147.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="385.0" y="158.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="382.7" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (33 samples, 0.45%)</title><rect x="383.0" y="147.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (28 samples, 0.38%)</title><rect x="383.5" y="131.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.5" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.14%)</title><rect x="383.5" y="115.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (9 samples, 0.12%)</title><rect x="383.6" y="99.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="386.6" y="110.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="384.6" y="83.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="387.6" y="94.0"></text>
</g>
<g>
<title>skb_release_all (17 samples, 0.23%)</title><rect x="385.1" y="115.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="388.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.23%)</title><rect x="385.1" y="99.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="388.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (11 samples, 0.15%)</title><rect x="386.0" y="83.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="389.0" y="94.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.15%)</title><rect x="386.0" y="67.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="389.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.12%)</title><rect x="386.4" y="51.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.4" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="388.0" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (135 samples, 1.83%)</title><rect x="389.1" y="163.0" width="21.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="392.1" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (135 samples, 1.83%)</title><rect x="389.1" y="147.0" width="21.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="392.1" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (133 samples, 1.80%)</title><rect x="389.4" y="131.0" width="21.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="392.4" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (133 samples, 1.80%)</title><rect x="389.4" y="115.0" width="21.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="392.4" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (131 samples, 1.77%)</title><rect x="389.4" y="99.0" width="20.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="392.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="410.3" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="413.3" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="410.6" y="163.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.6" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (19 samples, 0.26%)</title><rect x="411.3" y="163.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="414.3" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (14 samples, 0.19%)</title><rect x="411.4" y="147.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.4" y="158.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="413.7" y="147.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="416.7" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="414.3" y="163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="417.3" y="174.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="415.3" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="418.3" y="366.0"></text>
</g>
<g>
<title>ret_from_intr (3 samples, 0.04%)</title><rect x="415.9" y="387.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.9" y="398.0"></text>
</g>
<g>
<title>do_IRQ (3 samples, 0.04%)</title><rect x="415.9" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="418.9" y="382.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.04%)</title><rect x="415.9" y="355.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="418.9" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.04%)</title><rect x="415.9" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="418.9" y="350.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.04%)</title><rect x="415.9" y="323.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="418.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.04%)</title><rect x="415.9" y="307.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.04%)</title><rect x="415.9" y="291.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="418.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.04%)</title><rect x="415.9" y="275.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="418.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.04%)</title><rect x="415.9" y="259.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="415.9" y="243.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="418.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.04%)</title><rect x="415.9" y="227.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="418.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.04%)</title><rect x="415.9" y="211.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.9" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.04%)</title><rect x="415.9" y="195.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.04%)</title><rect x="415.9" y="179.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="418.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="416.1" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="416.1" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.1" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (37 samples, 0.50%)</title><rect x="416.5" y="419.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.5" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (37 samples, 0.50%)</title><rect x="416.5" y="403.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.5" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="418.1" y="387.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="421.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (16 samples, 0.22%)</title><rect x="419.1" y="387.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.1" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.18%)</title><rect x="419.4" y="371.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="422.4" y="382.0"></text>
</g>
<g>
<title>netif_rx (10 samples, 0.14%)</title><rect x="419.7" y="355.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="422.7" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.14%)</title><rect x="419.7" y="339.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="422.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.14%)</title><rect x="419.7" y="323.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="422.7" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.07%)</title><rect x="421.6" y="387.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.6" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="422.1" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="425.1" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.04%)</title><rect x="422.4" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="425.4" y="430.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="422.6" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="425.6" y="414.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="422.6" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="425.6" y="398.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="422.6" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="425.6" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="422.6" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="425.6" y="366.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="423.4" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.4" y="526.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="423.9" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="426.9" y="542.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="424.2" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="427.2" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (43 samples, 0.58%)</title><rect x="424.7" y="547.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="427.7" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="431.5" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.5" y="558.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="432.2" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="435.2" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (24 samples, 0.32%)</title><rect x="433.0" y="547.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="436.0" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (19 samples, 0.26%)</title><rect x="433.8" y="531.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="436.8" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.20%)</title><rect x="434.4" y="515.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="437.4" y="526.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.20%)</title><rect x="434.4" y="499.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="437.4" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.15%)</title><rect x="434.6" y="483.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="437.6" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.04%)</title><rect x="436.3" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="439.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="436.3" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.3" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="436.8" y="547.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="439.8" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.09%)</title><rect x="437.9" y="595.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.9" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.07%)</title><rect x="438.2" y="579.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="441.2" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="438.4" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.4" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="439.0" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.0" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (18 samples, 0.24%)</title><rect x="439.4" y="643.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="442.4" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (14 samples, 0.19%)</title><rect x="440.0" y="627.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="443.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (14 samples, 0.19%)</title><rect x="440.0" y="611.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.0" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (11 samples, 0.15%)</title><rect x="440.5" y="595.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.5" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.04%)</title><rect x="441.8" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.15%)</title><rect x="442.4" y="659.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="445.4" y="670.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.12%)</title><rect x="442.6" y="643.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.12%)</title><rect x="442.6" y="627.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="445.6" y="638.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.12%)</title><rect x="442.6" y="611.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="445.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="444.3" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="447.3" y="702.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="444.3" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="447.3" y="686.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="444.3" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="447.3" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="444.3" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="447.3" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.18%)</title><rect x="444.8" y="771.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="447.8" y="782.0"></text>
</g>
<g>
<title>gettimeofday (12 samples, 0.16%)</title><rect x="445.0" y="755.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="448.0" y="766.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.16%)</title><rect x="445.0" y="739.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="448.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.11%)</title><rect x="446.9" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="447.4" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="447.4" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="447.8" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="447.8" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.8" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="447.8" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (20 samples, 0.27%)</title><rect x="448.5" y="835.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.26%)</title><rect x="448.5" y="819.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.12%)</title><rect x="448.6" y="803.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.12%)</title><rect x="448.6" y="787.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.05%)</title><rect x="450.1" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="450.9" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="451.2" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="451.2" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="451.2" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (557 samples, 7.54%)</title><rect x="451.7" y="835.0" width="88.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="451.7" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (547 samples, 7.40%)</title><rect x="452.0" y="819.0" width="87.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.0" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="452.0" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="452.0" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="452.1" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.1" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="452.1" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (9 samples, 0.12%)</title><rect x="452.6" y="803.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.11%)</title><rect x="452.8" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.7" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.7" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.7" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.7" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (534 samples, 7.23%)</title><rect x="454.1" y="803.0" width="85.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.1" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="454.1" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="454.1" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="454.1" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="454.1" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.1" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="454.1" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="454.1" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.1" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (527 samples, 7.13%)</title><rect x="454.4" y="787.0" width="84.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.4" y="798.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (524 samples, 7.09%)</title><rect x="454.9" y="771.0" width="83.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.9" y="782.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (497 samples, 6.73%)</title><rect x="457.3" y="755.0" width="79.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="460.3" y="766.0">Java_org_..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (10 samples, 0.14%)</title><rect x="458.4" y="739.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="461.4" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="459.6" y="723.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="462.6" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="459.6" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="462.6" y="718.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="459.6" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="462.6" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="459.6" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="462.6" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (7 samples, 0.09%)</title><rect x="460.1" y="739.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="463.1" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.03%)</title><rect x="461.2" y="739.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="464.2" y="750.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.03%)</title><rect x="461.6" y="739.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="464.6" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="461.9" y="739.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="464.9" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="462.4" y="739.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="465.4" y="750.0"></text>
</g>
<g>
<title>operator delete[](void*) (3 samples, 0.04%)</title><rect x="463.5" y="739.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="466.5" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="464.0" y="739.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="467.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.04%)</title><rect x="464.3" y="739.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="467.3" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (447 samples, 6.05%)</title><rect x="464.8" y="739.0" width="71.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="467.8" y="750.0">rocksdb_..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.08%)</title><rect x="465.7" y="723.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="468.7" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.07%)</title><rect x="466.8" y="723.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="469.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="467.6" y="723.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="470.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="467.9" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="470.9" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="468.3" y="707.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="471.3" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.07%)</title><rect x="468.7" y="723.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="471.7" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="469.5" y="723.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="472.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (352 samples, 4.76%)</title><rect x="470.3" y="723.0" width="56.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="473.3" y="734.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.03%)</title><rect x="470.3" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="473.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (349 samples, 4.72%)</title><rect x="470.7" y="707.0" width="55.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="473.7" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (344 samples, 4.65%)</title><rect x="471.3" y="691.0" width="54.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="474.3" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (343 samples, 4.64%)</title><rect x="471.3" y="675.0" width="54.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="474.3" y="686.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (4 samples, 0.05%)</title><rect x="471.5" y="659.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="474.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.04%)</title><rect x="472.1" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="475.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (326 samples, 4.41%)</title><rect x="472.6" y="659.0" width="52.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="475.6" y="670.0">rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="474.3" y="643.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="477.3" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="474.7" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="477.7" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.09%)</title><rect x="475.1" y="643.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="478.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (8 samples, 0.11%)</title><rect x="476.6" y="643.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="479.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (6 samples, 0.08%)</title><rect x="476.9" y="627.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="479.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.03%)</title><rect x="477.5" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="480.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.04%)</title><rect x="477.8" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="480.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (9 samples, 0.12%)</title><rect x="478.5" y="643.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="481.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (5 samples, 0.07%)</title><rect x="478.5" y="627.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="481.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.05%)</title><rect x="478.5" y="611.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="481.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.03%)</title><rect x="478.8" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="481.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.03%)</title><rect x="479.3" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="482.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (277 samples, 3.75%)</title><rect x="479.9" y="643.0" width="44.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="482.9" y="654.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (9 samples, 0.12%)</title><rect x="481.2" y="627.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="484.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (259 samples, 3.50%)</title><rect x="482.8" y="627.0" width="41.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="485.8" y="638.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (257 samples, 3.48%)</title><rect x="483.0" y="611.0" width="41.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="486.0" y="622.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (9 samples, 0.12%)</title><rect x="483.0" y="595.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="486.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (174 samples, 2.35%)</title><rect x="484.4" y="595.0" width="27.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="487.4" y="606.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (27 samples, 0.37%)</title><rect x="496.1" y="579.0" width="4.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="499.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (19 samples, 0.26%)</title><rect x="500.5" y="579.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="503.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="503.2" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="506.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="503.2" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="503.2" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.2" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="503.6" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="506.6" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="503.6" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.6" y="574.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="503.6" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.6" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="503.6" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="506.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (52 samples, 0.70%)</title><rect x="503.9" y="579.0" width="8.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="506.9" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (2 samples, 0.03%)</title><rect x="507.2" y="563.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="510.2" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (21 samples, 0.28%)</title><rect x="507.5" y="563.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="510.5" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="510.9" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="513.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.07%)</title><rect x="511.2" y="563.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="514.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (68 samples, 0.92%)</title><rect x="512.2" y="595.0" width="10.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="515.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.03%)</title><rect x="523.0" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="526.0" y="606.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="523.5" y="595.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="526.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.03%)</title><rect x="524.3" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="527.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.03%)</title><rect x="524.8" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="527.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.04%)</title><rect x="525.6" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="528.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.03%)</title><rect x="526.5" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="529.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (58 samples, 0.78%)</title><rect x="526.9" y="723.0" width="9.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="529.9" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="526.9" y="707.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="529.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.07%)</title><rect x="527.3" y="707.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="530.3" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.05%)</title><rect x="528.1" y="707.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="531.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.04%)</title><rect x="528.3" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="531.3" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (38 samples, 0.51%)</title><rect x="528.8" y="707.0" width="6.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="531.8" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (5 samples, 0.07%)</title><rect x="530.4" y="691.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="533.4" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="531.2" y="691.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="534.2" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="532.0" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="535.0" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.22%)</title><rect x="532.3" y="691.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="535.3" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.19%)</title><rect x="532.6" y="675.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="535.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.11%)</title><rect x="532.6" y="659.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="535.6" y="670.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (3 samples, 0.04%)</title><rect x="533.1" y="643.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="536.1" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="534.1" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="537.1" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="534.4" y="659.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="537.4" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.11%)</title><rect x="534.9" y="707.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="537.9" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="535.3" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="538.3" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="535.7" y="691.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="538.7" y="702.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.03%)</title><rect x="536.1" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="539.1" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (7 samples, 0.09%)</title><rect x="536.8" y="755.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="539.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.05%)</title><rect x="537.9" y="755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="540.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (5 samples, 0.07%)</title><rect x="538.5" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="538.7" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="538.7" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="538.7" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="538.7" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="538.7" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (8 samples, 0.11%)</title><rect x="539.3" y="819.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="539.5" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="539.5" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="540.0" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (12 samples, 0.16%)</title><rect x="540.6" y="851.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.16%)</title><rect x="540.6" y="835.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.09%)</title><rect x="540.6" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.07%)</title><rect x="540.9" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.9" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="541.1" y="787.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="544.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.07%)</title><rect x="541.7" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.07%)</title><rect x="541.7" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="541.9" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="542.2" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.24%)</title><rect x="542.5" y="851.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.24%)</title><rect x="542.5" y="835.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (18 samples, 0.24%)</title><rect x="542.5" y="819.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.5" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (9 samples, 0.12%)</title><rect x="543.8" y="803.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="546.8" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.03%)</title><rect x="545.4" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 0.45%)</title><rect x="545.7" y="883.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (19 samples, 0.26%)</title><rect x="546.7" y="867.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="548.9" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="548.9" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="548.9" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.9" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="549.2" y="851.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="552.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.11%)</title><rect x="549.7" y="867.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.11%)</title><rect x="549.7" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (10 samples, 0.14%)</title><rect x="551.0" y="883.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.14%)</title><rect x="551.0" y="867.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.14%)</title><rect x="551.0" y="851.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="551.1" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="551.3" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="551.6" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.6" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="551.9" y="835.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="554.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (8 samples, 0.11%)</title><rect x="552.6" y="883.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="553.5" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="556.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="554.2" y="883.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="554.2" y="867.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (254 samples, 3.44%)</title><rect x="555.1" y="899.0" width="40.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.1" y="910.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (252 samples, 3.41%)</title><rect x="555.3" y="883.0" width="40.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.3" y="894.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.12%)</title><rect x="557.7" y="867.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="560.7" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.30%)</title><rect x="559.1" y="867.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="562.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="559.3" y="851.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="562.3" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="559.9" y="851.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="562.9" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.20%)</title><rect x="560.2" y="851.0" width="2.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="563.2" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="561.2" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="564.2" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="561.5" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="564.5" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="562.0" y="835.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="565.0" y="846.0"></text>
</g>
<g>
<title>__recv (204 samples, 2.76%)</title><rect x="562.6" y="867.0" width="32.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="565.6" y="878.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (176 samples, 2.38%)</title><rect x="567.1" y="851.0" width="28.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.1" y="862.0">en..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="567.1" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="570.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (174 samples, 2.35%)</title><rect x="567.4" y="835.0" width="27.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="570.4" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (167 samples, 2.26%)</title><rect x="568.5" y="819.0" width="26.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.5" y="830.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (166 samples, 2.25%)</title><rect x="568.5" y="803.0" width="26.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.5" y="814.0">_..</text>
</g>
<g>
<title>sock_recvmsg (156 samples, 2.11%)</title><rect x="568.9" y="787.0" width="24.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.9" y="798.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (135 samples, 1.83%)</title><rect x="569.2" y="771.0" width="21.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="572.2" y="782.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (134 samples, 1.81%)</title><rect x="569.3" y="755.0" width="21.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="572.3" y="766.0">t..</text>
</g>
<g>
<title>__kfree_skb (28 samples, 0.38%)</title><rect x="571.1" y="739.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="574.1" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="571.1" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="574.1" y="734.0"></text>
</g>
<g>
<title>skb_release_all (25 samples, 0.34%)</title><rect x="571.6" y="723.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="574.6" y="734.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.12%)</title><rect x="571.6" y="707.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="574.6" y="718.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="572.7" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="575.7" y="702.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="572.7" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.7" y="686.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="572.7" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.7" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (12 samples, 0.16%)</title><rect x="573.0" y="707.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="576.0" y="718.0"></text>
</g>
<g>
<title>dst_release (12 samples, 0.16%)</title><rect x="573.0" y="691.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="576.0" y="702.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.05%)</title><rect x="574.9" y="707.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="577.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.09%)</title><rect x="575.6" y="739.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.6" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.08%)</title><rect x="576.7" y="739.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="579.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="577.2" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="580.2" y="734.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (3 samples, 0.04%)</title><rect x="577.2" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="580.2" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (23 samples, 0.31%)</title><rect x="577.8" y="739.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.8" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (22 samples, 0.30%)</title><rect x="578.0" y="723.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="581.0" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (15 samples, 0.20%)</title><rect x="579.1" y="707.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="582.1" y="718.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="579.1" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="582.1" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="579.2" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="582.2" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.12%)</title><rect x="579.7" y="691.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.7" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.09%)</title><rect x="580.0" y="675.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="583.0" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (45 samples, 0.61%)</title><rect x="581.5" y="739.0" width="7.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.5" y="750.0"></text>
</g>
<g>
<title>tcp_send_ack (45 samples, 0.61%)</title><rect x="581.5" y="723.0" width="7.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="584.5" y="734.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (45 samples, 0.61%)</title><rect x="581.5" y="707.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="584.5" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.03%)</title><rect x="581.5" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="584.5" y="702.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (41 samples, 0.55%)</title><rect x="581.8" y="691.0" width="6.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="584.8" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (39 samples, 0.53%)</title><rect x="582.1" y="675.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="585.1" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (39 samples, 0.53%)</title><rect x="582.1" y="659.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.1" y="670.0"></text>
</g>
<g>
<title>ip_local_out (36 samples, 0.49%)</title><rect x="582.4" y="643.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="585.4" y="654.0"></text>
</g>
<g>
<title>ip_output (36 samples, 0.49%)</title><rect x="582.4" y="627.0" width="5.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.4" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (34 samples, 0.46%)</title><rect x="582.8" y="611.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="585.8" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (34 samples, 0.46%)</title><rect x="582.8" y="595.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.8" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 0.46%)</title><rect x="582.8" y="579.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.8" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (29 samples, 0.39%)</title><rect x="582.9" y="563.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="585.9" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (28 samples, 0.38%)</title><rect x="582.9" y="547.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.9" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 0.34%)</title><rect x="583.4" y="531.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="586.4" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 0.34%)</title><rect x="583.4" y="515.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.4" y="526.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 0.34%)</title><rect x="583.4" y="499.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.4" y="510.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 0.34%)</title><rect x="583.4" y="483.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.4" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (23 samples, 0.31%)</title><rect x="583.7" y="467.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="586.7" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 0.31%)</title><rect x="583.7" y="451.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="586.7" y="462.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 0.28%)</title><rect x="584.0" y="435.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.0" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (19 samples, 0.26%)</title><rect x="584.4" y="419.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.4" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (18 samples, 0.24%)</title><rect x="584.4" y="403.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="587.4" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (18 samples, 0.24%)</title><rect x="584.4" y="387.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="587.4" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (18 samples, 0.24%)</title><rect x="584.4" y="371.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.4" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 0.22%)</title><rect x="584.7" y="355.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.7" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.18%)</title><rect x="585.2" y="339.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.2" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.18%)</title><rect x="585.2" y="323.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="588.2" y="334.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.14%)</title><rect x="585.5" y="307.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="588.5" y="318.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.08%)</title><rect x="586.1" y="291.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.1" y="302.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.08%)</title><rect x="586.1" y="275.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.1" y="286.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="586.1" y="259.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="589.1" y="270.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.07%)</title><rect x="586.1" y="243.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="589.1" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.05%)</title><rect x="587.5" y="563.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.5" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.05%)</title><rect x="587.5" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="590.5" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="587.9" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="590.9" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (11 samples, 0.15%)</title><rect x="588.7" y="739.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.7" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="589.1" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="592.1" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="589.5" y="723.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.5" y="734.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="589.6" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="592.6" y="718.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="589.9" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="592.9" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="590.4" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="593.4" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.26%)</title><rect x="590.7" y="771.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="593.7" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (14 samples, 0.19%)</title><rect x="591.5" y="755.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.5" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.03%)</title><rect x="591.5" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="594.5" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 0.16%)</title><rect x="591.9" y="739.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.9" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (8 samples, 0.11%)</title><rect x="592.3" y="723.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.3" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="593.3" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.3" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.11%)</title><rect x="593.8" y="787.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="596.8" y="798.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.09%)</title><rect x="593.8" y="771.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.8" y="782.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="593.9" y="755.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="596.9" y="766.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="593.9" y="739.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.9" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="595.2" y="867.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="598.2" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.09%)</title><rect x="595.7" y="915.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="598.7" y="926.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="595.7" y="899.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="598.7" y="910.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.09%)</title><rect x="595.7" y="883.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="598.7" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=5905] (1,802 samples, 24.38%)</title><rect x="596.8" y="963.0" width="287.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="599.8" y="974.0">[NIO Selector #2 tid=5905]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,802 samples, 24.38%)</title><rect x="596.8" y="947.0" width="287.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.8" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.03%)</title><rect x="597.8" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.03%)</title><rect x="597.8" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (87 samples, 1.18%)</title><rect x="598.1" y="931.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.04%)</title><rect x="598.1" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="598.1" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (84 samples, 1.14%)</title><rect x="598.6" y="915.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.6" y="926.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.05%)</title><rect x="599.4" y="899.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="602.4" y="910.0"></text>
</g>
<g>
<title>epoll_wait (75 samples, 1.01%)</title><rect x="600.0" y="899.0" width="12.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="603.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 0.91%)</title><rect x="601.3" y="883.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="604.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 0.91%)</title><rect x="601.3" y="867.0" width="10.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.3" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (63 samples, 0.85%)</title><rect x="601.9" y="851.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="604.9" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (62 samples, 0.84%)</title><rect x="601.9" y="835.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="604.9" y="846.0"></text>
</g>
<g>
<title>ep_poll (53 samples, 0.72%)</title><rect x="602.9" y="819.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="605.9" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (42 samples, 0.57%)</title><rect x="604.2" y="803.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="607.2" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (35 samples, 0.47%)</title><rect x="605.3" y="787.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.3" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.12%)</title><rect x="606.1" y="771.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (21 samples, 0.28%)</title><rect x="607.5" y="771.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="610.5" y="782.0"></text>
</g>
<g>
<title>sock_poll (17 samples, 0.23%)</title><rect x="608.0" y="755.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.0" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="609.1" y="739.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="612.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.05%)</title><rect x="609.9" y="739.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="612.9" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="611.0" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.0" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="611.0" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="614.0" y="798.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="611.0" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.0" y="782.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="611.0" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.0" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="611.0" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.0" y="750.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="611.3" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="614.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,707 samples, 23.10%)</title><rect x="612.0" y="931.0" width="272.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.0" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,689 samples, 22.86%)</title><rect x="613.6" y="915.0" width="269.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.6" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,497 samples, 20.26%)</title><rect x="614.1" y="899.0" width="239.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.1" y="910.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,417 samples, 19.17%)</title><rect x="615.0" y="883.0" width="226.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.0" y="894.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="615.5" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,412 samples, 19.11%)</title><rect x="615.8" y="867.0" width="225.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.8" y="878.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,382 samples, 18.70%)</title><rect x="615.8" y="851.0" width="220.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.8" y="862.0">RequestHandler1_entity.handle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (850 samples, 11.50%)</title><rect x="616.1" y="835.0" width="135.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.07%)</title><rect x="618.5" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="618.5" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="618.5" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (826 samples, 11.18%)</title><rect x="619.3" y="819.0" width="131.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.3" y="830.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (36 samples, 0.49%)</title><rect x="619.3" y="803.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.3" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.11%)</title><rect x="620.4" y="787.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="623.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (20 samples, 0.27%)</title><rect x="621.9" y="787.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (10 samples, 0.14%)</title><rect x="622.2" y="771.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="623.3" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="623.3" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="623.8" y="771.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="623.8" y="755.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="623.8" y="739.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (790 samples, 10.69%)</title><rect x="625.1" y="803.0" width="126.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.1" y="814.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (788 samples, 10.66%)</title><rect x="625.4" y="787.0" width="125.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.4" y="798.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (775 samples, 10.49%)</title><rect x="626.2" y="771.0" width="123.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.2" y="782.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (774 samples, 10.47%)</title><rect x="626.3" y="755.0" width="123.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.3" y="766.0">one/nio/net/Nat..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (12 samples, 0.16%)</title><rect x="629.2" y="739.0" width="1.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="632.2" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.19%)</title><rect x="631.1" y="739.0" width="2.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="634.1" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="632.1" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="635.1" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.07%)</title><rect x="632.6" y="723.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="635.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="632.6" y="707.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="635.6" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.07%)</title><rect x="633.4" y="739.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="636.4" y="750.0"></text>
</g>
<g>
<title>send (725 samples, 9.81%)</title><rect x="634.2" y="739.0" width="115.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="637.2" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (701 samples, 9.49%)</title><rect x="638.0" y="723.0" width="111.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.0" y="734.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="638.2" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="641.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (698 samples, 9.45%)</title><rect x="638.5" y="707.0" width="111.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="641.5" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (684 samples, 9.26%)</title><rect x="640.6" y="691.0" width="109.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="643.6" y="702.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (682 samples, 9.23%)</title><rect x="640.6" y="675.0" width="108.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="643.6" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (667 samples, 9.03%)</title><rect x="641.5" y="659.0" width="106.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.5" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.11%)</title><rect x="641.5" y="643.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.5" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (646 samples, 8.74%)</title><rect x="642.8" y="643.0" width="103.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.8" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (644 samples, 8.71%)</title><rect x="643.1" y="627.0" width="102.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="646.1" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="643.9" y="611.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="646.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (10 samples, 0.14%)</title><rect x="644.7" y="611.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="647.7" y="622.0"></text>
</g>
<g>
<title>release_sock (35 samples, 0.47%)</title><rect x="646.3" y="611.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="649.3" y="622.0"></text>
</g>
<g>
<title>__release_sock (33 samples, 0.45%)</title><rect x="646.5" y="595.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="649.5" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (30 samples, 0.41%)</title><rect x="646.9" y="579.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="649.9" y="590.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="647.3" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="650.3" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.34%)</title><rect x="647.7" y="563.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="650.7" y="574.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.04%)</title><rect x="647.9" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="650.9" y="558.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.04%)</title><rect x="647.9" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="650.9" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="647.9" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="650.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="647.9" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="650.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="647.9" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="650.9" y="494.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.16%)</title><rect x="648.4" y="547.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.4" y="558.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.11%)</title><rect x="648.9" y="531.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="651.9" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="649.7" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.7" y="526.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.03%)</title><rect x="650.3" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="653.3" y="558.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="650.3" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="653.3" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="650.3" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="653.3" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="650.3" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="653.3" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="650.3" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="653.3" y="494.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.07%)</title><rect x="650.8" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="653.8" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (584 samples, 7.90%)</title><rect x="652.4" y="611.0" width="93.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="655.4" y="622.0">tcp_sendmsg..</text>
</g>
<g>
<title>_copy_from_iter_full (13 samples, 0.18%)</title><rect x="653.7" y="595.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="656.7" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (12 samples, 0.16%)</title><rect x="653.7" y="579.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="656.7" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="655.7" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="658.7" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="655.7" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="658.7" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (44 samples, 0.60%)</title><rect x="656.0" y="595.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.0" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (42 samples, 0.57%)</title><rect x="656.4" y="579.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="659.4" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (21 samples, 0.28%)</title><rect x="657.2" y="563.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.14%)</title><rect x="657.2" y="547.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="660.2" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (7 samples, 0.09%)</title><rect x="657.3" y="531.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.3" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="658.4" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="661.4" y="542.0"></text>
</g>
<g>
<title>memset (10 samples, 0.14%)</title><rect x="658.9" y="547.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.9" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.09%)</title><rect x="660.7" y="563.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.7" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="661.5" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.5" y="558.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="661.8" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="664.8" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="661.8" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="664.8" y="558.0"></text>
</g>
<g>
<title>memset (5 samples, 0.07%)</title><rect x="662.1" y="563.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="665.1" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="663.1" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.1" y="606.0"></text>
</g>
<g>
<title>tcp_push (504 samples, 6.82%)</title><rect x="663.4" y="595.0" width="80.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="666.4" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (504 samples, 6.82%)</title><rect x="663.4" y="579.0" width="80.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="666.4" y="590.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (503 samples, 6.81%)</title><rect x="663.6" y="563.0" width="80.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="666.6" y="574.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (429 samples, 5.81%)</title><rect x="664.5" y="547.0" width="68.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.5" y="558.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.03%)</title><rect x="665.8" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="668.8" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (412 samples, 5.58%)</title><rect x="666.1" y="531.0" width="65.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.1" y="542.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (411 samples, 5.56%)</title><rect x="666.1" y="515.0" width="65.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="669.1" y="526.0">__ip_qu..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.12%)</title><rect x="666.6" y="499.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="669.6" y="510.0"></text>
</g>
<g>
<title>ip_local_out (396 samples, 5.36%)</title><rect x="668.0" y="499.0" width="63.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="671.0" y="510.0">ip_loca..</text>
</g>
<g>
<title>ip_output (393 samples, 5.32%)</title><rect x="668.3" y="483.0" width="62.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="671.3" y="494.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (392 samples, 5.30%)</title><rect x="668.5" y="467.0" width="62.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="671.5" y="478.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="668.7" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.7" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (387 samples, 5.24%)</title><rect x="669.0" y="451.0" width="61.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.0" y="462.0">__ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="669.3" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="672.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (382 samples, 5.17%)</title><rect x="669.6" y="435.0" width="61.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="672.6" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (339 samples, 4.59%)</title><rect x="670.1" y="419.0" width="54.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="673.1" y="430.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (338 samples, 4.57%)</title><rect x="670.1" y="403.0" width="54.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="673.1" y="414.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (325 samples, 4.40%)</title><rect x="671.9" y="387.0" width="51.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="674.9" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (323 samples, 4.37%)</title><rect x="671.9" y="371.0" width="51.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.9" y="382.0">__sof..</text>
</g>
<g>
<title>net_rx_action (317 samples, 4.29%)</title><rect x="672.8" y="355.0" width="50.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="675.8" y="366.0">net_r..</text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.04%)</title><rect x="674.2" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="677.2" y="350.0"></text>
</g>
<g>
<title>process_backlog (305 samples, 4.13%)</title><rect x="674.7" y="339.0" width="48.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="677.7" y="350.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (295 samples, 3.99%)</title><rect x="676.3" y="323.0" width="47.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="679.3" y="334.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (295 samples, 3.99%)</title><rect x="676.3" y="307.0" width="47.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="679.3" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="676.5" y="291.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (290 samples, 3.92%)</title><rect x="677.0" y="291.0" width="46.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.0" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="677.1" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="680.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="677.6" y="275.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="680.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (284 samples, 3.84%)</title><rect x="677.9" y="275.0" width="45.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="680.9" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (282 samples, 3.82%)</title><rect x="677.9" y="259.0" width="45.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="680.9" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (280 samples, 3.79%)</title><rect x="678.1" y="243.0" width="44.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.1" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (279 samples, 3.78%)</title><rect x="678.1" y="227.0" width="44.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.1" y="238.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.08%)</title><rect x="678.2" y="211.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.2" y="222.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.04%)</title><rect x="679.5" y="211.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (267 samples, 3.61%)</title><rect x="680.0" y="211.0" width="42.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="683.0" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.11%)</title><rect x="680.8" y="195.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="683.8" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="681.6" y="179.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.15%)</title><rect x="682.2" y="195.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="685.2" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="682.2" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="685.2" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.11%)</title><rect x="682.6" y="179.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (242 samples, 3.27%)</title><rect x="684.0" y="195.0" width="38.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.0" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.09%)</title><rect x="684.1" y="179.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="687.1" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.03%)</title><rect x="685.3" y="179.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="688.3" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (232 samples, 3.14%)</title><rect x="685.6" y="179.0" width="37.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="688.6" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.20%)</title><rect x="686.2" y="163.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="689.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (15 samples, 0.20%)</title><rect x="686.2" y="147.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="689.2" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="686.4" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.4" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.16%)</title><rect x="686.7" y="131.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="689.7" y="142.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.16%)</title><rect x="686.7" y="115.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="689.7" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.12%)</title><rect x="686.9" y="99.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="689.9" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="688.3" y="99.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.3" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="688.3" y="83.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="691.3" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="688.6" y="163.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (62 samples, 0.84%)</title><rect x="689.7" y="163.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="692.7" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="691.7" y="147.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (42 samples, 0.57%)</title><rect x="692.6" y="147.0" width="6.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="695.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (28 samples, 0.38%)</title><rect x="694.2" y="131.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.2" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.09%)</title><rect x="694.2" y="115.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.2" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.08%)</title><rect x="694.4" y="99.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="697.4" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="694.7" y="83.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (21 samples, 0.28%)</title><rect x="695.3" y="115.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.3" y="126.0"></text>
</g>
<g>
<title>skb_release_data (21 samples, 0.28%)</title><rect x="695.3" y="99.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="698.3" y="110.0"></text>
</g>
<g>
<title>skb_free_head (13 samples, 0.18%)</title><rect x="696.6" y="83.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="699.6" y="94.0"></text>
</g>
<g>
<title>kfree (13 samples, 0.18%)</title><rect x="696.6" y="67.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="699.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.12%)</title><rect x="697.2" y="51.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="700.2" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (3 samples, 0.04%)</title><rect x="698.2" y="35.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.2" y="46.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="699.0" y="131.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (121 samples, 1.64%)</title><rect x="699.6" y="163.0" width="19.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="702.6" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="699.6" y="147.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="702.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (119 samples, 1.61%)</title><rect x="700.0" y="147.0" width="19.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="703.0" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (117 samples, 1.58%)</title><rect x="700.3" y="131.0" width="18.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="703.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (116 samples, 1.57%)</title><rect x="700.3" y="115.0" width="18.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (110 samples, 1.49%)</title><rect x="700.4" y="99.0" width="17.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="703.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (5 samples, 0.07%)</title><rect x="718.0" y="99.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.0" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="719.0" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="722.0" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (16 samples, 0.22%)</title><rect x="719.4" y="163.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="722.4" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.12%)</title><rect x="719.4" y="147.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.4" y="158.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.08%)</title><rect x="721.0" y="147.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.0" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.05%)</title><rect x="722.0" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.0" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="723.4" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="726.4" y="382.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="723.7" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.7" y="398.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="723.7" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.7" y="382.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="723.7" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="726.7" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="723.7" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="726.7" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="723.7" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="723.7" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="723.7" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.7" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.03%)</title><rect x="723.7" y="275.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="726.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="723.7" y="259.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="723.7" y="243.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="723.7" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="726.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="723.7" y="211.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.7" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="723.7" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="726.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="723.7" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="723.7" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="723.7" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.7" y="158.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="723.7" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.7" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (39 samples, 0.53%)</title><rect x="724.2" y="419.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="727.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.51%)</title><rect x="724.2" y="403.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.2" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="726.5" y="387.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="729.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.15%)</title><rect x="727.4" y="387.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.4" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.12%)</title><rect x="727.7" y="371.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.7" y="382.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.08%)</title><rect x="727.7" y="355.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.7" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.07%)</title><rect x="727.9" y="339.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.9" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.07%)</title><rect x="727.9" y="323.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="730.9" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="728.9" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="731.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.07%)</title><rect x="729.5" y="387.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="732.5" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="730.0" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.0" y="382.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="730.8" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.8" y="462.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="731.3" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="734.3" y="510.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.07%)</title><rect x="731.9" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="734.9" y="542.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="732.2" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="735.2" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="733.0" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.0" y="558.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (36 samples, 0.49%)</title><rect x="733.3" y="547.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="736.3" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="739.1" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.1" y="558.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="739.6" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="742.6" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="740.0" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="743.0" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.23%)</title><rect x="740.4" y="547.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="743.4" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (12 samples, 0.16%)</title><rect x="741.2" y="531.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.2" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.15%)</title><rect x="741.3" y="515.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.15%)</title><rect x="741.3" y="499.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="744.3" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.09%)</title><rect x="741.5" y="483.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.5" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.04%)</title><rect x="742.6" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="745.6" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="742.6" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.6" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="743.2" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.2" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="743.4" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.4" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="743.9" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="746.9" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.12%)</title><rect x="744.2" y="595.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.2" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="744.3" y="579.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="747.3" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.04%)</title><rect x="745.1" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="748.1" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="745.6" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="748.6" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.18%)</title><rect x="745.9" y="643.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="748.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (11 samples, 0.15%)</title><rect x="746.3" y="627.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="749.3" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.14%)</title><rect x="746.4" y="611.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="749.4" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (8 samples, 0.11%)</title><rect x="746.7" y="595.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="749.7" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="747.7" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="750.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.12%)</title><rect x="748.0" y="659.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="751.0" y="670.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.11%)</title><rect x="748.0" y="643.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="751.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.11%)</title><rect x="748.0" y="627.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.0" y="638.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.11%)</title><rect x="748.0" y="611.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="751.0" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.11%)</title><rect x="749.9" y="771.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="752.9" y="782.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.11%)</title><rect x="749.9" y="755.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="752.9" y="766.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.11%)</title><rect x="749.9" y="739.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="752.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="751.2" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="751.4" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="751.4" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.35%)</title><rect x="751.9" y="835.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.34%)</title><rect x="751.9" y="819.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.19%)</title><rect x="752.0" y="803.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.19%)</title><rect x="752.0" y="787.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.12%)</title><rect x="752.8" y="771.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="755.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.07%)</title><rect x="754.2" y="803.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="754.7" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="755.0" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="755.0" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.0" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="755.0" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (504 samples, 6.82%)</title><rect x="756.0" y="835.0" width="80.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.0" y="846.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (498 samples, 6.74%)</title><rect x="756.0" y="819.0" width="79.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.0" y="830.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="756.2" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="756.2" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="756.2" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (5 samples, 0.07%)</title><rect x="756.5" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.07%)</title><rect x="756.5" y="787.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (490 samples, 6.63%)</title><rect x="757.3" y="803.0" width="78.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.3" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (479 samples, 6.48%)</title><rect x="757.9" y="787.0" width="76.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.9" y="798.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (478 samples, 6.47%)</title><rect x="758.1" y="771.0" width="76.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.1" y="782.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (450 samples, 6.09%)</title><rect x="759.4" y="755.0" width="71.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="762.4" y="766.0">Java_org..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (8 samples, 0.11%)</title><rect x="759.8" y="739.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="762.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (5 samples, 0.07%)</title><rect x="761.3" y="739.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="764.3" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.03%)</title><rect x="762.1" y="739.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="765.1" y="750.0"></text>
</g>
<g>
<title>cfree (4 samples, 0.05%)</title><rect x="762.4" y="739.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="765.4" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="763.0" y="739.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="766.0" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="763.3" y="739.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="766.3" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="763.8" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="766.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.03%)</title><rect x="764.1" y="739.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="767.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.03%)</title><rect x="764.5" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="767.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.04%)</title><rect x="764.8" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="767.8" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (408 samples, 5.52%)</title><rect x="765.3" y="739.0" width="65.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="768.3" y="750.0">rocksdb..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="765.9" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="768.9" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (15 samples, 0.20%)</title><rect x="766.2" y="723.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="769.2" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.04%)</title><rect x="768.0" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="771.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.08%)</title><rect x="768.6" y="723.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="771.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="768.8" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="771.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="769.1" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="772.1" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.04%)</title><rect x="769.6" y="723.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="772.6" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="770.1" y="723.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="773.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (317 samples, 4.29%)</title><rect x="770.5" y="723.0" width="50.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="773.5" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (316 samples, 4.28%)</title><rect x="770.7" y="707.0" width="50.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="773.7" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (312 samples, 4.22%)</title><rect x="771.0" y="691.0" width="49.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="774.0" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (311 samples, 4.21%)</title><rect x="771.0" y="675.0" width="49.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="774.0" y="686.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="771.5" y="659.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="774.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.03%)</title><rect x="771.8" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="774.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (4 samples, 0.05%)</title><rect x="772.1" y="659.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="775.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="772.8" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.03%)</title><rect x="773.1" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="776.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (287 samples, 3.88%)</title><rect x="773.4" y="659.0" width="45.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="776.4" y="670.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.09%)</title><rect x="775.6" y="643.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="778.6" y="654.0"></text>
</g>
<g>
<title>memcpy (2 samples, 0.03%)</title><rect x="776.9" y="643.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="779.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (9 samples, 0.12%)</title><rect x="777.2" y="643.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="780.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (4 samples, 0.05%)</title><rect x="777.6" y="627.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="780.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.03%)</title><rect x="778.2" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="781.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (8 samples, 0.11%)</title><rect x="778.8" y="643.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="781.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (6 samples, 0.08%)</title><rect x="778.8" y="627.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="781.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (6 samples, 0.08%)</title><rect x="778.8" y="611.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="781.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.03%)</title><rect x="779.8" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="782.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (239 samples, 3.23%)</title><rect x="780.3" y="643.0" width="38.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="783.3" y="654.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (5 samples, 0.07%)</title><rect x="781.4" y="627.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="784.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (226 samples, 3.06%)</title><rect x="782.3" y="627.0" width="36.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="785.3" y="638.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (225 samples, 3.04%)</title><rect x="782.5" y="611.0" width="35.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="785.5" y="622.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (16 samples, 0.22%)</title><rect x="782.8" y="595.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="785.8" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="785.1" y="579.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="788.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (147 samples, 1.99%)</title><rect x="785.4" y="595.0" width="23.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="788.4" y="606.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (31 samples, 0.42%)</title><rect x="794.5" y="579.0" width="4.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="797.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.09%)</title><rect x="799.6" y="579.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="802.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (51 samples, 0.69%)</title><rect x="800.7" y="579.0" width="8.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="803.7" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (10 samples, 0.14%)</title><rect x="803.9" y="563.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="806.9" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (17 samples, 0.23%)</title><rect x="805.5" y="563.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="808.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="808.4" y="563.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="811.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (56 samples, 0.76%)</title><rect x="808.9" y="595.0" width="8.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="811.9" y="606.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="818.0" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="821.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (2 samples, 0.03%)</title><rect x="818.4" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="821.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.03%)</title><rect x="819.4" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="822.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (6 samples, 0.08%)</title><rect x="819.7" y="659.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="822.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (2 samples, 0.03%)</title><rect x="820.8" y="691.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="823.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (57 samples, 0.77%)</title><rect x="821.3" y="723.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="824.3" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="821.5" y="707.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="824.5" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="822.1" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="825.1" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="823.1" y="707.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="826.1" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (41 samples, 0.55%)</title><rect x="823.4" y="707.0" width="6.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="826.4" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (10 samples, 0.14%)</title><rect x="824.2" y="691.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="827.2" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.08%)</title><rect x="825.8" y="691.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="828.8" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (17 samples, 0.23%)</title><rect x="827.1" y="691.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="830.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 0.23%)</title><rect x="827.1" y="675.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="830.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.12%)</title><rect x="827.2" y="659.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="830.2" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="827.5" y="643.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="830.5" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="828.0" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="831.0" y="654.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="828.3" y="643.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="831.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="828.7" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="831.7" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.04%)</title><rect x="829.0" y="659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="832.0" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="829.5" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="832.5" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="829.9" y="707.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="832.9" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="829.9" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="832.9" y="702.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (3 samples, 0.04%)</title><rect x="830.4" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="833.4" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.03%)</title><rect x="830.9" y="739.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="833.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="831.2" y="755.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="834.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="831.2" y="739.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="834.2" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (7 samples, 0.09%)</title><rect x="831.7" y="755.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="834.7" y="766.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="832.8" y="755.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="835.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.04%)</title><rect x="833.1" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="836.1" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.03%)</title><rect x="833.6" y="755.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="836.6" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.03%)</title><rect x="834.1" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="837.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (7 samples, 0.09%)</title><rect x="834.4" y="787.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.07%)</title><rect x="834.7" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="834.7" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="834.7" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="834.7" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="834.9" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (6 samples, 0.08%)</title><rect x="835.5" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.5" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="835.5" y="803.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="838.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="835.8" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.12%)</title><rect x="836.5" y="851.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.12%)</title><rect x="836.5" y="835.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.11%)</title><rect x="836.5" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.11%)</title><rect x="836.5" y="803.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.5" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (7 samples, 0.09%)</title><rect x="836.6" y="787.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="839.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.28%)</title><rect x="837.9" y="851.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.28%)</title><rect x="837.9" y="835.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (20 samples, 0.27%)</title><rect x="837.9" y="819.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.9" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (10 samples, 0.14%)</title><rect x="839.4" y="803.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="842.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (42 samples, 0.57%)</title><rect x="841.3" y="883.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26 samples, 0.35%)</title><rect x="841.7" y="867.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="844.6" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="844.6" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="844.6" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.6" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="845.1" y="851.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="848.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.16%)</title><rect x="845.9" y="867.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.16%)</title><rect x="845.9" y="851.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="847.3" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="850.3" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="847.3" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="850.3" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="847.3" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="850.3" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="847.3" y="787.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="850.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.19%)</title><rect x="848.0" y="883.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.19%)</title><rect x="848.0" y="867.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.19%)</title><rect x="848.0" y="851.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.09%)</title><rect x="848.3" y="835.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.07%)</title><rect x="848.6" y="819.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.6" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="849.1" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.1" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="849.4" y="835.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="852.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.08%)</title><rect x="850.2" y="883.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.05%)</title><rect x="850.5" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="851.2" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="851.3" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="851.3" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.03%)</title><rect x="851.6" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="852.0" y="883.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="852.0" y="867.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="852.6" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="852.6" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.04%)</title><rect x="852.6" y="819.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (189 samples, 2.56%)</title><rect x="853.1" y="899.0" width="30.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.1" y="910.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (189 samples, 2.56%)</title><rect x="853.1" y="883.0" width="30.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.1" y="894.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.07%)</title><rect x="854.0" y="867.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="857.0" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (26 samples, 0.35%)</title><rect x="854.8" y="867.0" width="4.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="857.8" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.08%)</title><rect x="855.6" y="851.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="858.6" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.09%)</title><rect x="856.6" y="851.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="859.6" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.08%)</title><rect x="857.9" y="851.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="860.9" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="858.2" y="835.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="861.2" y="846.0"></text>
</g>
<g>
<title>__recv (149 samples, 2.02%)</title><rect x="859.0" y="867.0" width="23.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="862.0" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 1.75%)</title><rect x="862.2" y="851.0" width="20.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="865.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (129 samples, 1.75%)</title><rect x="862.2" y="835.0" width="20.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="865.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (121 samples, 1.64%)</title><rect x="863.5" y="819.0" width="19.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="866.5" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (119 samples, 1.61%)</title><rect x="863.5" y="803.0" width="19.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.5" y="814.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="863.6" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="866.6" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (111 samples, 1.50%)</title><rect x="863.9" y="787.0" width="17.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="866.9" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (97 samples, 1.31%)</title><rect x="864.1" y="771.0" width="15.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.1" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (95 samples, 1.29%)</title><rect x="864.4" y="755.0" width="15.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="867.4" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.23%)</title><rect x="865.5" y="739.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.5" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="865.5" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="868.5" y="734.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="865.5" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="868.5" y="718.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.20%)</title><rect x="865.9" y="723.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="868.9" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="865.9" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="868.9" y="718.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.04%)</title><rect x="866.3" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="869.3" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.09%)</title><rect x="866.8" y="707.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="869.8" y="718.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.08%)</title><rect x="867.0" y="691.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="870.0" y="702.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="867.9" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="870.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="868.6" y="739.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.6" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (22 samples, 0.30%)</title><rect x="869.5" y="739.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="872.5" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (22 samples, 0.30%)</title><rect x="869.5" y="723.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.5" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.19%)</title><rect x="870.8" y="707.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="873.8" y="718.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.09%)</title><rect x="871.0" y="691.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.0" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="871.8" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.8" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.07%)</title><rect x="872.2" y="691.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="875.2" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.07%)</title><rect x="872.2" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.2" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (34 samples, 0.46%)</title><rect x="873.0" y="739.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="876.0" y="750.0"></text>
</g>
<g>
<title>tcp_send_ack (31 samples, 0.42%)</title><rect x="873.5" y="723.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="876.5" y="734.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (31 samples, 0.42%)</title><rect x="873.5" y="707.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="876.5" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.11%)</title><rect x="873.5" y="691.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="876.5" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.07%)</title><rect x="873.5" y="675.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="876.5" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="873.5" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="876.5" y="670.0"></text>
</g>
<g>
<title>memset (3 samples, 0.04%)</title><rect x="873.8" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="876.8" y="670.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="874.5" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="877.5" y="686.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="874.5" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.5" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (23 samples, 0.31%)</title><rect x="874.8" y="691.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="877.8" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (22 samples, 0.30%)</title><rect x="875.0" y="675.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="878.0" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (22 samples, 0.30%)</title><rect x="875.0" y="659.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="878.0" y="670.0"></text>
</g>
<g>
<title>ip_local_out (22 samples, 0.30%)</title><rect x="875.0" y="643.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="878.0" y="654.0"></text>
</g>
<g>
<title>ip_output (21 samples, 0.28%)</title><rect x="875.1" y="627.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.1" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (21 samples, 0.28%)</title><rect x="875.1" y="611.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="878.1" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (21 samples, 0.28%)</title><rect x="875.1" y="595.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="878.1" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (21 samples, 0.28%)</title><rect x="875.1" y="579.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.1" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (17 samples, 0.23%)</title><rect x="875.1" y="563.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.1" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (17 samples, 0.23%)</title><rect x="875.1" y="547.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="878.1" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (14 samples, 0.19%)</title><rect x="875.6" y="531.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.6" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (13 samples, 0.18%)</title><rect x="875.6" y="515.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.6" y="526.0"></text>
</g>
<g>
<title>net_rx_action (12 samples, 0.16%)</title><rect x="875.8" y="499.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="878.8" y="510.0"></text>
</g>
<g>
<title>process_backlog (12 samples, 0.16%)</title><rect x="875.8" y="483.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="878.8" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 0.16%)</title><rect x="875.8" y="467.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="878.8" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 0.16%)</title><rect x="875.8" y="451.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.8" y="462.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.15%)</title><rect x="875.9" y="435.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="878.9" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (11 samples, 0.15%)</title><rect x="875.9" y="419.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.9" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (11 samples, 0.15%)</title><rect x="875.9" y="403.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="878.9" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (11 samples, 0.15%)</title><rect x="875.9" y="387.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="878.9" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (11 samples, 0.15%)</title><rect x="875.9" y="371.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.9" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 0.14%)</title><rect x="876.1" y="355.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.1" y="366.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="876.1" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.1" y="350.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="876.1" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="879.1" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.09%)</title><rect x="876.6" y="339.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="879.6" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.08%)</title><rect x="876.7" y="323.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="879.7" y="334.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.07%)</title><rect x="876.9" y="307.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="879.9" y="318.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.05%)</title><rect x="877.0" y="291.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.0" y="302.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="877.2" y="275.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="880.2" y="286.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="877.4" y="259.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="880.4" y="270.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="877.4" y="243.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="880.4" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.05%)</title><rect x="877.8" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="880.8" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.05%)</title><rect x="877.8" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="880.8" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.04%)</title><rect x="878.0" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="881.0" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="878.0" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="881.0" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.09%)</title><rect x="878.5" y="739.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="881.5" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.07%)</title><rect x="878.8" y="723.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="881.8" y="734.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="879.1" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="882.1" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.18%)</title><rect x="879.6" y="771.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="882.6" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (9 samples, 0.12%)</title><rect x="880.2" y="755.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="883.2" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.12%)</title><rect x="880.2" y="739.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="883.2" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (8 samples, 0.11%)</title><rect x="880.4" y="723.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="883.4" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (4 samples, 0.05%)</title><rect x="880.9" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="883.9" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.07%)</title><rect x="881.7" y="787.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="884.7" y="798.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="881.7" y="771.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="881.7" y="755.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="884.7" y="766.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="881.7" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="884.7" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="882.8" y="867.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="885.8" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.11%)</title><rect x="883.3" y="915.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.3" y="926.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.11%)</title><rect x="883.3" y="899.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="886.3" y="910.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.11%)</title><rect x="883.3" y="883.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="886.3" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=5906] (1,910 samples, 25.85%)</title><rect x="884.5" y="963.0" width="305.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="887.5" y="974.0">[NIO Selector #3 tid=5906]</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.03%)</title><rect x="884.5" y="947.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="887.5" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="884.5" y="931.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="887.5" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="884.5" y="915.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="887.5" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,908 samples, 25.82%)</title><rect x="884.9" y="947.0" width="304.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.9" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.07%)</title><rect x="885.3" y="931.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.07%)</title><rect x="885.3" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="888.3" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (89 samples, 1.20%)</title><rect x="886.1" y="931.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="886.5" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="886.5" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (85 samples, 1.15%)</title><rect x="886.8" y="915.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.8" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="887.6" y="899.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="890.6" y="910.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.07%)</title><rect x="888.2" y="899.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="891.2" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="888.5" y="883.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="891.5" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="888.7" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="891.7" y="878.0"></text>
</g>
<g>
<title>epoll_wait (71 samples, 0.96%)</title><rect x="889.0" y="899.0" width="11.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="892.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.77%)</title><rect x="891.2" y="883.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="894.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.76%)</title><rect x="891.4" y="867.0" width="8.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="894.4" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (52 samples, 0.70%)</title><rect x="891.7" y="851.0" width="8.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="894.7" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (51 samples, 0.69%)</title><rect x="891.7" y="835.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="894.7" y="846.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="891.9" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="894.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="891.9" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="894.9" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="891.9" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="894.9" y="798.0"></text>
</g>
<g>
<title>ep_poll (47 samples, 0.64%)</title><rect x="892.2" y="819.0" width="7.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.2" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (35 samples, 0.47%)</title><rect x="893.0" y="803.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="896.0" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (31 samples, 0.42%)</title><rect x="893.5" y="787.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="896.5" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="894.1" y="771.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="897.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (22 samples, 0.30%)</title><rect x="894.9" y="771.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.9" y="782.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.24%)</title><rect x="895.6" y="755.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="898.6" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="896.5" y="739.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="899.5" y="750.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.07%)</title><rect x="897.5" y="739.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="900.5" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="898.6" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="901.6" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.05%)</title><rect x="898.9" y="803.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.9" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.05%)</title><rect x="898.9" y="787.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="901.9" y="798.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="898.9" y="771.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="901.9" y="782.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="899.1" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="902.1" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="899.2" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="902.2" y="750.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.03%)</title><rect x="900.0" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="903.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,811 samples, 24.51%)</title><rect x="900.3" y="931.0" width="289.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.3" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="900.8" y="915.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="903.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="900.8" y="899.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="903.8" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="900.8" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="903.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,799 samples, 24.34%)</title><rect x="901.3" y="915.0" width="287.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.3" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,540 samples, 20.84%)</title><rect x="901.8" y="899.0" width="245.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.8" y="910.0">one/nio/http/HttpSession.processH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,467 samples, 19.85%)</title><rect x="904.3" y="883.0" width="234.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.3" y="894.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,466 samples, 19.84%)</title><rect x="904.5" y="867.0" width="234.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.5" y="878.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,442 samples, 19.51%)</title><rect x="904.5" y="851.0" width="230.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.5" y="862.0">RequestHandler1_entity.handleR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (905 samples, 12.25%)</title><rect x="904.5" y="835.0" width="144.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.5" y="846.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (887 samples, 12.00%)</title><rect x="906.3" y="819.0" width="141.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.3" y="830.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (34 samples, 0.46%)</title><rect x="906.3" y="803.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.3" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="906.9" y="787.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="909.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (24 samples, 0.32%)</title><rect x="907.9" y="787.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (9 samples, 0.12%)</title><rect x="908.2" y="771.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="908.8" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.05%)</title><rect x="908.8" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.18%)</title><rect x="909.6" y="771.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.18%)</title><rect x="909.6" y="755.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.16%)</title><rect x="909.8" y="739.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="911.4" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="911.4" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (853 samples, 11.54%)</title><rect x="911.7" y="803.0" width="136.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.7" y="814.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (853 samples, 11.54%)</title><rect x="911.7" y="787.0" width="136.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.7" y="798.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.07%)</title><rect x="911.7" y="771.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="914.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (841 samples, 11.38%)</title><rect x="912.6" y="771.0" width="134.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.6" y="782.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (840 samples, 11.37%)</title><rect x="912.8" y="755.0" width="134.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.8" y="766.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.12%)</title><rect x="915.4" y="739.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="918.4" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.19%)</title><rect x="916.8" y="739.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="919.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="917.1" y="723.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="920.1" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="917.4" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="920.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.11%)</title><rect x="917.8" y="723.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="920.8" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="917.9" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="920.9" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.05%)</title><rect x="918.4" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="921.4" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.08%)</title><rect x="919.0" y="739.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="922.0" y="750.0"></text>
</g>
<g>
<title>send (794 samples, 10.74%)</title><rect x="920.0" y="739.0" width="126.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="923.0" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (767 samples, 10.38%)</title><rect x="924.3" y="723.0" width="122.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="927.3" y="734.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="924.3" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (765 samples, 10.35%)</title><rect x="924.6" y="707.0" width="122.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.6" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (752 samples, 10.18%)</title><rect x="926.4" y="691.0" width="120.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.4" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (748 samples, 10.12%)</title><rect x="926.4" y="675.0" width="119.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="929.4" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (734 samples, 9.93%)</title><rect x="926.9" y="659.0" width="117.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="929.9" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (712 samples, 9.63%)</title><rect x="927.3" y="643.0" width="113.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.3" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (709 samples, 9.59%)</title><rect x="927.8" y="627.0" width="113.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.8" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="928.0" y="611.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="931.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (19 samples, 0.26%)</title><rect x="928.6" y="611.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="931.6" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="931.6" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="934.6" y="622.0"></text>
</g>
<g>
<title>release_sock (37 samples, 0.50%)</title><rect x="932.1" y="611.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.1" y="622.0"></text>
</g>
<g>
<title>__release_sock (33 samples, 0.45%)</title><rect x="932.6" y="595.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="935.6" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="933.4" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="936.4" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (26 samples, 0.35%)</title><rect x="933.7" y="579.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.7" y="590.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="933.9" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.9" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.31%)</title><rect x="934.2" y="563.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="937.2" y="574.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="934.4" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="937.4" y="558.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="934.4" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="937.4" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="934.4" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="937.4" y="526.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="934.4" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="937.4" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="934.4" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.4" y="494.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.16%)</title><rect x="934.7" y="547.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="937.7" y="558.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.11%)</title><rect x="935.3" y="531.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.3" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.08%)</title><rect x="935.6" y="515.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="938.6" y="526.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="935.6" y="499.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="938.6" y="510.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.08%)</title><rect x="935.6" y="483.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.6" y="494.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.04%)</title><rect x="936.6" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="939.6" y="558.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.04%)</title><rect x="936.6" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="939.6" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.04%)</title><rect x="936.6" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="939.6" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.04%)</title><rect x="936.6" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.6" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="936.8" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.8" y="494.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="937.1" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="940.1" y="558.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="937.6" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="940.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.04%)</title><rect x="938.4" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="941.4" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (638 samples, 8.63%)</title><rect x="938.8" y="611.0" width="101.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.8" y="622.0">tcp_sendmsg_..</text>
</g>
<g>
<title>_copy_from_iter_full (14 samples, 0.19%)</title><rect x="941.1" y="595.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.1" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (9 samples, 0.12%)</title><rect x="941.7" y="579.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="944.7" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (67 samples, 0.91%)</title><rect x="943.8" y="595.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.8" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (62 samples, 0.84%)</title><rect x="944.4" y="579.0" width="9.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="947.4" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (29 samples, 0.39%)</title><rect x="945.4" y="563.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (14 samples, 0.19%)</title><rect x="945.5" y="547.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.08%)</title><rect x="946.3" y="531.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.3" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="947.3" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="950.3" y="542.0"></text>
</g>
<g>
<title>memset (13 samples, 0.18%)</title><rect x="947.9" y="547.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.9" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.18%)</title><rect x="950.2" y="563.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="953.2" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.05%)</title><rect x="951.6" y="547.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="954.6" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="952.4" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="955.4" y="574.0"></text>
</g>
<g>
<title>memset (10 samples, 0.14%)</title><rect x="952.7" y="563.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.7" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="954.5" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="957.5" y="606.0"></text>
</g>
<g>
<title>tcp_push (531 samples, 7.19%)</title><rect x="955.0" y="595.0" width="84.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="958.0" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (531 samples, 7.19%)</title><rect x="955.0" y="579.0" width="84.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="958.0" y="590.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (528 samples, 7.14%)</title><rect x="955.4" y="563.0" width="84.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="958.4" y="574.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (448 samples, 6.06%)</title><rect x="956.1" y="547.0" width="71.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.1" y="558.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (434 samples, 5.87%)</title><rect x="957.5" y="531.0" width="69.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="960.5" y="542.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (433 samples, 5.86%)</title><rect x="957.5" y="515.0" width="69.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="960.5" y="526.0">__ip_qu..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="958.3" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="961.3" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (13 samples, 0.18%)</title><rect x="958.8" y="499.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (410 samples, 5.55%)</title><rect x="960.9" y="499.0" width="65.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="963.9" y="510.0">ip_loca..</text>
</g>
<g>
<title>ip_output (410 samples, 5.55%)</title><rect x="960.9" y="483.0" width="65.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.9" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="961.3" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="964.3" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (405 samples, 5.48%)</title><rect x="961.7" y="467.0" width="64.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="964.7" y="478.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="962.3" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="965.3" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (394 samples, 5.33%)</title><rect x="962.8" y="451.0" width="62.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="965.8" y="462.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (391 samples, 5.29%)</title><rect x="962.9" y="435.0" width="62.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="965.9" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (340 samples, 4.60%)</title><rect x="963.9" y="419.0" width="54.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="966.9" y="430.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (337 samples, 4.56%)</title><rect x="964.1" y="403.0" width="53.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="967.1" y="414.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (329 samples, 4.45%)</title><rect x="965.2" y="387.0" width="52.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.2" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (328 samples, 4.44%)</title><rect x="965.2" y="371.0" width="52.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="968.2" y="382.0">__sof..</text>
</g>
<g>
<title>net_rx_action (312 samples, 4.22%)</title><rect x="967.6" y="355.0" width="49.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="970.6" y="366.0">net_r..</text>
</g>
<g>
<title>process_backlog (304 samples, 4.11%)</title><rect x="968.8" y="339.0" width="48.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.8" y="350.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (296 samples, 4.01%)</title><rect x="970.0" y="323.0" width="47.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="973.0" y="334.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (295 samples, 3.99%)</title><rect x="970.1" y="307.0" width="47.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="973.1" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="970.1" y="291.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="973.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv (292 samples, 3.95%)</title><rect x="970.6" y="291.0" width="46.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="973.6" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="970.8" y="275.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="973.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (285 samples, 3.86%)</title><rect x="971.6" y="275.0" width="45.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="974.6" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (285 samples, 3.86%)</title><rect x="971.6" y="259.0" width="45.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="974.6" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (283 samples, 3.83%)</title><rect x="971.7" y="243.0" width="45.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="974.7" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (283 samples, 3.83%)</title><rect x="971.7" y="227.0" width="45.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="974.7" y="238.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="972.5" y="211.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="975.5" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="973.0" y="211.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.0" y="222.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="973.3" y="211.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="976.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (270 samples, 3.65%)</title><rect x="973.8" y="211.0" width="43.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.8" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.14%)</title><rect x="974.6" y="195.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.6" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="976.2" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.2" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.14%)</title><rect x="976.5" y="195.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="979.5" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="976.5" y="179.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="979.5" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="976.8" y="179.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (240 samples, 3.25%)</title><rect x="978.3" y="195.0" width="38.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="981.3" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.07%)</title><rect x="978.7" y="179.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (232 samples, 3.14%)</title><rect x="979.5" y="179.0" width="37.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.5" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (21 samples, 0.28%)</title><rect x="980.2" y="163.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="983.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (21 samples, 0.28%)</title><rect x="980.2" y="147.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="983.2" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (21 samples, 0.28%)</title><rect x="980.2" y="131.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="983.2" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="980.2" y="115.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="983.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (19 samples, 0.26%)</title><rect x="980.5" y="115.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="983.5" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.22%)</title><rect x="980.5" y="99.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="983.5" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.04%)</title><rect x="983.1" y="99.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="983.1" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="986.1" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="983.5" y="163.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="986.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (59 samples, 0.80%)</title><rect x="984.3" y="163.0" width="9.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="987.3" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.07%)</title><rect x="985.9" y="147.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="988.9" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (40 samples, 0.54%)</title><rect x="987.1" y="147.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="990.1" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.34%)</title><rect x="989.1" y="131.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="992.1" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.08%)</title><rect x="989.1" y="115.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="992.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.08%)</title><rect x="989.1" y="99.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="989.4" y="83.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="992.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.24%)</title><rect x="990.1" y="115.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="993.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.24%)</title><rect x="990.1" y="99.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (11 samples, 0.15%)</title><rect x="991.2" y="83.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.2" y="94.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.14%)</title><rect x="991.4" y="67.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="994.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.09%)</title><rect x="991.8" y="51.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="994.8" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (136 samples, 1.84%)</title><rect x="993.8" y="163.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="996.8" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (136 samples, 1.84%)</title><rect x="993.8" y="147.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="996.8" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (135 samples, 1.83%)</title><rect x="993.9" y="131.0" width="21.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.9" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (133 samples, 1.80%)</title><rect x="993.9" y="115.0" width="21.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="996.9" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (131 samples, 1.77%)</title><rect x="993.9" y="99.0" width="20.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="996.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="1014.8" y="99.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1017.8" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="1015.2" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1018.2" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="1015.5" y="163.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1018.5" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.05%)</title><rect x="1016.0" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1019.0" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="1016.0" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1019.0" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1016.3" y="147.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.3" y="158.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1017.9" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1020.9" y="414.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1017.9" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1020.9" y="398.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="1017.9" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1020.9" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1017.9" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1020.9" y="366.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1017.9" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1020.9" y="350.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="1017.9" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1020.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1017.9" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1020.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.03%)</title><rect x="1017.9" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1020.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1017.9" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1017.9" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1020.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1017.9" y="243.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1020.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1017.9" y="227.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1020.9" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="1017.9" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1020.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1017.9" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1020.9" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (41 samples, 0.55%)</title><rect x="1018.2" y="419.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1021.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (41 samples, 0.55%)</title><rect x="1018.2" y="403.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.2" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="1020.3" y="387.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1023.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (20 samples, 0.27%)</title><rect x="1020.9" y="387.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1023.9" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.22%)</title><rect x="1021.4" y="371.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.4" y="382.0"></text>
</g>
<g>
<title>netif_rx (8 samples, 0.11%)</title><rect x="1021.9" y="355.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1024.9" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.09%)</title><rect x="1022.0" y="339.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1025.0" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.09%)</title><rect x="1022.0" y="323.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1025.0" y="334.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="1023.1" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1026.1" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="1023.5" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1026.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="1024.1" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.1" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="1024.4" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1027.4" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="1024.4" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1027.4" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.05%)</title><rect x="1024.7" y="419.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.7" y="430.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1025.1" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1028.1" y="414.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1025.1" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1028.1" y="398.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="1025.1" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1028.1" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1025.1" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.1" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="1025.4" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1028.4" y="446.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="1025.7" y="451.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.7" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="1026.3" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1029.3" y="510.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="1026.8" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.8" y="542.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="1027.0" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.0" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (42 samples, 0.57%)</title><rect x="1027.6" y="547.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.6" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="1034.3" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.3" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1034.6" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.6" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (22 samples, 0.30%)</title><rect x="1035.1" y="547.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1038.1" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (17 samples, 0.23%)</title><rect x="1035.9" y="531.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1038.9" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.23%)</title><rect x="1035.9" y="515.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1038.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.22%)</title><rect x="1036.1" y="499.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1039.1" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.18%)</title><rect x="1036.1" y="483.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1039.1" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.04%)</title><rect x="1038.1" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1041.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="1038.1" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1041.1" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="1038.8" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1041.8" y="558.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="1039.1" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1042.1" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.07%)</title><rect x="1039.7" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1042.7" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.07%)</title><rect x="1039.7" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.7" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="1039.9" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1042.9" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="1040.7" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.7" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (19 samples, 0.26%)</title><rect x="1041.0" y="643.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1044.0" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (18 samples, 0.24%)</title><rect x="1041.2" y="627.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1044.2" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (17 samples, 0.23%)</title><rect x="1041.3" y="611.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.3" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (11 samples, 0.15%)</title><rect x="1042.3" y="595.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1045.3" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="1043.7" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1046.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.15%)</title><rect x="1044.1" y="659.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1047.1" y="670.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.14%)</title><rect x="1044.1" y="643.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.12%)</title><rect x="1044.2" y="627.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1047.2" y="638.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.12%)</title><rect x="1044.2" y="611.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1047.2" y="622.0"></text>
</g>
<g>
<title>fput (3 samples, 0.04%)</title><rect x="1045.8" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1048.8" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="1046.5" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1049.5" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.08%)</title><rect x="1046.9" y="771.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.9" y="782.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="1046.9" y="755.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1049.9" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="1047.3" y="739.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1050.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1047.9" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="1048.0" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="1048.0" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="1048.2" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="1048.2" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1051.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="1048.2" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.2" y="750.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.03%)</title><rect x="1048.7" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 0.22%)</title><rect x="1049.0" y="835.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.16%)</title><rect x="1049.2" y="819.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.07%)</title><rect x="1049.3" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.07%)</title><rect x="1049.3" y="787.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.03%)</title><rect x="1050.1" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="1050.6" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1050.6" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1050.6" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1050.6" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="1051.1" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (521 samples, 7.05%)</title><rect x="1051.6" y="835.0" width="83.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.6" y="846.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="1051.7" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="1051.7" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.7" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1051.7" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1054.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1051.7" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1051.7" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1051.9" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1051.9" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (511 samples, 6.91%)</title><rect x="1052.2" y="819.0" width="81.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.2" y="830.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.07%)</title><rect x="1052.4" y="803.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1052.4" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1052.7" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1052.8" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1052.8" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1052.8" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (5 samples, 0.07%)</title><rect x="1053.2" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.07%)</title><rect x="1053.2" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (500 samples, 6.77%)</title><rect x="1054.0" y="803.0" width="79.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.0" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1054.3" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1054.3" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1054.3" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1054.3" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1054.3" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.3" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (490 samples, 6.63%)</title><rect x="1054.6" y="787.0" width="78.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.6" y="798.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (490 samples, 6.63%)</title><rect x="1054.6" y="771.0" width="78.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.6" y="782.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (462 samples, 6.25%)</title><rect x="1055.7" y="755.0" width="73.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1058.7" y="766.0">Java_org..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (8 samples, 0.11%)</title><rect x="1055.7" y="739.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1058.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="1057.0" y="739.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1060.0" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (7 samples, 0.09%)</title><rect x="1057.3" y="739.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1060.3" y="750.0"></text>
</g>
<g>
<title>cfree (4 samples, 0.05%)</title><rect x="1058.6" y="739.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1061.6" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.08%)</title><rect x="1059.2" y="739.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1062.2" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="1060.2" y="739.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1063.2" y="750.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.03%)</title><rect x="1061.3" y="739.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1064.3" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="1061.6" y="739.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1064.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.04%)</title><rect x="1061.9" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.9" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (410 samples, 5.55%)</title><rect x="1062.4" y="739.0" width="65.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1065.4" y="750.0">rocksdb..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="1063.2" y="723.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1066.2" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="1063.7" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1066.7" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (12 samples, 0.16%)</title><rect x="1064.7" y="723.0" width="1.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1067.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.04%)</title><rect x="1066.1" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1069.1" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="1066.6" y="723.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1069.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="1066.6" y="707.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1069.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.04%)</title><rect x="1067.1" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1070.1" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="1067.8" y="723.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1070.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (313 samples, 4.24%)</title><rect x="1068.5" y="723.0" width="50.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1071.5" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (313 samples, 4.24%)</title><rect x="1068.5" y="707.0" width="50.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1071.5" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (309 samples, 4.18%)</title><rect x="1069.1" y="691.0" width="49.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1072.1" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (307 samples, 4.15%)</title><rect x="1069.3" y="675.0" width="49.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1072.3" y="686.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="1069.8" y="659.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1072.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (5 samples, 0.07%)</title><rect x="1070.4" y="659.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1073.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (5 samples, 0.07%)</title><rect x="1071.2" y="659.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (281 samples, 3.80%)</title><rect x="1072.0" y="659.0" width="44.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.0" y="670.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.08%)</title><rect x="1074.4" y="643.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1077.4" y="654.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.04%)</title><rect x="1075.4" y="643.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1078.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (12 samples, 0.16%)</title><rect x="1075.8" y="643.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1078.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.03%)</title><rect x="1076.3" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (5 samples, 0.07%)</title><rect x="1076.8" y="627.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.03%)</title><rect x="1077.3" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1080.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.03%)</title><rect x="1077.7" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1080.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (10 samples, 0.14%)</title><rect x="1078.1" y="643.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1081.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (5 samples, 0.07%)</title><rect x="1078.1" y="627.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1081.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.05%)</title><rect x="1078.2" y="611.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (4 samples, 0.05%)</title><rect x="1078.9" y="627.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1081.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (225 samples, 3.04%)</title><rect x="1079.8" y="643.0" width="36.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1082.8" y="654.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (5 samples, 0.07%)</title><rect x="1081.1" y="627.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1084.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (210 samples, 2.84%)</title><rect x="1082.2" y="627.0" width="33.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.2" y="638.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (207 samples, 2.80%)</title><rect x="1082.7" y="611.0" width="33.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1085.7" y="622.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (6 samples, 0.08%)</title><rect x="1083.0" y="595.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1086.0" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.03%)</title><rect x="1084.0" y="595.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1087.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (133 samples, 1.80%)</title><rect x="1084.3" y="595.0" width="21.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1087.3" y="606.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (26 samples, 0.35%)</title><rect x="1092.4" y="579.0" width="4.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1095.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="1096.7" y="579.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1099.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (52 samples, 0.70%)</title><rect x="1097.2" y="579.0" width="8.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4923906790385035787.so (5 samples, 0.07%)</title><rect x="1100.4" y="563.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1103.4" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (22 samples, 0.30%)</title><rect x="1101.2" y="563.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1104.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1104.7" y="563.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1107.7" y="574.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.03%)</title><rect x="1105.2" y="563.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1108.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (58 samples, 0.78%)</title><rect x="1105.5" y="595.0" width="9.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1108.5" y="606.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (6 samples, 0.08%)</title><rect x="1114.8" y="595.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.03%)</title><rect x="1116.9" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (2 samples, 0.03%)</title><rect x="1117.2" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1120.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.03%)</title><rect x="1117.5" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.03%)</title><rect x="1118.0" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (57 samples, 0.77%)</title><rect x="1118.6" y="723.0" width="9.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1121.6" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="1118.6" y="707.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.6" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="1119.1" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1122.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.04%)</title><rect x="1119.1" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1122.1" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (43 samples, 0.58%)</title><rect x="1119.6" y="707.0" width="6.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1122.6" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (9 samples, 0.12%)</title><rect x="1120.9" y="691.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.9" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.07%)</title><rect x="1122.3" y="691.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.3" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (21 samples, 0.28%)</title><rect x="1123.1" y="691.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1126.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (20 samples, 0.27%)</title><rect x="1123.3" y="675.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1126.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.11%)</title><rect x="1123.4" y="659.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1126.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="1123.7" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.7" y="654.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.04%)</title><rect x="1124.1" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="1124.7" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.7" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (7 samples, 0.09%)</title><rect x="1125.0" y="659.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.0" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1126.1" y="659.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1129.1" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.09%)</title><rect x="1126.4" y="707.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1129.4" y="718.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (9 samples, 0.12%)</title><rect x="1127.9" y="739.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1129.5" y="755.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1132.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.05%)</title><rect x="1129.5" y="739.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1132.5" y="750.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="1130.3" y="739.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.3" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (10 samples, 0.14%)</title><rect x="1130.6" y="755.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1133.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.05%)</title><rect x="1132.2" y="755.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (6 samples, 0.08%)</title><rect x="1132.8" y="787.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="1133.3" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1133.3" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1133.3" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1133.3" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.put (6 samples, 0.08%)</title><rect x="1133.8" y="819.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.08%)</title><rect x="1134.8" y="851.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.08%)</title><rect x="1134.8" y="835.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.07%)</title><rect x="1134.8" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="1134.9" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.9" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="1134.9" y="787.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1137.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.24%)</title><rect x="1135.7" y="851.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.24%)</title><rect x="1135.7" y="835.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (18 samples, 0.24%)</title><rect x="1135.7" y="819.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.7" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (13 samples, 0.18%)</title><rect x="1136.5" y="803.0" width="2.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 0.34%)</title><rect x="1138.6" y="883.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.16%)</title><rect x="1139.4" y="867.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="1141.3" y="867.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="1141.3" y="851.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1142.1" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1142.1" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1142.1" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (13 samples, 0.18%)</title><rect x="1142.6" y="883.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (13 samples, 0.18%)</title><rect x="1142.6" y="867.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (13 samples, 0.18%)</title><rect x="1142.6" y="851.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.07%)</title><rect x="1143.1" y="835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.05%)</title><rect x="1143.2" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.2" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="1143.9" y="835.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1146.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.04%)</title><rect x="1144.7" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.14%)</title><rect x="1145.1" y="883.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1148.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="1145.8" y="867.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="1145.9" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="1146.4" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="1146.4" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.4" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="1146.4" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="1146.7" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="1146.7" y="867.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1147.4" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1147.4" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1147.4" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (256 samples, 3.46%)</title><rect x="1147.7" y="899.0" width="40.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.7" y="910.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (255 samples, 3.45%)</title><rect x="1147.7" y="883.0" width="40.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.7" y="894.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.11%)</title><rect x="1149.4" y="867.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1152.4" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (29 samples, 0.39%)</title><rect x="1150.7" y="867.0" width="4.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1153.7" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="1151.0" y="851.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1154.0" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.07%)</title><rect x="1151.5" y="851.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.5" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.24%)</title><rect x="1152.5" y="851.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1155.5" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="1153.1" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.1" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.05%)</title><rect x="1153.8" y="835.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.8" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.08%)</title><rect x="1154.4" y="835.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1157.4" y="846.0"></text>
</g>
<g>
<title>__recv (199 samples, 2.69%)</title><rect x="1155.4" y="867.0" width="31.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1158.4" y="878.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (165 samples, 2.23%)</title><rect x="1160.8" y="851.0" width="26.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.8" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (164 samples, 2.22%)</title><rect x="1160.9" y="835.0" width="26.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.9" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (154 samples, 2.08%)</title><rect x="1162.5" y="819.0" width="24.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1165.5" y="830.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (154 samples, 2.08%)</title><rect x="1162.5" y="803.0" width="24.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.5" y="814.0">_..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="1163.2" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1166.2" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (142 samples, 1.92%)</title><rect x="1163.5" y="787.0" width="22.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1166.5" y="798.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1163.5" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1166.5" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (120 samples, 1.62%)</title><rect x="1163.8" y="771.0" width="19.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1166.8" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (119 samples, 1.61%)</title><rect x="1164.0" y="755.0" width="19.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.0" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.30%)</title><rect x="1164.9" y="739.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1167.9" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.05%)</title><rect x="1164.9" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.9" y="734.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1165.3" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1168.3" y="718.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="1165.3" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1168.3" y="702.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.24%)</title><rect x="1165.6" y="723.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.6" y="734.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.11%)</title><rect x="1165.9" y="707.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.9" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.09%)</title><rect x="1167.2" y="707.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1170.2" y="718.0"></text>
</g>
<g>
<title>dst_release (7 samples, 0.09%)</title><rect x="1167.2" y="691.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.2" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.12%)</title><rect x="1168.8" y="739.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1171.8" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1170.2" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1170.2" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1173.2" y="734.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="1170.2" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.2" y="718.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.07%)</title><rect x="1170.5" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.5" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="1170.8" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.8" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (23 samples, 0.31%)</title><rect x="1171.3" y="739.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1174.3" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (23 samples, 0.31%)</title><rect x="1171.3" y="723.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.3" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (17 samples, 0.23%)</title><rect x="1172.3" y="707.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1175.3" y="718.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.07%)</title><rect x="1172.4" y="691.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1175.4" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1172.8" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1175.8" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.15%)</title><rect x="1173.2" y="691.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1176.2" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (10 samples, 0.14%)</title><rect x="1173.4" y="675.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.4" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (45 samples, 0.61%)</title><rect x="1175.0" y="739.0" width="7.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.0" y="750.0"></text>
</g>
<g>
<title>tcp_send_ack (41 samples, 0.55%)</title><rect x="1175.6" y="723.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1178.6" y="734.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (41 samples, 0.55%)</title><rect x="1175.6" y="707.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1178.6" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.05%)</title><rect x="1175.6" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1178.6" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.03%)</title><rect x="1175.6" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1178.6" y="686.0"></text>
</g>
<g>
<title>memset (2 samples, 0.03%)</title><rect x="1175.6" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1178.6" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 0.49%)</title><rect x="1176.3" y="691.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1179.3" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (34 samples, 0.46%)</title><rect x="1176.6" y="675.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1179.6" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 0.46%)</title><rect x="1176.6" y="659.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.6" y="670.0"></text>
</g>
<g>
<title>ip_local_out (33 samples, 0.45%)</title><rect x="1176.7" y="643.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.7" y="654.0"></text>
</g>
<g>
<title>ip_output (32 samples, 0.43%)</title><rect x="1176.9" y="627.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.9" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (32 samples, 0.43%)</title><rect x="1176.9" y="611.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1179.9" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (29 samples, 0.39%)</title><rect x="1177.2" y="595.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1180.2" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (29 samples, 0.39%)</title><rect x="1177.2" y="579.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.2" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 0.30%)</title><rect x="1177.7" y="563.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.7" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (22 samples, 0.30%)</title><rect x="1177.7" y="547.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.7" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (20 samples, 0.27%)</title><rect x="1177.9" y="531.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.9" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (20 samples, 0.27%)</title><rect x="1177.9" y="515.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.9" y="526.0"></text>
</g>
<g>
<title>net_rx_action (20 samples, 0.27%)</title><rect x="1177.9" y="499.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1180.9" y="510.0"></text>
</g>
<g>
<title>process_backlog (19 samples, 0.26%)</title><rect x="1178.0" y="483.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.0" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (19 samples, 0.26%)</title><rect x="1178.0" y="467.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1181.0" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (19 samples, 0.26%)</title><rect x="1178.0" y="451.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.0" y="462.0"></text>
</g>
<g>
<title>ip_rcv (18 samples, 0.24%)</title><rect x="1178.2" y="435.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.2" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (17 samples, 0.23%)</title><rect x="1178.3" y="419.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.3" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (17 samples, 0.23%)</title><rect x="1178.3" y="403.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1181.3" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 0.23%)</title><rect x="1178.3" y="387.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.3" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (17 samples, 0.23%)</title><rect x="1178.3" y="371.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1181.3" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 0.22%)</title><rect x="1178.5" y="355.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.5" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.18%)</title><rect x="1179.0" y="339.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.0" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.18%)</title><rect x="1179.0" y="323.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.0" y="334.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1179.0" y="307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.0" y="318.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.12%)</title><rect x="1179.3" y="307.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.3" y="318.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.11%)</title><rect x="1179.5" y="291.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.5" y="302.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.07%)</title><rect x="1179.9" y="275.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.9" y="286.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.05%)</title><rect x="1180.1" y="259.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.1" y="270.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="1180.1" y="243.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.1" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.04%)</title><rect x="1181.2" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.2" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.04%)</title><rect x="1181.2" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1184.2" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.07%)</title><rect x="1182.2" y="739.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.2" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="1182.5" y="723.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.5" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="1182.5" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.5" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.26%)</title><rect x="1183.0" y="771.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.0" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (18 samples, 0.24%)</title><rect x="1183.1" y="755.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.1" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (18 samples, 0.24%)</title><rect x="1183.1" y="739.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.1" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (12 samples, 0.16%)</title><rect x="1183.9" y="723.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.9" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.08%)</title><rect x="1184.9" y="707.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1187.9" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.08%)</title><rect x="1186.2" y="787.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1189.2" y="798.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="1186.2" y="771.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1189.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="1186.3" y="755.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="1186.3" y="739.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.11%)</title><rect x="1187.1" y="867.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="1188.9" y="915.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.9" y="926.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="1188.9" y="899.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1191.9" y="910.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="1188.9" y="883.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1191.9" y="894.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=5868] (3 samples, 0.04%)</title><rect x="1189.5" y="963.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1192.5" y="974.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1189.7" y="931.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1192.7" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.03%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.03%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1189.7" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="878.0"></text>
</g>
</g>
</svg>
