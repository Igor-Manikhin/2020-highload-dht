<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="293"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="293"> </text>
<g id="frames">
<g>
<title>all (2,650 samples, 100.00%)</title><rect x="10.0" y="259.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="270.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=5903] (714 samples, 26.94%)</title><rect x="10.0" y="243.0" width="317.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="254.0">[NIO Selector #0 tid=5903]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (714 samples, 26.94%)</title><rect x="10.0" y="227.0" width="317.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="238.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.53%)</title><rect x="10.0" y="211.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.53%)</title><rect x="10.0" y="195.0" width="6.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (700 samples, 26.42%)</title><rect x="16.2" y="211.0" width="311.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.2" y="222.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (700 samples, 26.42%)</title><rect x="16.2" y="195.0" width="311.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.2" y="206.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (700 samples, 26.42%)</title><rect x="16.2" y="179.0" width="311.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.2" y="190.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (475 samples, 17.92%)</title><rect x="16.2" y="163.0" width="211.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.2" y="174.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (475 samples, 17.92%)</title><rect x="16.2" y="147.0" width="211.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.2" y="158.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (445 samples, 16.79%)</title><rect x="16.2" y="131.0" width="198.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.2" y="142.0">RequestHandler1_entity.han..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (102 samples, 3.85%)</title><rect x="16.2" y="115.0" width="45.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.2" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (102 samples, 3.85%)</title><rect x="16.2" y="99.0" width="45.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.2" y="110.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (74 samples, 2.79%)</title><rect x="16.2" y="83.0" width="33.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.2" y="94.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (74 samples, 2.79%)</title><rect x="16.2" y="67.0" width="33.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.2" y="78.0">on..</text>
</g>
<g>
<title>byte[] (74 samples, 2.79%)</title><rect x="16.2" y="51.0" width="33.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="19.2" y="62.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 1.06%)</title><rect x="49.2" y="83.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.2" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (28 samples, 1.06%)</title><rect x="49.2" y="67.0" width="12.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="52.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (30 samples, 1.13%)</title><rect x="61.7" y="115.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (30 samples, 1.13%)</title><rect x="61.7" y="99.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.7" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 1.13%)</title><rect x="61.7" y="83.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 1.13%)</title><rect x="61.7" y="67.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.7" y="78.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.60%)</title><rect x="61.7" y="51.0" width="7.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="64.7" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.53%)</title><rect x="68.8" y="51.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.8" y="62.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.53%)</title><rect x="68.8" y="35.0" width="6.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="71.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (313 samples, 11.81%)</title><rect x="75.0" y="115.0" width="139.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.0" y="126.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.60%)</title><rect x="75.0" y="99.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.60%)</title><rect x="75.0" y="83.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.60%)</title><rect x="75.0" y="67.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.60%)</title><rect x="75.0" y="51.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.0" y="62.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.60%)</title><rect x="75.0" y="35.0" width="7.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="78.0" y="46.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 1.21%)</title><rect x="82.1" y="99.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 1.21%)</title><rect x="82.1" y="83.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 1.21%)</title><rect x="82.1" y="67.0" width="14.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="85.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (265 samples, 10.00%)</title><rect x="96.4" y="99.0" width="118.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.4" y="110.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (30 samples, 1.13%)</title><rect x="96.4" y="83.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 1.13%)</title><rect x="96.4" y="67.0" width="13.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="99.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (80 samples, 3.02%)</title><rect x="109.7" y="83.0" width="35.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.7" y="94.0">one..</text>
</g>
<g>
<title>one.nio.http.Response (18 samples, 0.68%)</title><rect x="109.7" y="67.0" width="8.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="112.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (62 samples, 2.34%)</title><rect x="117.8" y="67.0" width="27.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.8" y="78.0">o..</text>
</g>
<g>
<title>byte[] (29 samples, 1.09%)</title><rect x="117.8" y="51.0" width="12.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="120.8" y="62.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.57%)</title><rect x="130.7" y="51.0" width="6.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="133.7" y="62.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.68%)</title><rect x="137.4" y="51.0" width="8.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="140.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (41 samples, 1.55%)</title><rect x="145.4" y="83.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.4" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.87%)</title><rect x="145.4" y="67.0" width="10.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="148.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (18 samples, 0.68%)</title><rect x="155.6" y="67.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.68%)</title><rect x="155.6" y="51.0" width="8.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="158.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (114 samples, 4.30%)</title><rect x="163.6" y="83.0" width="50.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.6" y="94.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 1.40%)</title><rect x="163.6" y="67.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 1.40%)</title><rect x="163.6" y="51.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 1.40%)</title><rect x="163.6" y="35.0" width="16.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="166.6" y="46.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (27 samples, 1.02%)</title><rect x="180.1" y="67.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.1" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (27 samples, 1.02%)</title><rect x="180.1" y="51.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.1" y="62.0"></text>
</g>
<g>
<title>byte[] (27 samples, 1.02%)</title><rect x="180.1" y="35.0" width="12.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="183.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (50 samples, 1.89%)</title><rect x="192.1" y="67.0" width="22.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.1" y="78.0">r..</text>
</g>
<g>
<title>byte[] (24 samples, 0.91%)</title><rect x="192.1" y="51.0" width="10.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="195.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.98%)</title><rect x="202.8" y="51.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.8" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.98%)</title><rect x="202.8" y="35.0" width="11.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="205.8" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (30 samples, 1.13%)</title><rect x="214.4" y="131.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 1.13%)</title><rect x="214.4" y="115.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 1.13%)</title><rect x="214.4" y="99.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.53%)</title><rect x="214.4" y="83.0" width="6.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="217.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.60%)</title><rect x="220.6" y="83.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.6" y="94.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.60%)</title><rect x="220.6" y="67.0" width="7.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="223.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (146 samples, 5.51%)</title><rect x="227.7" y="163.0" width="65.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.7" y="174.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (27 samples, 1.02%)</title><rect x="227.7" y="147.0" width="12.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="230.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (51 samples, 1.92%)</title><rect x="239.8" y="147.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.8" y="158.0">o..</text>
</g>
<g>
<title>java.lang.String[] (51 samples, 1.92%)</title><rect x="239.8" y="131.0" width="22.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="242.8" y="142.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (68 samples, 2.57%)</title><rect x="262.5" y="147.0" width="30.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.5" y="158.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (68 samples, 2.57%)</title><rect x="262.5" y="131.0" width="30.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.5" y="142.0">on..</text>
</g>
<g>
<title>char[] (31 samples, 1.17%)</title><rect x="262.5" y="115.0" width="13.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="265.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.45%)</title><rect x="276.3" y="115.0" width="5.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="279.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.94%)</title><rect x="281.6" y="115.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.94%)</title><rect x="281.6" y="99.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.94%)</title><rect x="281.6" y="83.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.6" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.94%)</title><rect x="281.6" y="67.0" width="11.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="284.6" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (79 samples, 2.98%)</title><rect x="292.8" y="163.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.8" y="174.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (79 samples, 2.98%)</title><rect x="292.8" y="147.0" width="35.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.8" y="158.0">one..</text>
</g>
<g>
<title>char[] (32 samples, 1.21%)</title><rect x="292.8" y="131.0" width="14.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="295.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.79%)</title><rect x="307.0" y="131.0" width="9.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="310.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.98%)</title><rect x="316.4" y="131.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.98%)</title><rect x="316.4" y="115.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26 samples, 0.98%)</title><rect x="316.4" y="99.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="319.4" y="110.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.98%)</title><rect x="316.4" y="83.0" width="11.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="319.4" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=5904] (702 samples, 26.49%)</title><rect x="327.9" y="243.0" width="312.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="330.9" y="254.0">[NIO Selector #1 tid=5904]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (702 samples, 26.49%)</title><rect x="327.9" y="227.0" width="312.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.9" y="238.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 0.64%)</title><rect x="327.9" y="211.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.9" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (17 samples, 0.64%)</title><rect x="327.9" y="195.0" width="7.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="330.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (685 samples, 25.85%)</title><rect x="335.5" y="211.0" width="305.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.5" y="222.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (685 samples, 25.85%)</title><rect x="335.5" y="195.0" width="305.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.5" y="206.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (685 samples, 25.85%)</title><rect x="335.5" y="179.0" width="305.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.5" y="190.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (445 samples, 16.79%)</title><rect x="335.5" y="163.0" width="198.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.5" y="174.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (445 samples, 16.79%)</title><rect x="335.5" y="147.0" width="198.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.5" y="158.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (408 samples, 15.40%)</title><rect x="335.5" y="131.0" width="181.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.5" y="142.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (104 samples, 3.92%)</title><rect x="335.5" y="115.0" width="46.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.5" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (104 samples, 3.92%)</title><rect x="335.5" y="99.0" width="46.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.5" y="110.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (75 samples, 2.83%)</title><rect x="335.5" y="83.0" width="33.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.5" y="94.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (75 samples, 2.83%)</title><rect x="335.5" y="67.0" width="33.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.5" y="78.0">on..</text>
</g>
<g>
<title>byte[] (75 samples, 2.83%)</title><rect x="335.5" y="51.0" width="33.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="338.5" y="62.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 1.09%)</title><rect x="368.9" y="83.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.9" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (29 samples, 1.09%)</title><rect x="368.9" y="67.0" width="12.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="371.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (33 samples, 1.25%)</title><rect x="381.8" y="115.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 1.25%)</title><rect x="381.8" y="99.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.8" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 1.25%)</title><rect x="381.8" y="83.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 1.25%)</title><rect x="381.8" y="67.0" width="14.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.8" y="78.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.53%)</title><rect x="381.8" y="51.0" width="6.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="384.8" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.72%)</title><rect x="388.0" y="51.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.0" y="62.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.72%)</title><rect x="388.0" y="35.0" width="8.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="391.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (271 samples, 10.23%)</title><rect x="396.5" y="115.0" width="120.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.5" y="126.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.26%)</title><rect x="396.5" y="99.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.26%)</title><rect x="396.5" y="83.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.26%)</title><rect x="396.5" y="67.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.26%)</title><rect x="396.5" y="51.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.5" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.26%)</title><rect x="396.5" y="35.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="399.5" y="46.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 1.17%)</title><rect x="399.6" y="99.0" width="13.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 1.17%)</title><rect x="399.6" y="83.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 1.17%)</title><rect x="399.6" y="67.0" width="13.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="402.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (233 samples, 8.79%)</title><rect x="413.4" y="99.0" width="103.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.4" y="110.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 1.36%)</title><rect x="413.4" y="83.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 1.36%)</title><rect x="413.4" y="67.0" width="16.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="416.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (54 samples, 2.04%)</title><rect x="429.5" y="83.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.5" y="94.0">o..</text>
</g>
<g>
<title>one.nio.http.Response (14 samples, 0.53%)</title><rect x="429.5" y="67.0" width="6.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="432.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (40 samples, 1.51%)</title><rect x="435.7" y="67.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.7" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.38%)</title><rect x="435.7" y="51.0" width="4.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="438.7" y="62.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.72%)</title><rect x="440.1" y="51.0" width="8.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="443.1" y="62.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.42%)</title><rect x="448.6" y="51.0" width="4.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="451.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (46 samples, 1.74%)</title><rect x="453.5" y="83.0" width="20.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.5" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.79%)</title><rect x="453.5" y="67.0" width="9.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="456.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.94%)</title><rect x="462.9" y="67.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.94%)</title><rect x="462.9" y="51.0" width="11.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="465.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (97 samples, 3.66%)</title><rect x="474.0" y="83.0" width="43.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.0" y="94.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 1.09%)</title><rect x="474.0" y="67.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.0" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 1.09%)</title><rect x="474.0" y="51.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 1.09%)</title><rect x="474.0" y="35.0" width="12.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="477.0" y="46.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (23 samples, 0.87%)</title><rect x="486.9" y="67.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.9" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (23 samples, 0.87%)</title><rect x="486.9" y="51.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.9" y="62.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.87%)</title><rect x="486.9" y="35.0" width="10.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="489.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (45 samples, 1.70%)</title><rect x="497.1" y="67.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.1" y="78.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.75%)</title><rect x="497.1" y="51.0" width="8.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="500.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.94%)</title><rect x="506.0" y="51.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.94%)</title><rect x="506.0" y="35.0" width="11.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="509.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (37 samples, 1.40%)</title><rect x="517.2" y="131.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 1.40%)</title><rect x="517.2" y="115.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 1.40%)</title><rect x="517.2" y="99.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.64%)</title><rect x="517.2" y="83.0" width="7.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="520.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.75%)</title><rect x="524.7" y="83.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.7" y="94.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.75%)</title><rect x="524.7" y="67.0" width="9.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="527.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (154 samples, 5.81%)</title><rect x="533.7" y="163.0" width="68.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.7" y="174.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (23 samples, 0.87%)</title><rect x="533.7" y="147.0" width="10.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="536.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (55 samples, 2.08%)</title><rect x="543.9" y="147.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.9" y="158.0">o..</text>
</g>
<g>
<title>java.lang.String[] (55 samples, 2.08%)</title><rect x="543.9" y="131.0" width="24.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="546.9" y="142.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 2.87%)</title><rect x="568.4" y="147.0" width="33.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.4" y="158.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 2.87%)</title><rect x="568.4" y="131.0" width="33.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.4" y="142.0">on..</text>
</g>
<g>
<title>char[] (45 samples, 1.70%)</title><rect x="568.4" y="115.0" width="20.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="571.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.42%)</title><rect x="588.4" y="115.0" width="4.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="591.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.75%)</title><rect x="593.3" y="115.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.75%)</title><rect x="593.3" y="99.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.75%)</title><rect x="593.3" y="83.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.3" y="94.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.75%)</title><rect x="593.3" y="67.0" width="8.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="596.3" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 3.25%)</title><rect x="602.2" y="163.0" width="38.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.2" y="174.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 3.25%)</title><rect x="602.2" y="147.0" width="38.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.2" y="158.0">one..</text>
</g>
<g>
<title>char[] (41 samples, 1.55%)</title><rect x="602.2" y="131.0" width="18.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="605.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.68%)</title><rect x="620.5" y="131.0" width="8.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="623.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 1.02%)</title><rect x="628.5" y="131.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 1.02%)</title><rect x="628.5" y="115.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 1.02%)</title><rect x="628.5" y="99.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.5" y="110.0"></text>
</g>
<g>
<title>byte[] (27 samples, 1.02%)</title><rect x="628.5" y="83.0" width="12.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="631.5" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=5905] (602 samples, 22.72%)</title><rect x="640.5" y="243.0" width="268.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="643.5" y="254.0">[NIO Selector #2 tid=5905]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (602 samples, 22.72%)</title><rect x="640.5" y="227.0" width="268.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.5" y="238.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 0.72%)</title><rect x="640.5" y="211.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.5" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (19 samples, 0.72%)</title><rect x="640.5" y="195.0" width="8.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="643.5" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (583 samples, 22.00%)</title><rect x="649.0" y="211.0" width="259.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.0" y="222.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (583 samples, 22.00%)</title><rect x="649.0" y="195.0" width="259.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.0" y="206.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (583 samples, 22.00%)</title><rect x="649.0" y="179.0" width="259.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.0" y="190.0">one/nio/http/HttpSession.processHtt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (384 samples, 14.49%)</title><rect x="649.0" y="163.0" width="171.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.0" y="174.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (384 samples, 14.49%)</title><rect x="649.0" y="147.0" width="171.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.0" y="158.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (361 samples, 13.62%)</title><rect x="649.0" y="131.0" width="160.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.0" y="142.0">RequestHandler1_enti..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (77 samples, 2.91%)</title><rect x="649.0" y="115.0" width="34.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.0" y="126.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (77 samples, 2.91%)</title><rect x="649.0" y="99.0" width="34.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.0" y="110.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (55 samples, 2.08%)</title><rect x="649.0" y="83.0" width="24.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.0" y="94.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (55 samples, 2.08%)</title><rect x="649.0" y="67.0" width="24.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.0" y="78.0">o..</text>
</g>
<g>
<title>byte[] (55 samples, 2.08%)</title><rect x="649.0" y="51.0" width="24.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="652.0" y="62.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 0.83%)</title><rect x="673.5" y="83.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.5" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22 samples, 0.83%)</title><rect x="673.5" y="67.0" width="9.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="676.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (30 samples, 1.13%)</title><rect x="683.3" y="115.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (30 samples, 1.13%)</title><rect x="683.3" y="99.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.3" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 1.13%)</title><rect x="683.3" y="83.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 1.13%)</title><rect x="683.3" y="67.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.3" y="78.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.64%)</title><rect x="683.3" y="51.0" width="7.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="686.3" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.49%)</title><rect x="690.8" y="51.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.8" y="62.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.49%)</title><rect x="690.8" y="35.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="693.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (254 samples, 9.58%)</title><rect x="696.6" y="115.0" width="113.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.6" y="126.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.getBytes (26 samples, 0.98%)</title><rect x="696.6" y="99.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (26 samples, 0.98%)</title><rect x="696.6" y="83.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (26 samples, 0.98%)</title><rect x="696.6" y="67.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.98%)</title><rect x="696.6" y="51.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.6" y="62.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.98%)</title><rect x="696.6" y="35.0" width="11.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="699.6" y="46.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.79%)</title><rect x="708.2" y="99.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.79%)</title><rect x="708.2" y="83.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.79%)</title><rect x="708.2" y="67.0" width="9.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="711.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (207 samples, 7.81%)</title><rect x="717.6" y="99.0" width="92.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.6" y="110.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.87%)</title><rect x="717.6" y="83.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.87%)</title><rect x="717.6" y="67.0" width="10.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="720.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (62 samples, 2.34%)</title><rect x="727.8" y="83.0" width="27.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.8" y="94.0">o..</text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.34%)</title><rect x="727.8" y="67.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="730.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (53 samples, 2.00%)</title><rect x="731.8" y="67.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.8" y="78.0">o..</text>
</g>
<g>
<title>byte[] (23 samples, 0.87%)</title><rect x="731.8" y="51.0" width="10.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="734.8" y="62.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.68%)</title><rect x="742.0" y="51.0" width="8.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="745.0" y="62.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.45%)</title><rect x="750.1" y="51.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="753.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (41 samples, 1.55%)</title><rect x="755.4" y="83.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.4" y="94.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.60%)</title><rect x="755.4" y="67.0" width="7.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="758.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.94%)</title><rect x="762.5" y="67.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.94%)</title><rect x="762.5" y="51.0" width="11.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="765.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (81 samples, 3.06%)</title><rect x="773.7" y="83.0" width="36.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.7" y="94.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 1.09%)</title><rect x="773.7" y="67.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 1.09%)</title><rect x="773.7" y="51.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 1.09%)</title><rect x="773.7" y="35.0" width="12.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="776.7" y="46.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (16 samples, 0.60%)</title><rect x="786.6" y="67.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.6" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (16 samples, 0.60%)</title><rect x="786.6" y="51.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.6" y="62.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.60%)</title><rect x="786.6" y="35.0" width="7.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="789.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (36 samples, 1.36%)</title><rect x="793.7" y="67.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.7" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.53%)</title><rect x="793.7" y="51.0" width="6.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="796.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.83%)</title><rect x="799.9" y="51.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.83%)</title><rect x="799.9" y="35.0" width="9.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="802.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.87%)</title><rect x="809.7" y="131.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.87%)</title><rect x="809.7" y="115.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.87%)</title><rect x="809.7" y="99.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.42%)</title><rect x="809.7" y="83.0" width="4.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="812.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.45%)</title><rect x="814.6" y="83.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.6" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.45%)</title><rect x="814.6" y="67.0" width="5.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="817.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (127 samples, 4.79%)</title><rect x="820.0" y="163.0" width="56.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.0" y="174.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (16 samples, 0.60%)</title><rect x="820.0" y="147.0" width="7.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="823.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (38 samples, 1.43%)</title><rect x="827.1" y="147.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (38 samples, 1.43%)</title><rect x="827.1" y="131.0" width="16.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="830.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 2.75%)</title><rect x="844.0" y="147.0" width="32.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.0" y="158.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 2.75%)</title><rect x="844.0" y="131.0" width="32.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.0" y="142.0">on..</text>
</g>
<g>
<title>char[] (35 samples, 1.32%)</title><rect x="844.0" y="115.0" width="15.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="847.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.49%)</title><rect x="859.6" y="115.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="862.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.94%)</title><rect x="865.4" y="115.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.94%)</title><rect x="865.4" y="99.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.94%)</title><rect x="865.4" y="83.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="868.4" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.94%)</title><rect x="865.4" y="67.0" width="11.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="868.4" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 2.72%)</title><rect x="876.5" y="163.0" width="32.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.5" y="174.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 2.72%)</title><rect x="876.5" y="147.0" width="32.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.5" y="158.0">on..</text>
</g>
<g>
<title>char[] (32 samples, 1.21%)</title><rect x="876.5" y="131.0" width="14.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="879.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.57%)</title><rect x="890.8" y="131.0" width="6.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="893.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.94%)</title><rect x="897.4" y="131.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.94%)</title><rect x="897.4" y="115.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.94%)</title><rect x="897.4" y="99.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.4" y="110.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.94%)</title><rect x="897.4" y="83.0" width="11.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="900.4" y="94.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=5906] (632 samples, 23.85%)</title><rect x="908.6" y="243.0" width="281.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="911.6" y="254.0">[NIO Selector #3 tid=5906]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (632 samples, 23.85%)</title><rect x="908.6" y="227.0" width="281.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="911.6" y="238.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 0.64%)</title><rect x="908.6" y="211.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.6" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (17 samples, 0.64%)</title><rect x="908.6" y="195.0" width="7.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="911.6" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (615 samples, 23.21%)</title><rect x="916.2" y="211.0" width="273.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.2" y="222.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (615 samples, 23.21%)</title><rect x="916.2" y="195.0" width="273.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.2" y="206.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (615 samples, 23.21%)</title><rect x="916.2" y="179.0" width="273.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.2" y="190.0">one/nio/http/HttpSession.processHttpB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (386 samples, 14.57%)</title><rect x="916.2" y="163.0" width="171.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.2" y="174.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (386 samples, 14.57%)</title><rect x="916.2" y="147.0" width="171.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.2" y="158.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (362 samples, 13.66%)</title><rect x="916.2" y="131.0" width="161.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.2" y="142.0">RequestHandler1_entit..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (89 samples, 3.36%)</title><rect x="916.2" y="115.0" width="39.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.2" y="126.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (89 samples, 3.36%)</title><rect x="916.2" y="99.0" width="39.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.2" y="110.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (64 samples, 2.42%)</title><rect x="916.2" y="83.0" width="28.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.2" y="94.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (64 samples, 2.42%)</title><rect x="916.2" y="67.0" width="28.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.2" y="78.0">on..</text>
</g>
<g>
<title>byte[] (64 samples, 2.42%)</title><rect x="916.2" y="51.0" width="28.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="919.2" y="62.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 0.94%)</title><rect x="944.6" y="83.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.6" y="94.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (25 samples, 0.94%)</title><rect x="944.6" y="67.0" width="11.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="947.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 0.79%)</title><rect x="955.8" y="115.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.79%)</title><rect x="955.8" y="99.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.8" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.79%)</title><rect x="955.8" y="83.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.79%)</title><rect x="955.8" y="67.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="958.8" y="78.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.34%)</title><rect x="955.8" y="51.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="958.8" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.45%)</title><rect x="959.8" y="51.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.8" y="62.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.45%)</title><rect x="959.8" y="35.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="962.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.entity (252 samples, 9.51%)</title><rect x="965.1" y="115.0" width="112.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.1" y="126.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.getBytes (21 samples, 0.79%)</title><rect x="965.1" y="99.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (21 samples, 0.79%)</title><rect x="965.1" y="83.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (21 samples, 0.79%)</title><rect x="965.1" y="67.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.79%)</title><rect x="965.1" y="51.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.1" y="62.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.79%)</title><rect x="965.1" y="35.0" width="9.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="968.1" y="46.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.91%)</title><rect x="974.5" y="99.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.91%)</title><rect x="974.5" y="83.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.91%)</title><rect x="974.5" y="67.0" width="10.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="977.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/ServiceImpl.get (207 samples, 7.81%)</title><rect x="985.2" y="99.0" width="92.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.2" y="110.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.79%)</title><rect x="985.2" y="83.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="988.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.79%)</title><rect x="985.2" y="67.0" width="9.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="988.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (59 samples, 2.23%)</title><rect x="994.5" y="83.0" width="26.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.5" y="94.0">o..</text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.42%)</title><rect x="994.5" y="67.0" width="4.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="997.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 1.81%)</title><rect x="999.4" y="67.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.4" y="78.0">o..</text>
</g>
<g>
<title>byte[] (18 samples, 0.68%)</title><rect x="999.4" y="51.0" width="8.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1002.4" y="62.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.49%)</title><rect x="1007.4" y="51.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1010.4" y="62.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.64%)</title><rect x="1013.2" y="51.0" width="7.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1016.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (48 samples, 1.81%)</title><rect x="1020.8" y="83.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.8" y="94.0">r..</text>
</g>
<g>
<title>byte[] (21 samples, 0.79%)</title><rect x="1020.8" y="67.0" width="9.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1023.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (27 samples, 1.02%)</title><rect x="1030.1" y="67.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 1.02%)</title><rect x="1030.1" y="51.0" width="12.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1033.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (79 samples, 2.98%)</title><rect x="1042.2" y="83.0" width="35.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.2" y="94.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.91%)</title><rect x="1042.2" y="67.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.91%)</title><rect x="1042.2" y="51.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.91%)</title><rect x="1042.2" y="35.0" width="10.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1045.2" y="46.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (19 samples, 0.72%)</title><rect x="1052.9" y="67.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.9" y="78.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (19 samples, 0.72%)</title><rect x="1052.9" y="51.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.9" y="62.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.72%)</title><rect x="1052.9" y="35.0" width="8.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1055.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (36 samples, 1.36%)</title><rect x="1061.3" y="67.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.3" y="78.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.60%)</title><rect x="1061.3" y="51.0" width="7.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1064.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (20 samples, 0.75%)</title><rect x="1068.4" y="51.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.75%)</title><rect x="1068.4" y="35.0" width="8.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1071.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (24 samples, 0.91%)</title><rect x="1077.3" y="131.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.91%)</title><rect x="1077.3" y="115.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.91%)</title><rect x="1077.3" y="99.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.26%)</title><rect x="1077.3" y="83.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1080.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.64%)</title><rect x="1080.5" y="83.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.5" y="94.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.64%)</title><rect x="1080.5" y="67.0" width="7.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1083.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (160 samples, 6.04%)</title><rect x="1088.0" y="163.0" width="71.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.0" y="174.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.Request (21 samples, 0.79%)</title><rect x="1088.0" y="147.0" width="9.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1091.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (59 samples, 2.23%)</title><rect x="1097.4" y="147.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.4" y="158.0">o..</text>
</g>
<g>
<title>java.lang.String[] (59 samples, 2.23%)</title><rect x="1097.4" y="131.0" width="26.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1100.4" y="142.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 3.02%)</title><rect x="1123.7" y="147.0" width="35.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.7" y="158.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 3.02%)</title><rect x="1123.7" y="131.0" width="35.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.7" y="142.0">one..</text>
</g>
<g>
<title>char[] (50 samples, 1.89%)</title><rect x="1123.7" y="115.0" width="22.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1126.7" y="126.0">c..</text>
</g>
<g>
<title>java.lang.String (7 samples, 0.26%)</title><rect x="1145.9" y="115.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1148.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.87%)</title><rect x="1149.0" y="115.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.87%)</title><rect x="1149.0" y="99.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23 samples, 0.87%)</title><rect x="1149.0" y="83.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1152.0" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.87%)</title><rect x="1149.0" y="67.0" width="10.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1152.0" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 2.60%)</title><rect x="1159.3" y="163.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.3" y="174.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 2.60%)</title><rect x="1159.3" y="147.0" width="30.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.3" y="158.0">on..</text>
</g>
<g>
<title>char[] (37 samples, 1.40%)</title><rect x="1159.3" y="131.0" width="16.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1162.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.38%)</title><rect x="1175.8" y="131.0" width="4.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1178.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.83%)</title><rect x="1180.2" y="131.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.83%)</title><rect x="1180.2" y="115.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.83%)</title><rect x="1180.2" y="99.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.2" y="110.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.83%)</title><rect x="1180.2" y="83.0" width="9.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1183.2" y="94.0"></text>
</g>
</g>
</svg>
