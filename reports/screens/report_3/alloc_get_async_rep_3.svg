<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="325"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="325"> </text>
<g id="frames">
<g>
<title>all (4,093 samples, 100.00%)</title><rect x="10.0" y="291.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="302.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=4569] (527 samples, 12.88%)</title><rect x="10.0" y="275.0" width="151.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="286.0">[NIO Selector #0 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (527 samples, 12.88%)</title><rect x="10.0" y="259.0" width="151.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="270.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (33 samples, 0.81%)</title><rect x="10.0" y="243.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (33 samples, 0.81%)</title><rect x="10.0" y="227.0" width="9.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (494 samples, 12.07%)</title><rect x="19.5" y="243.0" width="142.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.5" y="254.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (494 samples, 12.07%)</title><rect x="19.5" y="227.0" width="142.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.5" y="238.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (494 samples, 12.07%)</title><rect x="19.5" y="211.0" width="142.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="222.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (174 samples, 4.25%)</title><rect x="19.5" y="195.0" width="50.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.5" y="206.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (174 samples, 4.25%)</title><rect x="19.5" y="179.0" width="50.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.5" y="190.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (124 samples, 3.03%)</title><rect x="19.5" y="163.0" width="35.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.5" y="174.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (45 samples, 1.10%)</title><rect x="19.5" y="147.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (45 samples, 1.10%)</title><rect x="19.5" y="131.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 1.10%)</title><rect x="19.5" y="115.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 1.10%)</title><rect x="19.5" y="99.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.44%)</title><rect x="19.5" y="83.0" width="5.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.66%)</title><rect x="24.7" y="83.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.7" y="94.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.66%)</title><rect x="24.7" y="67.0" width="7.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="27.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (79 samples, 1.93%)</title><rect x="32.5" y="147.0" width="22.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.5" y="158.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.61%)</title><rect x="32.5" y="131.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.61%)</title><rect x="32.5" y="115.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (25 samples, 0.61%)</title><rect x="32.5" y="99.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (25 samples, 0.61%)</title><rect x="32.5" y="83.0" width="7.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="35.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (54 samples, 1.32%)</title><rect x="39.7" y="131.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (53 samples, 1.29%)</title><rect x="39.7" y="115.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (30 samples, 0.73%)</title><rect x="39.7" y="99.0" width="8.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="42.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (23 samples, 0.56%)</title><rect x="48.3" y="99.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (23 samples, 0.56%)</title><rect x="48.3" y="83.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.3" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (23 samples, 0.56%)</title><rect x="48.3" y="67.0" width="6.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="51.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="55.0" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="55.0" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="55.0" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="55.0" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="55.0" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="55.0" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="58.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (50 samples, 1.22%)</title><rect x="55.3" y="163.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (50 samples, 1.22%)</title><rect x="55.3" y="147.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 1.22%)</title><rect x="55.3" y="131.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.56%)</title><rect x="55.3" y="115.0" width="6.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="58.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.66%)</title><rect x="61.9" y="115.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.9" y="126.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.66%)</title><rect x="61.9" y="99.0" width="7.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="64.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (200 samples, 4.89%)</title><rect x="69.7" y="195.0" width="57.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.7" y="206.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (30 samples, 0.73%)</title><rect x="69.7" y="179.0" width="8.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="72.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (67 samples, 1.64%)</title><rect x="78.3" y="179.0" width="19.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (67 samples, 1.64%)</title><rect x="78.3" y="163.0" width="19.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="81.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 2.52%)</title><rect x="97.6" y="179.0" width="29.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.6" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 2.52%)</title><rect x="97.6" y="163.0" width="29.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.6" y="174.0">on..</text>
</g>
<g>
<title>char[] (61 samples, 1.49%)</title><rect x="97.6" y="147.0" width="17.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="100.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.34%)</title><rect x="115.2" y="147.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="118.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.68%)</title><rect x="119.3" y="147.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.68%)</title><rect x="119.3" y="131.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.68%)</title><rect x="119.3" y="115.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.3" y="126.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.68%)</title><rect x="119.3" y="99.0" width="8.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="122.3" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 2.93%)</title><rect x="127.3" y="195.0" width="34.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.3" y="206.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 2.93%)</title><rect x="127.3" y="179.0" width="34.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.3" y="190.0">on..</text>
</g>
<g>
<title>char[] (53 samples, 1.29%)</title><rect x="127.3" y="163.0" width="15.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="130.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.83%)</title><rect x="142.6" y="163.0" width="9.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="145.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.81%)</title><rect x="152.4" y="163.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.81%)</title><rect x="152.4" y="147.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.81%)</title><rect x="152.4" y="131.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.4" y="142.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.81%)</title><rect x="152.4" y="115.0" width="9.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="155.4" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4570] (509 samples, 12.44%)</title><rect x="161.9" y="275.0" width="146.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="164.9" y="286.0">[NIO Selector #1 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (509 samples, 12.44%)</title><rect x="161.9" y="259.0" width="146.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.9" y="270.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (29 samples, 0.71%)</title><rect x="161.9" y="243.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.9" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (29 samples, 0.71%)</title><rect x="161.9" y="227.0" width="8.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="164.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (480 samples, 11.73%)</title><rect x="170.3" y="243.0" width="138.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.3" y="254.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (480 samples, 11.73%)</title><rect x="170.3" y="227.0" width="138.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.3" y="238.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (480 samples, 11.73%)</title><rect x="170.3" y="211.0" width="138.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.3" y="222.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (168 samples, 4.10%)</title><rect x="170.3" y="195.0" width="48.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.3" y="206.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (168 samples, 4.10%)</title><rect x="170.3" y="179.0" width="48.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.3" y="190.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (121 samples, 2.96%)</title><rect x="170.3" y="163.0" width="34.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.3" y="174.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (56 samples, 1.37%)</title><rect x="170.3" y="147.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (56 samples, 1.37%)</title><rect x="170.3" y="131.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 1.37%)</title><rect x="170.3" y="115.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 1.37%)</title><rect x="170.3" y="99.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.66%)</title><rect x="170.3" y="83.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="173.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.71%)</title><rect x="178.1" y="83.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.1" y="94.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.71%)</title><rect x="178.1" y="67.0" width="8.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="181.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (65 samples, 1.59%)</title><rect x="186.4" y="147.0" width="18.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.34%)</title><rect x="186.4" y="131.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.34%)</title><rect x="186.4" y="115.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (14 samples, 0.34%)</title><rect x="186.4" y="99.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (14 samples, 0.34%)</title><rect x="186.4" y="83.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="189.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (51 samples, 1.25%)</title><rect x="190.5" y="131.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (51 samples, 1.25%)</title><rect x="190.5" y="115.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.5" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (28 samples, 0.68%)</title><rect x="190.5" y="99.0" width="8.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="193.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (23 samples, 0.56%)</title><rect x="198.5" y="99.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (23 samples, 0.56%)</title><rect x="198.5" y="83.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (23 samples, 0.56%)</title><rect x="198.5" y="67.0" width="6.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="201.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (47 samples, 1.15%)</title><rect x="205.2" y="163.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 1.15%)</title><rect x="205.2" y="147.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 1.15%)</title><rect x="205.2" y="131.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.39%)</title><rect x="205.2" y="115.0" width="4.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="208.2" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.76%)</title><rect x="209.8" y="115.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.8" y="126.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.76%)</title><rect x="209.8" y="99.0" width="8.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="212.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (192 samples, 4.69%)</title><rect x="218.7" y="195.0" width="55.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.7" y="206.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.68%)</title><rect x="218.7" y="179.0" width="8.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="221.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (58 samples, 1.42%)</title><rect x="226.8" y="179.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (58 samples, 1.42%)</title><rect x="226.8" y="163.0" width="16.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="229.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.59%)</title><rect x="243.5" y="179.0" width="30.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.5" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.59%)</title><rect x="243.5" y="163.0" width="30.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.5" y="174.0">on..</text>
</g>
<g>
<title>char[] (59 samples, 1.44%)</title><rect x="243.5" y="147.0" width="17.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="246.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.46%)</title><rect x="260.5" y="147.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="263.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.68%)</title><rect x="266.0" y="147.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.68%)</title><rect x="266.0" y="131.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.68%)</title><rect x="266.0" y="115.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.0" y="126.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.68%)</title><rect x="266.0" y="99.0" width="8.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="269.0" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 2.93%)</title><rect x="274.1" y="195.0" width="34.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.1" y="206.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 2.93%)</title><rect x="274.1" y="179.0" width="34.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.1" y="190.0">on..</text>
</g>
<g>
<title>char[] (62 samples, 1.51%)</title><rect x="274.1" y="163.0" width="17.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="277.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.49%)</title><rect x="292.0" y="163.0" width="5.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="295.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.93%)</title><rect x="297.7" y="163.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.93%)</title><rect x="297.7" y="147.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.93%)</title><rect x="297.7" y="131.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.7" y="142.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.93%)</title><rect x="297.7" y="115.0" width="11.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="300.7" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4571] (528 samples, 12.90%)</title><rect x="308.7" y="275.0" width="152.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="311.7" y="286.0">[NIO Selector #2 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (528 samples, 12.90%)</title><rect x="308.7" y="259.0" width="152.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.7" y="270.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (39 samples, 0.95%)</title><rect x="308.7" y="243.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.7" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (39 samples, 0.95%)</title><rect x="308.7" y="227.0" width="11.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="311.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (489 samples, 11.95%)</title><rect x="319.9" y="243.0" width="141.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.9" y="254.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (489 samples, 11.95%)</title><rect x="319.9" y="227.0" width="141.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.9" y="238.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (489 samples, 11.95%)</title><rect x="319.9" y="211.0" width="141.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.9" y="222.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (177 samples, 4.32%)</title><rect x="319.9" y="195.0" width="51.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.9" y="206.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (177 samples, 4.32%)</title><rect x="319.9" y="179.0" width="51.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.9" y="190.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (131 samples, 3.20%)</title><rect x="319.9" y="163.0" width="37.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.9" y="174.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (47 samples, 1.15%)</title><rect x="319.9" y="147.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (47 samples, 1.15%)</title><rect x="319.9" y="131.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 1.15%)</title><rect x="319.9" y="115.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 1.15%)</title><rect x="319.9" y="99.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.66%)</title><rect x="319.9" y="83.0" width="7.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="322.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.49%)</title><rect x="327.7" y="83.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.7" y="94.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.49%)</title><rect x="327.7" y="67.0" width="5.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="330.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (84 samples, 2.05%)</title><rect x="333.5" y="147.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.5" y="158.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.76%)</title><rect x="333.5" y="131.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.76%)</title><rect x="333.5" y="115.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (31 samples, 0.76%)</title><rect x="333.5" y="99.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (31 samples, 0.76%)</title><rect x="333.5" y="83.0" width="8.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="336.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (53 samples, 1.29%)</title><rect x="342.4" y="131.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (52 samples, 1.27%)</title><rect x="342.4" y="115.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (26 samples, 0.64%)</title><rect x="342.4" y="99.0" width="7.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="345.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (26 samples, 0.64%)</title><rect x="349.9" y="99.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (26 samples, 0.64%)</title><rect x="349.9" y="83.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.9" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (26 samples, 0.64%)</title><rect x="349.9" y="67.0" width="7.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="352.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="357.4" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="357.4" y="99.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="357.4" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="357.4" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="357.4" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="357.4" y="35.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="360.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (46 samples, 1.12%)</title><rect x="357.7" y="163.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 1.12%)</title><rect x="357.7" y="147.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 1.12%)</title><rect x="357.7" y="131.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.73%)</title><rect x="357.7" y="115.0" width="8.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="360.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.39%)</title><rect x="366.3" y="115.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.3" y="126.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.39%)</title><rect x="366.3" y="99.0" width="4.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="369.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (211 samples, 5.16%)</title><rect x="370.9" y="195.0" width="60.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.9" y="206.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (35 samples, 0.86%)</title><rect x="370.9" y="179.0" width="10.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="373.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (60 samples, 1.47%)</title><rect x="381.0" y="179.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (60 samples, 1.47%)</title><rect x="381.0" y="163.0" width="17.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="384.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (116 samples, 2.83%)</title><rect x="398.3" y="179.0" width="33.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.3" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (116 samples, 2.83%)</title><rect x="398.3" y="163.0" width="33.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.3" y="174.0">on..</text>
</g>
<g>
<title>char[] (59 samples, 1.44%)</title><rect x="398.3" y="147.0" width="17.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="401.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.54%)</title><rect x="415.3" y="147.0" width="6.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="418.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.86%)</title><rect x="421.7" y="147.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.86%)</title><rect x="421.7" y="131.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.86%)</title><rect x="421.7" y="115.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.7" y="126.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.86%)</title><rect x="421.7" y="99.0" width="10.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="424.7" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 2.47%)</title><rect x="431.8" y="195.0" width="29.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="434.8" y="206.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 2.47%)</title><rect x="431.8" y="179.0" width="29.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.8" y="190.0">on..</text>
</g>
<g>
<title>char[] (45 samples, 1.10%)</title><rect x="431.8" y="163.0" width="13.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="434.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.51%)</title><rect x="444.8" y="163.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="447.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.86%)</title><rect x="450.8" y="163.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.86%)</title><rect x="450.8" y="147.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.86%)</title><rect x="450.8" y="131.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.8" y="142.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.86%)</title><rect x="450.8" y="115.0" width="10.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="453.8" y="126.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4572] (510 samples, 12.46%)</title><rect x="460.9" y="275.0" width="147.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="463.9" y="286.0">[NIO Selector #3 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (510 samples, 12.46%)</title><rect x="460.9" y="259.0" width="147.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.9" y="270.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (30 samples, 0.73%)</title><rect x="460.9" y="243.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.9" y="254.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (30 samples, 0.73%)</title><rect x="460.9" y="227.0" width="8.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="463.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (480 samples, 11.73%)</title><rect x="469.5" y="243.0" width="138.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="254.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (480 samples, 11.73%)</title><rect x="469.5" y="227.0" width="138.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.5" y="238.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (480 samples, 11.73%)</title><rect x="469.5" y="211.0" width="138.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.5" y="222.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (158 samples, 3.86%)</title><rect x="469.5" y="195.0" width="45.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.5" y="206.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (158 samples, 3.86%)</title><rect x="469.5" y="179.0" width="45.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.5" y="190.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (104 samples, 2.54%)</title><rect x="469.5" y="163.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.5" y="174.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (45 samples, 1.10%)</title><rect x="469.5" y="147.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (45 samples, 1.10%)</title><rect x="469.5" y="131.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 1.10%)</title><rect x="469.5" y="115.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 1.10%)</title><rect x="469.5" y="99.0" width="13.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.64%)</title><rect x="469.5" y="83.0" width="7.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="472.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.46%)</title><rect x="477.0" y="83.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.0" y="94.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.46%)</title><rect x="477.0" y="67.0" width="5.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="480.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (59 samples, 1.44%)</title><rect x="482.5" y="147.0" width="17.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.49%)</title><rect x="482.5" y="131.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.49%)</title><rect x="482.5" y="115.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.get$Lambda (20 samples, 0.49%)</title><rect x="482.5" y="99.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.manikhin.AsyncServiceImpl$$Lambda$66 (20 samples, 0.49%)</title><rect x="482.5" y="83.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="485.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (39 samples, 0.95%)</title><rect x="488.3" y="131.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (38 samples, 0.93%)</title><rect x="488.3" y="115.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (24 samples, 0.59%)</title><rect x="488.3" y="99.0" width="6.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="491.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (14 samples, 0.34%)</title><rect x="495.2" y="99.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (14 samples, 0.34%)</title><rect x="495.2" y="83.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.2" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (14 samples, 0.34%)</title><rect x="495.2" y="67.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="498.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="499.2" y="115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="499.2" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="499.2" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="499.2" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="499.2" y="51.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="499.2" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="502.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (54 samples, 1.32%)</title><rect x="499.5" y="163.0" width="15.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 1.32%)</title><rect x="499.5" y="147.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 1.32%)</title><rect x="499.5" y="131.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.66%)</title><rect x="499.5" y="115.0" width="7.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="502.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.66%)</title><rect x="507.3" y="115.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.3" y="126.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.66%)</title><rect x="507.3" y="99.0" width="7.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="510.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (205 samples, 5.01%)</title><rect x="515.1" y="195.0" width="59.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.1" y="206.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.93%)</title><rect x="515.1" y="179.0" width="11.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="518.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (56 samples, 1.37%)</title><rect x="526.1" y="179.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (56 samples, 1.37%)</title><rect x="526.1" y="163.0" width="16.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="529.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 2.71%)</title><rect x="542.2" y="179.0" width="32.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.2" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 2.71%)</title><rect x="542.2" y="163.0" width="32.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.2" y="174.0">on..</text>
</g>
<g>
<title>char[] (54 samples, 1.32%)</title><rect x="542.2" y="147.0" width="15.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="545.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.54%)</title><rect x="557.8" y="147.0" width="6.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="560.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.86%)</title><rect x="564.1" y="147.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.86%)</title><rect x="564.1" y="131.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (35 samples, 0.86%)</title><rect x="564.1" y="115.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.1" y="126.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.86%)</title><rect x="564.1" y="99.0" width="10.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="567.1" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 2.86%)</title><rect x="574.2" y="195.0" width="33.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.2" y="206.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 2.86%)</title><rect x="574.2" y="179.0" width="33.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.2" y="190.0">on..</text>
</g>
<g>
<title>char[] (57 samples, 1.39%)</title><rect x="574.2" y="163.0" width="16.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="577.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.64%)</title><rect x="590.6" y="163.0" width="7.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="593.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.83%)</title><rect x="598.1" y="163.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.83%)</title><rect x="598.1" y="147.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.83%)</title><rect x="598.1" y="131.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.1" y="142.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.83%)</title><rect x="598.1" y="115.0" width="9.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="601.1" y="126.0"></text>
</g>
<g>
<title>[async_worker-0 tid=4584] (496 samples, 12.12%)</title><rect x="607.9" y="275.0" width="143.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="610.9" y="286.0">[async_worker-0 ti..</text>
</g>
<g>
<title>java/lang/Thread.run (496 samples, 12.12%)</title><rect x="607.9" y="259.0" width="143.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.9" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (496 samples, 12.12%)</title><rect x="607.9" y="243.0" width="143.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.9" y="254.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (496 samples, 12.12%)</title><rect x="607.9" y="227.0" width="143.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.9" y="238.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (480 samples, 11.73%)</title><rect x="607.9" y="211.0" width="138.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.9" y="222.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (480 samples, 11.73%)</title><rect x="607.9" y="195.0" width="138.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.9" y="206.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (480 samples, 11.73%)</title><rect x="607.9" y="179.0" width="138.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.9" y="190.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (480 samples, 11.73%)</title><rect x="607.9" y="163.0" width="138.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.9" y="174.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (41 samples, 1.00%)</title><rect x="607.9" y="147.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (41 samples, 1.00%)</title><rect x="607.9" y="131.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (41 samples, 1.00%)</title><rect x="607.9" y="115.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 1.00%)</title><rect x="607.9" y="99.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.9" y="110.0"></text>
</g>
<g>
<title>byte[] (41 samples, 1.00%)</title><rect x="607.9" y="83.0" width="11.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="610.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 1.37%)</title><rect x="619.7" y="147.0" width="16.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 1.37%)</title><rect x="619.7" y="131.0" width="16.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 1.37%)</title><rect x="619.7" y="115.0" width="16.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="622.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (383 samples, 9.36%)</title><rect x="635.9" y="147.0" width="110.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.9" y="158.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (132 samples, 3.23%)</title><rect x="635.9" y="131.0" width="38.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.9" y="142.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (132 samples, 3.23%)</title><rect x="635.9" y="115.0" width="38.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.9" y="126.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (93 samples, 2.27%)</title><rect x="635.9" y="99.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.9" y="110.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (93 samples, 2.27%)</title><rect x="635.9" y="83.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.9" y="94.0">o..</text>
</g>
<g>
<title>byte[] (93 samples, 2.27%)</title><rect x="635.9" y="67.0" width="26.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="638.9" y="78.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.95%)</title><rect x="662.7" y="99.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.7" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (39 samples, 0.95%)</title><rect x="662.7" y="83.0" width="11.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="665.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (140 samples, 3.42%)</title><rect x="673.9" y="131.0" width="40.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.9" y="142.0">one..</text>
</g>
<g>
<title>one.nio.http.Response (20 samples, 0.49%)</title><rect x="673.9" y="115.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="676.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (120 samples, 2.93%)</title><rect x="679.7" y="115.0" width="34.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.7" y="126.0">on..</text>
</g>
<g>
<title>byte[] (48 samples, 1.17%)</title><rect x="679.7" y="99.0" width="13.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="682.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (45 samples, 1.10%)</title><rect x="693.6" y="99.0" width="12.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="696.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.66%)</title><rect x="706.5" y="99.0" width="7.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="709.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (36 samples, 0.88%)</title><rect x="714.3" y="131.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.3" y="142.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.88%)</title><rect x="714.3" y="115.0" width="10.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="717.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (75 samples, 1.83%)</title><rect x="724.7" y="131.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.7" y="142.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 1.03%)</title><rect x="724.7" y="115.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.7" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (42 samples, 1.03%)</title><rect x="724.7" y="99.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.7" y="110.0"></text>
</g>
<g>
<title>byte[] (42 samples, 1.03%)</title><rect x="724.7" y="83.0" width="12.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="727.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (33 samples, 0.81%)</title><rect x="736.8" y="115.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.8" y="126.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.81%)</title><rect x="736.8" y="99.0" width="9.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="739.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.39%)</title><rect x="746.3" y="211.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 0.39%)</title><rect x="746.3" y="195.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.37%)</title><rect x="746.3" y="179.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.37%)</title><rect x="746.3" y="163.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.37%)</title><rect x="746.3" y="147.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="749.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="750.6" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="750.6" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="750.6" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="750.6" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="750.6" y="115.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="753.6" y="126.0"></text>
</g>
<g>
<title>[async_worker-1 tid=4585] (510 samples, 12.46%)</title><rect x="750.9" y="275.0" width="147.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="753.9" y="286.0">[async_worker-1 tid..</text>
</g>
<g>
<title>java/lang/Thread.run (510 samples, 12.46%)</title><rect x="750.9" y="259.0" width="147.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.9" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (510 samples, 12.46%)</title><rect x="750.9" y="243.0" width="147.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.9" y="254.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (510 samples, 12.46%)</title><rect x="750.9" y="227.0" width="147.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.9" y="238.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (479 samples, 11.70%)</title><rect x="750.9" y="211.0" width="138.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.9" y="222.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (479 samples, 11.70%)</title><rect x="750.9" y="195.0" width="138.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.9" y="206.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (479 samples, 11.70%)</title><rect x="750.9" y="179.0" width="138.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.9" y="190.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (479 samples, 11.70%)</title><rect x="750.9" y="163.0" width="138.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.9" y="174.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (29 samples, 0.71%)</title><rect x="750.9" y="147.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (29 samples, 0.71%)</title><rect x="750.9" y="131.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (29 samples, 0.71%)</title><rect x="750.9" y="115.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.71%)</title><rect x="750.9" y="99.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.9" y="110.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.71%)</title><rect x="750.9" y="83.0" width="8.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="753.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 1.51%)</title><rect x="759.3" y="147.0" width="17.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 1.51%)</title><rect x="759.3" y="131.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 1.51%)</title><rect x="759.3" y="115.0" width="17.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="762.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (388 samples, 9.48%)</title><rect x="777.2" y="147.0" width="111.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.2" y="158.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (163 samples, 3.98%)</title><rect x="777.2" y="131.0" width="47.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.2" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (163 samples, 3.98%)</title><rect x="777.2" y="115.0" width="47.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.2" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (96 samples, 2.35%)</title><rect x="777.2" y="99.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.2" y="110.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (96 samples, 2.35%)</title><rect x="777.2" y="83.0" width="27.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.2" y="94.0">o..</text>
</g>
<g>
<title>byte[] (96 samples, 2.35%)</title><rect x="777.2" y="67.0" width="27.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="780.2" y="78.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (67 samples, 1.64%)</title><rect x="804.8" y="99.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.8" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (67 samples, 1.64%)</title><rect x="804.8" y="83.0" width="19.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="807.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (124 samples, 3.03%)</title><rect x="824.2" y="131.0" width="35.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.2" y="142.0">one..</text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.54%)</title><rect x="824.2" y="115.0" width="6.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="827.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (102 samples, 2.49%)</title><rect x="830.5" y="115.0" width="29.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.5" y="126.0">on..</text>
</g>
<g>
<title>byte[] (37 samples, 0.90%)</title><rect x="830.5" y="99.0" width="10.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="833.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.86%)</title><rect x="841.2" y="99.0" width="10.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="844.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.73%)</title><rect x="851.3" y="99.0" width="8.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="854.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (26 samples, 0.64%)</title><rect x="859.9" y="131.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.9" y="142.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.64%)</title><rect x="859.9" y="115.0" width="7.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="862.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (75 samples, 1.83%)</title><rect x="867.4" y="131.0" width="21.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.4" y="142.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (44 samples, 1.08%)</title><rect x="867.4" y="115.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.4" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (44 samples, 1.08%)</title><rect x="867.4" y="99.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.4" y="110.0"></text>
</g>
<g>
<title>byte[] (44 samples, 1.08%)</title><rect x="867.4" y="83.0" width="12.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="870.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (31 samples, 0.76%)</title><rect x="880.1" y="115.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.1" y="126.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.76%)</title><rect x="880.1" y="99.0" width="8.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="883.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 0.76%)</title><rect x="889.0" y="211.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (31 samples, 0.76%)</title><rect x="889.0" y="195.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25 samples, 0.61%)</title><rect x="889.0" y="179.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (25 samples, 0.61%)</title><rect x="889.0" y="163.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (25 samples, 0.61%)</title><rect x="889.0" y="147.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="892.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.15%)</title><rect x="896.2" y="179.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.15%)</title><rect x="896.2" y="163.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.15%)</title><rect x="896.2" y="147.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.15%)</title><rect x="896.2" y="131.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.15%)</title><rect x="896.2" y="115.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="899.2" y="126.0"></text>
</g>
<g>
<title>[async_worker-2 tid=4587] (502 samples, 12.26%)</title><rect x="898.0" y="275.0" width="144.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="901.0" y="286.0">[async_worker-2 ti..</text>
</g>
<g>
<title>java/lang/Thread.run (502 samples, 12.26%)</title><rect x="898.0" y="259.0" width="144.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.0" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (502 samples, 12.26%)</title><rect x="898.0" y="243.0" width="144.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.0" y="254.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (502 samples, 12.26%)</title><rect x="898.0" y="227.0" width="144.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.0" y="238.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (475 samples, 11.61%)</title><rect x="898.0" y="211.0" width="136.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.0" y="222.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (475 samples, 11.61%)</title><rect x="898.0" y="195.0" width="136.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.0" y="206.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (475 samples, 11.61%)</title><rect x="898.0" y="179.0" width="136.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.0" y="190.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (475 samples, 11.61%)</title><rect x="898.0" y="163.0" width="136.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.0" y="174.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (33 samples, 0.81%)</title><rect x="898.0" y="147.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (33 samples, 0.81%)</title><rect x="898.0" y="131.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (33 samples, 0.81%)</title><rect x="898.0" y="115.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.81%)</title><rect x="898.0" y="99.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.0" y="110.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.81%)</title><rect x="898.0" y="83.0" width="9.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="901.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 1.29%)</title><rect x="907.5" y="147.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 1.29%)</title><rect x="907.5" y="131.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 1.29%)</title><rect x="907.5" y="115.0" width="15.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="910.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (389 samples, 9.50%)</title><rect x="922.7" y="147.0" width="112.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.7" y="158.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (149 samples, 3.64%)</title><rect x="922.7" y="131.0" width="43.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.7" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (149 samples, 3.64%)</title><rect x="922.7" y="115.0" width="43.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.7" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (101 samples, 2.47%)</title><rect x="922.7" y="99.0" width="29.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.7" y="110.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (101 samples, 2.47%)</title><rect x="922.7" y="83.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.7" y="94.0">on..</text>
</g>
<g>
<title>byte[] (101 samples, 2.47%)</title><rect x="922.7" y="67.0" width="29.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="925.7" y="78.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 1.17%)</title><rect x="951.9" y="99.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.9" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (48 samples, 1.17%)</title><rect x="951.9" y="83.0" width="13.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="954.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (145 samples, 3.54%)</title><rect x="965.7" y="131.0" width="41.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.7" y="142.0">one..</text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.54%)</title><rect x="965.7" y="115.0" width="6.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="968.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (123 samples, 3.01%)</title><rect x="972.0" y="115.0" width="35.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.0" y="126.0">one..</text>
</g>
<g>
<title>byte[] (43 samples, 1.05%)</title><rect x="972.0" y="99.0" width="12.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="975.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (44 samples, 1.08%)</title><rect x="984.4" y="99.0" width="12.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="987.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.88%)</title><rect x="997.1" y="99.0" width="10.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1000.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (34 samples, 0.83%)</title><rect x="1007.5" y="131.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.5" y="142.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.83%)</title><rect x="1007.5" y="115.0" width="9.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1010.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (61 samples, 1.49%)</title><rect x="1017.3" y="131.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.3" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 0.68%)</title><rect x="1017.3" y="115.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.3" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 0.68%)</title><rect x="1017.3" y="99.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.3" y="110.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.68%)</title><rect x="1017.3" y="83.0" width="8.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1020.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (33 samples, 0.81%)</title><rect x="1025.4" y="115.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1028.4" y="126.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.81%)</title><rect x="1025.4" y="99.0" width="9.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1028.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 0.66%)</title><rect x="1034.9" y="211.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (27 samples, 0.66%)</title><rect x="1034.9" y="195.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1037.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25 samples, 0.61%)</title><rect x="1034.9" y="179.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (25 samples, 0.61%)</title><rect x="1034.9" y="163.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (25 samples, 0.61%)</title><rect x="1034.9" y="147.0" width="7.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1037.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.05%)</title><rect x="1042.1" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.05%)</title><rect x="1042.1" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.05%)</title><rect x="1042.1" y="147.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="1042.1" y="131.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.1" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.05%)</title><rect x="1042.1" y="115.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1045.1" y="126.0"></text>
</g>
<g>
<title>[async_worker-3 tid=4586] (511 samples, 12.48%)</title><rect x="1042.7" y="275.0" width="147.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1045.7" y="286.0">[async_worker-3 tid..</text>
</g>
<g>
<title>java/lang/Thread.run (511 samples, 12.48%)</title><rect x="1042.7" y="259.0" width="147.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.7" y="270.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (511 samples, 12.48%)</title><rect x="1042.7" y="243.0" width="147.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.7" y="254.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (511 samples, 12.48%)</title><rect x="1042.7" y="227.0" width="147.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.7" y="238.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (490 samples, 11.97%)</title><rect x="1042.7" y="211.0" width="141.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.7" y="222.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (490 samples, 11.97%)</title><rect x="1042.7" y="195.0" width="141.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.7" y="206.0">java/util/concurre..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (490 samples, 11.97%)</title><rect x="1042.7" y="179.0" width="141.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.7" y="190.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (490 samples, 11.97%)</title><rect x="1042.7" y="163.0" width="141.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="174.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.getBytes (43 samples, 1.05%)</title><rect x="1042.7" y="147.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (43 samples, 1.05%)</title><rect x="1042.7" y="131.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (43 samples, 1.05%)</title><rect x="1042.7" y="115.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 1.05%)</title><rect x="1042.7" y="99.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.7" y="110.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.05%)</title><rect x="1042.7" y="83.0" width="12.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1045.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 1.20%)</title><rect x="1055.1" y="147.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 1.20%)</title><rect x="1055.1" y="131.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.1" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 1.20%)</title><rect x="1055.1" y="115.0" width="14.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1058.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (398 samples, 9.72%)</title><rect x="1069.2" y="147.0" width="114.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1072.2" y="158.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (158 samples, 3.86%)</title><rect x="1069.2" y="131.0" width="45.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.2" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (158 samples, 3.86%)</title><rect x="1069.2" y="115.0" width="45.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.2" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (116 samples, 2.83%)</title><rect x="1069.2" y="99.0" width="33.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.2" y="110.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (116 samples, 2.83%)</title><rect x="1069.2" y="83.0" width="33.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.2" y="94.0">on..</text>
</g>
<g>
<title>byte[] (116 samples, 2.83%)</title><rect x="1069.2" y="67.0" width="33.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1072.2" y="78.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 1.03%)</title><rect x="1102.6" y="99.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.6" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (42 samples, 1.03%)</title><rect x="1102.6" y="83.0" width="12.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1105.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (130 samples, 3.18%)</title><rect x="1114.8" y="131.0" width="37.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1117.8" y="142.0">one..</text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.46%)</title><rect x="1114.8" y="115.0" width="5.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1117.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (111 samples, 2.71%)</title><rect x="1120.2" y="115.0" width="32.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.2" y="126.0">on..</text>
</g>
<g>
<title>byte[] (40 samples, 0.98%)</title><rect x="1120.2" y="99.0" width="11.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1123.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (40 samples, 0.98%)</title><rect x="1131.8" y="99.0" width="11.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1134.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.76%)</title><rect x="1143.3" y="99.0" width="8.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1146.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (40 samples, 0.98%)</title><rect x="1152.2" y="131.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.2" y="142.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.98%)</title><rect x="1152.2" y="115.0" width="11.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1155.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (70 samples, 1.71%)</title><rect x="1163.8" y="131.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (40 samples, 0.98%)</title><rect x="1163.8" y="115.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.8" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (40 samples, 0.98%)</title><rect x="1163.8" y="99.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.8" y="110.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.98%)</title><rect x="1163.8" y="83.0" width="11.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1166.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (30 samples, 0.73%)</title><rect x="1175.3" y="115.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.3" y="126.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.73%)</title><rect x="1175.3" y="99.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1178.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 0.51%)</title><rect x="1183.9" y="211.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (21 samples, 0.51%)</title><rect x="1183.9" y="195.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20 samples, 0.49%)</title><rect x="1183.9" y="179.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (20 samples, 0.49%)</title><rect x="1183.9" y="163.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (20 samples, 0.49%)</title><rect x="1183.9" y="147.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1186.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="1189.7" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="1189.7" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="1189.7" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1189.7" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="1189.7" y="115.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1192.7" y="126.0"></text>
</g>
</g>
</svg>
