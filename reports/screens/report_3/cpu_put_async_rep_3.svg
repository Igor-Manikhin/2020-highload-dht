<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (6,484 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=4225] (16 samples, 0.25%)</title><rect x="10.2" y="979.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.2" y="990.0"></text>
</g>
<g>
<title>start_thread (15 samples, 0.23%)</title><rect x="10.4" y="963.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.4" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 0.23%)</title><rect x="10.4" y="947.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.4" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (15 samples, 0.23%)</title><rect x="10.4" y="931.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.4" y="942.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 0.23%)</title><rect x="10.4" y="915.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.4" y="926.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 0.23%)</title><rect x="10.4" y="899.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.4" y="910.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (15 samples, 0.23%)</title><rect x="10.4" y="883.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="894.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 0.23%)</title><rect x="10.4" y="867.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.4" y="878.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (15 samples, 0.23%)</title><rect x="10.4" y="851.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.4" y="862.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 0.14%)</title><rect x="10.4" y="835.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.4" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 0.12%)</title><rect x="10.5" y="819.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.5" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.05%)</title><rect x="10.9" y="803.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.9" y="814.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="11.6" y="803.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.6" y="814.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.08%)</title><rect x="12.0" y="835.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.0" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.05%)</title><rect x="12.4" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.4" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=4261] (305 samples, 4.70%)</title><rect x="13.5" y="979.0" width="55.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.5" y="990.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (304 samples, 4.69%)</title><rect x="13.6" y="963.0" width="55.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.6" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.03%)</title><rect x="14.0" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.03%)</title><rect x="14.4" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.03%)</title><rect x="14.4" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (81 samples, 1.25%)</title><rect x="14.7" y="947.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="14.9" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="14.9" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (78 samples, 1.20%)</title><rect x="15.3" y="931.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.3" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="16.2" y="915.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="19.2" y="926.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.09%)</title><rect x="16.9" y="915.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="19.9" y="926.0"></text>
</g>
<g>
<title>epoll_wait (62 samples, 0.96%)</title><rect x="18.2" y="915.0" width="11.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="21.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.74%)</title><rect x="20.7" y="899.0" width="8.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="23.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.72%)</title><rect x="20.9" y="883.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="23.9" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (45 samples, 0.69%)</title><rect x="21.3" y="867.0" width="8.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.3" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (45 samples, 0.69%)</title><rect x="21.3" y="851.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="24.3" y="862.0"></text>
</g>
<g>
<title>ep_poll (39 samples, 0.60%)</title><rect x="21.6" y="835.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.6" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (28 samples, 0.43%)</title><rect x="22.2" y="819.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="25.2" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (24 samples, 0.37%)</title><rect x="22.9" y="803.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="25.9" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (19 samples, 0.29%)</title><rect x="23.8" y="787.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.8" y="798.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.23%)</title><rect x="24.6" y="771.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.6" y="782.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.09%)</title><rect x="25.8" y="755.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="28.8" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="26.9" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.08%)</title><rect x="27.8" y="819.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.8" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.08%)</title><rect x="27.8" y="803.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.8" y="814.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="28.0" y="787.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.0" y="798.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.05%)</title><rect x="28.2" y="771.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.2" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="28.4" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.4" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.03%)</title><rect x="28.7" y="835.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.7" y="846.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="29.1" y="835.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (217 samples, 3.35%)</title><rect x="29.5" y="947.0" width="39.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.5" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (211 samples, 3.25%)</title><rect x="30.2" y="931.0" width="38.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.2" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (125 samples, 1.93%)</title><rect x="30.4" y="915.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.4" y="926.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.03%)</title><rect x="32.0" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.0" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="32.4" y="899.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="35.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (62 samples, 0.96%)</title><rect x="32.7" y="899.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (62 samples, 0.96%)</title><rect x="32.7" y="883.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.7" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (59 samples, 0.91%)</title><rect x="32.7" y="867.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.14%)</title><rect x="32.7" y="851.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.14%)</title><rect x="32.7" y="835.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="33.5" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="33.5" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="34.0" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="34.0" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="34.0" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="34.0" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (50 samples, 0.77%)</title><rect x="34.4" y="851.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (49 samples, 0.76%)</title><rect x="34.6" y="835.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (49 samples, 0.76%)</title><rect x="34.6" y="819.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (47 samples, 0.72%)</title><rect x="34.9" y="803.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.08%)</title><rect x="34.9" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.08%)</title><rect x="34.9" y="771.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.08%)</title><rect x="34.9" y="755.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.08%)</title><rect x="34.9" y="739.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.05%)</title><rect x="35.3" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.05%)</title><rect x="35.3" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.05%)</title><rect x="35.3" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.05%)</title><rect x="35.3" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.09%)</title><rect x="35.8" y="787.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.09%)</title><rect x="35.8" y="771.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.09%)</title><rect x="35.8" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="36.4" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="36.4" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="36.4" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (36 samples, 0.56%)</title><rect x="36.9" y="787.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (36 samples, 0.56%)</title><rect x="36.9" y="771.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 0.56%)</title><rect x="36.9" y="755.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.56%)</title><rect x="36.9" y="739.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.37%)</title><rect x="39.1" y="723.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.05%)</title><rect x="39.1" y="707.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="42.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.32%)</title><rect x="39.7" y="707.0" width="3.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="42.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.32%)</title><rect x="39.7" y="691.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="42.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.32%)</title><rect x="39.7" y="675.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="42.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.29%)</title><rect x="39.8" y="659.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.8" y="670.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.29%)</title><rect x="39.8" y="643.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="42.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.29%)</title><rect x="39.8" y="627.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="42.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.29%)</title><rect x="39.8" y="611.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="42.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.29%)</title><rect x="39.8" y="595.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="42.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.29%)</title><rect x="39.8" y="579.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.05%)</title><rect x="43.5" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.05%)</title><rect x="43.5" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="43.5" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26 samples, 0.40%)</title><rect x="44.0" y="899.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="44.8" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="44.8" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="44.8" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="44.8" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.20%)</title><rect x="45.3" y="883.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.20%)</title><rect x="45.3" y="867.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.09%)</title><rect x="47.7" y="883.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.09%)</title><rect x="48.8" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.08%)</title><rect x="48.9" y="883.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.08%)</title><rect x="48.9" y="867.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.28%)</title><rect x="49.9" y="899.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.9" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.06%)</title><rect x="52.4" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (85 samples, 1.31%)</title><rect x="53.1" y="915.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (85 samples, 1.31%)</title><rect x="53.1" y="899.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="53.7" y="883.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="56.7" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.15%)</title><rect x="54.0" y="883.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="57.0" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="54.0" y="867.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="57.0" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.11%)</title><rect x="54.6" y="867.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="57.6" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="54.8" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="57.8" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="55.1" y="851.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="58.1" y="862.0"></text>
</g>
<g>
<title>__recv (70 samples, 1.08%)</title><rect x="55.9" y="883.0" width="12.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="58.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 1.06%)</title><rect x="56.0" y="867.0" width="12.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (69 samples, 1.06%)</title><rect x="56.0" y="851.0" width="12.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (65 samples, 1.00%)</title><rect x="56.8" y="835.0" width="11.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="59.8" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (64 samples, 0.99%)</title><rect x="56.8" y="819.0" width="11.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.8" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (56 samples, 0.86%)</title><rect x="57.0" y="803.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="60.0" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (49 samples, 0.76%)</title><rect x="57.0" y="787.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.0" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (47 samples, 0.72%)</title><rect x="57.3" y="771.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.3" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.22%)</title><rect x="58.8" y="755.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="61.8" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="58.8" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.8" y="750.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.19%)</title><rect x="59.1" y="739.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="62.1" y="750.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.08%)</title><rect x="59.1" y="723.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="62.1" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.06%)</title><rect x="60.0" y="723.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.0" y="734.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.06%)</title><rect x="60.0" y="707.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="63.0" y="718.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.05%)</title><rect x="60.8" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.09%)</title><rect x="61.3" y="755.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.3" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.15%)</title><rect x="63.0" y="755.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="66.0" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.15%)</title><rect x="63.0" y="739.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.0" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.11%)</title><rect x="63.5" y="723.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="66.5" y="734.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="63.5" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.5" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.05%)</title><rect x="64.2" y="707.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="67.2" y="718.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.05%)</title><rect x="64.2" y="691.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.2" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="64.8" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="67.8" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.06%)</title><rect x="65.1" y="755.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="68.1" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="65.5" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.5" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.09%)</title><rect x="65.9" y="787.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="68.9" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="66.1" y="771.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="69.1" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.08%)</title><rect x="66.1" y="755.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="69.1" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.05%)</title><rect x="66.4" y="739.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="69.4" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.11%)</title><rect x="67.1" y="803.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.1" y="814.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.09%)</title><rect x="67.3" y="787.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="70.3" y="798.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="67.3" y="771.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.3" y="782.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="67.3" y="755.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.3" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="68.6" y="931.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="71.6" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4262] (281 samples, 4.33%)</title><rect x="69.0" y="979.0" width="51.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="72.0" y="990.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (281 samples, 4.33%)</title><rect x="69.0" y="963.0" width="51.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.0" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.08%)</title><rect x="69.5" y="947.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.08%)</title><rect x="69.5" y="931.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="70.1" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (69 samples, 1.06%)</title><rect x="70.4" y="947.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (67 samples, 1.03%)</title><rect x="70.8" y="931.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="71.7" y="915.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="74.7" y="926.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.09%)</title><rect x="72.1" y="915.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="75.1" y="926.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="72.6" y="899.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="75.6" y="910.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="72.6" y="883.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="75.6" y="894.0"></text>
</g>
<g>
<title>epoll_wait (54 samples, 0.83%)</title><rect x="73.1" y="915.0" width="9.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="76.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.71%)</title><rect x="74.6" y="899.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="77.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.71%)</title><rect x="74.6" y="883.0" width="8.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="77.6" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (44 samples, 0.68%)</title><rect x="75.0" y="867.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="78.0" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (44 samples, 0.68%)</title><rect x="75.0" y="851.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="78.0" y="862.0"></text>
</g>
<g>
<title>ep_poll (37 samples, 0.57%)</title><rect x="75.5" y="835.0" width="6.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.5" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.35%)</title><rect x="76.8" y="819.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="79.8" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.26%)</title><rect x="77.5" y="803.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.5" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (11 samples, 0.17%)</title><rect x="78.2" y="787.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.2" y="798.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.14%)</title><rect x="78.4" y="771.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.4" y="782.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.06%)</title><rect x="79.2" y="755.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="82.2" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="80.2" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.2" y="798.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="80.6" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.6" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="81.0" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="84.0" y="830.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.05%)</title><rect x="81.3" y="819.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.3" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="81.9" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.9" y="830.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.05%)</title><rect x="82.2" y="835.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (204 samples, 3.15%)</title><rect x="83.0" y="947.0" width="37.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.0" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 3.12%)</title><rect x="83.2" y="931.0" width="36.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.2" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (117 samples, 1.80%)</title><rect x="83.5" y="915.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.5" y="926.0">o..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="85.0" y="899.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="88.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (52 samples, 0.80%)</title><rect x="86.1" y="899.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.1" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (52 samples, 0.80%)</title><rect x="86.1" y="883.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.1" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (42 samples, 0.65%)</title><rect x="86.4" y="867.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.08%)</title><rect x="86.4" y="851.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.08%)</title><rect x="86.4" y="835.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (37 samples, 0.57%)</title><rect x="87.3" y="851.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (36 samples, 0.56%)</title><rect x="87.5" y="835.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.56%)</title><rect x="87.5" y="819.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (33 samples, 0.51%)</title><rect x="87.9" y="803.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.08%)</title><rect x="87.9" y="787.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.08%)</title><rect x="87.9" y="771.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.08%)</title><rect x="87.9" y="755.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.08%)</title><rect x="87.9" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.03%)</title><rect x="88.1" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="88.1" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="88.1" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.03%)</title><rect x="88.4" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.03%)</title><rect x="88.4" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.03%)</title><rect x="88.4" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.03%)</title><rect x="88.4" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.08%)</title><rect x="88.8" y="787.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.08%)</title><rect x="88.8" y="771.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.08%)</title><rect x="88.8" y="755.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="89.2" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="89.2" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="89.2" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 0.35%)</title><rect x="89.7" y="787.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.35%)</title><rect x="89.7" y="771.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.35%)</title><rect x="89.7" y="755.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.35%)</title><rect x="89.7" y="739.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.23%)</title><rect x="91.2" y="723.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.05%)</title><rect x="91.3" y="707.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="94.3" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="91.5" y="691.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="94.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.15%)</title><rect x="91.9" y="707.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="94.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.14%)</title><rect x="92.1" y="691.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="95.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.14%)</title><rect x="92.1" y="675.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.14%)</title><rect x="92.1" y="659.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.1" y="670.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.14%)</title><rect x="92.1" y="643.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="95.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.14%)</title><rect x="92.1" y="627.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="95.1" y="638.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.14%)</title><rect x="92.1" y="611.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="95.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.14%)</title><rect x="92.1" y="595.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="95.1" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.14%)</title><rect x="92.1" y="579.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="95.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.12%)</title><rect x="94.1" y="867.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.12%)</title><rect x="94.1" y="851.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.11%)</title><rect x="94.1" y="835.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 0.19%)</title><rect x="95.5" y="899.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.5" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.08%)</title><rect x="96.1" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.08%)</title><rect x="96.1" y="867.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.06%)</title><rect x="97.0" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.08%)</title><rect x="97.7" y="899.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="98.1" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="98.1" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.52%)</title><rect x="98.6" y="899.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="103.5" y="883.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (83 samples, 1.28%)</title><rect x="104.8" y="915.0" width="15.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (83 samples, 1.28%)</title><rect x="104.8" y="899.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.8" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="106.1" y="883.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="109.1" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.20%)</title><rect x="106.6" y="883.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="109.6" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.11%)</title><rect x="107.7" y="867.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="110.7" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="108.1" y="851.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="111.1" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.05%)</title><rect x="108.5" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="111.5" y="862.0"></text>
</g>
<g>
<title>__recv (60 samples, 0.93%)</title><rect x="109.0" y="883.0" width="10.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="112.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.89%)</title><rect x="109.4" y="867.0" width="10.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.86%)</title><rect x="109.7" y="851.0" width="10.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (54 samples, 0.83%)</title><rect x="110.1" y="835.0" width="9.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="113.1" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (53 samples, 0.82%)</title><rect x="110.1" y="819.0" width="9.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="113.1" y="830.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="110.6" y="803.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.6" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (43 samples, 0.66%)</title><rect x="111.0" y="803.0" width="7.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="114.0" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="111.2" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.2" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (33 samples, 0.51%)</title><rect x="111.5" y="787.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="114.5" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 0.48%)</title><rect x="111.9" y="771.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="114.9" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.17%)</title><rect x="113.0" y="755.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="116.0" y="766.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.15%)</title><rect x="113.2" y="739.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.2" y="750.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="113.2" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="116.2" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="113.6" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.6" y="734.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="113.6" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="116.6" y="718.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.09%)</title><rect x="113.9" y="723.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="116.9" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="115.0" y="755.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.0" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.11%)</title><rect x="115.9" y="755.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="118.9" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.11%)</title><rect x="115.9" y="739.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.9" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="117.2" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="120.2" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.11%)</title><rect x="117.6" y="787.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="120.6" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.11%)</title><rect x="117.6" y="771.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="120.6" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.09%)</title><rect x="117.7" y="755.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="120.7" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.03%)</title><rect x="118.5" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="121.5" y="750.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="118.5" y="723.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="121.5" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="118.8" y="803.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.8" y="814.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.08%)</title><rect x="118.8" y="787.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="121.8" y="798.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.08%)</title><rect x="118.8" y="771.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="121.8" y="782.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.08%)</title><rect x="118.8" y="755.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.8" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4263] (289 samples, 4.46%)</title><rect x="120.1" y="979.0" width="52.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="123.1" y="990.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (289 samples, 4.46%)</title><rect x="120.1" y="963.0" width="52.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.1" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="120.5" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="120.5" y="931.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (2 samples, 0.03%)</title><rect x="121.0" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (66 samples, 1.02%)</title><rect x="121.4" y="947.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (65 samples, 1.00%)</title><rect x="121.6" y="931.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.6" y="942.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.15%)</title><rect x="123.9" y="915.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="126.9" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="125.4" y="899.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="128.4" y="910.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="125.4" y="883.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="128.4" y="894.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 0.65%)</title><rect x="125.7" y="915.0" width="7.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="128.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.43%)</title><rect x="128.3" y="899.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="131.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.43%)</title><rect x="128.3" y="883.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="131.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (28 samples, 0.43%)</title><rect x="128.3" y="867.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="131.3" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 0.42%)</title><rect x="128.3" y="851.0" width="4.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="131.3" y="862.0"></text>
</g>
<g>
<title>ep_poll (25 samples, 0.39%)</title><rect x="128.5" y="835.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.5" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (22 samples, 0.34%)</title><rect x="128.7" y="819.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="131.7" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.22%)</title><rect x="129.9" y="803.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="132.9" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (9 samples, 0.14%)</title><rect x="130.8" y="787.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="133.8" y="798.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.11%)</title><rect x="131.2" y="771.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="134.2" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="131.9" y="755.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="134.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="132.7" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="135.7" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="132.7" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="135.7" y="814.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="132.7" y="787.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.7" y="798.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="132.7" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="135.7" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="132.7" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="135.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (216 samples, 3.33%)</title><rect x="133.4" y="947.0" width="39.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.4" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (212 samples, 3.27%)</title><rect x="133.9" y="931.0" width="38.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.9" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (113 samples, 1.74%)</title><rect x="134.1" y="915.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (45 samples, 0.69%)</title><rect x="135.6" y="899.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (45 samples, 0.69%)</title><rect x="135.6" y="883.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.6" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (39 samples, 0.60%)</title><rect x="135.8" y="867.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.12%)</title><rect x="135.8" y="851.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.12%)</title><rect x="135.8" y="835.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="136.1" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="136.1" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="136.5" y="819.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="136.5" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="136.7" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (31 samples, 0.48%)</title><rect x="137.2" y="851.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (31 samples, 0.48%)</title><rect x="137.2" y="835.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (31 samples, 0.48%)</title><rect x="137.2" y="819.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (29 samples, 0.45%)</title><rect x="137.6" y="803.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (28 samples, 0.43%)</title><rect x="137.8" y="787.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (28 samples, 0.43%)</title><rect x="137.8" y="771.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (28 samples, 0.43%)</title><rect x="137.8" y="755.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 0.43%)</title><rect x="137.8" y="739.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 0.39%)</title><rect x="138.3" y="723.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.08%)</title><rect x="138.3" y="707.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="141.3" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="138.7" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="141.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.31%)</title><rect x="139.2" y="707.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="142.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.29%)</title><rect x="139.4" y="691.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="142.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.29%)</title><rect x="139.4" y="675.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.29%)</title><rect x="139.4" y="659.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="142.4" y="670.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.29%)</title><rect x="139.4" y="643.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.29%)</title><rect x="139.4" y="627.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.26%)</title><rect x="139.8" y="611.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="142.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.25%)</title><rect x="139.9" y="595.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="142.9" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.25%)</title><rect x="139.9" y="579.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.08%)</title><rect x="142.9" y="867.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.9" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.08%)</title><rect x="142.9" y="851.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.05%)</title><rect x="142.9" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="143.4" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="143.4" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="143.4" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26 samples, 0.40%)</title><rect x="143.8" y="899.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.06%)</title><rect x="144.7" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="144.7" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="144.7" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.06%)</title><rect x="144.7" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.19%)</title><rect x="145.4" y="883.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.17%)</title><rect x="145.6" y="867.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.06%)</title><rect x="147.6" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.09%)</title><rect x="148.5" y="899.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="148.9" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="148.9" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.43%)</title><rect x="149.6" y="899.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="153.4" y="883.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (98 samples, 1.51%)</title><rect x="154.7" y="915.0" width="17.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (96 samples, 1.48%)</title><rect x="155.0" y="899.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.0" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.06%)</title><rect x="155.6" y="883.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="158.6" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.25%)</title><rect x="156.3" y="883.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="159.3" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="156.5" y="867.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="159.5" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="157.0" y="867.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="160.0" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.12%)</title><rect x="157.6" y="867.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="160.6" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.08%)</title><rect x="158.1" y="851.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="161.1" y="862.0"></text>
</g>
<g>
<title>__recv (71 samples, 1.10%)</title><rect x="159.2" y="883.0" width="12.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="162.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (63 samples, 0.97%)</title><rect x="160.7" y="867.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 0.96%)</title><rect x="160.9" y="851.0" width="11.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="163.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (56 samples, 0.86%)</title><rect x="162.0" y="835.0" width="10.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="165.0" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (55 samples, 0.85%)</title><rect x="162.0" y="819.0" width="10.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="165.0" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (48 samples, 0.74%)</title><rect x="162.7" y="803.0" width="8.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="165.7" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (39 samples, 0.60%)</title><rect x="162.9" y="787.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.9" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (39 samples, 0.60%)</title><rect x="162.9" y="771.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="165.9" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.17%)</title><rect x="164.5" y="755.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="167.5" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="164.5" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.5" y="750.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.14%)</title><rect x="164.9" y="739.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="167.9" y="750.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.06%)</title><rect x="164.9" y="723.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="167.9" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.06%)</title><rect x="165.6" y="723.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="168.6" y="734.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.06%)</title><rect x="165.6" y="707.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="168.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="166.7" y="755.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="169.7" y="766.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="167.6" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="170.6" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.08%)</title><rect x="168.0" y="755.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="171.0" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.08%)</title><rect x="168.0" y="739.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.0" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.05%)</title><rect x="168.3" y="723.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="171.3" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.03%)</title><rect x="168.5" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="171.5" y="718.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.03%)</title><rect x="168.5" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="171.5" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.06%)</title><rect x="169.1" y="755.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="172.1" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="169.4" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="172.4" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.12%)</title><rect x="170.0" y="787.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="173.0" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="170.5" y="771.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="173.5" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.08%)</title><rect x="170.5" y="755.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="173.5" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.05%)</title><rect x="170.9" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="173.9" y="750.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="171.1" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.1" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="171.4" y="803.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="174.4" y="814.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="171.4" y="787.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.4" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="171.4" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="174.4" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="171.4" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="174.4" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="172.1" y="883.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="175.1" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4264] (315 samples, 4.86%)</title><rect x="172.7" y="979.0" width="57.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="175.7" y="990.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (315 samples, 4.86%)</title><rect x="172.7" y="963.0" width="57.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.7" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.08%)</title><rect x="173.4" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.08%)</title><rect x="173.4" y="931.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (83 samples, 1.28%)</title><rect x="174.3" y="947.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (80 samples, 1.23%)</title><rect x="174.7" y="931.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="176.5" y="915.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="179.5" y="926.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.12%)</title><rect x="176.9" y="915.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="179.9" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="178.0" y="899.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="181.0" y="910.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="178.0" y="883.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="181.0" y="894.0"></text>
</g>
<g>
<title>epoll_wait (60 samples, 0.93%)</title><rect x="178.3" y="915.0" width="11.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="181.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.76%)</title><rect x="180.3" y="899.0" width="9.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="183.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 0.76%)</title><rect x="180.3" y="883.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (47 samples, 0.72%)</title><rect x="180.7" y="867.0" width="8.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="183.7" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (46 samples, 0.71%)</title><rect x="180.7" y="851.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="183.7" y="862.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="180.7" y="835.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.7" y="846.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="180.7" y="819.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="183.7" y="830.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="180.7" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="183.7" y="814.0"></text>
</g>
<g>
<title>ep_poll (39 samples, 0.60%)</title><rect x="181.2" y="835.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="184.2" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (29 samples, 0.45%)</title><rect x="181.8" y="819.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.8" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.35%)</title><rect x="182.7" y="803.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="185.7" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (19 samples, 0.29%)</title><rect x="183.4" y="787.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="186.4" y="798.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.23%)</title><rect x="184.2" y="771.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.2" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="184.5" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.5" y="766.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.11%)</title><rect x="184.9" y="755.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="187.9" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="186.2" y="755.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.2" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.05%)</title><rect x="187.1" y="819.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="190.1" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.05%)</title><rect x="187.6" y="819.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="190.6" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.05%)</title><rect x="187.6" y="803.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.6" y="814.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="187.8" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="190.8" y="798.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="187.8" y="771.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="190.8" y="782.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.06%)</title><rect x="188.3" y="835.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (223 samples, 3.44%)</title><rect x="189.4" y="947.0" width="40.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.4" y="958.0">one..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="190.0" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="193.0" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (216 samples, 3.33%)</title><rect x="190.3" y="931.0" width="39.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.3" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (127 samples, 1.96%)</title><rect x="190.7" y="915.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.7" y="926.0">o..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="191.4" y="899.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="194.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (68 samples, 1.05%)</title><rect x="192.0" y="899.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (68 samples, 1.05%)</title><rect x="192.0" y="883.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.0" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (60 samples, 0.93%)</title><rect x="192.2" y="867.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.19%)</title><rect x="192.2" y="851.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.19%)</title><rect x="192.2" y="835.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="192.7" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="192.7" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="192.7" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.11%)</title><rect x="193.1" y="819.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="193.6" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="193.6" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.06%)</title><rect x="193.6" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (48 samples, 0.74%)</title><rect x="194.4" y="851.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (48 samples, 0.74%)</title><rect x="194.4" y="835.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.74%)</title><rect x="194.4" y="819.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (41 samples, 0.63%)</title><rect x="195.4" y="803.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.06%)</title><rect x="195.6" y="787.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.06%)</title><rect x="195.6" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.06%)</title><rect x="195.6" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="195.6" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="195.6" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="195.6" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.03%)</title><rect x="196.0" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (36 samples, 0.56%)</title><rect x="196.4" y="787.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (36 samples, 0.56%)</title><rect x="196.4" y="771.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 0.56%)</title><rect x="196.4" y="755.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.56%)</title><rect x="196.4" y="739.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.42%)</title><rect x="198.0" y="723.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.0" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.08%)</title><rect x="198.2" y="707.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="201.2" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.32%)</title><rect x="199.1" y="707.0" width="3.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="202.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.28%)</title><rect x="199.6" y="691.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.28%)</title><rect x="199.6" y="675.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="202.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.26%)</title><rect x="199.8" y="659.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="202.8" y="670.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.26%)</title><rect x="199.8" y="643.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="202.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.26%)</title><rect x="199.8" y="627.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.26%)</title><rect x="199.8" y="611.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="202.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.25%)</title><rect x="200.0" y="595.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="203.0" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.23%)</title><rect x="200.0" y="579.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.11%)</title><rect x="203.1" y="867.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.11%)</title><rect x="203.1" y="851.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.11%)</title><rect x="203.1" y="835.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (20 samples, 0.31%)</title><rect x="204.4" y="899.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.08%)</title><rect x="205.3" y="883.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="205.5" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="205.5" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.06%)</title><rect x="205.5" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.08%)</title><rect x="206.2" y="883.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.06%)</title><rect x="206.4" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.08%)</title><rect x="207.1" y="883.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="208.0" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="208.4" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="208.4" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="211.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.43%)</title><rect x="208.7" y="899.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="212.6" y="883.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (87 samples, 1.34%)</title><rect x="213.8" y="915.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (86 samples, 1.33%)</title><rect x="214.0" y="899.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.0" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="214.6" y="883.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="217.6" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.12%)</title><rect x="214.9" y="883.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="217.9" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.06%)</title><rect x="214.9" y="867.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="217.9" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.05%)</title><rect x="215.8" y="867.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="218.8" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="215.8" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="218.8" y="862.0"></text>
</g>
<g>
<title>__recv (73 samples, 1.13%)</title><rect x="216.4" y="883.0" width="13.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="219.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 1.11%)</title><rect x="216.6" y="867.0" width="13.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="219.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 1.10%)</title><rect x="216.7" y="851.0" width="13.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (65 samples, 1.00%)</title><rect x="217.8" y="835.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="220.8" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (62 samples, 0.96%)</title><rect x="217.8" y="819.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.8" y="830.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="218.0" y="803.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="221.0" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (53 samples, 0.82%)</title><rect x="218.4" y="803.0" width="9.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="221.4" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (45 samples, 0.69%)</title><rect x="218.4" y="787.0" width="8.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="221.4" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (45 samples, 0.69%)</title><rect x="218.4" y="771.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.4" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.14%)</title><rect x="218.9" y="755.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="221.9" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="218.9" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="221.9" y="750.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.11%)</title><rect x="219.3" y="739.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="222.3" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="219.5" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.5" y="734.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.05%)</title><rect x="219.5" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="222.5" y="718.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.05%)</title><rect x="220.0" y="723.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="223.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="220.7" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.7" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="221.1" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="224.1" y="766.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="221.5" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.5" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (16 samples, 0.25%)</title><rect x="222.0" y="755.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.0" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.23%)</title><rect x="222.2" y="739.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="225.2" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (10 samples, 0.15%)</title><rect x="223.1" y="723.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.1" y="734.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="223.1" y="707.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="226.1" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="223.5" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.5" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.06%)</title><rect x="223.8" y="707.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.8" y="718.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.05%)</title><rect x="224.0" y="691.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="227.0" y="702.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="224.6" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="227.6" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.06%)</title><rect x="224.9" y="755.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.9" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.08%)</title><rect x="225.7" y="755.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="228.7" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="226.0" y="739.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="229.0" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.11%)</title><rect x="226.6" y="787.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="229.6" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="226.9" y="771.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="229.9" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.08%)</title><rect x="226.9" y="755.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="229.9" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (4 samples, 0.06%)</title><rect x="227.1" y="739.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="230.1" y="750.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.05%)</title><rect x="227.3" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="230.3" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.09%)</title><rect x="228.0" y="803.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="231.0" y="814.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="228.0" y="787.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="231.0" y="798.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="228.0" y="771.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.0" y="782.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="228.0" y="755.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="228.7" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.7" y="798.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="229.1" y="819.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="232.1" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="229.7" y="931.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="232.7" y="942.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="229.7" y="915.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="232.7" y="926.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="229.7" y="899.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="232.7" y="910.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=4229] (3 samples, 0.05%)</title><rect x="230.0" y="979.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="233.0" y="990.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="230.2" y="963.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="233.2" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="230.2" y="947.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="233.2" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="230.2" y="931.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="233.2" y="942.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.03%)</title><rect x="230.2" y="915.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="233.2" y="926.0"></text>
</g>
<g>
<title>[async_worker-0 tid=4304] (1,317 samples, 20.31%)</title><rect x="230.6" y="979.0" width="239.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="233.6" y="990.0">[async_worker-0 tid=4304]</text>
</g>
<g>
<title>java/lang/Thread.run (1,317 samples, 20.31%)</title><rect x="230.6" y="963.0" width="239.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.6" y="974.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,317 samples, 20.31%)</title><rect x="230.6" y="947.0" width="239.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.6" y="958.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,317 samples, 20.31%)</title><rect x="230.6" y="931.0" width="239.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.6" y="942.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.05%)</title><rect x="230.9" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,214 samples, 18.72%)</title><rect x="231.7" y="915.0" width="220.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.7" y="926.0">java/util/concurrent/FutureTa..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1,211 samples, 18.68%)</title><rect x="232.0" y="899.0" width="220.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.0" y="910.0">java/util/concurrent/Executor..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/845367694.run (1,211 samples, 18.68%)</title><rect x="232.0" y="883.0" width="220.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.0" y="894.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (1,211 samples, 18.68%)</title><rect x="232.0" y="867.0" width="220.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.0" y="878.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (1,210 samples, 18.66%)</title><rect x="232.2" y="851.0" width="220.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.2" y="862.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="232.9" y="835.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="232.9" y="819.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.9" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="232.9" y="803.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="232.9" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="232.9" y="771.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="232.9" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="232.9" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (401 samples, 6.18%)</title><rect x="233.8" y="835.0" width="73.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.8" y="846.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.12%)</title><rect x="235.1" y="819.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.12%)</title><rect x="235.1" y="803.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.12%)</title><rect x="235.1" y="787.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.1" y="798.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="235.7" y="771.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="238.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="236.0" y="771.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="239.0" y="782.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="236.2" y="755.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="239.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="236.2" y="739.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="239.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (382 samples, 5.89%)</title><rect x="236.6" y="819.0" width="69.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.6" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.05%)</title><rect x="236.6" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.26%)</title><rect x="237.1" y="803.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.05%)</title><rect x="239.7" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.05%)</title><rect x="239.7" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.05%)</title><rect x="239.7" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.05%)</title><rect x="239.7" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.05%)</title><rect x="239.7" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (362 samples, 5.58%)</title><rect x="240.2" y="803.0" width="65.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.2" y="814.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (362 samples, 5.58%)</title><rect x="240.2" y="787.0" width="65.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.2" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (361 samples, 5.57%)</title><rect x="240.4" y="771.0" width="65.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.4" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (359 samples, 5.54%)</title><rect x="240.8" y="755.0" width="65.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.8" y="766.0">one/nio..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="241.3" y="739.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="244.3" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.19%)</title><rect x="241.9" y="739.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="244.9" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="242.6" y="723.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="245.6" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.06%)</title><rect x="243.3" y="723.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="246.3" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="243.5" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="246.5" y="718.0"></text>
</g>
<g>
<title>send (341 samples, 5.26%)</title><rect x="244.0" y="739.0" width="62.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="247.0" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (336 samples, 5.18%)</title><rect x="244.9" y="723.0" width="61.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.9" y="734.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (335 samples, 5.17%)</title><rect x="245.1" y="707.0" width="61.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="248.1" y="718.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (332 samples, 5.12%)</title><rect x="245.5" y="691.0" width="60.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="248.5" y="702.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (332 samples, 5.12%)</title><rect x="245.5" y="675.0" width="60.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="248.5" y="686.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (324 samples, 5.00%)</title><rect x="245.9" y="659.0" width="58.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="248.9" y="670.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (311 samples, 4.80%)</title><rect x="246.0" y="643.0" width="56.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="249.0" y="654.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (310 samples, 4.78%)</title><rect x="246.2" y="627.0" width="56.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="249.2" y="638.0">tcp_se..</text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="247.3" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="250.3" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (302 samples, 4.66%)</title><rect x="247.7" y="611.0" width="54.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="250.7" y="622.0">tcp_s..</text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.09%)</title><rect x="248.9" y="595.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="251.9" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.09%)</title><rect x="248.9" y="579.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="251.9" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="250.0" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.0" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="250.0" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.0" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (30 samples, 0.46%)</title><rect x="250.4" y="595.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.4" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (26 samples, 0.40%)</title><rect x="251.0" y="579.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="254.0" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.12%)</title><rect x="251.3" y="563.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.08%)</title><rect x="251.3" y="547.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="254.3" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="251.9" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="254.9" y="542.0"></text>
</g>
<g>
<title>memset (2 samples, 0.03%)</title><rect x="252.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="255.4" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.06%)</title><rect x="252.8" y="563.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="255.8" y="574.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.05%)</title><rect x="253.5" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="256.5" y="574.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.05%)</title><rect x="253.5" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="256.5" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="254.0" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="257.0" y="574.0"></text>
</g>
<g>
<title>memset (7 samples, 0.11%)</title><rect x="254.4" y="563.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="257.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (246 samples, 3.79%)</title><rect x="256.2" y="595.0" width="44.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="259.2" y="606.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (246 samples, 3.79%)</title><rect x="256.2" y="579.0" width="44.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="259.2" y="590.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (245 samples, 3.78%)</title><rect x="256.4" y="563.0" width="44.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="259.4" y="574.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (218 samples, 3.36%)</title><rect x="257.3" y="547.0" width="39.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.3" y="558.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (210 samples, 3.24%)</title><rect x="258.2" y="531.0" width="38.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.2" y="542.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (209 samples, 3.22%)</title><rect x="258.2" y="515.0" width="38.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="261.2" y="526.0">__i..</text>
</g>
<g>
<title>ip_local_out (205 samples, 3.16%)</title><rect x="259.0" y="499.0" width="37.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="262.0" y="510.0">ip_..</text>
</g>
<g>
<title>ip_output (204 samples, 3.15%)</title><rect x="259.1" y="483.0" width="37.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="262.1" y="494.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (199 samples, 3.07%)</title><rect x="260.0" y="467.0" width="36.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="263.0" y="478.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (198 samples, 3.05%)</title><rect x="260.2" y="451.0" width="36.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="263.2" y="462.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (197 samples, 3.04%)</title><rect x="260.4" y="435.0" width="35.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.4" y="446.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (175 samples, 2.70%)</title><rect x="260.8" y="419.0" width="31.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="263.8" y="430.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (175 samples, 2.70%)</title><rect x="260.8" y="403.0" width="31.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="263.8" y="414.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (174 samples, 2.68%)</title><rect x="261.0" y="387.0" width="31.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="264.0" y="398.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (174 samples, 2.68%)</title><rect x="261.0" y="371.0" width="31.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="264.0" y="382.0">__..</text>
</g>
<g>
<title>net_rx_action (173 samples, 2.67%)</title><rect x="261.1" y="355.0" width="31.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="264.1" y="366.0">ne..</text>
</g>
<g>
<title>process_backlog (166 samples, 2.56%)</title><rect x="262.4" y="339.0" width="30.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="265.4" y="350.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (162 samples, 2.50%)</title><rect x="263.1" y="323.0" width="29.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.1" y="334.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (162 samples, 2.50%)</title><rect x="263.1" y="307.0" width="29.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="266.1" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="263.5" y="291.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="266.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (157 samples, 2.42%)</title><rect x="264.1" y="291.0" width="28.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="267.1" y="302.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (156 samples, 2.41%)</title><rect x="264.2" y="275.0" width="28.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="267.2" y="286.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (154 samples, 2.38%)</title><rect x="264.2" y="259.0" width="28.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="267.2" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (154 samples, 2.38%)</title><rect x="264.2" y="243.0" width="28.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="267.2" y="254.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (154 samples, 2.38%)</title><rect x="264.2" y="227.0" width="28.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="267.2" y="238.0">ip..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="264.4" y="211.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (150 samples, 2.31%)</title><rect x="265.0" y="211.0" width="27.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="268.0" y="222.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.08%)</title><rect x="265.5" y="195.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.06%)</title><rect x="266.4" y="195.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="269.4" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="266.8" y="179.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="269.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (137 samples, 2.11%)</title><rect x="267.1" y="195.0" width="25.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.1" y="206.0">t..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="267.1" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="270.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (135 samples, 2.08%)</title><rect x="267.5" y="179.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="270.5" y="190.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.06%)</title><rect x="268.6" y="163.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="271.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.06%)</title><rect x="268.6" y="147.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="271.6" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="268.6" y="131.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="271.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="268.6" y="115.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="268.6" y="99.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="271.6" y="110.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="269.3" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="272.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (30 samples, 0.46%)</title><rect x="269.9" y="163.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.9" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.32%)</title><rect x="271.3" y="147.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="274.3" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.29%)</title><rect x="271.5" y="131.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="274.5" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="271.5" y="115.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="274.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.06%)</title><rect x="271.5" y="99.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="274.5" y="110.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="271.7" y="83.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.23%)</title><rect x="272.2" y="115.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.23%)</title><rect x="272.2" y="99.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.09%)</title><rect x="273.9" y="83.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.9" y="94.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.09%)</title><rect x="273.9" y="67.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="276.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="274.6" y="51.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="277.6" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (88 samples, 1.36%)</title><rect x="275.3" y="163.0" width="16.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (88 samples, 1.36%)</title><rect x="275.3" y="147.0" width="16.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="278.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (86 samples, 1.33%)</title><rect x="275.7" y="131.0" width="15.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.7" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (86 samples, 1.33%)</title><rect x="275.7" y="115.0" width="15.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.7" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (86 samples, 1.33%)</title><rect x="275.7" y="99.0" width="15.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.7" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="291.5" y="163.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="294.5" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (19 samples, 0.29%)</title><rect x="292.6" y="419.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="295.6" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.29%)</title><rect x="292.6" y="403.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.6" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.09%)</title><rect x="293.5" y="387.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.5" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="293.9" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="296.9" y="382.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.05%)</title><rect x="293.9" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.9" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.05%)</title><rect x="293.9" y="339.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.9" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="293.9" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.9" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.09%)</title><rect x="294.8" y="387.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="297.8" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.05%)</title><rect x="295.0" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.0" y="382.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="296.4" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="299.4" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.05%)</title><rect x="297.2" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.2" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="297.7" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.7" y="558.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="298.1" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.1" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.09%)</title><rect x="298.6" y="547.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="301.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.08%)</title><rect x="298.8" y="531.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="301.8" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="298.8" y="515.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="301.8" y="526.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="298.8" y="499.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.8" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.08%)</title><rect x="298.8" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="301.8" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="299.7" y="547.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="302.7" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="300.3" y="547.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="303.3" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.14%)</title><rect x="301.0" y="595.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.0" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="301.0" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.09%)</title><rect x="301.5" y="579.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="304.5" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="302.3" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="305.3" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (12 samples, 0.19%)</title><rect x="302.6" y="643.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.6" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (10 samples, 0.15%)</title><rect x="303.0" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="306.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.15%)</title><rect x="303.0" y="611.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.0" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (5 samples, 0.08%)</title><rect x="303.7" y="595.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="306.7" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.09%)</title><rect x="304.8" y="659.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.8" y="670.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.09%)</title><rect x="304.8" y="643.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="307.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="304.8" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.8" y="638.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="304.8" y="611.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="307.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="306.1" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (799 samples, 12.32%)</title><rect x="307.0" y="835.0" width="145.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.0" y="846.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (789 samples, 12.17%)</title><rect x="307.0" y="819.0" width="143.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.0" y="830.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (789 samples, 12.17%)</title><rect x="307.0" y="803.0" width="143.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.0" y="814.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (647 samples, 9.98%)</title><rect x="307.4" y="787.0" width="117.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="310.4" y="798.0">Java_org_rocks..</text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.03%)</title><rect x="307.7" y="771.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="310.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="308.6" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="311.6" y="782.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (636 samples, 9.81%)</title><rect x="309.4" y="771.0" width="115.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="312.4" y="782.0">rocksdb_put_he..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="310.3" y="755.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="313.3" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="310.8" y="755.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="313.8" y="766.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.06%)</title><rect x="311.2" y="755.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="314.2" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="312.1" y="755.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="315.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (618 samples, 9.53%)</title><rect x="312.5" y="755.0" width="112.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="315.5" y="766.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (615 samples, 9.48%)</title><rect x="313.0" y="739.0" width="111.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="316.0" y="750.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (612 samples, 9.44%)</title><rect x="313.0" y="723.0" width="111.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="316.0" y="734.0">rocksdb::DB::..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.05%)</title><rect x="313.7" y="707.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="316.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (3 samples, 0.05%)</title><rect x="314.5" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="317.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (583 samples, 8.99%)</title><rect x="315.0" y="707.0" width="106.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="318.0" y="718.0">rocksdb::DBIm..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="315.0" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="318.0" y="702.0"></text>
</g>
<g>
<title>pthread_cond_destroy@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="315.7" y="691.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="318.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="316.1" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="319.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (562 samples, 8.67%)</title><rect x="316.5" y="691.0" width="102.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="319.5" y="702.0">rocksdb::DBI..</text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="321.7" y="675.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="324.7" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="321.9" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="321.9" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="321.9" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.9" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="321.9" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="324.9" y="622.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="321.9" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="321.9" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.9" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="321.9" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.9" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="321.9" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="324.9" y="558.0"></text>
</g>
<g>
<title>__sched_yield (26 samples, 0.40%)</title><rect x="322.3" y="675.0" width="4.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="325.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.29%)</title><rect x="323.6" y="659.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="326.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.29%)</title><rect x="323.6" y="643.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="326.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (14 samples, 0.22%)</title><rect x="324.5" y="627.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="327.5" y="638.0"></text>
</g>
<g>
<title>do_sched_yield (14 samples, 0.22%)</title><rect x="324.5" y="611.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="327.5" y="622.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.22%)</title><rect x="324.5" y="595.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="327.5" y="606.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.22%)</title><rect x="324.5" y="579.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="327.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="327.0" y="675.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="330.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.03%)</title><rect x="328.3" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="331.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.03%)</title><rect x="328.3" y="659.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="331.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (193 samples, 2.98%)</title><rect x="328.7" y="675.0" width="35.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="331.7" y="686.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (188 samples, 2.90%)</title><rect x="329.0" y="659.0" width="34.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="332.0" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (186 samples, 2.87%)</title><rect x="329.4" y="643.0" width="33.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="332.4" y="654.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (10 samples, 0.15%)</title><rect x="329.9" y="627.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="332.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (160 samples, 2.47%)</title><rect x="332.1" y="627.0" width="29.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="335.1" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (157 samples, 2.42%)</title><rect x="332.7" y="611.0" width="28.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="335.7" y="622.0">ro..</text>
</g>
<g>
<title>__write (149 samples, 2.30%)</title><rect x="333.6" y="595.0" width="27.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="336.6" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (147 samples, 2.27%)</title><rect x="333.9" y="579.0" width="26.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="336.9" y="590.0">e..</text>
</g>
<g>
<title>do_syscall_64 (146 samples, 2.25%)</title><rect x="334.1" y="563.0" width="26.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="337.1" y="574.0">d..</text>
</g>
<g>
<title>__x64_sys_write (142 samples, 2.19%)</title><rect x="334.8" y="547.0" width="25.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="337.8" y="558.0">_..</text>
</g>
<g>
<title>ksys_write (142 samples, 2.19%)</title><rect x="334.8" y="531.0" width="25.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="337.8" y="542.0">k..</text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.09%)</title><rect x="334.8" y="515.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="337.8" y="526.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="334.8" y="499.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="337.8" y="510.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="334.8" y="483.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.8" y="494.0"></text>
</g>
<g>
<title>vfs_write (134 samples, 2.07%)</title><rect x="336.3" y="515.0" width="24.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="339.3" y="526.0">v..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="337.2" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="340.2" y="510.0"></text>
</g>
<g>
<title>__vfs_write (119 samples, 1.84%)</title><rect x="337.6" y="499.0" width="21.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="340.6" y="510.0">_..</text>
</g>
<g>
<title>new_sync_write (119 samples, 1.84%)</title><rect x="337.6" y="483.0" width="21.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="340.6" y="494.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (113 samples, 1.74%)</title><rect x="338.3" y="467.0" width="20.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.3" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (108 samples, 1.67%)</title><rect x="338.3" y="451.0" width="19.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.3" y="462.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.08%)</title><rect x="338.7" y="435.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="341.7" y="446.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.05%)</title><rect x="338.8" y="419.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="341.8" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.05%)</title><rect x="338.8" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.8" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.05%)</title><rect x="338.8" y="387.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.8" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="339.0" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="342.0" y="382.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.03%)</title><rect x="339.0" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="342.0" y="366.0"></text>
</g>
<g>
<title>generic_perform_write (100 samples, 1.54%)</title><rect x="339.6" y="435.0" width="18.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.6" y="446.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.05%)</title><rect x="339.6" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="342.6" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (43 samples, 0.66%)</title><rect x="340.1" y="419.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="343.1" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (17 samples, 0.26%)</title><rect x="340.7" y="403.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="343.7" y="414.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.03%)</title><rect x="340.7" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="343.7" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (15 samples, 0.23%)</title><rect x="341.0" y="387.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="344.0" y="398.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.03%)</title><rect x="341.0" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="344.0" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.06%)</title><rect x="341.4" y="371.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="344.4" y="382.0"></text>
</g>
<g>
<title>start_this_handle (9 samples, 0.14%)</title><rect x="342.1" y="371.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="345.1" y="382.0"></text>
</g>
<g>
<title>add_transaction_credits (3 samples, 0.05%)</title><rect x="343.2" y="355.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="346.2" y="366.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.03%)</title><rect x="343.8" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="346.8" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (19 samples, 0.29%)</title><rect x="344.3" y="403.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.3" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (15 samples, 0.23%)</title><rect x="344.5" y="387.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="347.5" y="398.0"></text>
</g>
<g>
<title>__page_cache_alloc (2 samples, 0.03%)</title><rect x="344.9" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.9" y="382.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.03%)</title><rect x="344.9" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="347.9" y="366.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="344.9" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="347.9" y="350.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.17%)</title><rect x="345.2" y="371.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="348.2" y="382.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.09%)</title><rect x="345.8" y="355.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="348.8" y="366.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="346.9" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.9" y="366.0"></text>
</g>
<g>
<title>wait_for_stable_page (3 samples, 0.05%)</title><rect x="347.2" y="387.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="350.2" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (53 samples, 0.82%)</title><rect x="347.9" y="419.0" width="9.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.9" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_stop (6 samples, 0.09%)</title><rect x="348.5" y="403.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="351.5" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_stop (6 samples, 0.09%)</title><rect x="348.5" y="387.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="351.5" y="398.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.05%)</title><rect x="348.7" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="351.7" y="382.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="348.7" y="355.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="351.7" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="348.7" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="351.7" y="350.0"></text>
</g>
<g>
<title>generic_write_end (43 samples, 0.66%)</title><rect x="349.8" y="403.0" width="7.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.8" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (36 samples, 0.56%)</title><rect x="350.0" y="387.0" width="6.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="353.0" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (34 samples, 0.52%)</title><rect x="350.1" y="371.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.1" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (32 samples, 0.49%)</title><rect x="350.3" y="355.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.3" y="366.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (23 samples, 0.35%)</title><rect x="350.3" y="339.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="353.3" y="350.0"></text>
</g>
<g>
<title>__brelse (2 samples, 0.03%)</title><rect x="350.5" y="323.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.5" y="334.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="351.0" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="354.0" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (17 samples, 0.26%)</title><rect x="351.4" y="323.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="354.4" y="334.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (3 samples, 0.05%)</title><rect x="352.0" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.0" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.15%)</title><rect x="352.5" y="307.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="355.5" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (10 samples, 0.15%)</title><rect x="352.5" y="291.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="355.5" y="302.0"></text>
</g>
<g>
<title>crypto_shash_update (8 samples, 0.12%)</title><rect x="352.9" y="275.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.9" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (8 samples, 0.12%)</title><rect x="352.9" y="259.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.9" y="270.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (9 samples, 0.14%)</title><rect x="354.5" y="339.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.5" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (7 samples, 0.11%)</title><rect x="354.7" y="323.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="357.7" y="334.0"></text>
</g>
<g>
<title>__getblk_gfp (4 samples, 0.06%)</title><rect x="354.9" y="307.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="357.9" y="318.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.05%)</title><rect x="355.0" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.0" y="302.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.03%)</title><rect x="355.6" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="358.6" y="318.0"></text>
</g>
<g>
<title>block_write_end (6 samples, 0.09%)</title><rect x="356.5" y="387.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="359.5" y="398.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (5 samples, 0.08%)</title><rect x="356.5" y="371.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.5" y="382.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.03%)</title><rect x="357.0" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.0" y="366.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.03%)</title><rect x="358.1" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="361.1" y="462.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (2 samples, 0.03%)</title><rect x="358.1" y="435.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="361.1" y="446.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.03%)</title><rect x="358.9" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="361.9" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.11%)</title><rect x="359.4" y="499.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="362.4" y="510.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.08%)</title><rect x="359.8" y="483.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.8" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="359.8" y="467.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="362.8" y="478.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="359.8" y="451.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.8" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.03%)</title><rect x="360.1" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="363.1" y="446.0"></text>
</g>
<g>
<title>aa_label_is_subset (2 samples, 0.03%)</title><rect x="360.1" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="363.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="360.7" y="595.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="363.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (9 samples, 0.14%)</title><rect x="361.6" y="627.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="364.6" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="361.6" y="611.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="364.6" y="622.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.05%)</title><rect x="362.1" y="611.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="365.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="362.7" y="611.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="365.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="363.4" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="366.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.06%)</title><rect x="364.0" y="675.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="367.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="364.3" y="659.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="367.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="364.9" y="675.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="367.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (3 samples, 0.05%)</title><rect x="365.4" y="675.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="368.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.03%)</title><rect x="366.0" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="369.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.03%)</title><rect x="366.3" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="369.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (63 samples, 0.97%)</title><rect x="366.9" y="675.0" width="11.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="369.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (61 samples, 0.94%)</title><rect x="367.2" y="659.0" width="11.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="370.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (58 samples, 0.89%)</title><rect x="367.8" y="643.0" width="10.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="370.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 0.80%)</title><rect x="368.9" y="627.0" width="9.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="371.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (51 samples, 0.79%)</title><rect x="369.1" y="611.0" width="9.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="372.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (48 samples, 0.74%)</title><rect x="369.6" y="595.0" width="8.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="372.6" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="370.0" y="579.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="373.0" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (36 samples, 0.56%)</title><rect x="370.5" y="579.0" width="6.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="373.5" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (33 samples, 0.51%)</title><rect x="370.9" y="563.0" width="6.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="373.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (16 samples, 0.25%)</title><rect x="373.6" y="547.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="376.6" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="373.6" y="531.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="376.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.20%)</title><rect x="374.2" y="531.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="377.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="374.9" y="515.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="377.9" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.06%)</title><rect x="375.4" y="515.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="378.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="376.2" y="515.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="379.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="377.6" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="380.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.03%)</title><rect x="377.6" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="380.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="378.0" y="579.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="381.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (88 samples, 1.36%)</title><rect x="378.3" y="675.0" width="16.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="381.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (79 samples, 1.22%)</title><rect x="380.0" y="659.0" width="14.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="383.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (79 samples, 1.22%)</title><rect x="380.0" y="643.0" width="14.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="383.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (72 samples, 1.11%)</title><rect x="380.3" y="627.0" width="13.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (70 samples, 1.08%)</title><rect x="380.5" y="611.0" width="12.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.5" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="381.1" y="595.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="384.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (61 samples, 0.94%)</title><rect x="382.2" y="595.0" width="11.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="385.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="382.9" y="579.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="385.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (54 samples, 0.83%)</title><rect x="383.4" y="579.0" width="9.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="386.4" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (53 samples, 0.82%)</title><rect x="383.6" y="563.0" width="9.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="386.6" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (45 samples, 0.69%)</title><rect x="384.5" y="547.0" width="8.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="387.5" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (28 samples, 0.43%)</title><rect x="387.4" y="531.0" width="5.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="390.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (26 samples, 0.40%)</title><rect x="387.8" y="515.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="390.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (2 samples, 0.03%)</title><rect x="388.9" y="499.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="391.9" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (16 samples, 0.25%)</title><rect x="389.3" y="499.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="392.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.05%)</title><rect x="392.7" y="547.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="395.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="393.6" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="396.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.03%)</title><rect x="394.0" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="397.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.03%)</title><rect x="394.4" y="675.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="397.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (75 samples, 1.16%)</title><rect x="394.7" y="675.0" width="13.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="397.7" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (18 samples, 0.28%)</title><rect x="404.0" y="659.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="407.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.17%)</title><rect x="405.3" y="643.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.3" y="654.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="405.3" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="408.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.14%)</title><rect x="405.6" y="627.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="408.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.11%)</title><rect x="406.0" y="611.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="409.0" y="622.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.09%)</title><rect x="406.2" y="595.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.2" y="606.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="406.4" y="579.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.4" y="590.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.08%)</title><rect x="406.4" y="563.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="409.4" y="574.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.05%)</title><rect x="406.7" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.7" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="407.3" y="659.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="410.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="407.6" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="410.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (39 samples, 0.60%)</title><rect x="408.4" y="675.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="411.4" y="686.0"></text>
</g>
<g>
<title>__sched_yield (10 samples, 0.15%)</title><rect x="408.7" y="659.0" width="1.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="411.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.14%)</title><rect x="408.9" y="643.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="411.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.12%)</title><rect x="409.1" y="627.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (7 samples, 0.11%)</title><rect x="409.3" y="611.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.3" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (7 samples, 0.11%)</title><rect x="409.3" y="595.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="412.3" y="606.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.11%)</title><rect x="409.3" y="579.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="412.3" y="590.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.11%)</title><rect x="409.3" y="563.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="412.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 0.42%)</title><rect x="410.6" y="659.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="413.6" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.08%)</title><rect x="414.2" y="643.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="417.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="414.6" y="627.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="417.6" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="414.7" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="417.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="414.7" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="417.7" y="606.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="414.7" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="417.7" y="590.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="414.7" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="417.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="415.1" y="643.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="418.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="415.6" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="418.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (3 samples, 0.05%)</title><rect x="416.0" y="675.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="419.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.05%)</title><rect x="416.6" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="419.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.05%)</title><rect x="416.6" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="419.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="417.1" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="420.1" y="686.0"></text>
</g>
<g>
<title>std::condition_variable::notify_one() (2 samples, 0.03%)</title><rect x="417.1" y="659.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="420.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.03%)</title><rect x="417.5" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="420.5" y="686.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) (3 samples, 0.05%)</title><rect x="418.2" y="675.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="421.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.03%)</title><rect x="418.7" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="421.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.03%)</title><rect x="419.1" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="422.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.03%)</title><rect x="421.3" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="424.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.08%)</title><rect x="421.7" y="707.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="424.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.03%)</title><rect x="421.8" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="424.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.06%)</title><rect x="422.6" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="425.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.03%)</title><rect x="423.3" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="426.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="424.6" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="427.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.52%)</title><rect x="425.1" y="787.0" width="6.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="428.1" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="425.1" y="771.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="428.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="425.7" y="771.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="428.7" y="782.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.05%)</title><rect x="425.7" y="755.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="428.7" y="766.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.05%)</title><rect x="425.7" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="428.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (21 samples, 0.32%)</title><rect x="426.2" y="771.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="429.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.26%)</title><rect x="426.9" y="755.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.26%)</title><rect x="426.9" y="739.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="429.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.26%)</title><rect x="426.9" y="723.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="429.9" y="734.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.23%)</title><rect x="427.3" y="707.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="430.3" y="718.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.22%)</title><rect x="427.3" y="691.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="430.3" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="427.3" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="430.3" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.09%)</title><rect x="427.8" y="675.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="430.8" y="686.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="428.4" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.4" y="670.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.05%)</title><rect x="428.4" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="431.4" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="428.6" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.6" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.05%)</title><rect x="428.9" y="675.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="431.9" y="686.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="429.5" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="432.5" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="430.0" y="771.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="433.0" y="782.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="430.6" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="433.6" y="782.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="430.9" y="771.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="433.9" y="782.0"></text>
</g>
<g>
<title>__libc_malloc (7 samples, 0.11%)</title><rect x="431.3" y="787.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="434.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (88 samples, 1.36%)</title><rect x="432.6" y="787.0" width="16.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="435.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 1.26%)</title><rect x="433.7" y="771.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="436.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 1.26%)</title><rect x="433.7" y="755.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="436.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (81 samples, 1.25%)</title><rect x="433.8" y="739.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.8" y="750.0"></text>
</g>
<g>
<title>do_futex (80 samples, 1.23%)</title><rect x="434.0" y="723.0" width="14.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="437.0" y="734.0"></text>
</g>
<g>
<title>futex_wake (77 samples, 1.19%)</title><rect x="434.4" y="707.0" width="14.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.4" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="434.9" y="691.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.9" y="702.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.05%)</title><rect x="435.5" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.5" y="702.0"></text>
</g>
<g>
<title>wake_up_q (68 samples, 1.05%)</title><rect x="436.0" y="691.0" width="12.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.0" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (67 samples, 1.03%)</title><rect x="436.2" y="675.0" width="12.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="439.2" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (66 samples, 1.02%)</title><rect x="436.2" y="659.0" width="12.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.2" y="670.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.11%)</title><rect x="448.6" y="787.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="451.6" y="798.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.11%)</title><rect x="448.6" y="771.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="451.6" y="782.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.11%)</title><rect x="448.6" y="755.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="451.6" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.03%)</title><rect x="449.9" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="452.9" y="798.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.03%)</title><rect x="450.2" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="453.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toArray (2 samples, 0.03%)</title><rect x="450.6" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.6" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="450.6" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="450.6" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="450.6" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="450.6" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (8 samples, 0.12%)</title><rect x="451.0" y="819.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.0" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.05%)</title><rect x="451.7" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.7" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.7" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.7" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.7" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="451.7" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (9 samples, 0.14%)</title><rect x="452.6" y="915.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.14%)</title><rect x="452.6" y="899.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (9 samples, 0.14%)</title><rect x="452.6" y="883.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.05%)</title><rect x="453.7" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.7" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.05%)</title><rect x="453.7" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title><rect x="453.7" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (87 samples, 1.34%)</title><rect x="454.4" y="915.0" width="15.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (87 samples, 1.34%)</title><rect x="454.4" y="899.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 0.71%)</title><rect x="454.4" y="883.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.06%)</title><rect x="454.6" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.03%)</title><rect x="455.3" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="455.3" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="455.3" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="455.3" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="455.3" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="455.3" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="458.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.59%)</title><rect x="455.7" y="867.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.59%)</title><rect x="455.7" y="851.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.7" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 0.23%)</title><rect x="456.2" y="835.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="459.2" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.06%)</title><rect x="456.4" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="459.4" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (9 samples, 0.14%)</title><rect x="457.1" y="819.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="460.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.11%)</title><rect x="457.5" y="803.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="457.7" y="787.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.06%)</title><rect x="458.1" y="771.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="461.1" y="782.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="458.1" y="755.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="461.1" y="766.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="458.1" y="739.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.1" y="750.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="458.2" y="723.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="461.2" y="734.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="458.4" y="707.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="461.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.31%)</title><rect x="459.0" y="835.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="462.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.19%)</title><rect x="459.0" y="819.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="462.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="460.6" y="803.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="460.6" y="787.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="463.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="460.8" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="463.8" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="460.8" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.8" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.06%)</title><rect x="461.1" y="819.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="464.1" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.05%)</title><rect x="461.9" y="819.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="464.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.05%)</title><rect x="462.8" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.05%)</title><rect x="462.8" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.05%)</title><rect x="462.8" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="462.8" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="462.8" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="462.8" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (38 samples, 0.59%)</title><rect x="463.3" y="883.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (38 samples, 0.59%)</title><rect x="463.3" y="867.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 0.59%)</title><rect x="463.3" y="851.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.59%)</title><rect x="463.3" y="835.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.42%)</title><rect x="465.3" y="819.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="465.5" y="803.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="468.5" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="465.5" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="468.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.37%)</title><rect x="465.9" y="803.0" width="4.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="468.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.34%)</title><rect x="466.2" y="787.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.34%)</title><rect x="466.2" y="771.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.32%)</title><rect x="466.4" y="755.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="469.4" y="766.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.32%)</title><rect x="466.4" y="739.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.4" y="750.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.31%)</title><rect x="466.4" y="723.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.4" y="734.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.03%)</title><rect x="466.6" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="469.6" y="718.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.26%)</title><rect x="467.0" y="707.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="470.0" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.26%)</title><rect x="467.0" y="691.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.0" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.26%)</title><rect x="467.0" y="675.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="470.0" y="686.0"></text>
</g>
<g>
<title>[async_worker-1 tid=4302] (1,320 samples, 20.36%)</title><rect x="470.2" y="979.0" width="240.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="473.2" y="990.0">[async_worker-1 tid=4302]</text>
</g>
<g>
<title>java/lang/Thread.run (1,320 samples, 20.36%)</title><rect x="470.2" y="963.0" width="240.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.2" y="974.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,320 samples, 20.36%)</title><rect x="470.2" y="947.0" width="240.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.2" y="958.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,320 samples, 20.36%)</title><rect x="470.2" y="931.0" width="240.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.2" y="942.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.03%)</title><rect x="470.6" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.6" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="470.6" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,223 samples, 18.86%)</title><rect x="471.2" y="915.0" width="222.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.2" y="926.0">java/util/concurrent/FutureTa..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1,220 samples, 18.82%)</title><rect x="471.5" y="899.0" width="222.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.5" y="910.0">java/util/concurrent/Executor..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/845367694.run (1,220 samples, 18.82%)</title><rect x="471.5" y="883.0" width="222.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.5" y="894.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (1,220 samples, 18.82%)</title><rect x="471.5" y="867.0" width="222.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.5" y="878.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.06%)</title><rect x="471.5" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.06%)</title><rect x="471.5" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.06%)</title><rect x="471.5" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.5" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="471.5" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="471.9" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (1,216 samples, 18.75%)</title><rect x="472.2" y="851.0" width="221.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.2" y="862.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.09%)</title><rect x="472.2" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.09%)</title><rect x="472.2" y="819.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.2" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="472.2" y="803.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="472.2" y="787.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.2" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="472.2" y="771.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="472.2" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="472.2" y="739.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.2" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="473.3" y="835.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="476.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (425 samples, 6.55%)</title><rect x="473.7" y="835.0" width="77.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.7" y="846.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.09%)</title><rect x="474.6" y="819.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.09%)</title><rect x="474.6" y="803.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.09%)</title><rect x="474.6" y="787.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.6" y="798.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="475.0" y="771.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="478.0" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="475.3" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="478.3" y="782.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="475.3" y="755.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="478.3" y="766.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="475.3" y="739.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="478.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (409 samples, 6.31%)</title><rect x="475.7" y="819.0" width="74.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.7" y="830.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.22%)</title><rect x="475.7" y="803.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="477.9" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="477.9" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="477.9" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="477.9" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="477.9" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.9" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="477.9" y="707.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="480.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (395 samples, 6.09%)</title><rect x="478.3" y="803.0" width="71.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.3" y="814.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (395 samples, 6.09%)</title><rect x="478.3" y="787.0" width="71.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (395 samples, 6.09%)</title><rect x="478.3" y="771.0" width="71.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.3" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (390 samples, 6.01%)</title><rect x="479.2" y="755.0" width="70.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.2" y="766.0">one/nio/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="480.1" y="739.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="483.1" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.14%)</title><rect x="480.6" y="739.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="483.6" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.08%)</title><rect x="481.3" y="723.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="484.3" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="481.5" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="484.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="481.9" y="707.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="484.9" y="718.0"></text>
</g>
<g>
<title>send (373 samples, 5.75%)</title><rect x="482.3" y="739.0" width="67.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="485.3" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (369 samples, 5.69%)</title><rect x="483.0" y="723.0" width="67.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="486.0" y="734.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.03%)</title><rect x="483.0" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="486.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (367 samples, 5.66%)</title><rect x="483.3" y="707.0" width="66.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="486.3" y="718.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (362 samples, 5.58%)</title><rect x="484.3" y="691.0" width="65.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="487.3" y="702.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (361 samples, 5.57%)</title><rect x="484.3" y="675.0" width="65.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.3" y="686.0">__sys_s..</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.03%)</title><rect x="485.0" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.0" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (353 samples, 5.44%)</title><rect x="485.3" y="659.0" width="64.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="488.3" y="670.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (341 samples, 5.26%)</title><rect x="485.7" y="643.0" width="62.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.7" y="654.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (340 samples, 5.24%)</title><rect x="485.9" y="627.0" width="61.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="488.9" y="638.0">tcp_se..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="486.3" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="489.3" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="486.6" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.6" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="487.2" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="490.2" y="622.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="487.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.2" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="487.9" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.9" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (325 samples, 5.01%)</title><rect x="488.3" y="611.0" width="59.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="491.3" y="622.0">tcp_se..</text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.08%)</title><rect x="489.9" y="595.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="492.9" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.08%)</title><rect x="489.9" y="579.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="492.9" y="590.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.03%)</title><rect x="490.8" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.8" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="491.2" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.2" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="491.2" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.2" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (28 samples, 0.43%)</title><rect x="491.5" y="595.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (27 samples, 0.42%)</title><rect x="491.7" y="579.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="494.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.25%)</title><rect x="492.1" y="563.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.09%)</title><rect x="492.1" y="547.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.1" y="558.0"></text>
</g>
<g>
<title>memset (7 samples, 0.11%)</title><rect x="493.7" y="547.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="496.7" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.06%)</title><rect x="495.0" y="563.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="498.0" y="574.0"></text>
</g>
<g>
<title>memset (5 samples, 0.08%)</title><rect x="495.7" y="563.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.7" y="574.0"></text>
</g>
<g>
<title>tcp_push (277 samples, 4.27%)</title><rect x="496.6" y="595.0" width="50.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="499.6" y="606.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (276 samples, 4.26%)</title><rect x="496.8" y="579.0" width="50.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.8" y="590.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (272 samples, 4.19%)</title><rect x="497.5" y="563.0" width="49.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="500.5" y="574.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (253 samples, 3.90%)</title><rect x="498.5" y="547.0" width="46.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.5" y="558.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (250 samples, 3.86%)</title><rect x="498.6" y="531.0" width="45.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="501.6" y="542.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (248 samples, 3.82%)</title><rect x="499.0" y="515.0" width="45.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="502.0" y="526.0">__ip..</text>
</g>
<g>
<title>ip_local_out (248 samples, 3.82%)</title><rect x="499.0" y="499.0" width="45.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="502.0" y="510.0">ip_l..</text>
</g>
<g>
<title>ip_output (248 samples, 3.82%)</title><rect x="499.0" y="483.0" width="45.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="502.0" y="494.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (248 samples, 3.82%)</title><rect x="499.0" y="467.0" width="45.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.0" y="478.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="499.0" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.0" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (244 samples, 3.76%)</title><rect x="499.4" y="451.0" width="44.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="502.4" y="462.0">__ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="499.5" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="502.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (240 samples, 3.70%)</title><rect x="499.9" y="435.0" width="43.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.9" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (218 samples, 3.36%)</title><rect x="500.3" y="419.0" width="39.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.3" y="430.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (217 samples, 3.35%)</title><rect x="500.5" y="403.0" width="39.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.5" y="414.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (211 samples, 3.25%)</title><rect x="501.5" y="387.0" width="38.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="504.5" y="398.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (210 samples, 3.24%)</title><rect x="501.5" y="371.0" width="38.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="504.5" y="382.0">__s..</text>
</g>
<g>
<title>net_rx_action (206 samples, 3.18%)</title><rect x="502.3" y="355.0" width="37.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="505.3" y="366.0">net..</text>
</g>
<g>
<title>process_backlog (201 samples, 3.10%)</title><rect x="503.2" y="339.0" width="36.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.2" y="350.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (195 samples, 3.01%)</title><rect x="504.3" y="323.0" width="35.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.3" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (194 samples, 2.99%)</title><rect x="504.5" y="307.0" width="35.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.5" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.09%)</title><rect x="504.6" y="291.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv (187 samples, 2.88%)</title><rect x="505.7" y="291.0" width="34.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="508.7" y="302.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="505.7" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (185 samples, 2.85%)</title><rect x="506.1" y="275.0" width="33.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.1" y="286.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (185 samples, 2.85%)</title><rect x="506.1" y="259.0" width="33.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.1" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (185 samples, 2.85%)</title><rect x="506.1" y="243.0" width="33.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.1" y="254.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (184 samples, 2.84%)</title><rect x="506.3" y="227.0" width="33.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.3" y="238.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (180 samples, 2.78%)</title><rect x="507.0" y="211.0" width="32.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.0" y="222.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.08%)</title><rect x="508.1" y="195.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="511.1" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="509.0" y="195.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.0" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="509.0" y="179.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="512.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (166 samples, 2.56%)</title><rect x="509.4" y="195.0" width="30.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.4" y="206.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (165 samples, 2.54%)</title><rect x="509.6" y="179.0" width="30.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="512.6" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.12%)</title><rect x="510.3" y="163.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.3" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.11%)</title><rect x="510.5" y="147.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="513.5" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.09%)</title><rect x="510.6" y="131.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="513.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.09%)</title><rect x="510.6" y="115.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.09%)</title><rect x="510.6" y="99.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="513.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (38 samples, 0.59%)</title><rect x="512.1" y="163.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="515.1" y="174.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="512.8" y="147.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="515.8" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (29 samples, 0.45%)</title><rect x="513.4" y="147.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="516.4" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.29%)</title><rect x="514.6" y="131.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.6" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.11%)</title><rect x="514.6" y="115.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.6" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.11%)</title><rect x="514.6" y="99.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="517.6" y="110.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.08%)</title><rect x="515.0" y="83.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="518.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.19%)</title><rect x="515.9" y="115.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="518.9" y="126.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.17%)</title><rect x="515.9" y="99.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="518.9" y="110.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.14%)</title><rect x="516.3" y="83.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="519.3" y="94.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.14%)</title><rect x="516.3" y="67.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.09%)</title><rect x="516.8" y="51.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="519.8" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (4 samples, 0.06%)</title><rect x="517.2" y="35.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="520.2" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.05%)</title><rect x="518.1" y="131.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (109 samples, 1.68%)</title><rect x="519.0" y="163.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="522.0" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (109 samples, 1.68%)</title><rect x="519.0" y="147.0" width="19.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="522.0" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (109 samples, 1.68%)</title><rect x="519.0" y="131.0" width="19.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (109 samples, 1.68%)</title><rect x="519.0" y="115.0" width="19.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="522.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (108 samples, 1.67%)</title><rect x="519.0" y="99.0" width="19.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="522.0" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="538.9" y="163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.9" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="539.2" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="542.2" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.31%)</title><rect x="539.9" y="419.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="542.9" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.29%)</title><rect x="539.9" y="403.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="542.9" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.08%)</title><rect x="541.8" y="387.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="544.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="542.1" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="545.1" y="382.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="542.1" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.1" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="542.1" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="545.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="542.1" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.1" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="542.9" y="387.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.9" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="543.0" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="546.0" y="382.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="544.1" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.1" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="544.1" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="547.1" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.14%)</title><rect x="545.0" y="547.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="548.0" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.11%)</title><rect x="545.4" y="531.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="548.4" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="546.0" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="549.0" y="526.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="546.0" y="499.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="546.0" y="483.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="549.0" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.03%)</title><rect x="547.0" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="550.0" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="547.4" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="550.4" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.15%)</title><rect x="547.8" y="643.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.8" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.11%)</title><rect x="548.3" y="627.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="551.3" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.11%)</title><rect x="548.3" y="611.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="551.3" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (5 samples, 0.08%)</title><rect x="548.7" y="595.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.7" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="549.2" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="552.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="549.6" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="552.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="550.1" y="819.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (782 samples, 12.06%)</title><rect x="551.2" y="835.0" width="142.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.2" y="846.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (775 samples, 11.95%)</title><rect x="551.2" y="819.0" width="141.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.2" y="830.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="551.4" y="803.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="554.4" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (772 samples, 11.91%)</title><rect x="551.8" y="803.0" width="140.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.8" y="814.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (636 samples, 9.81%)</title><rect x="552.9" y="787.0" width="115.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="555.9" y="798.0">Java_org_rocks..</text>
</g>
<g>
<title>cfree (2 samples, 0.03%)</title><rect x="553.6" y="771.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="556.6" y="782.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (630 samples, 9.72%)</title><rect x="554.0" y="771.0" width="114.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="557.0" y="782.0">rocksdb_put_he..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="554.1" y="755.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="557.1" y="766.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="554.9" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="557.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="555.2" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="558.2" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="555.6" y="755.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="558.6" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.22%)</title><rect x="556.0" y="755.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="559.0" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="556.1" y="739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="559.1" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (9 samples, 0.14%)</title><rect x="556.7" y="739.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="559.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (603 samples, 9.30%)</title><rect x="558.5" y="755.0" width="109.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="561.5" y="766.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (601 samples, 9.27%)</title><rect x="558.9" y="739.0" width="109.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="561.9" y="750.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (594 samples, 9.16%)</title><rect x="559.2" y="723.0" width="108.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="562.2" y="734.0">rocksdb::DB::..</text>
</g>
<g>
<title>cfree (3 samples, 0.05%)</title><rect x="559.6" y="707.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="562.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (567 samples, 8.74%)</title><rect x="560.3" y="707.0" width="103.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.3" y="718.0">rocksdb::DBI..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="560.5" y="691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="563.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="561.2" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="564.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (554 samples, 8.54%)</title><rect x="561.6" y="691.0" width="100.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="564.6" y="702.0">rocksdb::DBI..</text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.06%)</title><rect x="565.1" y="675.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="568.1" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="565.2" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="565.2" y="643.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="568.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="565.2" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.2" y="638.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="565.2" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.2" y="622.0"></text>
</g>
<g>
<title>__sched_yield (22 samples, 0.34%)</title><rect x="565.8" y="675.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="568.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.26%)</title><rect x="566.7" y="659.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="569.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.26%)</title><rect x="566.7" y="643.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="569.7" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (12 samples, 0.19%)</title><rect x="567.6" y="627.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.6" y="638.0"></text>
</g>
<g>
<title>do_sched_yield (12 samples, 0.19%)</title><rect x="567.6" y="611.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="570.6" y="622.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.19%)</title><rect x="567.6" y="595.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.6" y="606.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.19%)</title><rect x="567.6" y="579.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="570.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="569.8" y="675.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="572.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.05%)</title><rect x="570.7" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="573.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.03%)</title><rect x="570.9" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="573.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.03%)</title><rect x="571.2" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="574.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (164 samples, 2.53%)</title><rect x="571.6" y="675.0" width="29.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="574.6" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (159 samples, 2.45%)</title><rect x="572.0" y="659.0" width="28.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="575.0" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.03%)</title><rect x="572.9" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (151 samples, 2.33%)</title><rect x="573.2" y="643.0" width="27.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="576.2" y="654.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (5 samples, 0.08%)</title><rect x="574.0" y="627.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="577.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (128 samples, 1.97%)</title><rect x="575.1" y="627.0" width="23.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="578.1" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::GetPerfLevel() [clone .plt] (2 samples, 0.03%)</title><rect x="575.2" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="578.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (121 samples, 1.87%)</title><rect x="576.2" y="611.0" width="22.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="579.2" y="622.0">r..</text>
</g>
<g>
<title>__write (117 samples, 1.80%)</title><rect x="576.7" y="595.0" width="21.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="579.7" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 1.73%)</title><rect x="577.6" y="579.0" width="20.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="580.6" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (112 samples, 1.73%)</title><rect x="577.6" y="563.0" width="20.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.6" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (108 samples, 1.67%)</title><rect x="578.3" y="547.0" width="19.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.3" y="558.0"></text>
</g>
<g>
<title>ksys_write (108 samples, 1.67%)</title><rect x="578.3" y="531.0" width="19.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="581.3" y="542.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="578.5" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="581.5" y="526.0"></text>
</g>
<g>
<title>vfs_write (104 samples, 1.60%)</title><rect x="579.1" y="515.0" width="18.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="582.1" y="526.0"></text>
</g>
<g>
<title>__vfs_write (95 samples, 1.47%)</title><rect x="579.8" y="499.0" width="17.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="582.8" y="510.0"></text>
</g>
<g>
<title>new_sync_write (93 samples, 1.43%)</title><rect x="580.2" y="483.0" width="16.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.2" y="494.0"></text>
</g>
<g>
<title>ext4_file_write_iter (90 samples, 1.39%)</title><rect x="580.3" y="467.0" width="16.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.3" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (86 samples, 1.33%)</title><rect x="580.5" y="451.0" width="15.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="583.5" y="462.0"></text>
</g>
<g>
<title>file_update_time (10 samples, 0.15%)</title><rect x="581.1" y="435.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.1" y="446.0"></text>
</g>
<g>
<title>generic_update_time (4 samples, 0.06%)</title><rect x="582.0" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="585.0" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.06%)</title><rect x="582.0" y="403.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.0" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.06%)</title><rect x="582.0" y="387.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="585.0" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.05%)</title><rect x="582.2" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.2" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.03%)</title><rect x="582.3" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.3" y="366.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="582.3" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="585.3" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (73 samples, 1.13%)</title><rect x="582.9" y="435.0" width="13.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="585.9" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_begin (23 samples, 0.35%)</title><rect x="583.3" y="419.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="586.3" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.15%)</title><rect x="584.0" y="403.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="587.0" y="414.0"></text>
</g>
<g>
<title>jbd2__journal_start (10 samples, 0.15%)</title><rect x="584.0" y="387.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="587.0" y="398.0"></text>
</g>
<g>
<title>_raw_read_lock (3 samples, 0.05%)</title><rect x="584.2" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.2" y="382.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.06%)</title><rect x="585.1" y="371.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="588.1" y="382.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.03%)</title><rect x="585.8" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="588.8" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (5 samples, 0.08%)</title><rect x="586.4" y="403.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="589.4" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.08%)</title><rect x="586.4" y="387.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="589.4" y="398.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.08%)</title><rect x="586.4" y="371.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="589.4" y="382.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="586.7" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.7" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end (38 samples, 0.59%)</title><rect x="587.4" y="419.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.4" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.08%)</title><rect x="587.8" y="403.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="590.8" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.06%)</title><rect x="588.0" y="387.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="591.0" y="398.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="588.4" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="591.4" y="382.0"></text>
</g>
<g>
<title>generic_write_end (29 samples, 0.45%)</title><rect x="588.9" y="403.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.9" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (24 samples, 0.37%)</title><rect x="588.9" y="387.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.9" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (24 samples, 0.37%)</title><rect x="588.9" y="371.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.9" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (24 samples, 0.37%)</title><rect x="588.9" y="355.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="591.9" y="366.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (18 samples, 0.28%)</title><rect x="589.1" y="339.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.1" y="350.0"></text>
</g>
<g>
<title>ext4_do_update_inode (16 samples, 0.25%)</title><rect x="589.4" y="323.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="592.4" y="334.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.15%)</title><rect x="590.5" y="307.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="593.5" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (10 samples, 0.15%)</title><rect x="590.5" y="291.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="593.5" y="302.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="590.5" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.5" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.03%)</title><rect x="590.9" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.9" y="286.0"></text>
</g>
<g>
<title>crypto_shash_update (6 samples, 0.09%)</title><rect x="591.3" y="275.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="594.3" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.08%)</title><rect x="591.4" y="259.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.4" y="270.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.08%)</title><rect x="592.4" y="339.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="595.4" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.06%)</title><rect x="592.4" y="323.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.4" y="334.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.05%)</title><rect x="592.4" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.4" y="318.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.05%)</title><rect x="592.4" y="291.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.4" y="302.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.03%)</title><rect x="593.3" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.3" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.05%)</title><rect x="593.6" y="387.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.6" y="398.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.03%)</title><rect x="594.4" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="597.4" y="430.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="594.9" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.9" y="430.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.03%)</title><rect x="595.3" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="598.3" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.03%)</title><rect x="595.3" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.3" y="414.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.03%)</title><rect x="595.6" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.6" y="430.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.03%)</title><rect x="596.7" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="599.7" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.08%)</title><rect x="597.1" y="499.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="600.1" y="510.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="597.5" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.5" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="597.5" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.5" y="478.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="597.5" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (12 samples, 0.19%)</title><rect x="598.5" y="627.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="601.5" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="598.5" y="611.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="601.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (6 samples, 0.09%)</title><rect x="599.3" y="611.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="602.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="600.4" y="611.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="603.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (10 samples, 0.15%)</title><rect x="601.5" y="675.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="604.5" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="601.6" y="659.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="604.6" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.11%)</title><rect x="602.0" y="659.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="605.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (3 samples, 0.05%)</title><rect x="603.3" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="606.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="603.8" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="606.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.03%)</title><rect x="604.2" y="675.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="607.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::ComputeContentFlags() const (2 samples, 0.03%)</title><rect x="604.5" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="607.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (59 samples, 0.91%)</title><rect x="605.1" y="675.0" width="10.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="608.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (58 samples, 0.89%)</title><rect x="605.1" y="659.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="608.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (57 samples, 0.88%)</title><rect x="605.3" y="643.0" width="10.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="608.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (53 samples, 0.82%)</title><rect x="605.8" y="627.0" width="9.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="608.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.03%)</title><rect x="605.8" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="608.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (50 samples, 0.77%)</title><rect x="606.4" y="611.0" width="9.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="609.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (46 samples, 0.71%)</title><rect x="606.9" y="595.0" width="8.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="609.9" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="607.1" y="579.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="610.1" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (40 samples, 0.62%)</title><rect x="607.6" y="579.0" width="7.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="610.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (34 samples, 0.52%)</title><rect x="608.2" y="563.0" width="6.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="611.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (18 samples, 0.28%)</title><rect x="610.4" y="547.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="613.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="610.4" y="531.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="613.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.22%)</title><rect x="611.1" y="531.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="614.1" y="542.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="612.7" y="515.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="615.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.05%)</title><rect x="613.8" y="547.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="616.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.03%)</title><rect x="614.4" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="617.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (85 samples, 1.31%)</title><rect x="615.8" y="675.0" width="15.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="618.8" y="686.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="617.1" y="659.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="620.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="617.5" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="620.5" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (2 samples, 0.03%)</title><rect x="617.5" y="643.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="620.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (73 samples, 1.13%)</title><rect x="617.8" y="659.0" width="13.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="620.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="617.8" y="643.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="620.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (69 samples, 1.06%)</title><rect x="618.6" y="643.0" width="12.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="621.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (66 samples, 1.02%)</title><rect x="618.9" y="627.0" width="12.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="621.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (66 samples, 1.02%)</title><rect x="618.9" y="611.0" width="12.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="621.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="619.3" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="622.3" y="606.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="619.3" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="622.3" y="590.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="619.3" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.3" y="574.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="619.3" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="622.3" y="558.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="619.3" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="622.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (60 samples, 0.93%)</title><rect x="619.8" y="595.0" width="11.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="622.8" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="620.2" y="579.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="623.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="620.4" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="623.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="620.7" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="623.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (53 samples, 0.82%)</title><rect x="621.1" y="579.0" width="9.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="624.1" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (53 samples, 0.82%)</title><rect x="621.1" y="563.0" width="9.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="624.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (45 samples, 0.69%)</title><rect x="622.4" y="547.0" width="8.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="625.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (25 samples, 0.39%)</title><rect x="625.7" y="531.0" width="4.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="628.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="625.7" y="515.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="628.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (19 samples, 0.29%)</title><rect x="626.8" y="515.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="629.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="627.7" y="499.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="630.7" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.12%)</title><rect x="628.2" y="499.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="631.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="630.2" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="633.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.03%)</title><rect x="631.3" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="634.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (92 samples, 1.42%)</title><rect x="631.7" y="675.0" width="16.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="634.7" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (27 samples, 0.42%)</title><rect x="642.4" y="659.0" width="4.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="645.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.29%)</title><rect x="643.9" y="643.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="646.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="643.9" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="646.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.26%)</title><rect x="644.2" y="627.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="647.2" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.25%)</title><rect x="644.4" y="611.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="647.4" y="622.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.23%)</title><rect x="644.4" y="595.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="647.4" y="606.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.22%)</title><rect x="644.4" y="579.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="647.4" y="590.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.08%)</title><rect x="646.0" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="649.0" y="574.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.05%)</title><rect x="646.4" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.4" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="647.5" y="659.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="650.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (56 samples, 0.86%)</title><rect x="648.6" y="675.0" width="10.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="651.6" y="686.0"></text>
</g>
<g>
<title>__sched_yield (19 samples, 0.29%)</title><rect x="649.1" y="659.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="652.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.23%)</title><rect x="649.9" y="643.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.23%)</title><rect x="649.9" y="627.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="652.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (12 samples, 0.19%)</title><rect x="650.4" y="611.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="653.4" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (12 samples, 0.19%)</title><rect x="650.4" y="595.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="653.4" y="606.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.19%)</title><rect x="650.4" y="579.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="653.4" y="590.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.19%)</title><rect x="650.4" y="563.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="653.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (34 samples, 0.52%)</title><rect x="652.6" y="659.0" width="6.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="655.6" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.11%)</title><rect x="657.1" y="643.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="660.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="657.5" y="627.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="660.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="657.5" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="660.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.08%)</title><rect x="657.5" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="660.5" y="606.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="657.5" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="660.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="657.5" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="660.5" y="574.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="657.9" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="660.9" y="574.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="657.9" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="660.9" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.05%)</title><rect x="657.9" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="660.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="658.4" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="661.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.05%)</title><rect x="658.8" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="661.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (3 samples, 0.05%)</title><rect x="659.5" y="675.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="662.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="659.7" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="662.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.06%)</title><rect x="660.2" y="675.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="663.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (4 samples, 0.06%)</title><rect x="660.2" y="659.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="663.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (3 samples, 0.05%)</title><rect x="661.0" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="664.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.05%)</title><rect x="661.0" y="659.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="664.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.03%)</title><rect x="661.5" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="664.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="662.8" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="665.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.05%)</title><rect x="663.5" y="707.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="666.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.17%)</title><rect x="664.2" y="707.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="667.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="664.2" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="667.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="665.2" y="691.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="668.2" y="702.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="665.9" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="668.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.05%)</title><rect x="666.2" y="707.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="669.2" y="718.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="666.8" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="669.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="667.3" y="723.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="670.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="667.7" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="670.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.54%)</title><rect x="668.6" y="787.0" width="6.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="671.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.06%)</title><rect x="668.6" y="771.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="671.6" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.31%)</title><rect x="669.5" y="771.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="672.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.22%)</title><rect x="670.6" y="755.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="673.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.20%)</title><rect x="670.8" y="739.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="673.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.12%)</title><rect x="671.7" y="723.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.7" y="734.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.12%)</title><rect x="671.7" y="707.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.7" y="718.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.12%)</title><rect x="671.7" y="691.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.7" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.06%)</title><rect x="671.7" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.7" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="672.1" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="675.1" y="670.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="672.1" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.1" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.05%)</title><rect x="672.4" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="675.4" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="673.2" y="771.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="676.2" y="782.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (4 samples, 0.06%)</title><rect x="674.3" y="771.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="677.3" y="782.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="674.6" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="677.6" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (5 samples, 0.08%)</title><rect x="675.0" y="787.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="678.0" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (88 samples, 1.36%)</title><rect x="675.9" y="787.0" width="16.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="678.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 1.11%)</title><rect x="678.8" y="771.0" width="13.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="681.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 1.11%)</title><rect x="678.8" y="755.0" width="13.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="681.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (70 samples, 1.08%)</title><rect x="679.2" y="739.0" width="12.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="682.2" y="750.0"></text>
</g>
<g>
<title>do_futex (70 samples, 1.08%)</title><rect x="679.2" y="723.0" width="12.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="682.2" y="734.0"></text>
</g>
<g>
<title>futex_wake (69 samples, 1.06%)</title><rect x="679.3" y="707.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="682.3" y="718.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="679.9" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="682.9" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="680.3" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="683.3" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="680.6" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="683.6" y="686.0"></text>
</g>
<g>
<title>wake_up_q (60 samples, 0.93%)</title><rect x="681.0" y="691.0" width="10.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.0" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 0.91%)</title><rect x="681.2" y="675.0" width="10.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.2" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (59 samples, 0.91%)</title><rect x="681.2" y="659.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (7 samples, 0.11%)</title><rect x="692.3" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.3" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.06%)</title><rect x="692.4" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="692.4" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="692.4" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="692.4" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="692.4" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="692.6" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.6" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="693.2" y="803.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="696.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (6 samples, 0.09%)</title><rect x="693.7" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.09%)</title><rect x="693.7" y="899.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (6 samples, 0.09%)</title><rect x="693.7" y="883.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.06%)</title><rect x="694.1" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.06%)</title><rect x="694.1" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.1" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.06%)</title><rect x="694.1" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (86 samples, 1.33%)</title><rect x="694.8" y="915.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (86 samples, 1.33%)</title><rect x="694.8" y="899.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (50 samples, 0.77%)</title><rect x="694.8" y="883.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.03%)</title><rect x="694.8" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.06%)</title><rect x="695.2" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.08%)</title><rect x="695.9" y="867.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.08%)</title><rect x="695.9" y="851.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.08%)</title><rect x="695.9" y="835.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.08%)</title><rect x="695.9" y="819.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="696.3" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.3" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="696.3" y="787.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="699.3" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="696.3" y="771.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="699.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (39 samples, 0.60%)</title><rect x="696.8" y="867.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.60%)</title><rect x="696.8" y="851.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.8" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.20%)</title><rect x="698.1" y="835.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="701.1" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="698.8" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="701.8" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="699.4" y="819.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="702.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="699.4" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="702.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="699.4" y="787.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="702.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="699.4" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.4" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="699.4" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="702.4" y="766.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="699.4" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="702.4" y="750.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="699.4" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.4" y="734.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="699.4" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.4" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="700.1" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="703.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.29%)</title><rect x="700.5" y="835.0" width="3.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="703.5" y="846.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="700.5" y="819.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="703.5" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.19%)</title><rect x="700.8" y="819.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="703.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="702.3" y="803.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="705.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="702.3" y="787.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.06%)</title><rect x="702.3" y="771.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="705.3" y="782.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="702.3" y="755.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.3" y="766.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.06%)</title><rect x="702.3" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.3" y="750.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.06%)</title><rect x="702.3" y="723.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.3" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.08%)</title><rect x="703.0" y="819.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="706.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (35 samples, 0.54%)</title><rect x="704.1" y="883.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.54%)</title><rect x="704.1" y="867.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.54%)</title><rect x="704.1" y="851.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.54%)</title><rect x="704.1" y="835.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.35%)</title><rect x="706.3" y="819.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 0.34%)</title><rect x="706.5" y="803.0" width="4.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="709.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.32%)</title><rect x="706.6" y="787.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="709.6" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.32%)</title><rect x="706.6" y="771.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.6" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.32%)</title><rect x="706.6" y="755.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="709.6" y="766.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.32%)</title><rect x="706.6" y="739.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="709.6" y="750.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.32%)</title><rect x="706.6" y="723.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.6" y="734.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.26%)</title><rect x="707.4" y="707.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="710.4" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.26%)</title><rect x="707.4" y="691.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="710.4" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.25%)</title><rect x="707.4" y="675.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.4" y="686.0"></text>
</g>
<g>
<title>[async_worker-2 tid=4305] (1,317 samples, 20.31%)</title><rect x="710.5" y="979.0" width="239.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="713.5" y="990.0">[async_worker-2 tid=4305]</text>
</g>
<g>
<title>java/lang/Thread.run (1,316 samples, 20.30%)</title><rect x="710.6" y="963.0" width="239.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.6" y="974.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,316 samples, 20.30%)</title><rect x="710.6" y="947.0" width="239.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.6" y="958.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,316 samples, 20.30%)</title><rect x="710.6" y="931.0" width="239.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.6" y="942.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,223 samples, 18.86%)</title><rect x="711.7" y="915.0" width="222.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.7" y="926.0">java/util/concurrent/FutureTa..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1,217 samples, 18.77%)</title><rect x="712.5" y="899.0" width="221.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.5" y="910.0">java/util/concurrent/Executor..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/845367694.run (1,217 samples, 18.77%)</title><rect x="712.5" y="883.0" width="221.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.5" y="894.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (1,217 samples, 18.77%)</title><rect x="712.5" y="867.0" width="221.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.5" y="878.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="712.5" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="712.5" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="712.5" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.5" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="712.5" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (1,215 samples, 18.74%)</title><rect x="712.8" y="851.0" width="221.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="715.8" y="862.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="713.0" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="713.0" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.0" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="713.0" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="713.0" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="713.0" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="713.0" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="713.0" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.0" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="713.7" y="835.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="716.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (447 samples, 6.89%)</title><rect x="714.1" y="835.0" width="81.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.1" y="846.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.19%)</title><rect x="715.2" y="819.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.19%)</title><rect x="715.2" y="803.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.19%)</title><rect x="715.2" y="787.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.2" y="798.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="716.3" y="771.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="719.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="716.8" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="719.8" y="782.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="716.8" y="755.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="719.8" y="766.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="716.8" y="739.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="719.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (425 samples, 6.55%)</title><rect x="717.4" y="819.0" width="77.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.4" y="830.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.31%)</title><rect x="717.4" y="803.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.06%)</title><rect x="720.3" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.06%)</title><rect x="720.3" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.06%)</title><rect x="720.3" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.06%)</title><rect x="720.3" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.06%)</title><rect x="720.3" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="723.3" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="720.5" y="707.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="723.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (405 samples, 6.25%)</title><rect x="721.0" y="803.0" width="73.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.0" y="814.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (405 samples, 6.25%)</title><rect x="721.0" y="787.0" width="73.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.0" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (403 samples, 6.22%)</title><rect x="721.4" y="771.0" width="73.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.4" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (399 samples, 6.15%)</title><rect x="721.9" y="755.0" width="72.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.9" y="766.0">one/nio/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="722.8" y="739.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="725.8" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.20%)</title><rect x="723.4" y="739.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="726.4" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="724.1" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="727.1" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.09%)</title><rect x="724.7" y="723.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="727.7" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="725.0" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="728.0" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="725.4" y="707.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="728.4" y="718.0"></text>
</g>
<g>
<title>send (378 samples, 5.83%)</title><rect x="725.8" y="739.0" width="68.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="728.8" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (376 samples, 5.80%)</title><rect x="726.1" y="723.0" width="68.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="729.1" y="734.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (376 samples, 5.80%)</title><rect x="726.1" y="707.0" width="68.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="729.1" y="718.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (371 samples, 5.72%)</title><rect x="727.0" y="691.0" width="67.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.0" y="702.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (368 samples, 5.68%)</title><rect x="727.0" y="675.0" width="67.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="730.0" y="686.0">__sys_s..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="727.6" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="730.6" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (351 samples, 5.41%)</title><rect x="728.1" y="659.0" width="63.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.1" y="670.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="728.5" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.5" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (340 samples, 5.24%)</title><rect x="729.0" y="643.0" width="61.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="732.0" y="654.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (336 samples, 5.18%)</title><rect x="729.8" y="627.0" width="61.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="732.8" y="638.0">tcp_se..</text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="729.9" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="732.9" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (325 samples, 5.01%)</title><rect x="731.6" y="611.0" width="59.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="734.6" y="622.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="733.2" y="595.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.2" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="733.2" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="736.2" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.05%)</title><rect x="733.9" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="736.9" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.05%)</title><rect x="733.9" y="579.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.9" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (25 samples, 0.39%)</title><rect x="734.9" y="595.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="737.9" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (24 samples, 0.37%)</title><rect x="734.9" y="579.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="737.9" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (17 samples, 0.26%)</title><rect x="734.9" y="563.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="737.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.14%)</title><rect x="734.9" y="547.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="737.9" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.09%)</title><rect x="735.0" y="531.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="738.0" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="736.1" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.1" y="542.0"></text>
</g>
<g>
<title>memset (8 samples, 0.12%)</title><rect x="736.5" y="547.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="739.5" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="737.9" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="740.9" y="574.0"></text>
</g>
<g>
<title>memset (2 samples, 0.03%)</title><rect x="738.7" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="741.7" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.05%)</title><rect x="739.4" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.4" y="606.0"></text>
</g>
<g>
<title>tcp_push (275 samples, 4.24%)</title><rect x="740.1" y="595.0" width="50.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="743.1" y="606.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (275 samples, 4.24%)</title><rect x="740.1" y="579.0" width="50.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="743.1" y="590.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (275 samples, 4.24%)</title><rect x="740.1" y="563.0" width="50.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.1" y="574.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (260 samples, 4.01%)</title><rect x="740.3" y="547.0" width="47.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="743.3" y="558.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (250 samples, 3.86%)</title><rect x="741.4" y="531.0" width="45.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="744.4" y="542.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (250 samples, 3.86%)</title><rect x="741.4" y="515.0" width="45.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="744.4" y="526.0">__ip..</text>
</g>
<g>
<title>ip_local_out (247 samples, 3.81%)</title><rect x="741.9" y="499.0" width="45.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="744.9" y="510.0">ip_l..</text>
</g>
<g>
<title>ip_output (246 samples, 3.79%)</title><rect x="742.1" y="483.0" width="44.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="745.1" y="494.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (244 samples, 3.76%)</title><rect x="742.5" y="467.0" width="44.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="745.5" y="478.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (239 samples, 3.69%)</title><rect x="743.0" y="451.0" width="43.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.0" y="462.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (238 samples, 3.67%)</title><rect x="743.2" y="435.0" width="43.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="746.2" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (216 samples, 3.33%)</title><rect x="743.6" y="419.0" width="39.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="746.6" y="430.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (216 samples, 3.33%)</title><rect x="743.6" y="403.0" width="39.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="746.6" y="414.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (211 samples, 3.25%)</title><rect x="744.5" y="387.0" width="38.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="747.5" y="398.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (210 samples, 3.24%)</title><rect x="744.5" y="371.0" width="38.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="747.5" y="382.0">__s..</text>
</g>
<g>
<title>net_rx_action (207 samples, 3.19%)</title><rect x="745.0" y="355.0" width="37.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="748.0" y="366.0">net..</text>
</g>
<g>
<title>process_backlog (207 samples, 3.19%)</title><rect x="745.0" y="339.0" width="37.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="748.0" y="350.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (201 samples, 3.10%)</title><rect x="746.1" y="323.0" width="36.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="749.1" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (200 samples, 3.08%)</title><rect x="746.3" y="307.0" width="36.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="749.3" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="746.5" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (196 samples, 3.02%)</title><rect x="747.0" y="291.0" width="35.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="750.0" y="302.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (195 samples, 3.01%)</title><rect x="747.2" y="275.0" width="35.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="750.2" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (195 samples, 3.01%)</title><rect x="747.2" y="259.0" width="35.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="750.2" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (195 samples, 3.01%)</title><rect x="747.2" y="243.0" width="35.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="750.2" y="254.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (194 samples, 2.99%)</title><rect x="747.2" y="227.0" width="35.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="750.2" y="238.0">ip_..</text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="747.4" y="211.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (191 samples, 2.95%)</title><rect x="747.8" y="211.0" width="34.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="750.8" y="222.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.08%)</title><rect x="748.5" y="195.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="751.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="749.6" y="195.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="752.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (178 samples, 2.75%)</title><rect x="750.1" y="195.0" width="32.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.1" y="206.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (176 samples, 2.71%)</title><rect x="750.5" y="179.0" width="32.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.5" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (12 samples, 0.19%)</title><rect x="750.9" y="163.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="753.9" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.19%)</title><rect x="750.9" y="147.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.9" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.19%)</title><rect x="750.9" y="131.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="753.9" y="142.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.19%)</title><rect x="750.9" y="115.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="753.9" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.17%)</title><rect x="750.9" y="99.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack (36 samples, 0.56%)</title><rect x="753.2" y="163.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="756.2" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (23 samples, 0.35%)</title><rect x="755.2" y="147.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="758.2" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.25%)</title><rect x="755.8" y="131.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="758.8" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.09%)</title><rect x="755.8" y="115.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="758.8" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.09%)</title><rect x="755.8" y="99.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="758.8" y="110.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.09%)</title><rect x="755.8" y="83.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="758.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.15%)</title><rect x="756.9" y="115.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="759.9" y="126.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.15%)</title><rect x="756.9" y="99.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="759.9" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="758.3" y="83.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="761.3" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="758.3" y="67.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="761.3" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.05%)</title><rect x="758.9" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="761.9" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (117 samples, 1.80%)</title><rect x="759.8" y="163.0" width="21.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="762.8" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (116 samples, 1.79%)</title><rect x="760.0" y="147.0" width="21.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="763.0" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (115 samples, 1.77%)</title><rect x="760.1" y="131.0" width="21.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (115 samples, 1.77%)</title><rect x="760.1" y="115.0" width="21.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="763.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (115 samples, 1.77%)</title><rect x="760.1" y="99.0" width="21.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="763.1" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="781.1" y="163.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="784.1" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="781.4" y="163.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="784.4" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="781.6" y="147.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.6" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="782.0" y="163.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.0" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.31%)</title><rect x="782.9" y="419.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.9" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.31%)</title><rect x="782.9" y="403.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.9" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.15%)</title><rect x="783.8" y="387.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="786.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.11%)</title><rect x="784.2" y="371.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="787.2" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="784.4" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="787.4" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="785.8" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="788.8" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="786.0" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="789.0" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="786.0" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="789.0" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.14%)</title><rect x="788.0" y="547.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="791.0" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.09%)</title><rect x="788.5" y="531.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="791.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="788.7" y="515.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="791.7" y="526.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="788.7" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="791.7" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="788.7" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="791.7" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="789.3" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="792.3" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.03%)</title><rect x="790.4" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="793.4" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.09%)</title><rect x="790.9" y="643.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="793.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.09%)</title><rect x="790.9" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="793.9" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.09%)</title><rect x="790.9" y="611.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="793.9" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (6 samples, 0.09%)</title><rect x="790.9" y="595.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="793.9" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.05%)</title><rect x="791.4" y="579.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="794.4" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.17%)</title><rect x="792.0" y="659.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="795.0" y="670.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.12%)</title><rect x="792.0" y="643.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="795.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.12%)</title><rect x="792.0" y="627.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="795.0" y="638.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.12%)</title><rect x="792.0" y="611.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="795.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="793.5" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="796.5" y="654.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.05%)</title><rect x="794.0" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="797.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="794.7" y="819.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="794.9" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="794.9" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (761 samples, 11.74%)</title><rect x="795.5" y="835.0" width="138.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.5" y="846.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (754 samples, 11.63%)</title><rect x="795.5" y="819.0" width="137.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.5" y="830.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (750 samples, 11.57%)</title><rect x="796.2" y="803.0" width="136.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.2" y="814.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (603 samples, 9.30%)</title><rect x="798.2" y="787.0" width="109.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="801.2" y="798.0">Java_org_rock..</text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.03%)</title><rect x="798.5" y="771.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="801.5" y="782.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="799.5" y="771.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="802.5" y="782.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (593 samples, 9.15%)</title><rect x="800.0" y="771.0" width="107.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="803.0" y="782.0">rocksdb_put_h..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.05%)</title><rect x="800.5" y="755.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="803.5" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.05%)</title><rect x="801.1" y="755.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="804.1" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.11%)</title><rect x="801.6" y="755.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="804.6" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="801.8" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="804.8" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.05%)</title><rect x="802.2" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="805.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (577 samples, 8.90%)</title><rect x="802.9" y="755.0" width="105.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.9" y="766.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="803.1" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="806.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (574 samples, 8.85%)</title><rect x="803.5" y="739.0" width="104.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="806.5" y="750.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (571 samples, 8.81%)</title><rect x="803.5" y="723.0" width="103.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="806.5" y="734.0">rocksdb::DB:..</text>
</g>
<g>
<title>cfree (3 samples, 0.05%)</title><rect x="803.6" y="707.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="806.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (546 samples, 8.42%)</title><rect x="804.2" y="707.0" width="99.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="807.2" y="718.0">rocksdb::DBI..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (3 samples, 0.05%)</title><rect x="804.4" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="807.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.05%)</title><rect x="805.3" y="691.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="808.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (525 samples, 8.10%)</title><rect x="805.8" y="691.0" width="95.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="808.8" y="702.0">rocksdb::DB..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="810.0" y="675.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="813.0" y="686.0"></text>
</g>
<g>
<title>__sched_yield (21 samples, 0.32%)</title><rect x="810.4" y="675.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="813.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.22%)</title><rect x="811.7" y="659.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.22%)</title><rect x="811.7" y="643.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="814.7" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (12 samples, 0.19%)</title><rect x="812.0" y="627.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="815.0" y="638.0"></text>
</g>
<g>
<title>do_sched_yield (12 samples, 0.19%)</title><rect x="812.0" y="611.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="815.0" y="622.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.19%)</title><rect x="812.0" y="595.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="815.0" y="606.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.15%)</title><rect x="812.4" y="579.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="815.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.06%)</title><rect x="814.2" y="675.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="817.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.05%)</title><rect x="815.7" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="818.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (170 samples, 2.62%)</title><rect x="816.2" y="675.0" width="30.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="819.2" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (165 samples, 2.54%)</title><rect x="816.7" y="659.0" width="30.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="819.7" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.03%)</title><rect x="816.9" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="819.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (162 samples, 2.50%)</title><rect x="817.3" y="643.0" width="29.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="820.3" y="654.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (12 samples, 0.19%)</title><rect x="817.7" y="627.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="820.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (136 samples, 2.10%)</title><rect x="820.2" y="627.0" width="24.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="823.2" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="820.4" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="823.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (133 samples, 2.05%)</title><rect x="820.7" y="611.0" width="24.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="823.7" y="622.0">r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="821.5" y="595.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="824.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="822.0" y="595.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="825.0" y="606.0"></text>
</g>
<g>
<title>__write (123 samples, 1.90%)</title><rect x="822.4" y="595.0" width="22.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="825.4" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 1.79%)</title><rect x="823.7" y="579.0" width="21.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="826.7" y="590.0">e..</text>
</g>
<g>
<title>do_syscall_64 (116 samples, 1.79%)</title><rect x="823.7" y="563.0" width="21.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="826.7" y="574.0">d..</text>
</g>
<g>
<title>__x64_sys_write (111 samples, 1.71%)</title><rect x="824.4" y="547.0" width="20.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="827.4" y="558.0"></text>
</g>
<g>
<title>ksys_write (110 samples, 1.70%)</title><rect x="824.6" y="531.0" width="20.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="827.6" y="542.0"></text>
</g>
<g>
<title>__fdget_pos (9 samples, 0.14%)</title><rect x="824.6" y="515.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="827.6" y="526.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.08%)</title><rect x="824.8" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="827.8" y="510.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.08%)</title><rect x="824.8" y="483.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="827.8" y="494.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="825.7" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.7" y="510.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="826.2" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="829.2" y="526.0"></text>
</g>
<g>
<title>vfs_write (97 samples, 1.50%)</title><rect x="826.9" y="515.0" width="17.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="829.9" y="526.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="827.8" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="830.8" y="510.0"></text>
</g>
<g>
<title>__vfs_write (84 samples, 1.30%)</title><rect x="828.2" y="499.0" width="15.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.2" y="510.0"></text>
</g>
<g>
<title>new_sync_write (83 samples, 1.28%)</title><rect x="828.4" y="483.0" width="15.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="831.4" y="494.0"></text>
</g>
<g>
<title>ext4_file_write_iter (79 samples, 1.22%)</title><rect x="828.9" y="467.0" width="14.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="831.9" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (78 samples, 1.20%)</title><rect x="828.9" y="451.0" width="14.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="831.9" y="462.0"></text>
</g>
<g>
<title>__mnt_want_write_file (2 samples, 0.03%)</title><rect x="829.1" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.1" y="446.0"></text>
</g>
<g>
<title>file_update_time (8 samples, 0.12%)</title><rect x="829.8" y="435.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="832.8" y="446.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="830.4" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.4" y="430.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.03%)</title><rect x="830.8" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="833.8" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="830.8" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="833.8" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="830.8" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="833.8" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="830.8" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.8" y="382.0"></text>
</g>
<g>
<title>generic_perform_write (64 samples, 0.99%)</title><rect x="831.3" y="435.0" width="11.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="834.3" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_begin (28 samples, 0.43%)</title><rect x="831.7" y="419.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.7" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (13 samples, 0.20%)</title><rect x="831.9" y="403.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="834.9" y="414.0"></text>
</g>
<g>
<title>ext4_journal_check_start (4 samples, 0.06%)</title><rect x="831.9" y="387.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.9" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (9 samples, 0.14%)</title><rect x="832.6" y="387.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="835.6" y="398.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.03%)</title><rect x="832.6" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="835.6" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="833.1" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="836.1" y="382.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.06%)</title><rect x="833.5" y="371.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="836.5" y="382.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.03%)</title><rect x="833.9" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="836.9" y="366.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.05%)</title><rect x="834.2" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="837.2" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (11 samples, 0.17%)</title><rect x="834.8" y="403.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.8" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.15%)</title><rect x="834.9" y="387.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="837.9" y="398.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.11%)</title><rect x="835.5" y="371.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.5" y="382.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="836.4" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.4" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_end (30 samples, 0.46%)</title><rect x="836.8" y="419.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.8" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.08%)</title><rect x="836.8" y="403.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="839.8" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.08%)</title><rect x="836.8" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="839.8" y="398.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="837.1" y="371.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.1" y="382.0"></text>
</g>
<g>
<title>generic_write_end (24 samples, 0.37%)</title><rect x="837.9" y="403.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.9" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (22 samples, 0.34%)</title><rect x="838.0" y="387.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="841.0" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (22 samples, 0.34%)</title><rect x="838.0" y="371.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.0" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (21 samples, 0.32%)</title><rect x="838.2" y="355.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="841.2" y="366.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (15 samples, 0.23%)</title><rect x="838.4" y="339.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="841.4" y="350.0"></text>
</g>
<g>
<title>__brelse (2 samples, 0.03%)</title><rect x="838.6" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.6" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (11 samples, 0.17%)</title><rect x="839.1" y="323.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="842.1" y="334.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (7 samples, 0.11%)</title><rect x="839.9" y="307.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="842.9" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (6 samples, 0.09%)</title><rect x="840.0" y="291.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="843.0" y="302.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.08%)</title><rect x="840.2" y="275.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="843.2" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.08%)</title><rect x="840.2" y="259.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="843.2" y="270.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.08%)</title><rect x="841.1" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.1" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.06%)</title><rect x="841.1" y="323.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="844.1" y="334.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.05%)</title><rect x="841.3" y="307.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="844.3" y="318.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.05%)</title><rect x="841.3" y="291.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="844.3" y="302.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.03%)</title><rect x="841.5" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="844.5" y="286.0"></text>
</g>
<g>
<title>unlock_page (3 samples, 0.05%)</title><rect x="842.4" y="419.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="845.4" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.08%)</title><rect x="843.7" y="499.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.7" y="510.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.06%)</title><rect x="843.9" y="483.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="846.9" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="843.9" y="467.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="846.9" y="478.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="843.9" y="451.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (9 samples, 0.14%)</title><rect x="845.1" y="627.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="848.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (6 samples, 0.09%)</title><rect x="845.7" y="611.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="848.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.06%)</title><rect x="847.3" y="675.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="850.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.03%)</title><rect x="848.6" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="851.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (62 samples, 0.96%)</title><rect x="849.1" y="675.0" width="11.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="852.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (60 samples, 0.93%)</title><rect x="849.5" y="659.0" width="10.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="852.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (59 samples, 0.91%)</title><rect x="849.7" y="643.0" width="10.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="852.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (57 samples, 0.88%)</title><rect x="849.9" y="627.0" width="10.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="852.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (56 samples, 0.86%)</title><rect x="850.0" y="611.0" width="10.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="853.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (52 samples, 0.80%)</title><rect x="850.4" y="595.0" width="9.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="853.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (7 samples, 0.11%)</title><rect x="850.6" y="579.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="853.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.06%)</title><rect x="851.0" y="563.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="854.0" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (42 samples, 0.65%)</title><rect x="851.9" y="579.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="854.9" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (36 samples, 0.56%)</title><rect x="852.8" y="563.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="855.8" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (16 samples, 0.25%)</title><rect x="855.0" y="547.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="858.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.20%)</title><rect x="855.5" y="531.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="858.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (4 samples, 0.06%)</title><rect x="856.1" y="515.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="859.1" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="856.8" y="515.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="859.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="857.3" y="515.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="860.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.11%)</title><rect x="857.9" y="547.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="860.9" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.06%)</title><rect x="858.4" y="531.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="861.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (73 samples, 1.13%)</title><rect x="860.4" y="675.0" width="13.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="863.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="861.0" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="864.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (68 samples, 1.05%)</title><rect x="861.3" y="659.0" width="12.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="864.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (67 samples, 1.03%)</title><rect x="861.5" y="643.0" width="12.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="864.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (65 samples, 1.00%)</title><rect x="861.9" y="627.0" width="11.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="864.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (2 samples, 0.03%)</title><rect x="862.2" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="865.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.03%)</title><rect x="862.6" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="865.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (57 samples, 0.88%)</title><rect x="863.0" y="611.0" width="10.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="866.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (54 samples, 0.83%)</title><rect x="863.5" y="595.0" width="9.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="866.5" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (3 samples, 0.05%)</title><rect x="865.0" y="579.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="868.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="865.2" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="868.2" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.03%)</title><rect x="865.5" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="868.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (40 samples, 0.62%)</title><rect x="866.1" y="579.0" width="7.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="869.1" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (40 samples, 0.62%)</title><rect x="866.1" y="563.0" width="7.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="869.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (38 samples, 0.59%)</title><rect x="866.1" y="547.0" width="6.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="869.1" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (19 samples, 0.29%)</title><rect x="869.0" y="531.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="872.0" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (4 samples, 0.06%)</title><rect x="869.2" y="515.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="872.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.20%)</title><rect x="870.1" y="515.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="873.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (2 samples, 0.03%)</title><rect x="870.4" y="499.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="873.4" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.14%)</title><rect x="870.8" y="499.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="873.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.05%)</title><rect x="872.4" y="531.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="875.4" y="542.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.03%)</title><rect x="873.3" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="876.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (78 samples, 1.20%)</title><rect x="874.1" y="675.0" width="14.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="877.1" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (16 samples, 0.25%)</title><rect x="884.6" y="659.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="887.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.19%)</title><rect x="885.4" y="643.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="888.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.19%)</title><rect x="885.4" y="627.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="888.4" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.15%)</title><rect x="885.7" y="611.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.7" y="622.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.15%)</title><rect x="885.7" y="595.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.7" y="606.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.09%)</title><rect x="886.3" y="579.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="889.3" y="590.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.06%)</title><rect x="886.6" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="887.7" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="890.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (57 samples, 0.88%)</title><rect x="888.3" y="675.0" width="10.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="891.3" y="686.0"></text>
</g>
<g>
<title>__sched_yield (12 samples, 0.19%)</title><rect x="888.3" y="659.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="891.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.12%)</title><rect x="889.0" y="643.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="892.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.12%)</title><rect x="889.0" y="627.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="892.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (8 samples, 0.12%)</title><rect x="889.0" y="611.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="892.0" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (8 samples, 0.12%)</title><rect x="889.0" y="595.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.0" y="606.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.12%)</title><rect x="889.0" y="579.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.0" y="590.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.11%)</title><rect x="889.2" y="563.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="892.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (45 samples, 0.69%)</title><rect x="890.5" y="659.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="893.5" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (13 samples, 0.20%)</title><rect x="896.1" y="643.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="899.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.12%)</title><rect x="897.0" y="627.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="900.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.12%)</title><rect x="897.0" y="611.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.09%)</title><rect x="897.4" y="595.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.4" y="606.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="897.4" y="579.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.4" y="590.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="897.5" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="898.8" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="901.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (5 samples, 0.08%)</title><rect x="899.2" y="675.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="902.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (3 samples, 0.05%)</title><rect x="899.5" y="659.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="902.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="900.5" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="903.5" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="900.5" y="659.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="903.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="900.8" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="903.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.03%)</title><rect x="901.4" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.05%)</title><rect x="901.9" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="904.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.05%)</title><rect x="903.6" y="707.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="906.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.17%)</title><rect x="904.1" y="707.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="907.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.05%)</title><rect x="904.5" y="691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="907.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="905.0" y="691.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="908.0" y="702.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (4 samples, 0.06%)</title><rect x="906.1" y="707.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="909.1" y="718.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="907.0" y="707.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="910.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="907.6" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.63%)</title><rect x="907.9" y="787.0" width="7.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="910.9" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="907.9" y="771.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="910.9" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.05%)</title><rect x="908.5" y="771.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="911.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (25 samples, 0.39%)</title><rect x="909.0" y="771.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="912.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.31%)</title><rect x="909.9" y="755.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.31%)</title><rect x="909.9" y="739.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.23%)</title><rect x="910.8" y="723.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="913.8" y="734.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.20%)</title><rect x="911.0" y="707.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.0" y="718.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.20%)</title><rect x="911.0" y="691.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.0" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.06%)</title><rect x="911.2" y="675.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="914.2" y="686.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="911.4" y="659.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="914.4" y="670.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.05%)</title><rect x="911.4" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="914.4" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="911.4" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="914.4" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.09%)</title><rect x="911.9" y="675.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.9" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="912.7" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.7" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="912.7" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="915.7" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.09%)</title><rect x="913.6" y="771.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="916.6" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="914.7" y="771.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="917.7" y="782.0"></text>
</g>
<g>
<title>__libc_malloc (6 samples, 0.09%)</title><rect x="915.4" y="787.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="918.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (83 samples, 1.28%)</title><rect x="916.5" y="787.0" width="15.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="919.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 1.08%)</title><rect x="918.8" y="771.0" width="12.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.05%)</title><rect x="919.2" y="755.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.2" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (66 samples, 1.02%)</title><rect x="919.6" y="739.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.6" y="750.0"></text>
</g>
<g>
<title>do_futex (65 samples, 1.00%)</title><rect x="919.6" y="723.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="922.6" y="734.0"></text>
</g>
<g>
<title>futex_wake (64 samples, 0.99%)</title><rect x="919.8" y="707.0" width="11.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="922.8" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="920.5" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.5" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="920.8" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="923.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (55 samples, 0.85%)</title><rect x="921.4" y="691.0" width="10.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.4" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (54 samples, 0.83%)</title><rect x="921.6" y="675.0" width="9.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.6" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (53 samples, 0.82%)</title><rect x="921.8" y="659.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="924.8" y="670.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="931.6" y="787.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="934.6" y="798.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="931.6" y="771.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="934.6" y="782.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="931.6" y="755.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="934.6" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.03%)</title><rect x="932.1" y="787.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="935.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (7 samples, 0.11%)</title><rect x="932.7" y="819.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.7" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="932.9" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.9" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="932.9" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="932.9" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.9" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="932.9" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="932.9" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.9" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="933.2" y="803.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="936.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (2 samples, 0.03%)</title><rect x="933.9" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="933.9" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="933.9" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (5 samples, 0.08%)</title><rect x="934.3" y="915.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.08%)</title><rect x="934.3" y="899.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (5 samples, 0.08%)</title><rect x="934.3" y="883.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="934.9" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="934.9" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="934.9" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (80 samples, 1.23%)</title><rect x="935.4" y="915.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (80 samples, 1.23%)</title><rect x="935.4" y="899.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 0.52%)</title><rect x="935.4" y="883.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.08%)</title><rect x="935.6" y="867.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.06%)</title><rect x="936.5" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.06%)</title><rect x="936.5" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.06%)</title><rect x="936.5" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.06%)</title><rect x="936.5" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.06%)</title><rect x="936.5" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="936.9" y="787.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="939.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="936.9" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="936.9" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="939.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="936.9" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.9" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="936.9" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.9" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="936.9" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="939.9" y="718.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="936.9" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="936.9" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.9" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="936.9" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (24 samples, 0.37%)</title><rect x="937.2" y="867.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.32%)</title><rect x="937.8" y="851.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.8" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.12%)</title><rect x="938.1" y="835.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="941.1" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="938.3" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="941.3" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="938.9" y="819.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="941.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="939.0" y="803.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="942.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.15%)</title><rect x="939.6" y="835.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="942.6" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.09%)</title><rect x="939.6" y="819.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="942.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="940.3" y="803.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="943.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="940.3" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="940.3" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="943.3" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="940.3" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.3" y="766.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="940.3" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="943.3" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="940.7" y="819.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="943.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.08%)</title><rect x="941.6" y="883.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.08%)</title><rect x="941.6" y="867.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.08%)</title><rect x="941.6" y="851.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="941.6" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="942.1" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="942.1" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (41 samples, 0.63%)</title><rect x="942.5" y="883.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (41 samples, 0.63%)</title><rect x="942.5" y="867.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (41 samples, 0.63%)</title><rect x="942.5" y="851.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (41 samples, 0.63%)</title><rect x="942.5" y="835.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.48%)</title><rect x="944.3" y="819.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.11%)</title><rect x="944.5" y="803.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="947.5" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="945.0" y="787.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="948.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="945.4" y="787.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="948.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 0.35%)</title><rect x="945.8" y="803.0" width="4.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="948.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.34%)</title><rect x="946.0" y="787.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.34%)</title><rect x="946.0" y="771.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.32%)</title><rect x="946.1" y="755.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="949.1" y="766.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.32%)</title><rect x="946.1" y="739.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="949.1" y="750.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.32%)</title><rect x="946.1" y="723.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="949.1" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="946.1" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="949.1" y="718.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.29%)</title><rect x="946.5" y="707.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="949.5" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.28%)</title><rect x="946.7" y="691.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="949.7" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.28%)</title><rect x="946.7" y="675.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="949.7" y="686.0"></text>
</g>
<g>
<title>[async_worker-3 tid=4303] (1,318 samples, 20.33%)</title><rect x="950.1" y="979.0" width="239.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="953.1" y="990.0">[async_worker-3 tid=4303]</text>
</g>
<g>
<title>java/lang/Thread.run (1,318 samples, 20.33%)</title><rect x="950.1" y="963.0" width="239.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.1" y="974.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,318 samples, 20.33%)</title><rect x="950.1" y="947.0" width="239.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.1" y="958.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,318 samples, 20.33%)</title><rect x="950.1" y="931.0" width="239.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.1" y="942.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.05%)</title><rect x="951.1" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.05%)</title><rect x="951.1" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.1" y="910.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.05%)</title><rect x="951.1" y="883.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="954.1" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="951.1" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="954.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,209 samples, 18.65%)</title><rect x="951.6" y="915.0" width="220.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.6" y="926.0">java/util/concurrent/FutureTa..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1,205 samples, 18.58%)</title><rect x="952.0" y="899.0" width="219.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.0" y="910.0">java/util/concurrent/Executor..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/845367694.run (1,205 samples, 18.58%)</title><rect x="952.0" y="883.0" width="219.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.0" y="894.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (1,205 samples, 18.58%)</title><rect x="952.0" y="867.0" width="219.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="955.0" y="878.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (1,205 samples, 18.58%)</title><rect x="952.0" y="851.0" width="219.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.0" y="862.0">ru/mail/polis/service/manikhi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.09%)</title><rect x="952.7" y="835.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.09%)</title><rect x="952.7" y="819.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.7" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="952.7" y="803.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="952.7" y="787.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.7" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="952.7" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="952.7" y="755.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="952.7" y="739.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (439 samples, 6.77%)</title><rect x="954.0" y="835.0" width="79.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.0" y="846.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.20%)</title><rect x="954.9" y="819.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.20%)</title><rect x="954.9" y="803.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.20%)</title><rect x="954.9" y="787.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.9" y="798.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="955.8" y="771.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="958.8" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.09%)</title><rect x="956.1" y="771.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="959.1" y="782.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.08%)</title><rect x="956.3" y="755.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="959.3" y="766.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.08%)</title><rect x="956.3" y="739.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="959.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (410 samples, 6.32%)</title><rect x="957.2" y="819.0" width="74.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.2" y="830.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="957.4" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.19%)</title><rect x="957.8" y="803.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (395 samples, 6.09%)</title><rect x="960.0" y="803.0" width="71.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.0" y="814.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (395 samples, 6.09%)</title><rect x="960.0" y="787.0" width="71.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.0" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (393 samples, 6.06%)</title><rect x="960.3" y="771.0" width="71.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.3" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (390 samples, 6.01%)</title><rect x="960.9" y="755.0" width="71.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.9" y="766.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.12%)</title><rect x="962.0" y="739.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="965.0" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="962.2" y="723.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="965.2" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.06%)</title><rect x="962.7" y="723.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="965.7" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="962.7" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="965.7" y="718.0"></text>
</g>
<g>
<title>send (376 samples, 5.80%)</title><rect x="963.4" y="739.0" width="68.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="966.4" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (371 samples, 5.72%)</title><rect x="964.3" y="723.0" width="67.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="967.3" y="734.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (371 samples, 5.72%)</title><rect x="964.3" y="707.0" width="67.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.3" y="718.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (366 samples, 5.64%)</title><rect x="964.5" y="691.0" width="66.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="967.5" y="702.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (366 samples, 5.64%)</title><rect x="964.5" y="675.0" width="66.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="967.5" y="686.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (355 samples, 5.48%)</title><rect x="965.1" y="659.0" width="64.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="968.1" y="670.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (348 samples, 5.37%)</title><rect x="965.2" y="643.0" width="63.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.2" y="654.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (346 samples, 5.34%)</title><rect x="965.4" y="627.0" width="63.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.4" y="638.0">tcp_se..</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="965.8" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.8" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="966.2" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (336 samples, 5.18%)</title><rect x="967.1" y="611.0" width="61.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.1" y="622.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.08%)</title><rect x="968.5" y="595.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="971.5" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="968.7" y="579.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="971.7" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="969.4" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="972.4" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (28 samples, 0.43%)</title><rect x="969.8" y="595.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="972.8" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (26 samples, 0.40%)</title><rect x="970.2" y="579.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="973.2" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (15 samples, 0.23%)</title><rect x="970.2" y="563.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="973.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.12%)</title><rect x="970.2" y="547.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="973.2" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.09%)</title><rect x="970.3" y="531.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="973.3" y="542.0"></text>
</g>
<g>
<title>memset (6 samples, 0.09%)</title><rect x="971.8" y="547.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="974.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.09%)</title><rect x="972.9" y="563.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="975.9" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="973.4" y="547.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="976.4" y="558.0"></text>
</g>
<g>
<title>memset (5 samples, 0.08%)</title><rect x="974.0" y="563.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (290 samples, 4.47%)</title><rect x="974.9" y="595.0" width="52.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="977.9" y="606.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (290 samples, 4.47%)</title><rect x="974.9" y="579.0" width="52.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.9" y="590.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (287 samples, 4.43%)</title><rect x="975.4" y="563.0" width="52.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="978.4" y="574.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (268 samples, 4.13%)</title><rect x="976.3" y="547.0" width="48.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="979.3" y="558.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (257 samples, 3.96%)</title><rect x="977.4" y="531.0" width="46.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="980.4" y="542.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (255 samples, 3.93%)</title><rect x="977.4" y="515.0" width="46.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="980.4" y="526.0">__ip..</text>
</g>
<g>
<title>ip_local_out (247 samples, 3.81%)</title><rect x="978.5" y="499.0" width="45.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="981.5" y="510.0">ip_l..</text>
</g>
<g>
<title>ip_output (242 samples, 3.73%)</title><rect x="979.4" y="483.0" width="44.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.4" y="494.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (240 samples, 3.70%)</title><rect x="979.8" y="467.0" width="43.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.8" y="478.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="979.8" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="982.8" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (237 samples, 3.66%)</title><rect x="980.2" y="451.0" width="43.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="983.2" y="462.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (236 samples, 3.64%)</title><rect x="980.4" y="435.0" width="42.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="983.4" y="446.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (212 samples, 3.27%)</title><rect x="980.5" y="419.0" width="38.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.5" y="430.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (211 samples, 3.25%)</title><rect x="980.7" y="403.0" width="38.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="983.7" y="414.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (207 samples, 3.19%)</title><rect x="981.4" y="387.0" width="37.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.4" y="398.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (207 samples, 3.19%)</title><rect x="981.4" y="371.0" width="37.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.4" y="382.0">__s..</text>
</g>
<g>
<title>net_rx_action (197 samples, 3.04%)</title><rect x="983.1" y="355.0" width="35.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="986.1" y="366.0">net..</text>
</g>
<g>
<title>process_backlog (197 samples, 3.04%)</title><rect x="983.1" y="339.0" width="35.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="986.1" y="350.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (194 samples, 2.99%)</title><rect x="983.6" y="323.0" width="35.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.6" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (192 samples, 2.96%)</title><rect x="984.0" y="307.0" width="34.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="987.0" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.06%)</title><rect x="984.0" y="291.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv (187 samples, 2.88%)</title><rect x="984.7" y="291.0" width="34.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="987.7" y="302.0">ip..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.05%)</title><rect x="984.7" y="275.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="985.3" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="988.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (182 samples, 2.81%)</title><rect x="985.6" y="275.0" width="33.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="988.6" y="286.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (181 samples, 2.79%)</title><rect x="985.8" y="259.0" width="33.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="988.8" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (180 samples, 2.78%)</title><rect x="985.8" y="243.0" width="32.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="988.8" y="254.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (180 samples, 2.78%)</title><rect x="985.8" y="227.0" width="32.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="988.8" y="238.0">ip..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="986.0" y="211.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="989.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (174 samples, 2.68%)</title><rect x="986.9" y="211.0" width="31.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="989.9" y="222.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.06%)</title><rect x="987.6" y="195.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="990.6" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.09%)</title><rect x="988.4" y="195.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="991.4" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.06%)</title><rect x="988.4" y="179.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="991.4" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="989.1" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (160 samples, 2.47%)</title><rect x="989.5" y="195.0" width="29.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.5" y="206.0">tc..</text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="989.5" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="992.5" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="989.8" y="179.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (154 samples, 2.38%)</title><rect x="990.5" y="179.0" width="28.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="993.5" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.09%)</title><rect x="991.1" y="163.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="994.1" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.09%)</title><rect x="991.1" y="147.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.09%)</title><rect x="991.1" y="131.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="994.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="991.3" y="115.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="991.6" y="99.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (39 samples, 0.60%)</title><rect x="992.2" y="163.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="995.2" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (30 samples, 0.46%)</title><rect x="993.6" y="147.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="996.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.32%)</title><rect x="994.7" y="131.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="997.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="994.9" y="115.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="997.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="995.1" y="99.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="998.1" y="110.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.22%)</title><rect x="995.8" y="115.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.8" y="126.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.20%)</title><rect x="995.8" y="99.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="998.8" y="110.0"></text>
</g>
<g>
<title>skb_free_head (11 samples, 0.17%)</title><rect x="996.2" y="83.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="999.2" y="94.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.17%)</title><rect x="996.2" y="67.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="999.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.14%)</title><rect x="996.5" y="51.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.5" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (3 samples, 0.05%)</title><rect x="997.6" y="35.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1000.6" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="998.6" y="131.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1001.6" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (98 samples, 1.51%)</title><rect x="999.3" y="163.0" width="17.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1002.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (98 samples, 1.51%)</title><rect x="999.3" y="147.0" width="17.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1002.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (96 samples, 1.48%)</title><rect x="999.6" y="131.0" width="17.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1002.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (96 samples, 1.48%)</title><rect x="999.6" y="115.0" width="17.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1002.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (96 samples, 1.48%)</title><rect x="999.6" y="99.0" width="17.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1002.6" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="1017.1" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1020.1" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="1017.5" y="163.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1020.5" y="174.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="1018.2" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1021.2" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (23 samples, 0.35%)</title><rect x="1019.1" y="419.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1022.1" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.31%)</title><rect x="1019.1" y="403.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.09%)</title><rect x="1020.8" y="387.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1023.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.08%)</title><rect x="1020.9" y="371.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1023.9" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="1020.9" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1023.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="1021.3" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1024.3" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="1021.3" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1024.3" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="1021.3" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1024.3" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="1022.2" y="387.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1025.2" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1022.8" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1025.8" y="414.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="1023.8" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.8" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="1024.6" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1027.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.15%)</title><rect x="1025.5" y="547.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1028.5" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.11%)</title><rect x="1026.0" y="531.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.0" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.09%)</title><rect x="1026.2" y="515.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1029.2" y="526.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.09%)</title><rect x="1026.2" y="499.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1029.2" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.09%)</title><rect x="1026.2" y="483.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1029.2" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.05%)</title><rect x="1027.7" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1030.7" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="1027.9" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1030.9" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.09%)</title><rect x="1028.6" y="643.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1031.6" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="1028.8" y="627.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1031.8" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.08%)</title><rect x="1028.8" y="611.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1031.8" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.05%)</title><rect x="1028.9" y="595.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1031.9" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="1029.1" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1032.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.12%)</title><rect x="1029.7" y="659.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1032.7" y="670.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.11%)</title><rect x="1029.7" y="643.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1032.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.11%)</title><rect x="1029.7" y="627.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1032.7" y="638.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.11%)</title><rect x="1029.7" y="611.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1032.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.06%)</title><rect x="1031.1" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1034.1" y="702.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="1031.3" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1034.3" y="686.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.05%)</title><rect x="1031.3" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1034.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.17%)</title><rect x="1031.9" y="819.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="1033.1" y="803.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="1033.1" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1036.1" y="798.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="1034.0" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.0" y="846.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="1034.0" y="819.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.0" y="830.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="1034.0" y="803.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.0" y="814.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="1034.0" y="787.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.0" y="798.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="1034.0" y="771.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1037.0" y="782.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="1034.0" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1037.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.upsert (752 samples, 11.60%)</title><rect x="1034.4" y="835.0" width="136.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.4" y="846.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (744 samples, 11.47%)</title><rect x="1034.4" y="819.0" width="135.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.4" y="830.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (743 samples, 11.46%)</title><rect x="1034.6" y="803.0" width="135.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1037.6" y="814.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (591 samples, 9.11%)</title><rect x="1035.5" y="787.0" width="107.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1038.5" y="798.0">Java_org_rock..</text>
</g>
<g>
<title>cfree (2 samples, 0.03%)</title><rect x="1035.9" y="771.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1038.9" y="782.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (583 samples, 8.99%)</title><rect x="1036.9" y="771.0" width="106.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1039.9" y="782.0">rocksdb_put_h..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="1037.5" y="755.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1040.5" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="1037.9" y="755.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1040.9" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.09%)</title><rect x="1038.2" y="755.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1041.2" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.05%)</title><rect x="1038.2" y="739.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.2" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.05%)</title><rect x="1038.8" y="739.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1041.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (568 samples, 8.76%)</title><rect x="1039.3" y="755.0" width="103.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1042.3" y="766.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (566 samples, 8.73%)</title><rect x="1039.7" y="739.0" width="103.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.7" y="750.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (563 samples, 8.68%)</title><rect x="1039.7" y="723.0" width="102.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.7" y="734.0">rocksdb::DB:..</text>
</g>
<g>
<title>cfree (2 samples, 0.03%)</title><rect x="1040.2" y="707.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1043.2" y="718.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="1040.6" y="707.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1043.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (534 samples, 8.24%)</title><rect x="1041.0" y="707.0" width="97.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1044.0" y="718.0">rocksdb::DB..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="1041.5" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1044.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (514 samples, 7.93%)</title><rect x="1042.0" y="691.0" width="93.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.0" y="702.0">rocksdb::DB..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="1046.6" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1049.6" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1047.0" y="675.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1050.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1047.0" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1050.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1047.0" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1050.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="1047.0" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1050.0" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="1047.0" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1050.0" y="622.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1047.0" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1050.0" y="606.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="1047.0" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1050.0" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="1047.0" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1050.0" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1047.0" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.0" y="558.0"></text>
</g>
<g>
<title>__sched_yield (11 samples, 0.17%)</title><rect x="1047.3" y="675.0" width="2.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1050.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.11%)</title><rect x="1048.1" y="659.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1051.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.11%)</title><rect x="1048.1" y="643.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1051.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (6 samples, 0.09%)</title><rect x="1048.2" y="627.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1051.2" y="638.0"></text>
</g>
<g>
<title>do_sched_yield (6 samples, 0.09%)</title><rect x="1048.2" y="611.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1051.2" y="622.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.09%)</title><rect x="1048.2" y="595.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1051.2" y="606.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.09%)</title><rect x="1048.2" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1051.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.12%)</title><rect x="1049.3" y="675.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1052.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (162 samples, 2.50%)</title><rect x="1051.3" y="675.0" width="29.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1054.3" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (154 samples, 2.38%)</title><rect x="1051.9" y="659.0" width="28.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.9" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.03%)</title><rect x="1052.4" y="643.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1055.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (149 samples, 2.30%)</title><rect x="1052.8" y="643.0" width="27.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1055.8" y="654.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (8 samples, 0.12%)</title><rect x="1053.0" y="627.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1056.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (127 samples, 1.96%)</title><rect x="1054.4" y="627.0" width="23.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.4" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (125 samples, 1.93%)</title><rect x="1054.8" y="611.0" width="22.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.8" y="622.0">r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="1055.0" y="595.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1058.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="1055.5" y="595.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1058.5" y="606.0"></text>
</g>
<g>
<title>__write (116 samples, 1.79%)</title><rect x="1056.1" y="595.0" width="21.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1059.1" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (110 samples, 1.70%)</title><rect x="1057.1" y="579.0" width="20.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1060.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (110 samples, 1.70%)</title><rect x="1057.1" y="563.0" width="20.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1060.1" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (108 samples, 1.67%)</title><rect x="1057.5" y="547.0" width="19.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1060.5" y="558.0"></text>
</g>
<g>
<title>ksys_write (108 samples, 1.67%)</title><rect x="1057.5" y="531.0" width="19.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1060.5" y="542.0"></text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.09%)</title><rect x="1057.5" y="515.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1060.5" y="526.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.08%)</title><rect x="1057.5" y="499.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1060.5" y="510.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.08%)</title><rect x="1057.5" y="483.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1060.5" y="494.0"></text>
</g>
<g>
<title>vfs_write (102 samples, 1.57%)</title><rect x="1058.6" y="515.0" width="18.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1061.6" y="526.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.05%)</title><rect x="1058.8" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.8" y="510.0"></text>
</g>
<g>
<title>__vfs_write (95 samples, 1.47%)</title><rect x="1059.3" y="499.0" width="17.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1062.3" y="510.0"></text>
</g>
<g>
<title>new_sync_write (95 samples, 1.47%)</title><rect x="1059.3" y="483.0" width="17.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1062.3" y="494.0"></text>
</g>
<g>
<title>ext4_file_write_iter (89 samples, 1.37%)</title><rect x="1059.7" y="467.0" width="16.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1062.7" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (86 samples, 1.33%)</title><rect x="1059.9" y="451.0" width="15.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1062.9" y="462.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.06%)</title><rect x="1060.2" y="435.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1063.2" y="446.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.03%)</title><rect x="1060.4" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1063.4" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="1060.4" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1063.4" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="1060.4" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1063.4" y="398.0"></text>
</g>
<g>
<title>generic_perform_write (79 samples, 1.22%)</title><rect x="1061.0" y="435.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1064.0" y="446.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.03%)</title><rect x="1061.0" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1064.0" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (29 samples, 0.45%)</title><rect x="1061.5" y="419.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1064.5" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (13 samples, 0.20%)</title><rect x="1061.9" y="403.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1064.9" y="414.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.03%)</title><rect x="1061.9" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1064.9" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (11 samples, 0.17%)</title><rect x="1062.2" y="387.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1065.2" y="398.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.03%)</title><rect x="1062.2" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1065.2" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.06%)</title><rect x="1062.6" y="371.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1065.6" y="382.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.06%)</title><rect x="1063.5" y="371.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1066.5" y="382.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.03%)</title><rect x="1064.2" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1067.2" y="414.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.03%)</title><rect x="1064.6" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1067.6" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (9 samples, 0.14%)</title><rect x="1065.0" y="403.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.0" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (8 samples, 0.12%)</title><rect x="1065.0" y="387.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.0" y="398.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.08%)</title><rect x="1065.3" y="371.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1068.3" y="382.0"></text>
</g>
<g>
<title>ext4_da_write_end (39 samples, 0.60%)</title><rect x="1066.8" y="419.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.8" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.05%)</title><rect x="1066.8" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1069.8" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.05%)</title><rect x="1066.8" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1069.8" y="398.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1067.0" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1070.0" y="382.0"></text>
</g>
<g>
<title>generic_write_end (35 samples, 0.54%)</title><rect x="1067.3" y="403.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1070.3" y="414.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (2 samples, 0.03%)</title><rect x="1067.5" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1070.5" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (31 samples, 0.48%)</title><rect x="1067.9" y="387.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.9" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (30 samples, 0.46%)</title><rect x="1067.9" y="371.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.9" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (30 samples, 0.46%)</title><rect x="1067.9" y="355.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1070.9" y="366.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (24 samples, 0.37%)</title><rect x="1068.3" y="339.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1071.3" y="350.0"></text>
</g>
<g>
<title>ext4_do_update_inode (22 samples, 0.34%)</title><rect x="1068.6" y="323.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.6" y="334.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.03%)</title><rect x="1069.9" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1072.9" y="318.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.03%)</title><rect x="1069.9" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1072.9" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (13 samples, 0.20%)</title><rect x="1070.3" y="307.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1073.3" y="318.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.06%)</title><rect x="1070.4" y="291.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1073.4" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (8 samples, 0.12%)</title><rect x="1071.2" y="291.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1074.2" y="302.0"></text>
</g>
<g>
<title>crypto_shash_update (6 samples, 0.09%)</title><rect x="1071.5" y="275.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1074.5" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.09%)</title><rect x="1071.5" y="259.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.5" y="270.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (4 samples, 0.06%)</title><rect x="1072.6" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1075.6" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.06%)</title><rect x="1072.6" y="323.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.6" y="334.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.05%)</title><rect x="1072.6" y="307.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.6" y="318.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.05%)</title><rect x="1072.6" y="291.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1075.6" y="302.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (6 samples, 0.09%)</title><rect x="1073.9" y="419.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1076.9" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.08%)</title><rect x="1074.1" y="403.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1077.1" y="414.0"></text>
</g>
<g>
<title>up_write (4 samples, 0.06%)</title><rect x="1075.9" y="467.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1078.9" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.05%)</title><rect x="1076.6" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1079.6" y="510.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="1076.8" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1079.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="1077.2" y="595.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.05%)</title><rect x="1077.5" y="627.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (10 samples, 0.15%)</title><rect x="1078.1" y="627.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1081.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.03%)</title><rect x="1079.0" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1082.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1079.4" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1082.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1080.1" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1083.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.09%)</title><rect x="1080.8" y="675.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1083.8" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.05%)</title><rect x="1081.4" y="659.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1084.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.03%)</title><rect x="1081.9" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1084.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (3 samples, 0.05%)</title><rect x="1082.3" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1085.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (55 samples, 0.85%)</title><rect x="1082.8" y="675.0" width="10.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1085.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (55 samples, 0.85%)</title><rect x="1082.8" y="659.0" width="10.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1085.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (55 samples, 0.85%)</title><rect x="1082.8" y="643.0" width="10.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1085.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 0.80%)</title><rect x="1083.0" y="627.0" width="9.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1086.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (51 samples, 0.79%)</title><rect x="1083.2" y="611.0" width="9.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1086.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.03%)</title><rect x="1083.4" y="595.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (45 samples, 0.69%)</title><rect x="1083.9" y="595.0" width="8.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1086.9" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (2 samples, 0.03%)</title><rect x="1084.3" y="579.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1087.3" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (39 samples, 0.60%)</title><rect x="1084.6" y="579.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1087.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (36 samples, 0.56%)</title><rect x="1085.0" y="563.0" width="6.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1088.0" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (17 samples, 0.26%)</title><rect x="1087.7" y="547.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1090.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1087.9" y="531.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1090.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.22%)</title><rect x="1088.3" y="531.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1091.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (5 samples, 0.08%)</title><rect x="1088.6" y="515.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1091.6" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.08%)</title><rect x="1089.5" y="515.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1092.5" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1090.5" y="515.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1093.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="1091.2" y="547.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1094.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="1092.5" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (83 samples, 1.28%)</title><rect x="1092.8" y="675.0" width="15.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1095.8" y="686.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="1093.7" y="659.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1096.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (74 samples, 1.14%)</title><rect x="1094.3" y="659.0" width="13.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (72 samples, 1.11%)</title><rect x="1094.6" y="643.0" width="13.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 1.10%)</title><rect x="1094.6" y="627.0" width="13.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (2 samples, 0.03%)</title><rect x="1094.8" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1097.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (66 samples, 1.02%)</title><rect x="1095.2" y="611.0" width="12.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1098.2" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (4 samples, 0.06%)</title><rect x="1095.5" y="595.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1098.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (58 samples, 0.89%)</title><rect x="1096.6" y="595.0" width="10.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1099.6" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (7 samples, 0.11%)</title><rect x="1097.0" y="579.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1100.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (6 samples, 0.09%)</title><rect x="1097.2" y="563.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1100.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="1098.3" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1101.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (47 samples, 0.72%)</title><rect x="1098.6" y="579.0" width="8.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1101.6" y="590.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (44 samples, 0.68%)</title><rect x="1099.0" y="563.0" width="8.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1102.0" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (38 samples, 0.59%)</title><rect x="1099.4" y="547.0" width="6.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1102.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10497297704380635349.so (20 samples, 0.31%)</title><rect x="1102.3" y="531.0" width="3.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1105.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (19 samples, 0.29%)</title><rect x="1102.5" y="515.0" width="3.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1105.5" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.17%)</title><rect x="1103.6" y="499.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1106.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="1105.9" y="531.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1108.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.03%)</title><rect x="1106.5" y="547.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1109.5" y="558.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.03%)</title><rect x="1107.2" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1110.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (81 samples, 1.25%)</title><rect x="1108.1" y="675.0" width="14.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.1" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (13 samples, 0.20%)</title><rect x="1119.4" y="659.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1122.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.12%)</title><rect x="1120.3" y="643.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1123.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.11%)</title><rect x="1120.5" y="627.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.09%)</title><rect x="1120.7" y="611.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1123.7" y="622.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="1120.7" y="595.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.7" y="606.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="1121.0" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.0" y="590.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="1121.0" y="563.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.0" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1122.1" y="659.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1125.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (56 samples, 0.86%)</title><rect x="1122.8" y="675.0" width="10.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.8" y="686.0"></text>
</g>
<g>
<title>__sched_yield (11 samples, 0.17%)</title><rect x="1123.2" y="659.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1126.2" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.14%)</title><rect x="1123.6" y="643.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1126.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.14%)</title><rect x="1123.6" y="627.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1126.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (7 samples, 0.11%)</title><rect x="1123.9" y="611.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1126.9" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (7 samples, 0.11%)</title><rect x="1123.9" y="595.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1126.9" y="606.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.11%)</title><rect x="1123.9" y="579.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1126.9" y="590.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.11%)</title><rect x="1123.9" y="563.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1126.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (42 samples, 0.65%)</title><rect x="1125.2" y="659.0" width="7.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.2" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (6 samples, 0.09%)</title><rect x="1131.8" y="643.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1134.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="1132.1" y="627.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="1132.3" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1135.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="1132.3" y="595.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1135.3" y="606.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="1132.3" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1135.3" y="590.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1132.5" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1135.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="1133.2" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.05%)</title><rect x="1133.8" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.05%)</title><rect x="1133.8" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="1134.3" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.3" y="686.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) (2 samples, 0.03%)</title><rect x="1135.2" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="1136.0" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.06%)</title><rect x="1136.7" y="691.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.7" y="702.0"></text>
</g>
<g>
<title>std::condition_variable::~condition_variable() (2 samples, 0.03%)</title><rect x="1137.8" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.17%)</title><rect x="1138.3" y="707.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (5 samples, 0.08%)</title><rect x="1138.3" y="691.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="1139.2" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1142.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1139.8" y="691.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="1140.3" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1143.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.05%)</title><rect x="1140.7" y="707.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.7" y="718.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="1141.8" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1142.1" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.03%)</title><rect x="1142.7" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.48%)</title><rect x="1143.0" y="787.0" width="5.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1146.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.06%)</title><rect x="1143.0" y="771.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1146.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.31%)</title><rect x="1144.0" y="771.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1147.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.25%)</title><rect x="1144.7" y="755.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1147.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.23%)</title><rect x="1144.9" y="739.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1147.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.20%)</title><rect x="1145.2" y="723.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.2" y="734.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.20%)</title><rect x="1145.2" y="707.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1148.2" y="718.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.17%)</title><rect x="1145.4" y="691.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1148.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="1145.4" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.4" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.06%)</title><rect x="1146.0" y="675.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.0" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="1146.3" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.3" y="670.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="1146.3" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.3" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="1146.3" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1149.3" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="1146.7" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.7" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="1148.0" y="771.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1151.0" y="782.0"></text>
</g>
<g>
<title>__libc_malloc (13 samples, 0.20%)</title><rect x="1148.7" y="787.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1151.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (95 samples, 1.47%)</title><rect x="1151.1" y="787.0" width="17.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1154.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.30%)</title><rect x="1153.1" y="771.0" width="15.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1156.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 1.30%)</title><rect x="1153.1" y="755.0" width="15.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1156.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (78 samples, 1.20%)</title><rect x="1154.0" y="739.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1157.0" y="750.0"></text>
</g>
<g>
<title>do_futex (78 samples, 1.20%)</title><rect x="1154.0" y="723.0" width="14.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1157.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="1154.0" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1157.0" y="718.0"></text>
</g>
<g>
<title>futex_wake (74 samples, 1.14%)</title><rect x="1154.5" y="707.0" width="13.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.5" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.09%)</title><rect x="1155.6" y="691.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1158.6" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="1156.3" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1159.3" y="686.0"></text>
</g>
<g>
<title>wake_up_q (61 samples, 0.94%)</title><rect x="1156.9" y="691.0" width="11.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (60 samples, 0.93%)</title><rect x="1157.1" y="675.0" width="10.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.1" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (59 samples, 0.91%)</title><rect x="1157.1" y="659.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1160.1" y="670.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.08%)</title><rect x="1168.3" y="787.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1171.3" y="798.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.06%)</title><rect x="1168.5" y="771.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1171.5" y="782.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="1168.5" y="755.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1171.5" y="766.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (3 samples, 0.05%)</title><rect x="1169.3" y="787.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (8 samples, 0.12%)</title><rect x="1169.8" y="819.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="1170.3" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1173.3" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1170.3" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1170.3" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1170.3" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.3" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1170.9" y="803.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1173.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (2 samples, 0.03%)</title><rect x="1171.3" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (5 samples, 0.08%)</title><rect x="1171.6" y="915.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.08%)</title><rect x="1171.6" y="899.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (5 samples, 0.08%)</title><rect x="1171.6" y="883.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.06%)</title><rect x="1171.8" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.06%)</title><rect x="1171.8" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.8" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.06%)</title><rect x="1171.8" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.03%)</title><rect x="1172.5" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="1172.5" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (94 samples, 1.45%)</title><rect x="1172.9" y="915.0" width="17.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (94 samples, 1.45%)</title><rect x="1172.9" y="899.0" width="17.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1175.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (44 samples, 0.68%)</title><rect x="1172.9" y="883.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.06%)</title><rect x="1173.3" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1176.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 0.57%)</title><rect x="1174.2" y="867.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 0.52%)</title><rect x="1174.7" y="851.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.7" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.22%)</title><rect x="1175.1" y="835.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1178.1" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="1175.3" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.3" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.11%)</title><rect x="1175.6" y="819.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1178.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.11%)</title><rect x="1175.6" y="803.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.11%)</title><rect x="1175.6" y="787.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1178.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.08%)</title><rect x="1176.0" y="771.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.0" y="782.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="1176.0" y="755.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1179.0" y="766.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="1176.0" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1179.0" y="750.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1176.4" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.4" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1177.3" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1180.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.28%)</title><rect x="1177.6" y="835.0" width="3.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1180.6" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_wait (14 samples, 0.22%)</title><rect x="1177.6" y="819.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1180.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.11%)</title><rect x="1178.9" y="803.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1181.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.11%)</title><rect x="1178.9" y="787.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.11%)</title><rect x="1178.9" y="771.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.9" y="782.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.11%)</title><rect x="1178.9" y="755.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.9" y="766.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.11%)</title><rect x="1178.9" y="739.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1181.9" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="1178.9" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.9" y="734.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="1178.9" y="707.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.9" y="718.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.05%)</title><rect x="1178.9" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.9" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.06%)</title><rect x="1179.4" y="723.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.4" y="734.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="1179.8" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1182.8" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="1180.5" y="819.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1183.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.03%)</title><rect x="1180.9" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.03%)</title><rect x="1180.9" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.03%)</title><rect x="1180.9" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (48 samples, 0.74%)</title><rect x="1181.3" y="883.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1184.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (48 samples, 0.74%)</title><rect x="1181.3" y="867.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (48 samples, 0.74%)</title><rect x="1181.3" y="851.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 0.74%)</title><rect x="1181.3" y="835.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.48%)</title><rect x="1184.4" y="819.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.4" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.05%)</title><rect x="1184.4" y="803.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1187.4" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1184.5" y="787.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1187.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 0.43%)</title><rect x="1184.9" y="803.0" width="5.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1187.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.42%)</title><rect x="1185.1" y="787.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1188.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.40%)</title><rect x="1185.3" y="771.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1188.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.39%)</title><rect x="1185.5" y="755.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1188.5" y="766.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.39%)</title><rect x="1185.5" y="739.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1188.5" y="750.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 0.39%)</title><rect x="1185.5" y="723.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.5" y="734.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.35%)</title><rect x="1185.8" y="707.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.35%)</title><rect x="1185.8" y="691.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.35%)</title><rect x="1185.8" y="675.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1188.8" y="686.0"></text>
</g>
</g>
</svg>
