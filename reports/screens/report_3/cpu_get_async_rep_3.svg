<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (4,208 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=4530] (19 samples, 0.45%)</title><rect x="10.0" y="963.0" width="5.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>start_thread (19 samples, 0.45%)</title><rect x="10.0" y="947.0" width="5.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (19 samples, 0.45%)</title><rect x="10.0" y="931.0" width="5.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (19 samples, 0.45%)</title><rect x="10.0" y="915.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (19 samples, 0.45%)</title><rect x="10.0" y="899.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (19 samples, 0.45%)</title><rect x="10.0" y="883.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (19 samples, 0.45%)</title><rect x="10.0" y="867.0" width="5.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (19 samples, 0.45%)</title><rect x="10.0" y="851.0" width="5.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (19 samples, 0.45%)</title><rect x="10.0" y="835.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (12 samples, 0.29%)</title><rect x="10.0" y="819.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.02%)</title><rect x="10.0" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.02%)</title><rect x="10.0" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.02%)</title><rect x="10.0" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.02%)</title><rect x="10.3" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="814.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.02%)</title><rect x="10.3" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.05%)</title><rect x="10.6" y="803.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.6" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.05%)</title><rect x="10.6" y="787.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.6" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.02%)</title><rect x="10.6" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.6" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.02%)</title><rect x="10.8" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.8" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 0.19%)</title><rect x="11.1" y="803.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.1" y="814.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.02%)</title><rect x="11.1" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.1" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.02%)</title><rect x="11.4" y="787.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.4" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.07%)</title><rect x="11.7" y="787.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.7" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.02%)</title><rect x="12.0" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.0" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="12.0" y="755.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="15.0" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.02%)</title><rect x="12.2" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.2" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.02%)</title><rect x="12.5" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.5" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.02%)</title><rect x="12.5" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.5" y="782.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.02%)</title><rect x="12.8" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.8" y="798.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.02%)</title><rect x="12.8" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.8" y="782.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="13.1" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.1" y="798.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="13.1" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.1" y="782.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.10%)</title><rect x="13.4" y="819.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.4" y="830.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.02%)</title><rect x="13.4" y="803.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.4" y="814.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="13.4" y="787.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.4" y="798.0"></text>
</g>
<g>
<title>PhiNode::Opcode() const (1 samples, 0.02%)</title><rect x="13.4" y="771.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.4" y="782.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.02%)</title><rect x="13.6" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.6" y="814.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.02%)</title><rect x="13.6" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.6" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.02%)</title><rect x="13.9" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.9" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="13.9" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.9" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.02%)</title><rect x="13.9" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.9" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.02%)</title><rect x="13.9" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.9" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="13.9" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.9" y="750.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.02%)</title><rect x="13.9" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.9" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="14.2" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.2" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="14.2" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.2" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="14.2" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.2" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="14.2" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.2" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="14.5" y="819.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="14.5" y="803.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="14.5" y="787.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="14.5" y="771.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="14.5" y="755.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="14.5" y="739.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.5" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="14.5" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.5" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="14.5" y="707.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="14.5" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="14.5" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="14.5" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="14.5" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.5" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.5" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.5" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="14.5" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="14.5" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="14.5" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="14.5" y="563.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="14.5" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.5" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.5" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.5" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="14.5" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="14.5" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="14.5" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="14.5" y="467.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="14.5" y="451.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.5" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.5" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.5" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="14.5" y="419.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="14.5" y="403.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="14.5" y="387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="14.5" y="371.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="14.5" y="355.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.5" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.5" y="339.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.5" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="14.5" y="323.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="14.5" y="307.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="14.5" y="291.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="14.5" y="275.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.5" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="14.5" y="259.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.5" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.5" y="243.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.5" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="14.5" y="227.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.5" y="238.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.0] (1 samples, 0.02%)</title><rect x="14.5" y="211.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.5" y="222.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.8" y="627.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.8" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.8" y="611.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.8" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="14.8" y="595.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="14.8" y="579.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="14.8" y="563.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="14.8" y="547.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="14.8" y="531.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.8" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="14.8" y="515.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.8" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="14.8" y="499.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.8" y="510.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.02%)</title><rect x="14.8" y="483.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.8" y="494.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicates(int) (1 samples, 0.02%)</title><rect x="14.8" y="467.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.8" y="478.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.0] (1 samples, 0.02%)</title><rect x="14.8" y="451.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.8" y="462.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="14.8" y="435.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.8" y="446.0"></text>
</g>
<g>
<title>CProjNode::hash() const (1 samples, 0.02%)</title><rect x="14.8" y="419.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="15.0" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="15.0" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.0" y="734.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="15.0" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.0" y="718.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="15.0" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.0" y="702.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="15.0" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.0" y="686.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="15.0" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.0" y="670.0"></text>
</g>
<g>
<title>IdealKit::end_if() (1 samples, 0.02%)</title><rect x="15.0" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.0" y="654.0"></text>
</g>
<g>
<title>IdealKit::goto_(Node*, bool) (1 samples, 0.02%)</title><rect x="15.0" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.0" y="638.0"></text>
</g>
<g>
<title>IdealKit::do_memory_merge(Node*, Node*) (1 samples, 0.02%)</title><rect x="15.0" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.0" y="622.0"></text>
</g>
<g>
<title>[G1 Young RemSet tid=4525] (1 samples, 0.02%)</title><rect x="15.3" y="963.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="18.3" y="974.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="15.3" y="947.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="18.3" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="15.3" y="931.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="18.3" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="15.3" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.3" y="926.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.02%)</title><rect x="15.3" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.3" y="910.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.02%)</title><rect x="15.3" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.3" y="894.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.02%)</title><rect x="15.3" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.3" y="878.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="15.3" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.3" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="15.3" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.3" y="846.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="15.3" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.3" y="830.0"></text>
</g>
<g>
<title>G1Policy::predict_bytes_to_copy(HeapRegion*) const (1 samples, 0.02%)</title><rect x="15.3" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.3" y="814.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.02%)</title><rect x="15.3" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.3" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=4569] (307 samples, 7.30%)</title><rect x="15.6" y="963.0" width="86.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="18.6" y="974.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.05%)</title><rect x="15.6" y="947.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="18.6" y="958.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="15.6" y="931.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.6" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="15.9" y="931.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="18.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="15.9" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="18.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="15.9" y="899.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="18.9" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="15.9" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="18.9" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="15.9" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="18.9" y="878.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="15.9" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="18.9" y="862.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="15.9" y="835.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.9" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="15.9" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="18.9" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="15.9" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.9" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (305 samples, 7.25%)</title><rect x="16.2" y="947.0" width="85.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.2" y="958.0">one/nio/se..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="16.2" y="931.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="19.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (81 samples, 1.92%)</title><rect x="16.4" y="931.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.4" y="942.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (81 samples, 1.92%)</title><rect x="16.4" y="915.0" width="22.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.4" y="926.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="19.8" y="899.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="22.8" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="20.4" y="899.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="23.4" y="910.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.21%)</title><rect x="20.7" y="899.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="23.7" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="21.8" y="883.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="24.8" y="894.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.10%)</title><rect x="22.1" y="883.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.10%)</title><rect x="22.1" y="867.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="25.1" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="22.9" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="22.9" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="25.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="22.9" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="25.9" y="830.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="23.2" y="899.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="26.2" y="910.0"></text>
</g>
<g>
<title>epoll_wait (56 samples, 1.33%)</title><rect x="23.5" y="899.0" width="15.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="26.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.00%)</title><rect x="27.4" y="883.0" width="11.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="30.4" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.02%)</title><rect x="27.4" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="30.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.97%)</title><rect x="27.7" y="867.0" width="11.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (40 samples, 0.95%)</title><rect x="27.9" y="851.0" width="11.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.9" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (40 samples, 0.95%)</title><rect x="27.9" y="835.0" width="11.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.9" y="846.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="27.9" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="27.9" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.9" y="814.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="27.9" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="30.9" y="798.0"></text>
</g>
<g>
<title>ep_poll (35 samples, 0.83%)</title><rect x="28.2" y="819.0" width="9.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.2" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.55%)</title><rect x="29.6" y="803.0" width="6.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.6" y="814.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="29.9" y="787.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.45%)</title><rect x="30.2" y="787.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.2" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="30.8" y="771.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.8" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (16 samples, 0.38%)</title><rect x="31.0" y="771.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.0" y="782.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.21%)</title><rect x="32.7" y="755.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.7" y="766.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.07%)</title><rect x="33.8" y="739.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.8" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="34.7" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.7" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="35.2" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="38.2" y="766.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="35.5" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="38.5" y="798.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="36.1" y="803.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="39.1" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.12%)</title><rect x="36.6" y="803.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.6" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.12%)</title><rect x="36.6" y="787.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="39.6" y="798.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.12%)</title><rect x="36.6" y="771.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="39.6" y="782.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.12%)</title><rect x="36.6" y="755.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="39.6" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="37.5" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="40.5" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="38.0" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="41.0" y="830.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.07%)</title><rect x="38.3" y="819.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="41.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (216 samples, 5.13%)</title><rect x="39.2" y="931.0" width="60.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.2" y="942.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 4.80%)</title><rect x="43.1" y="915.0" width="56.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.1" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (111 samples, 2.64%)</title><rect x="43.1" y="899.0" width="31.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.1" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (75 samples, 1.78%)</title><rect x="44.8" y="883.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.8" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (75 samples, 1.78%)</title><rect x="44.8" y="867.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.8" y="878.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (72 samples, 1.71%)</title><rect x="44.8" y="851.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.17%)</title><rect x="44.8" y="835.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.17%)</title><rect x="44.8" y="819.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="45.3" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="45.3" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.3" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="45.9" y="803.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="48.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="46.5" y="803.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (65 samples, 1.54%)</title><rect x="46.7" y="835.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (65 samples, 1.54%)</title><rect x="46.7" y="819.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 1.54%)</title><rect x="46.7" y="803.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (65 samples, 1.54%)</title><rect x="46.7" y="787.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.14%)</title><rect x="46.7" y="771.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.14%)</title><rect x="46.7" y="755.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.14%)</title><rect x="46.7" y="739.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.14%)</title><rect x="46.7" y="723.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.05%)</title><rect x="47.9" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.17%)</title><rect x="48.4" y="771.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.17%)</title><rect x="48.4" y="755.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.17%)</title><rect x="48.4" y="739.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.14%)</title><rect x="48.7" y="723.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.14%)</title><rect x="48.7" y="707.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.12%)</title><rect x="49.0" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.0" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.12%)</title><rect x="49.0" y="675.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="52.0" y="686.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="49.0" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="52.0" y="670.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="49.0" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="52.0" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="49.3" y="643.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="52.3" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="49.5" y="659.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="52.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="49.5" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="49.5" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="52.5" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="49.5" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="52.5" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait (2 samples, 0.05%)</title><rect x="49.8" y="659.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="52.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (52 samples, 1.24%)</title><rect x="50.4" y="771.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 1.24%)</title><rect x="50.4" y="755.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 1.24%)</title><rect x="50.4" y="739.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (52 samples, 1.24%)</title><rect x="50.4" y="723.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.86%)</title><rect x="54.6" y="707.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.6" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.17%)</title><rect x="54.9" y="691.0" width="1.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="57.9" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="55.4" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="58.4" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="55.7" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="58.7" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="56.0" y="675.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="59.0" y="686.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="56.3" y="675.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="59.3" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="56.5" y="675.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="59.5" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 0.67%)</title><rect x="56.8" y="691.0" width="7.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="59.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.57%)</title><rect x="58.0" y="675.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.57%)</title><rect x="58.0" y="659.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="61.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.52%)</title><rect x="58.5" y="643.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="61.5" y="654.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.52%)</title><rect x="58.5" y="627.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="61.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="58.5" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="61.5" y="622.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.50%)</title><rect x="58.8" y="611.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.8" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="59.4" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="62.4" y="606.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="59.6" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="62.6" y="590.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="59.9" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.38%)</title><rect x="60.2" y="595.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="63.2" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.36%)</title><rect x="60.5" y="579.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="63.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.36%)</title><rect x="60.5" y="563.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="63.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="64.7" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.07%)</title><rect x="65.0" y="851.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="65.0" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="65.0" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.24%)</title><rect x="65.8" y="883.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.07%)</title><rect x="67.5" y="867.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="67.5" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="67.5" y="835.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.07%)</title><rect x="67.5" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.02%)</title><rect x="68.3" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.48%)</title><rect x="68.6" y="883.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.19%)</title><rect x="70.3" y="867.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.19%)</title><rect x="70.3" y="851.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="72.0" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="72.0" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.0" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="72.0" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="72.5" y="867.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="72.5" y="851.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (91 samples, 2.16%)</title><rect x="74.2" y="899.0" width="25.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.2" y="910.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (89 samples, 2.12%)</title><rect x="74.8" y="883.0" width="24.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.8" y="894.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.10%)</title><rect x="76.7" y="867.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="79.7" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.38%)</title><rect x="77.9" y="867.0" width="4.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="80.9" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="78.1" y="851.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.1" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="79.0" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="82.0" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.26%)</title><rect x="79.3" y="851.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="82.3" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="80.4" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="83.4" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.12%)</title><rect x="80.9" y="835.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="83.9" y="846.0"></text>
</g>
<g>
<title>__recv (61 samples, 1.45%)</title><rect x="82.3" y="867.0" width="17.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="85.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.38%)</title><rect x="83.2" y="851.0" width="16.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="86.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.02%)</title><rect x="83.2" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="86.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 1.35%)</title><rect x="83.5" y="835.0" width="16.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.5" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (54 samples, 1.28%)</title><rect x="84.3" y="819.0" width="15.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.3" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (54 samples, 1.28%)</title><rect x="84.3" y="803.0" width="15.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="87.3" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (52 samples, 1.24%)</title><rect x="84.3" y="787.0" width="14.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="87.3" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="84.3" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.3" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (39 samples, 0.93%)</title><rect x="84.6" y="771.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="87.6" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="84.9" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="87.9" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (37 samples, 0.88%)</title><rect x="85.2" y="755.0" width="10.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.2" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.17%)</title><rect x="86.3" y="739.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.3" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="86.3" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.3" y="734.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.14%)</title><rect x="86.6" y="723.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.6" y="734.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="86.6" y="707.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="89.6" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="86.8" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.8" y="718.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="86.8" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="89.8" y="702.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.10%)</title><rect x="87.1" y="707.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="88.2" y="739.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.2" y="750.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="89.1" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.1" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="89.4" y="723.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.4" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (17 samples, 0.40%)</title><rect x="89.6" y="739.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.6" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (16 samples, 0.38%)</title><rect x="89.9" y="723.0" width="4.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.9" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.19%)</title><rect x="92.2" y="707.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.2" y="718.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="92.2" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="95.2" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="92.2" y="675.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="95.2" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.14%)</title><rect x="92.4" y="691.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="95.4" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.10%)</title><rect x="93.0" y="675.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="96.0" y="686.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="94.1" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="97.1" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="94.4" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="97.4" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="94.7" y="739.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="97.7" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="94.7" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="97.7" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="95.2" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="98.2" y="734.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="95.2" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.2" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.29%)</title><rect x="95.5" y="771.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="98.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.24%)</title><rect x="96.1" y="755.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.1" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.21%)</title><rect x="96.4" y="739.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.4" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (8 samples, 0.19%)</title><rect x="96.6" y="723.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.6" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.14%)</title><rect x="97.2" y="707.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.2" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="98.9" y="787.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.9" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="98.9" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.9" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="98.9" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.9" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="98.9" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="101.9" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="99.2" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="102.2" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="99.5" y="867.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="102.5" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.17%)</title><rect x="99.7" y="931.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="102.7" y="942.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.12%)</title><rect x="100.3" y="915.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="103.3" y="926.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.12%)</title><rect x="100.3" y="899.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="103.3" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4570] (304 samples, 7.22%)</title><rect x="101.7" y="963.0" width="85.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="104.7" y="974.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (304 samples, 7.22%)</title><rect x="101.7" y="947.0" width="85.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.7" y="958.0">one/nio/se..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="101.7" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="104.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (83 samples, 1.97%)</title><rect x="102.0" y="931.0" width="23.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.0" y="942.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (83 samples, 1.97%)</title><rect x="102.0" y="915.0" width="23.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.0" y="926.0">o..</text>
</g>
<g>
<title>clock_gettime (5 samples, 0.12%)</title><rect x="103.9" y="899.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="106.9" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="105.1" y="883.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="108.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="105.1" y="867.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="108.1" y="878.0"></text>
</g>
<g>
<title>epoll_wait (70 samples, 1.66%)</title><rect x="105.3" y="899.0" width="19.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="108.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.21%)</title><rect x="110.7" y="883.0" width="14.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="113.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.21%)</title><rect x="110.7" y="867.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="113.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (50 samples, 1.19%)</title><rect x="111.0" y="851.0" width="14.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.0" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (50 samples, 1.19%)</title><rect x="111.0" y="835.0" width="14.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="114.0" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="111.5" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="114.5" y="830.0"></text>
</g>
<g>
<title>ep_poll (43 samples, 1.02%)</title><rect x="111.8" y="819.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="114.8" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (27 samples, 0.64%)</title><rect x="112.1" y="803.0" width="7.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="115.1" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (22 samples, 0.52%)</title><rect x="113.2" y="787.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.2" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="114.3" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.3" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (16 samples, 0.38%)</title><rect x="114.6" y="771.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.6" y="782.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.26%)</title><rect x="115.7" y="755.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="118.7" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="116.0" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="119.0" y="750.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.14%)</title><rect x="116.6" y="739.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="119.6" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="118.2" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="121.2" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="118.8" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.8" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="119.1" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.1" y="782.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="119.4" y="787.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.4" y="798.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="119.4" y="771.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="122.4" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.12%)</title><rect x="119.6" y="803.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.6" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (10 samples, 0.24%)</title><rect x="121.0" y="803.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.0" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="121.0" y="787.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.21%)</title><rect x="121.3" y="787.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="124.3" y="798.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.19%)</title><rect x="121.6" y="771.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.6" y="782.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.14%)</title><rect x="122.2" y="755.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="125.2" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="122.7" y="739.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="125.7" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="123.6" y="723.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.6" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="123.6" y="707.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="126.6" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="123.6" y="691.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="126.6" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="123.6" y="675.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="126.6" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="123.6" y="659.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="126.6" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="123.6" y="643.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="123.6" y="627.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.6" y="638.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.10%)</title><rect x="123.8" y="819.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="126.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="125.0" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="128.0" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="125.0" y="883.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="128.0" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="125.0" y="867.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="128.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (218 samples, 5.18%)</title><rect x="125.3" y="931.0" width="61.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.3" y="942.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (211 samples, 5.01%)</title><rect x="127.2" y="915.0" width="59.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.2" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (122 samples, 2.90%)</title><rect x="127.2" y="899.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.2" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84 samples, 2.00%)</title><rect x="129.2" y="883.0" width="23.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.2" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (84 samples, 2.00%)</title><rect x="129.2" y="867.0" width="23.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.2" y="878.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (80 samples, 1.90%)</title><rect x="129.2" y="851.0" width="22.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.2" y="862.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.26%)</title><rect x="129.2" y="835.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.26%)</title><rect x="129.2" y="819.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="130.3" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="130.3" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.3" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="130.6" y="803.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="133.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.12%)</title><rect x="130.9" y="803.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="131.1" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="131.1" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.07%)</title><rect x="131.1" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="132.0" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="135.0" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="132.0" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="135.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="132.0" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (69 samples, 1.64%)</title><rect x="132.3" y="835.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (69 samples, 1.64%)</title><rect x="132.3" y="819.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (69 samples, 1.64%)</title><rect x="132.3" y="803.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (69 samples, 1.64%)</title><rect x="132.3" y="787.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.07%)</title><rect x="132.3" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.07%)</title><rect x="132.3" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.07%)</title><rect x="132.3" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.07%)</title><rect x="132.3" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="132.8" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="133.1" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="133.1" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="133.1" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="133.1" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="133.1" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="133.4" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.4" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="133.4" y="675.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="136.4" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="133.4" y="659.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="136.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.02%)</title><rect x="133.7" y="723.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.7" y="734.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="133.7" y="707.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (63 samples, 1.50%)</title><rect x="133.9" y="771.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (63 samples, 1.50%)</title><rect x="133.9" y="755.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (63 samples, 1.50%)</title><rect x="133.9" y="739.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (63 samples, 1.50%)</title><rect x="133.9" y="723.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (44 samples, 1.05%)</title><rect x="139.0" y="707.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.0" y="718.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="139.3" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="142.3" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.12%)</title><rect x="139.6" y="691.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="142.6" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="139.8" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="142.8" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="140.1" y="675.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="143.1" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="140.7" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="143.7" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (36 samples, 0.86%)</title><rect x="141.0" y="691.0" width="10.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="144.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.81%)</title><rect x="141.5" y="675.0" width="9.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="144.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.81%)</title><rect x="141.5" y="659.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.74%)</title><rect x="142.1" y="643.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="145.1" y="654.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.71%)</title><rect x="142.1" y="627.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="145.1" y="638.0"></text>
</g>
<g>
<title>futex_wake (30 samples, 0.71%)</title><rect x="142.1" y="611.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.1" y="622.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="142.1" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.1" y="606.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="142.4" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="145.4" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="142.6" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.6" y="606.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.64%)</title><rect x="142.9" y="595.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="145.9" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (26 samples, 0.62%)</title><rect x="143.2" y="579.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="146.2" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (26 samples, 0.62%)</title><rect x="143.2" y="563.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="146.2" y="574.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="150.5" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.5" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="150.8" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.8" y="654.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="151.1" y="691.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="154.1" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="151.3" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.10%)</title><rect x="151.6" y="851.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.10%)</title><rect x="151.6" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="151.6" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="152.5" y="819.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="152.5" y="803.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="152.5" y="787.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (21 samples, 0.50%)</title><rect x="152.7" y="883.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.10%)</title><rect x="156.4" y="867.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="156.4" y="851.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="156.4" y="835.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.10%)</title><rect x="156.4" y="819.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.10%)</title><rect x="157.5" y="867.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.24%)</title><rect x="158.6" y="883.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="160.6" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="160.6" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="160.9" y="835.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="160.9" y="819.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.9" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="160.9" y="803.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="161.1" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="161.1" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="161.4" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (88 samples, 2.09%)</title><rect x="161.7" y="899.0" width="24.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.7" y="910.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (84 samples, 2.00%)</title><rect x="162.8" y="883.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.8" y="894.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="163.7" y="867.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="166.7" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (17 samples, 0.40%)</title><rect x="164.5" y="867.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="167.5" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="165.1" y="851.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="168.1" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="165.9" y="851.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="168.9" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.24%)</title><rect x="166.5" y="851.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="169.5" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="167.0" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="170.0" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.10%)</title><rect x="167.6" y="835.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.6" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="168.7" y="835.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="171.7" y="846.0"></text>
</g>
<g>
<title>__recv (61 samples, 1.45%)</title><rect x="169.3" y="867.0" width="17.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="172.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.38%)</title><rect x="170.1" y="851.0" width="16.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.38%)</title><rect x="170.1" y="835.0" width="16.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (54 samples, 1.28%)</title><rect x="171.2" y="819.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.2" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (53 samples, 1.26%)</title><rect x="171.2" y="803.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="174.2" y="814.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="171.2" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.2" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="171.5" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="174.5" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (48 samples, 1.14%)</title><rect x="171.8" y="787.0" width="13.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.8" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (41 samples, 0.97%)</title><rect x="172.1" y="771.0" width="11.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="175.1" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="172.1" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (40 samples, 0.95%)</title><rect x="172.4" y="755.0" width="11.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="175.4" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.24%)</title><rect x="173.8" y="739.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="176.8" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.10%)</title><rect x="173.8" y="723.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="176.8" y="734.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.14%)</title><rect x="174.9" y="723.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="177.9" y="734.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="174.9" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="177.9" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.07%)</title><rect x="175.4" y="707.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="178.4" y="718.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="175.7" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="178.7" y="702.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="176.3" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.3" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="176.6" y="739.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.6" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.12%)</title><rect x="176.8" y="739.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="178.3" y="739.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="181.3" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="178.5" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="181.5" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="178.5" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="181.5" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="178.8" y="739.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.8" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="178.8" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="181.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="179.1" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.1" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="179.1" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="182.1" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.29%)</title><rect x="179.4" y="739.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.4" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.26%)</title><rect x="179.7" y="723.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.7" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.12%)</title><rect x="181.3" y="707.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="184.3" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.10%)</title><rect x="181.3" y="691.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="184.3" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.07%)</title><rect x="181.6" y="675.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.6" y="686.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="182.5" y="691.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="185.5" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="182.7" y="739.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.7" y="750.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="182.7" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.7" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="183.0" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.0" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="183.0" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="186.0" y="718.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="183.3" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="186.3" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.14%)</title><rect x="183.6" y="771.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.6" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.12%)</title><rect x="183.9" y="755.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="186.9" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.12%)</title><rect x="183.9" y="739.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="186.9" y="750.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="184.7" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="187.7" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="185.0" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.0" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="185.3" y="787.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.3" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="185.3" y="771.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="188.3" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="185.3" y="755.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.3" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="185.3" y="739.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="188.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="185.5" y="771.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.5" y="782.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="186.1" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="189.1" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="186.4" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="189.4" y="942.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="186.4" y="915.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="189.4" y="926.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="186.4" y="899.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="189.4" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4571] (310 samples, 7.37%)</title><rect x="186.9" y="963.0" width="87.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="189.9" y="974.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (310 samples, 7.37%)</title><rect x="186.9" y="947.0" width="87.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.9" y="958.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.02%)</title><rect x="186.9" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (80 samples, 1.90%)</title><rect x="187.2" y="931.0" width="22.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.2" y="942.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (80 samples, 1.90%)</title><rect x="187.2" y="915.0" width="22.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.2" y="926.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="188.9" y="899.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="191.9" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="189.5" y="899.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="192.5" y="910.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.12%)</title><rect x="190.0" y="899.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="193.0" y="910.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.07%)</title><rect x="190.6" y="883.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="193.6" y="894.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="190.6" y="867.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="193.6" y="878.0"></text>
</g>
<g>
<title>epoll_wait (65 samples, 1.54%)</title><rect x="191.4" y="899.0" width="18.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="194.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.12%)</title><rect x="196.5" y="883.0" width="13.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.02%)</title><rect x="196.5" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 1.09%)</title><rect x="196.8" y="867.0" width="12.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (42 samples, 1.00%)</title><rect x="197.6" y="851.0" width="11.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="200.6" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (42 samples, 1.00%)</title><rect x="197.6" y="835.0" width="11.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="200.6" y="846.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="197.9" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="200.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="197.9" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.9" y="814.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="197.9" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.9" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="198.2" y="819.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="201.2" y="830.0"></text>
</g>
<g>
<title>ep_poll (38 samples, 0.90%)</title><rect x="198.4" y="819.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="201.4" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="199.6" y="803.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="202.6" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (31 samples, 0.74%)</title><rect x="199.8" y="803.0" width="8.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="202.8" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.55%)</title><rect x="201.5" y="787.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="204.5" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="202.6" y="771.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.6" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.40%)</title><rect x="202.9" y="771.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="205.9" y="782.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.36%)</title><rect x="203.5" y="755.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.5" y="766.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="205.7" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="208.7" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.12%)</title><rect x="206.3" y="739.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="209.3" y="750.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="207.7" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.7" y="782.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="208.0" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="211.0" y="798.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="208.3" y="771.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="211.3" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.05%)</title><rect x="208.5" y="803.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="211.5" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="208.5" y="787.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="211.5" y="798.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="208.5" y="771.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="211.5" y="782.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="208.5" y="755.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="211.5" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="208.5" y="739.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="211.5" y="750.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="209.1" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.1" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="209.4" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (229 samples, 5.44%)</title><rect x="209.7" y="931.0" width="64.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.7" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (222 samples, 5.28%)</title><rect x="211.6" y="915.0" width="62.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.6" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (120 samples, 2.85%)</title><rect x="211.6" y="899.0" width="33.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.6" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84 samples, 2.00%)</title><rect x="213.0" y="883.0" width="23.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.0" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (84 samples, 2.00%)</title><rect x="213.0" y="867.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.0" y="878.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (78 samples, 1.85%)</title><rect x="213.0" y="851.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.0" y="862.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.26%)</title><rect x="213.0" y="835.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.26%)</title><rect x="213.0" y="819.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="213.6" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="213.6" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.19%)</title><rect x="213.9" y="803.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="215.8" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="215.8" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="215.8" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (67 samples, 1.59%)</title><rect x="216.1" y="835.0" width="18.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (67 samples, 1.59%)</title><rect x="216.1" y="819.0" width="18.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (67 samples, 1.59%)</title><rect x="216.1" y="803.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (67 samples, 1.59%)</title><rect x="216.1" y="787.0" width="18.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.14%)</title><rect x="216.1" y="771.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.14%)</title><rect x="216.1" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.14%)</title><rect x="216.1" y="739.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.14%)</title><rect x="216.1" y="723.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (5 samples, 0.12%)</title><rect x="216.4" y="707.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.12%)</title><rect x="217.8" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.12%)</title><rect x="217.8" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.12%)</title><rect x="217.8" y="739.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.12%)</title><rect x="217.8" y="723.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.12%)</title><rect x="217.8" y="707.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.12%)</title><rect x="217.8" y="691.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.8" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="218.1" y="675.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="221.1" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="218.1" y="659.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="221.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="218.4" y="675.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="221.4" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="218.4" y="659.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="221.4" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="218.9" y="659.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="221.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (56 samples, 1.33%)</title><rect x="219.2" y="771.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (56 samples, 1.33%)</title><rect x="219.2" y="755.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (56 samples, 1.33%)</title><rect x="219.2" y="739.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (56 samples, 1.33%)</title><rect x="219.2" y="723.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (43 samples, 1.02%)</title><rect x="222.8" y="707.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.8" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.17%)</title><rect x="222.8" y="691.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="225.8" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="223.7" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="226.7" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="224.2" y="675.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="227.2" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (35 samples, 0.83%)</title><rect x="224.8" y="691.0" width="9.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="227.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.71%)</title><rect x="226.2" y="675.0" width="8.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="229.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.71%)</title><rect x="226.2" y="659.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="229.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 0.71%)</title><rect x="226.2" y="643.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="229.2" y="654.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.71%)</title><rect x="226.2" y="627.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="229.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (30 samples, 0.71%)</title><rect x="226.2" y="611.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="229.2" y="622.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="226.2" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="229.2" y="606.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="226.5" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="229.5" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="226.8" y="595.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.8" y="606.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.64%)</title><rect x="227.0" y="595.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.0" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (26 samples, 0.62%)</title><rect x="227.3" y="579.0" width="7.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="230.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (26 samples, 0.62%)</title><rect x="227.3" y="563.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="230.3" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="234.6" y="691.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="237.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.14%)</title><rect x="234.9" y="851.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.14%)</title><rect x="234.9" y="835.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.12%)</title><rect x="234.9" y="819.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="236.3" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="239.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="236.3" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="236.3" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 0.45%)</title><rect x="236.6" y="883.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="240.2" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="240.2" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="240.2" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="240.2" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="240.2" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.2" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="240.2" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="243.2" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="240.2" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="243.2" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="240.2" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="243.2" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="240.2" y="739.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="243.2" y="750.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="240.2" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="243.2" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="240.2" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="243.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.12%)</title><rect x="240.5" y="867.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.29%)</title><rect x="241.9" y="883.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.14%)</title><rect x="243.0" y="867.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="243.0" y="851.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="244.4" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="244.4" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.4" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="244.4" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="244.7" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.7" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="244.7" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (102 samples, 2.42%)</title><rect x="245.3" y="899.0" width="28.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.3" y="910.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (98 samples, 2.33%)</title><rect x="246.4" y="883.0" width="27.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.4" y="894.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="247.2" y="867.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="250.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (23 samples, 0.55%)</title><rect x="247.8" y="867.0" width="6.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="250.8" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.17%)</title><rect x="247.8" y="851.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="250.8" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="249.5" y="835.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="252.5" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="249.5" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.5" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="249.5" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="252.5" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="249.5" y="787.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="252.5" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="249.5" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="252.5" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="249.5" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="252.5" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="249.5" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.5" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="249.8" y="851.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="252.8" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.31%)</title><rect x="250.0" y="851.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="253.0" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.10%)</title><rect x="250.6" y="835.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="253.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.12%)</title><rect x="251.7" y="835.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="254.7" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="253.1" y="835.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="256.1" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.05%)</title><rect x="253.7" y="851.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="256.7" y="862.0"></text>
</g>
<g>
<title>__recv (70 samples, 1.66%)</title><rect x="254.2" y="867.0" width="19.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="257.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.52%)</title><rect x="255.9" y="851.0" width="18.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="258.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.02%)</title><rect x="255.9" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="258.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 1.50%)</title><rect x="256.2" y="835.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.2" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="257.0" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (59 samples, 1.40%)</title><rect x="257.3" y="819.0" width="16.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.3" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (57 samples, 1.35%)</title><rect x="257.3" y="803.0" width="16.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.3" y="814.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="257.9" y="787.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.9" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="258.5" y="787.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="261.5" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (48 samples, 1.14%)</title><rect x="258.7" y="787.0" width="13.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="261.7" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="258.7" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.7" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (39 samples, 0.93%)</title><rect x="259.0" y="771.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="262.0" y="782.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="259.3" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="262.3" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (37 samples, 0.88%)</title><rect x="259.6" y="755.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="262.6" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.45%)</title><rect x="260.4" y="739.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.4" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="260.4" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="263.4" y="734.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.43%)</title><rect x="260.7" y="723.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.7" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="260.7" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.7" y="718.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.24%)</title><rect x="261.0" y="707.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.07%)</title><rect x="263.8" y="707.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="266.8" y="718.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="264.3" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="267.3" y="702.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.10%)</title><rect x="264.6" y="707.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="267.6" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="265.7" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="268.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="266.0" y="739.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="269.0" y="750.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="266.9" y="739.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="269.9" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="266.9" y="723.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="269.9" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.17%)</title><rect x="267.1" y="739.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.1" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.17%)</title><rect x="267.1" y="723.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="270.1" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.12%)</title><rect x="267.7" y="707.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.7" y="718.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="267.7" y="691.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="270.7" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="268.0" y="675.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="271.0" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.07%)</title><rect x="268.3" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="271.3" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.07%)</title><rect x="268.3" y="675.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.3" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="269.1" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="272.1" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="269.4" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.4" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="269.4" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.4" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.19%)</title><rect x="269.9" y="771.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.9" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.17%)</title><rect x="270.2" y="755.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.2" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.17%)</title><rect x="270.2" y="739.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.2" y="750.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="271.1" y="723.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="274.1" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.07%)</title><rect x="271.3" y="723.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.3" y="734.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="271.3" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="274.3" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="271.6" y="707.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="274.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.10%)</title><rect x="272.2" y="787.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="275.2" y="798.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="272.2" y="771.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="272.2" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.2" y="766.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="272.2" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="275.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="272.8" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.8" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="273.3" y="803.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.3" y="814.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="273.6" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.6" y="814.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4572] (307 samples, 7.30%)</title><rect x="273.9" y="963.0" width="86.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="276.9" y="974.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="273.9" y="947.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="276.9" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="273.9" y="931.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="276.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="273.9" y="915.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="273.9" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="276.9" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="273.9" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="276.9" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="273.9" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.9" y="878.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="273.9" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.9" y="862.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="273.9" y="835.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="276.9" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="273.9" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.9" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="273.9" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="276.9" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (306 samples, 7.27%)</title><rect x="274.2" y="947.0" width="85.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.2" y="958.0">one/nio/se..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="274.2" y="931.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="277.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (69 samples, 1.64%)</title><rect x="274.4" y="931.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (69 samples, 1.64%)</title><rect x="274.4" y="915.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.4" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="275.8" y="899.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="278.8" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="276.1" y="899.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="279.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.14%)</title><rect x="276.4" y="899.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="279.4" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="277.8" y="883.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="280.8" y="894.0"></text>
</g>
<g>
<title>epoll_wait (54 samples, 1.28%)</title><rect x="278.1" y="899.0" width="15.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="281.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 1.02%)</title><rect x="281.2" y="883.0" width="12.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 1.02%)</title><rect x="281.2" y="867.0" width="12.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="284.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (41 samples, 0.97%)</title><rect x="281.7" y="851.0" width="11.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="284.7" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (41 samples, 0.97%)</title><rect x="281.7" y="835.0" width="11.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="284.7" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="281.7" y="819.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="284.7" y="830.0"></text>
</g>
<g>
<title>ep_poll (39 samples, 0.93%)</title><rect x="282.0" y="819.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="285.0" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (28 samples, 0.67%)</title><rect x="283.1" y="803.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="286.1" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.45%)</title><rect x="284.5" y="787.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="287.5" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (15 samples, 0.36%)</title><rect x="285.4" y="771.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="288.4" y="782.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.26%)</title><rect x="286.2" y="755.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="289.2" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="287.1" y="739.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="290.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.14%)</title><rect x="287.3" y="739.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="290.3" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="289.0" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="292.0" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="289.3" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="292.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="289.6" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="292.6" y="782.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.10%)</title><rect x="289.9" y="787.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="292.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="291.0" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="294.0" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="291.3" y="803.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="294.3" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.12%)</title><rect x="291.5" y="803.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="294.5" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.12%)</title><rect x="291.5" y="787.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.5" y="798.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.12%)</title><rect x="291.5" y="771.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.5" y="782.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.10%)</title><rect x="291.8" y="755.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="294.8" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="292.7" y="739.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.7" y="750.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="292.9" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="295.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="293.2" y="899.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="296.2" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="293.5" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="296.5" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="293.5" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="296.5" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="293.5" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="296.5" y="878.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="293.5" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.5" y="862.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="293.5" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (235 samples, 5.58%)</title><rect x="293.8" y="931.0" width="65.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.8" y="942.0">one/nio..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="297.7" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="300.7" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="297.7" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="300.7" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="297.7" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="300.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (220 samples, 5.23%)</title><rect x="298.0" y="915.0" width="61.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.0" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (118 samples, 2.80%)</title><rect x="298.0" y="899.0" width="33.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.0" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (76 samples, 1.81%)</title><rect x="299.1" y="883.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.1" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (76 samples, 1.81%)</title><rect x="299.1" y="867.0" width="21.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.1" y="878.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (60 samples, 1.43%)</title><rect x="299.1" y="851.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.05%)</title><rect x="299.1" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.05%)</title><rect x="299.1" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="299.1" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="299.1" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.1" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="299.1" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="302.1" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="299.1" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="302.1" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="299.1" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="302.1" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="299.1" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="302.1" y="734.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="299.1" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="302.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="299.1" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="302.1" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="299.1" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="302.1" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="299.1" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="302.1" y="670.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="299.1" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="302.1" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="299.1" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="302.1" y="638.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.02%)</title><rect x="299.1" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="302.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="299.4" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="299.4" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="299.4" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="299.4" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.entity (58 samples, 1.38%)</title><rect x="299.7" y="835.0" width="16.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (58 samples, 1.38%)</title><rect x="299.7" y="819.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (58 samples, 1.38%)</title><rect x="299.7" y="803.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (58 samples, 1.38%)</title><rect x="299.7" y="787.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.07%)</title><rect x="299.7" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.07%)</title><rect x="299.7" y="755.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.07%)</title><rect x="299.7" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.07%)</title><rect x="299.7" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="300.0" y="707.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="300.2" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="300.5" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="300.5" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="300.5" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="300.8" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="300.8" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="300.8" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.8" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="300.8" y="675.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="303.8" y="686.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="300.8" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="303.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (53 samples, 1.26%)</title><rect x="301.1" y="771.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (53 samples, 1.26%)</title><rect x="301.1" y="755.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (53 samples, 1.26%)</title><rect x="301.1" y="739.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (53 samples, 1.26%)</title><rect x="301.1" y="723.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 0.97%)</title><rect x="304.4" y="707.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.4" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.17%)</title><rect x="304.4" y="691.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="307.4" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="305.0" y="675.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="308.0" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="305.6" y="675.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="308.6" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="305.8" y="675.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="308.8" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.74%)</title><rect x="306.4" y="691.0" width="8.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="309.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.67%)</title><rect x="307.2" y="675.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="310.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.67%)</title><rect x="307.2" y="659.0" width="7.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="310.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 0.67%)</title><rect x="307.2" y="643.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.2" y="654.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.64%)</title><rect x="307.2" y="627.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.62%)</title><rect x="307.2" y="611.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="310.2" y="622.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="308.4" y="595.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="311.4" y="606.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="308.4" y="579.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="311.4" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="308.6" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.6" y="606.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="308.6" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.6" y="590.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.48%)</title><rect x="308.9" y="595.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="311.9" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.48%)</title><rect x="308.9" y="579.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.9" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.48%)</title><rect x="308.9" y="563.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="311.9" y="574.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="314.5" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="317.5" y="622.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="314.8" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="317.8" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="315.1" y="691.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="318.1" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="315.7" y="691.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="318.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 0.38%)</title><rect x="315.9" y="851.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.38%)</title><rect x="315.9" y="835.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (14 samples, 0.33%)</title><rect x="315.9" y="819.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.9" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="319.0" y="803.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="322.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="319.9" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="319.9" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="319.9" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.9" y="798.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.02%)</title><rect x="320.1" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 0.67%)</title><rect x="320.4" y="883.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.21%)</title><rect x="324.6" y="867.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="327.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.21%)</title><rect x="324.6" y="851.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.21%)</title><rect x="324.6" y="835.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.21%)</title><rect x="324.6" y="819.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.10%)</title><rect x="327.2" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.21%)</title><rect x="328.3" y="883.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.17%)</title><rect x="328.6" y="867.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.17%)</title><rect x="328.6" y="851.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="330.0" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="330.0" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.0" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="330.0" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="330.5" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="330.5" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="330.8" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="330.8" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="330.8" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="333.8" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="330.8" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="333.8" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="330.8" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="333.8" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="330.8" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="333.8" y="814.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="330.8" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="333.8" y="798.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.02%)</title><rect x="330.8" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="333.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (102 samples, 2.42%)</title><rect x="331.1" y="899.0" width="28.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.1" y="910.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (99 samples, 2.35%)</title><rect x="331.9" y="883.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.9" y="894.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="333.0" y="867.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="336.0" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.52%)</title><rect x="333.6" y="867.0" width="6.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="336.6" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.17%)</title><rect x="334.2" y="851.0" width="1.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="337.2" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.31%)</title><rect x="336.1" y="851.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="339.1" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="337.8" y="835.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="340.8" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="338.7" y="835.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="341.7" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="339.5" y="835.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="342.5" y="846.0"></text>
</g>
<g>
<title>__recv (71 samples, 1.69%)</title><rect x="339.8" y="867.0" width="19.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="342.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 1.64%)</title><rect x="340.3" y="851.0" width="19.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="343.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.02%)</title><rect x="340.3" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="343.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.62%)</title><rect x="340.6" y="835.0" width="19.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (62 samples, 1.47%)</title><rect x="342.3" y="819.0" width="17.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="345.3" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (61 samples, 1.45%)</title><rect x="342.3" y="803.0" width="17.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="345.3" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (54 samples, 1.28%)</title><rect x="342.6" y="787.0" width="15.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="345.6" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="342.6" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="345.6" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (44 samples, 1.05%)</title><rect x="343.1" y="771.0" width="12.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="346.1" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="343.1" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="346.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (43 samples, 1.02%)</title><rect x="343.4" y="755.0" width="12.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.4" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.29%)</title><rect x="345.7" y="739.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.7" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="345.7" y="723.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="348.7" y="734.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.26%)</title><rect x="345.9" y="723.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="348.9" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="345.9" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="348.9" y="718.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="346.2" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="349.2" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.12%)</title><rect x="346.8" y="707.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.8" y="718.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.12%)</title><rect x="346.8" y="691.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.8" y="702.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.07%)</title><rect x="348.2" y="707.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="351.2" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="349.0" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="352.0" y="750.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="349.3" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.3" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="349.6" y="739.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.6" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.21%)</title><rect x="350.4" y="739.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="353.4" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.21%)</title><rect x="350.4" y="723.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.4" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.12%)</title><rect x="351.5" y="707.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.5" y="718.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="351.5" y="691.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="354.5" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="351.8" y="675.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="354.8" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="352.4" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.4" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="352.4" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="355.4" y="686.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="352.7" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.7" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="353.0" y="739.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.0" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.17%)</title><rect x="353.2" y="739.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.2" y="750.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.10%)</title><rect x="353.5" y="723.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="356.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="354.6" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="357.6" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="354.6" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="357.6" y="718.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="354.9" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="357.9" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="355.2" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.2" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.19%)</title><rect x="355.5" y="771.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.10%)</title><rect x="356.6" y="755.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="359.6" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.10%)</title><rect x="356.6" y="739.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.6" y="750.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="356.6" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.6" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.07%)</title><rect x="356.9" y="723.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="359.9" y="734.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="357.2" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="360.2" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.14%)</title><rect x="357.7" y="787.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.7" y="798.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.14%)</title><rect x="357.7" y="771.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.14%)</title><rect x="357.7" y="755.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="360.7" y="766.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.14%)</title><rect x="357.7" y="739.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.7" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="359.4" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.4" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="359.7" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="362.7" y="942.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="359.7" y="915.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="362.7" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="359.7" y="899.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="362.7" y="910.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=4534] (3 samples, 0.07%)</title><rect x="360.0" y="963.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="363.0" y="974.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="360.0" y="947.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="363.0" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="360.0" y="931.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="363.0" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.07%)</title><rect x="360.0" y="915.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="363.0" y="926.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.07%)</title><rect x="360.0" y="899.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="363.0" y="910.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="360.0" y="883.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="363.0" y="894.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.02%)</title><rect x="360.0" y="867.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="363.0" y="878.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.02%)</title><rect x="360.0" y="851.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="363.0" y="862.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.05%)</title><rect x="360.2" y="883.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="363.2" y="894.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.05%)</title><rect x="360.2" y="867.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="363.2" y="878.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.05%)</title><rect x="360.2" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="363.2" y="862.0"></text>
</g>
<g>
<title>Thread::muxRelease(long volatile*) (1 samples, 0.02%)</title><rect x="360.2" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="363.2" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) [clone .part.0] (1 samples, 0.02%)</title><rect x="360.5" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="363.5" y="846.0"></text>
</g>
<g>
<title>[VM Thread tid=4526] (1 samples, 0.02%)</title><rect x="360.8" y="963.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="363.8" y="974.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="360.8" y="947.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="363.8" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="360.8" y="931.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="363.8" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="360.8" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="363.8" y="926.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="360.8" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="363.8" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.02%)</title><rect x="360.8" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="363.8" y="894.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="360.8" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="363.8" y="878.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="360.8" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="363.8" y="862.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="360.8" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="363.8" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="360.8" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="363.8" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.02%)</title><rect x="360.8" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="363.8" y="814.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="360.8" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="363.8" y="798.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="360.8" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="363.8" y="782.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="360.8" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="363.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="360.8" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="363.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="360.8" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="363.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="360.8" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.8" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="360.8" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="360.8" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="363.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="360.8" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="363.8" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="360.8" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="363.8" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="360.8" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="363.8" y="638.0"></text>
</g>
<g>
<title>[async_worker-0 tid=4584] (743 samples, 17.66%)</title><rect x="361.1" y="963.0" width="208.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="364.1" y="974.0">[async_worker-0 tid=4584]</text>
</g>
<g>
<title>java/lang/Thread.run (743 samples, 17.66%)</title><rect x="361.1" y="947.0" width="208.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.1" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (743 samples, 17.66%)</title><rect x="361.1" y="931.0" width="208.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.1" y="942.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (743 samples, 17.66%)</title><rect x="361.1" y="915.0" width="208.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.1" y="926.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (562 samples, 13.36%)</title><rect x="361.1" y="899.0" width="157.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.1" y="910.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (562 samples, 13.36%)</title><rect x="361.1" y="883.0" width="157.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.1" y="894.0">java/util/concurrent..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (562 samples, 13.36%)</title><rect x="361.1" y="867.0" width="157.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.1" y="878.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (562 samples, 13.36%)</title><rect x="361.1" y="851.0" width="157.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.1" y="862.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="361.1" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="361.1" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (560 samples, 13.31%)</title><rect x="361.4" y="835.0" width="157.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.4" y="846.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (337 samples, 8.01%)</title><rect x="361.6" y="819.0" width="94.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.6" y="830.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (321 samples, 7.63%)</title><rect x="362.2" y="803.0" width="90.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.2" y="814.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.33%)</title><rect x="362.2" y="787.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.19%)</title><rect x="363.9" y="771.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.19%)</title><rect x="363.9" y="755.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.19%)</title><rect x="363.9" y="739.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.9" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="365.9" y="723.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="368.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (307 samples, 7.30%)</title><rect x="366.1" y="787.0" width="86.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.1" y="798.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (307 samples, 7.30%)</title><rect x="366.1" y="771.0" width="86.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.1" y="782.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (306 samples, 7.27%)</title><rect x="366.4" y="755.0" width="85.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.4" y="766.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (302 samples, 7.18%)</title><rect x="367.5" y="739.0" width="84.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.5" y="750.0">one/nio/ne..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="368.9" y="723.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="371.9" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.17%)</title><rect x="369.5" y="723.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="372.5" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="370.1" y="707.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="373.1" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="370.9" y="707.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="373.9" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="371.2" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="374.2" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="371.5" y="723.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="374.5" y="734.0"></text>
</g>
<g>
<title>send (287 samples, 6.82%)</title><rect x="371.7" y="723.0" width="80.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="374.7" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (283 samples, 6.73%)</title><rect x="372.9" y="707.0" width="79.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="375.9" y="718.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (283 samples, 6.73%)</title><rect x="372.9" y="691.0" width="79.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.9" y="702.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (275 samples, 6.54%)</title><rect x="375.1" y="675.0" width="77.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="378.1" y="686.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (275 samples, 6.54%)</title><rect x="375.1" y="659.0" width="77.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="378.1" y="670.0">__sys_sen..</text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="375.4" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="378.4" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (269 samples, 6.39%)</title><rect x="375.9" y="643.0" width="75.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="378.9" y="654.0">sock_sen..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.05%)</title><rect x="376.2" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="379.2" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (260 samples, 6.18%)</title><rect x="376.8" y="627.0" width="72.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="379.8" y="638.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (259 samples, 6.15%)</title><rect x="377.1" y="611.0" width="72.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="380.1" y="622.0">tcp_send..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="377.3" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.3" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="377.3" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="380.3" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="377.6" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="380.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (256 samples, 6.08%)</title><rect x="377.9" y="595.0" width="71.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="380.9" y="606.0">tcp_send..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="379.0" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="382.0" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="379.0" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.0" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="379.3" y="579.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.3" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="379.3" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.3" y="574.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.05%)</title><rect x="379.3" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.3" y="558.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="379.3" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="382.3" y="542.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="379.3" y="515.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.3" y="526.0"></text>
</g>
<g>
<title>kernel_poison_pages (1 samples, 0.02%)</title><rect x="379.6" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.6" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (32 samples, 0.76%)</title><rect x="379.9" y="579.0" width="8.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="382.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (32 samples, 0.76%)</title><rect x="379.9" y="563.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.38%)</title><rect x="380.7" y="547.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="383.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.26%)</title><rect x="380.7" y="531.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.7" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.10%)</title><rect x="382.1" y="515.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.1" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="383.2" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="386.2" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="383.5" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="386.5" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="383.8" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="386.8" y="542.0"></text>
</g>
<g>
<title>memset (4 samples, 0.10%)</title><rect x="384.1" y="531.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.1" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.17%)</title><rect x="385.2" y="547.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.2" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.07%)</title><rect x="386.3" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="389.3" y="542.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="386.9" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="389.9" y="526.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.02%)</title><rect x="386.9" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="389.9" y="510.0"></text>
</g>
<g>
<title>allocate_slab (1 samples, 0.02%)</title><rect x="386.9" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="389.9" y="494.0"></text>
</g>
<g>
<title>alloc_slab_page (1 samples, 0.02%)</title><rect x="386.9" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="389.9" y="478.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="386.9" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="389.9" y="462.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="386.9" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="389.9" y="446.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="386.9" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.9" y="430.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.02%)</title><rect x="386.9" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="389.9" y="414.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.10%)</title><rect x="387.2" y="547.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="390.2" y="558.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.10%)</title><rect x="387.2" y="531.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.2" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="388.3" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="391.3" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="388.6" y="547.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="391.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (215 samples, 5.11%)</title><rect x="388.8" y="579.0" width="60.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.8" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (215 samples, 5.11%)</title><rect x="388.8" y="563.0" width="60.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="391.8" y="574.0">__tcp_..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="388.8" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="391.8" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (214 samples, 5.09%)</title><rect x="389.1" y="547.0" width="60.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="392.1" y="558.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="390.5" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="393.5" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (191 samples, 4.54%)</title><rect x="390.8" y="531.0" width="53.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="393.8" y="542.0">__tcp..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="391.6" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="394.6" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="391.9" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.9" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (183 samples, 4.35%)</title><rect x="392.2" y="515.0" width="51.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="395.2" y="526.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (181 samples, 4.30%)</title><rect x="392.5" y="499.0" width="50.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.5" y="510.0">__ip_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="392.8" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.8" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="392.8" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="395.8" y="478.0"></text>
</g>
<g>
<title>ip_local_out (179 samples, 4.25%)</title><rect x="393.1" y="483.0" width="50.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="396.1" y="494.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="393.1" y="467.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="396.1" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="393.1" y="451.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="396.1" y="462.0"></text>
</g>
<g>
<title>ip_output (178 samples, 4.23%)</title><rect x="393.3" y="467.0" width="49.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.3" y="478.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (175 samples, 4.16%)</title><rect x="394.2" y="451.0" width="49.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="397.2" y="462.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.14%)</title><rect x="394.5" y="435.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="397.5" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (168 samples, 3.99%)</title><rect x="396.1" y="435.0" width="47.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="399.1" y="446.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (166 samples, 3.94%)</title><rect x="396.7" y="419.0" width="46.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="399.7" y="430.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (147 samples, 3.49%)</title><rect x="398.1" y="403.0" width="41.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="401.1" y="414.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (146 samples, 3.47%)</title><rect x="398.4" y="387.0" width="40.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.4" y="398.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (145 samples, 3.45%)</title><rect x="398.7" y="371.0" width="40.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.7" y="382.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (145 samples, 3.45%)</title><rect x="398.7" y="355.0" width="40.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="401.7" y="366.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="399.5" y="339.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="402.5" y="350.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="400.1" y="339.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="403.1" y="350.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="400.3" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="403.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (138 samples, 3.28%)</title><rect x="400.6" y="339.0" width="38.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="403.6" y="350.0">net..</text>
</g>
<g>
<title>process_backlog (135 samples, 3.21%)</title><rect x="401.5" y="323.0" width="37.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="404.5" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (129 samples, 3.07%)</title><rect x="403.1" y="307.0" width="36.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.1" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (129 samples, 3.07%)</title><rect x="403.1" y="291.0" width="36.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="406.1" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.10%)</title><rect x="403.1" y="275.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="406.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (123 samples, 2.92%)</title><rect x="404.3" y="275.0" width="34.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="407.3" y="286.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.05%)</title><rect x="404.5" y="259.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="407.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (120 samples, 2.85%)</title><rect x="405.1" y="259.0" width="33.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="408.1" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (119 samples, 2.83%)</title><rect x="405.1" y="243.0" width="33.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="408.1" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (118 samples, 2.80%)</title><rect x="405.4" y="227.0" width="33.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="408.4" y="238.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (117 samples, 2.78%)</title><rect x="405.4" y="211.0" width="32.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="408.4" y="222.0">ip..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="406.0" y="195.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="409.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (114 samples, 2.71%)</title><rect x="406.2" y="195.0" width="32.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="409.2" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.10%)</title><rect x="406.8" y="179.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="409.8" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="407.9" y="179.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.9" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="408.2" y="179.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="411.2" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="408.2" y="163.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="411.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (104 samples, 2.47%)</title><rect x="408.8" y="179.0" width="29.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="411.8" y="190.0">tc..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="408.8" y="163.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="411.8" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="409.0" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.0" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="409.3" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (100 samples, 2.38%)</title><rect x="409.9" y="163.0" width="28.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.9" y="174.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (12 samples, 0.29%)</title><rect x="410.4" y="147.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.4" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.29%)</title><rect x="410.4" y="131.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.4" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="410.4" y="115.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.4" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.24%)</title><rect x="411.0" y="115.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.0" y="126.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.24%)</title><rect x="411.0" y="99.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="414.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.24%)</title><rect x="411.0" y="83.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.0" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="413.8" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.8" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="414.1" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="417.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (29 samples, 0.69%)</title><rect x="414.4" y="147.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="417.4" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="414.9" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="417.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="415.2" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="418.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (23 samples, 0.55%)</title><rect x="415.5" y="131.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.38%)</title><rect x="417.2" y="115.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="420.2" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="417.2" y="99.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="420.2" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="417.4" y="83.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="420.4" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="417.7" y="67.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="420.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.31%)</title><rect x="418.0" y="99.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.31%)</title><rect x="418.0" y="83.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.14%)</title><rect x="420.0" y="67.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="420.0" y="51.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.0" y="62.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.12%)</title><rect x="420.3" y="51.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="420.8" y="35.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="421.7" y="115.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="424.7" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="421.9" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.9" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="422.2" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (50 samples, 1.19%)</title><rect x="422.5" y="147.0" width="14.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (50 samples, 1.19%)</title><rect x="422.5" y="131.0" width="14.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (50 samples, 1.19%)</title><rect x="422.5" y="115.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="425.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (50 samples, 1.19%)</title><rect x="422.5" y="99.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="425.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 1.19%)</title><rect x="422.5" y="83.0" width="14.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="425.5" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="436.5" y="147.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="439.5" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="436.5" y="131.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.5" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="437.1" y="147.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="440.1" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="437.4" y="147.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="437.9" y="179.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="440.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="438.2" y="211.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="438.5" y="243.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="438.8" y="275.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="439.0" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.0" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.33%)</title><rect x="439.3" y="403.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.33%)</title><rect x="439.3" y="387.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.3" y="398.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="440.4" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="443.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.07%)</title><rect x="440.7" y="371.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.07%)</title><rect x="440.7" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.7" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="440.7" y="339.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="440.7" y="323.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.7" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="440.7" y="307.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="443.7" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="441.3" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.3" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="441.6" y="371.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="444.6" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.12%)</title><rect x="441.8" y="371.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="443.0" y="355.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="446.0" y="366.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="443.2" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="446.2" y="510.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="443.5" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="446.5" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="443.5" y="499.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="446.5" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="444.1" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.1" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="444.4" y="531.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="447.4" y="542.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="444.6" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.6" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="444.9" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="447.9" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.19%)</title><rect x="445.5" y="531.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.5" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.14%)</title><rect x="446.1" y="515.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="449.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="446.3" y="499.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="449.3" y="510.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.12%)</title><rect x="446.3" y="483.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="449.3" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.10%)</title><rect x="446.3" y="467.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="449.3" y="478.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="447.5" y="467.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="450.5" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.10%)</title><rect x="447.7" y="531.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.7" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="448.9" y="531.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="451.9" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="448.9" y="515.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.9" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="449.1" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.1" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="449.4" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="452.4" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.14%)</title><rect x="449.7" y="627.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.7" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.14%)</title><rect x="449.7" y="611.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="452.7" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="449.7" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="452.7" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.12%)</title><rect x="450.0" y="595.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="453.0" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (4 samples, 0.10%)</title><rect x="450.3" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="453.3" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="451.1" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="454.1" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="451.4" y="643.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="454.4" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="451.4" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="454.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="451.4" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.4" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="451.4" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="451.7" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.33%)</title><rect x="452.2" y="803.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.29%)</title><rect x="452.8" y="787.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.29%)</title><rect x="452.8" y="771.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (12 samples, 0.29%)</title><rect x="452.8" y="755.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (12 samples, 0.29%)</title><rect x="452.8" y="739.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (12 samples, 0.29%)</title><rect x="452.8" y="723.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.8" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="455.3" y="707.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="458.3" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="455.9" y="707.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="458.9" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="455.9" y="691.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="458.9" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="455.9" y="675.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="458.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (222 samples, 5.28%)</title><rect x="456.1" y="819.0" width="62.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.1" y="830.0">ru/mai..</text>
</g>
<g>
<title>java/nio/charset/Charset.decode (2 samples, 0.05%)</title><rect x="456.1" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.1" y="814.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="456.1" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.1" y="798.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (1 samples, 0.02%)</title><rect x="456.1" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (1 samples, 0.02%)</title><rect x="456.1" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (1 samples, 0.02%)</title><rect x="456.4" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (1 samples, 0.02%)</title><rect x="456.4" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.4" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="456.4" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.4" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (214 samples, 5.09%)</title><rect x="456.7" y="803.0" width="60.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.7" y="814.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (214 samples, 5.09%)</title><rect x="456.7" y="787.0" width="60.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.7" y="798.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (200 samples, 4.75%)</title><rect x="457.3" y="771.0" width="56.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="460.3" y="782.0">Java_o..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (1 samples, 0.02%)</title><rect x="457.8" y="755.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="460.8" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="458.1" y="755.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="461.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="458.7" y="755.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="461.7" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="458.9" y="755.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="461.9" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="459.2" y="755.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="462.2" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.05%)</title><rect x="459.8" y="755.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="462.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="460.4" y="755.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="463.4" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (185 samples, 4.40%)</title><rect x="460.6" y="755.0" width="51.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="463.6" y="766.0">rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="461.5" y="739.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="464.5" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="461.8" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="464.8" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="462.3" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="465.3" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.10%)</title><rect x="462.6" y="739.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="465.6" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.05%)</title><rect x="463.2" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="466.2" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.17%)</title><rect x="463.7" y="739.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="466.7" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="464.3" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="467.3" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.07%)</title><rect x="464.8" y="723.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="467.8" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="465.7" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="468.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (142 samples, 3.37%)</title><rect x="466.0" y="739.0" width="39.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="469.0" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.02%)</title><rect x="466.0" y="723.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="469.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.02%)</title><rect x="466.2" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="469.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (140 samples, 3.33%)</title><rect x="466.5" y="723.0" width="39.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="469.5" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (139 samples, 3.30%)</title><rect x="466.8" y="707.0" width="39.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="469.8" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (135 samples, 3.21%)</title><rect x="467.4" y="691.0" width="37.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="470.4" y="702.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="467.6" y="675.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="470.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.05%)</title><rect x="468.2" y="675.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="471.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.02%)</title><rect x="468.8" y="675.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="471.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.05%)</title><rect x="469.0" y="675.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="472.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (122 samples, 2.90%)</title><rect x="469.6" y="675.0" width="34.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="472.6" y="686.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="471.0" y="659.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="474.0" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="471.6" y="659.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="474.6" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="471.8" y="659.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="474.8" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="472.7" y="659.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="475.7" y="670.0"></text>
</g>
<g>
<title>memcpy (2 samples, 0.05%)</title><rect x="473.0" y="659.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="476.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (7 samples, 0.17%)</title><rect x="473.5" y="659.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="476.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() [clone .plt] (1 samples, 0.02%)</title><rect x="473.8" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="476.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.05%)</title><rect x="474.1" y="643.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="477.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="474.4" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="477.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.07%)</title><rect x="474.7" y="643.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="477.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.05%)</title><rect x="474.9" y="627.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="477.9" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.2" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.2" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.2" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.2" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="475.2" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.2" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="475.2" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.2" y="574.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="475.2" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.2" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="475.2" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="478.2" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="475.2" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.10%)</title><rect x="475.5" y="659.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="478.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.05%)</title><rect x="475.5" y="643.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="478.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.05%)</title><rect x="475.5" y="627.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="478.5" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="475.8" y="611.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="478.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="476.1" y="643.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="479.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="476.3" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="479.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.07%)</title><rect x="476.6" y="659.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="479.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (90 samples, 2.14%)</title><rect x="477.5" y="659.0" width="25.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="480.5" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (1 samples, 0.02%)</title><rect x="478.9" y="643.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="481.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="478.9" y="627.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="481.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="478.9" y="611.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="481.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="478.9" y="595.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.9" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="479.1" y="643.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="482.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (83 samples, 1.97%)</title><rect x="479.4" y="643.0" width="23.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="482.4" y="654.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (81 samples, 1.92%)</title><rect x="479.7" y="627.0" width="22.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="482.7" y="638.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (4 samples, 0.10%)</title><rect x="479.7" y="611.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="482.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (67 samples, 1.59%)</title><rect x="480.8" y="611.0" width="18.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="483.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (4 samples, 0.10%)</title><rect x="489.0" y="595.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="492.0" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="490.1" y="595.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="493.1" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.02%)</title><rect x="490.4" y="595.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="493.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="490.6" y="595.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="493.6" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="491.5" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.5" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="491.5" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="494.5" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="491.5" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="494.5" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="491.5" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="494.5" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="491.5" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="494.5" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="491.5" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="494.5" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="491.5" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (28 samples, 0.67%)</title><rect x="491.8" y="595.0" width="7.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="494.8" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (5 samples, 0.12%)</title><rect x="494.0" y="579.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="497.0" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (14 samples, 0.33%)</title><rect x="495.4" y="579.0" width="3.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="498.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="499.3" y="579.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="502.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.14%)</title><rect x="499.6" y="611.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="502.6" y="622.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (4 samples, 0.10%)</title><rect x="501.3" y="611.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="504.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.02%)</title><rect x="502.4" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="505.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.02%)</title><rect x="502.7" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="505.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.02%)</title><rect x="503.0" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="506.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="503.3" y="659.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="506.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="503.5" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="506.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.02%)</title><rect x="503.8" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="506.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.05%)</title><rect x="504.1" y="675.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="507.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.05%)</title><rect x="504.7" y="675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="507.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (2 samples, 0.05%)</title><rect x="505.2" y="691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="508.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.02%)</title><rect x="505.8" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="508.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (23 samples, 0.55%)</title><rect x="506.1" y="739.0" width="6.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="509.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="506.3" y="723.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="509.3" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="506.6" y="723.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="509.6" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (16 samples, 0.38%)</title><rect x="506.9" y="723.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="509.9" y="734.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.02%)</title><rect x="508.0" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="511.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="508.3" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="511.3" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.24%)</title><rect x="508.6" y="707.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="511.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.17%)</title><rect x="509.4" y="691.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="512.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="509.7" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="512.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="510.0" y="659.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="513.0" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="510.3" y="659.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="513.3" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="510.5" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="513.5" y="686.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="510.8" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="513.8" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="511.1" y="675.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="514.1" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.10%)</title><rect x="511.4" y="723.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="514.4" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="511.7" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="514.7" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="512.2" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="515.2" y="718.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.05%)</title><rect x="512.5" y="755.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="515.5" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.02%)</title><rect x="513.1" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="516.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="513.4" y="771.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="516.4" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="513.4" y="755.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="516.4" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="513.6" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="516.6" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="513.9" y="771.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="516.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.05%)</title><rect x="514.5" y="771.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="517.5" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (4 samples, 0.10%)</title><rect x="515.0" y="771.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="518.0" y="782.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.05%)</title><rect x="516.2" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="519.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (6 samples, 0.14%)</title><rect x="516.7" y="803.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.7" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="517.8" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="520.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="518.1" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.1" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="518.1" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="521.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="518.1" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (1 samples, 0.02%)</title><rect x="518.4" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="518.4" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="518.4" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="518.4" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="518.4" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="518.4" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="518.4" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="518.4" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.4" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="518.4" y="707.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="521.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (12 samples, 0.29%)</title><rect x="518.7" y="899.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.29%)</title><rect x="518.7" y="883.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.29%)</title><rect x="518.7" y="867.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.14%)</title><rect x="520.4" y="851.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (169 samples, 4.02%)</title><rect x="522.0" y="899.0" width="47.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.0" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (168 samples, 3.99%)</title><rect x="522.3" y="883.0" width="47.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.3" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (80 samples, 1.90%)</title><rect x="523.4" y="867.0" width="22.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.4" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.07%)</title><rect x="523.4" y="851.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (15 samples, 0.36%)</title><rect x="524.3" y="851.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.36%)</title><rect x="524.3" y="835.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.33%)</title><rect x="524.6" y="819.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.33%)</title><rect x="524.6" y="803.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.33%)</title><rect x="524.6" y="787.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.6" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.10%)</title><rect x="524.6" y="771.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="527.6" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="524.6" y="755.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="527.6" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="524.8" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="527.8" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="525.1" y="755.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="528.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.24%)</title><rect x="525.7" y="771.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="528.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.24%)</title><rect x="525.7" y="755.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="528.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.24%)</title><rect x="525.7" y="739.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.24%)</title><rect x="525.7" y="723.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.7" y="734.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.24%)</title><rect x="525.7" y="707.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="528.7" y="718.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.24%)</title><rect x="525.7" y="691.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="528.7" y="702.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="525.7" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="528.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.21%)</title><rect x="526.0" y="675.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="529.0" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.21%)</title><rect x="526.0" y="659.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.0" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.21%)</title><rect x="526.0" y="643.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="529.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 1.47%)</title><rect x="528.5" y="851.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 1.43%)</title><rect x="529.1" y="835.0" width="16.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.1" y="846.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="530.2" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="533.2" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (25 samples, 0.59%)</title><rect x="530.5" y="819.0" width="7.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="533.5" y="830.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="531.0" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="534.0" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="531.3" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="534.3" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.19%)</title><rect x="531.6" y="803.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="534.6" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="533.3" y="787.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="536.3" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="533.5" y="787.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="536.5" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="533.8" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="536.8" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (10 samples, 0.24%)</title><rect x="534.1" y="803.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="537.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.14%)</title><rect x="535.2" y="787.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.14%)</title><rect x="535.2" y="771.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="538.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="536.3" y="755.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="539.3" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="536.3" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="539.3" y="750.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="536.3" y="723.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="539.3" y="734.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="536.3" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="539.3" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="536.6" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="539.6" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="536.9" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="539.9" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait (1 samples, 0.02%)</title><rect x="537.2" y="803.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="540.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.71%)</title><rect x="537.5" y="819.0" width="8.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="540.5" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="537.5" y="803.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="540.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="537.7" y="803.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="540.7" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (16 samples, 0.38%)</title><rect x="538.0" y="803.0" width="4.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="541.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.24%)</title><rect x="539.7" y="787.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="542.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.24%)</title><rect x="539.7" y="771.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.19%)</title><rect x="540.3" y="755.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="543.3" y="766.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.19%)</title><rect x="540.3" y="739.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="543.3" y="750.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.17%)</title><rect x="540.3" y="723.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="540.6" y="707.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.6" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="540.8" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.8" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="541.1" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="544.1" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.05%)</title><rect x="541.4" y="707.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="544.4" y="718.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="542.0" y="707.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="545.0" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="542.2" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.2" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (11 samples, 0.26%)</title><rect x="542.5" y="803.0" width="3.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="545.5" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="545.6" y="803.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="548.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (10 samples, 0.24%)</title><rect x="545.9" y="867.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (10 samples, 0.24%)</title><rect x="545.9" y="851.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10 samples, 0.24%)</title><rect x="545.9" y="835.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.17%)</title><rect x="546.4" y="819.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.17%)</title><rect x="546.4" y="803.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.17%)</title><rect x="546.4" y="787.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.4" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.12%)</title><rect x="546.4" y="771.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="549.4" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.10%)</title><rect x="546.4" y="755.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="549.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="546.4" y="739.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="549.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="546.4" y="723.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="549.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="546.7" y="707.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.7" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="546.7" y="691.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="547.0" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="550.0" y="686.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="547.0" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.0" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="547.3" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="550.3" y="718.0"></text>
</g>
<g>
<title>pthread_cond_wait (1 samples, 0.02%)</title><rect x="547.6" y="755.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="550.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="547.8" y="771.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="550.8" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="547.8" y="755.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="550.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="548.1" y="755.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="551.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="548.4" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="548.4" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="548.4" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (74 samples, 1.76%)</title><rect x="548.7" y="867.0" width="20.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (74 samples, 1.76%)</title><rect x="548.7" y="851.0" width="20.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (74 samples, 1.76%)</title><rect x="548.7" y="835.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (74 samples, 1.76%)</title><rect x="548.7" y="819.0" width="20.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (60 samples, 1.43%)</title><rect x="552.6" y="803.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.6" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="552.9" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="555.9" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.26%)</title><rect x="553.2" y="787.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="556.2" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="553.5" y="771.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="556.5" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="553.7" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="556.7" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="554.3" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="557.3" y="782.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="554.6" y="771.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="557.6" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.07%)</title><rect x="555.4" y="771.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="558.4" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (47 samples, 1.12%)</title><rect x="556.3" y="787.0" width="13.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="559.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.00%)</title><rect x="557.7" y="771.0" width="11.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="560.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 1.00%)</title><rect x="557.7" y="755.0" width="11.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="560.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 0.95%)</title><rect x="557.9" y="739.0" width="11.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="560.9" y="750.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.90%)</title><rect x="558.5" y="723.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="561.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="558.8" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="561.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 0.86%)</title><rect x="559.1" y="707.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="562.1" y="718.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="560.7" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="563.7" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="561.0" y="691.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.0" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="561.6" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.6" y="686.0"></text>
</g>
<g>
<title>wake_up_q (26 samples, 0.62%)</title><rect x="561.9" y="691.0" width="7.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (26 samples, 0.62%)</title><rect x="561.9" y="675.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.9" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (26 samples, 0.62%)</title><rect x="561.9" y="659.0" width="7.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="564.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="569.2" y="739.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.2" y="750.0"></text>
</g>
<g>
<title>[async_worker-1 tid=4585] (739 samples, 17.56%)</title><rect x="569.4" y="963.0" width="207.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="572.4" y="974.0">[async_worker-1 tid=4585]</text>
</g>
<g>
<title>java/lang/Thread.run (739 samples, 17.56%)</title><rect x="569.4" y="947.0" width="207.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.4" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (739 samples, 17.56%)</title><rect x="569.4" y="931.0" width="207.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.4" y="942.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (739 samples, 17.56%)</title><rect x="569.4" y="915.0" width="207.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.4" y="926.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (562 samples, 13.36%)</title><rect x="569.4" y="899.0" width="157.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.4" y="910.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (562 samples, 13.36%)</title><rect x="569.4" y="883.0" width="157.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.4" y="894.0">java/util/concurrent..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (562 samples, 13.36%)</title><rect x="569.4" y="867.0" width="157.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.4" y="878.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (562 samples, 13.36%)</title><rect x="569.4" y="851.0" width="157.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.4" y="862.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="569.4" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="569.4" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (1 samples, 0.02%)</title><rect x="569.4" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.02%)</title><rect x="569.7" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="569.7" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="569.7" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="569.7" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="569.7" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="569.7" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.7" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="569.7" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (558 samples, 13.26%)</title><rect x="570.0" y="835.0" width="156.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.0" y="846.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (361 samples, 8.58%)</title><rect x="570.3" y="819.0" width="101.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.3" y="830.0">one/nio/http..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="571.4" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="574.4" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="571.4" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="574.4" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.02%)</title><rect x="571.4" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="574.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (335 samples, 7.96%)</title><rect x="571.7" y="803.0" width="93.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.7" y="814.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.55%)</title><rect x="571.7" y="787.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.38%)</title><rect x="573.6" y="771.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (16 samples, 0.38%)</title><rect x="573.6" y="755.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (16 samples, 0.38%)</title><rect x="573.6" y="739.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.12%)</title><rect x="576.7" y="723.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="579.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (312 samples, 7.41%)</title><rect x="578.1" y="787.0" width="87.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.1" y="798.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (312 samples, 7.41%)</title><rect x="578.1" y="771.0" width="87.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.1" y="782.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (312 samples, 7.41%)</title><rect x="578.1" y="755.0" width="87.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.1" y="766.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (309 samples, 7.34%)</title><rect x="579.0" y="739.0" width="86.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.0" y="750.0">one/nio/ne..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="580.9" y="723.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="583.9" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.10%)</title><rect x="581.5" y="723.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="584.5" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="582.1" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="585.1" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="582.3" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="585.3" y="702.0"></text>
</g>
<g>
<title>send (296 samples, 7.03%)</title><rect x="582.6" y="723.0" width="83.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="585.6" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (290 samples, 6.89%)</title><rect x="584.3" y="707.0" width="81.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="587.3" y="718.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="584.3" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (289 samples, 6.87%)</title><rect x="584.6" y="691.0" width="81.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="587.6" y="702.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (286 samples, 6.80%)</title><rect x="585.4" y="675.0" width="80.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="588.4" y="686.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (286 samples, 6.80%)</title><rect x="585.4" y="659.0" width="80.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="588.4" y="670.0">__sys_sen..</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="585.7" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.7" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (270 samples, 6.42%)</title><rect x="586.0" y="643.0" width="75.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="589.0" y="654.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (264 samples, 6.27%)</title><rect x="586.0" y="627.0" width="74.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="589.0" y="638.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (262 samples, 6.23%)</title><rect x="586.5" y="611.0" width="73.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="589.5" y="622.0">tcp_send..</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="587.1" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.1" y="606.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="587.7" y="595.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.7" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="587.7" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.7" y="590.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="587.9" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="590.9" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="588.2" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="591.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (255 samples, 6.06%)</title><rect x="588.5" y="595.0" width="71.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.5" y="606.0">tcp_send..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="589.6" y="579.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.6" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="589.9" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.9" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="590.5" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="593.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.43%)</title><rect x="590.7" y="579.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.43%)</title><rect x="590.7" y="563.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (11 samples, 0.26%)</title><rect x="590.7" y="547.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="593.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.19%)</title><rect x="590.7" y="531.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="593.7" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.12%)</title><rect x="591.3" y="515.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="594.3" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="592.7" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.7" y="526.0"></text>
</g>
<g>
<title>memset (3 samples, 0.07%)</title><rect x="593.0" y="531.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.12%)</title><rect x="593.8" y="547.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.8" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="595.0" y="531.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="598.0" y="542.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="595.0" y="515.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="598.0" y="526.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.02%)</title><rect x="595.0" y="499.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="598.0" y="510.0"></text>
</g>
<g>
<title>setup_object_debug.isra.0 (1 samples, 0.02%)</title><rect x="595.0" y="483.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="598.0" y="494.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="595.2" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="598.2" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.05%)</title><rect x="595.2" y="531.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="598.2" y="542.0"></text>
</g>
<g>
<title>tcp_push (225 samples, 5.35%)</title><rect x="595.8" y="579.0" width="63.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.8" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (225 samples, 5.35%)</title><rect x="595.8" y="563.0" width="63.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="598.8" y="574.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (224 samples, 5.32%)</title><rect x="596.1" y="547.0" width="62.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.1" y="558.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (196 samples, 4.66%)</title><rect x="596.4" y="531.0" width="54.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.4" y="542.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (188 samples, 4.47%)</title><rect x="597.2" y="515.0" width="52.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.2" y="526.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (188 samples, 4.47%)</title><rect x="597.2" y="499.0" width="52.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.2" y="510.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (186 samples, 4.42%)</title><rect x="597.5" y="483.0" width="52.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.5" y="494.0">ip_lo..</text>
</g>
<g>
<title>ip_output (186 samples, 4.42%)</title><rect x="597.5" y="467.0" width="52.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.5" y="478.0">ip_ou..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="598.3" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (182 samples, 4.33%)</title><rect x="598.6" y="451.0" width="51.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="601.6" y="462.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="598.9" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="601.9" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (180 samples, 4.28%)</title><rect x="599.2" y="435.0" width="50.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="602.2" y="446.0">__ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="599.2" y="419.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="602.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (179 samples, 4.25%)</title><rect x="599.4" y="419.0" width="50.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="602.4" y="430.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (154 samples, 3.66%)</title><rect x="600.8" y="403.0" width="43.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="603.8" y="414.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (153 samples, 3.64%)</title><rect x="601.1" y="387.0" width="42.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.1" y="398.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (149 samples, 3.54%)</title><rect x="602.2" y="371.0" width="41.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="605.2" y="382.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (148 samples, 3.52%)</title><rect x="602.2" y="355.0" width="41.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="605.2" y="366.0">__s..</text>
</g>
<g>
<title>net_rx_action (146 samples, 3.47%)</title><rect x="602.8" y="339.0" width="40.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="605.8" y="350.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="603.9" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="606.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (141 samples, 3.35%)</title><rect x="604.2" y="323.0" width="39.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="607.2" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (138 samples, 3.28%)</title><rect x="605.0" y="307.0" width="38.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="608.0" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (138 samples, 3.28%)</title><rect x="605.0" y="291.0" width="38.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="608.0" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.10%)</title><rect x="605.3" y="275.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="608.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (132 samples, 3.14%)</title><rect x="606.4" y="275.0" width="37.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.4" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="606.4" y="259.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.07%)</title><rect x="607.0" y="259.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="610.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (127 samples, 3.02%)</title><rect x="607.9" y="259.0" width="35.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="610.9" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (124 samples, 2.95%)</title><rect x="608.1" y="243.0" width="34.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.1" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (124 samples, 2.95%)</title><rect x="608.1" y="227.0" width="34.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="611.1" y="238.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (124 samples, 2.95%)</title><rect x="608.1" y="211.0" width="34.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.1" y="222.0">ip..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="608.1" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="611.1" y="206.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="608.4" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="611.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (122 samples, 2.90%)</title><rect x="608.7" y="195.0" width="34.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="611.7" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.10%)</title><rect x="609.0" y="179.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="612.0" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="609.8" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.8" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="610.1" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.1" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.07%)</title><rect x="610.4" y="179.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="613.4" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="610.4" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="613.4" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="610.7" y="163.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="613.7" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="610.9" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="613.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (112 samples, 2.66%)</title><rect x="611.2" y="179.0" width="31.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.2" y="190.0">tc..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.10%)</title><rect x="611.2" y="163.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (108 samples, 2.57%)</title><rect x="612.3" y="163.0" width="30.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.3" y="174.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.26%)</title><rect x="612.3" y="147.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="615.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (11 samples, 0.26%)</title><rect x="612.3" y="131.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="615.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.26%)</title><rect x="612.3" y="115.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.26%)</title><rect x="612.3" y="99.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.24%)</title><rect x="612.6" y="83.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="615.6" y="94.0"></text>
</g>
<g>
<title>tcp_ack (32 samples, 0.76%)</title><rect x="615.4" y="147.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="618.4" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="616.3" y="131.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="619.3" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="616.5" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="619.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (25 samples, 0.59%)</title><rect x="616.8" y="131.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="619.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.40%)</title><rect x="618.2" y="115.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="621.2" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.14%)</title><rect x="618.2" y="99.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="621.2" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.14%)</title><rect x="618.2" y="83.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="621.2" y="94.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="619.1" y="67.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.1" y="78.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.26%)</title><rect x="619.9" y="99.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="622.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.26%)</title><rect x="619.9" y="83.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="622.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.14%)</title><rect x="621.3" y="67.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="621.3" y="51.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="624.3" y="62.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.12%)</title><rect x="621.6" y="51.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="624.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="622.2" y="35.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="625.2" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="623.0" y="115.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="626.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="623.6" y="115.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="626.6" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="623.8" y="131.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="626.8" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="624.1" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="627.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (63 samples, 1.50%)</title><rect x="624.4" y="147.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (63 samples, 1.50%)</title><rect x="624.4" y="131.0" width="17.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="627.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="624.7" y="115.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="627.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (61 samples, 1.45%)</title><rect x="625.0" y="115.0" width="17.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (61 samples, 1.45%)</title><rect x="625.0" y="99.0" width="17.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="628.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (61 samples, 1.45%)</title><rect x="625.0" y="83.0" width="17.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="628.0" y="94.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="642.1" y="147.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="645.1" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="642.3" y="147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="642.6" y="179.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="645.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="642.9" y="243.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="643.2" y="243.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="646.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="643.5" y="275.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="646.5" y="286.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="643.7" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="646.7" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.48%)</title><rect x="644.0" y="403.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.45%)</title><rect x="644.0" y="387.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="647.0" y="398.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="645.4" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.26%)</title><rect x="645.7" y="371.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.24%)</title><rect x="646.0" y="355.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="649.0" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="646.3" y="339.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="649.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.12%)</title><rect x="646.8" y="339.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="649.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.12%)</title><rect x="646.8" y="323.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="649.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.12%)</title><rect x="646.8" y="307.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.8" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="648.2" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="651.2" y="350.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="648.5" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.5" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="648.8" y="371.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.8" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="649.1" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="652.1" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="649.4" y="387.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="652.4" y="398.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="649.6" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="652.6" y="494.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.10%)</title><rect x="649.9" y="515.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.9" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="649.9" y="499.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.9" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="650.5" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="653.5" y="510.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="651.0" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.0" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.07%)</title><rect x="651.3" y="531.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="654.3" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="652.2" y="531.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.2" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="652.4" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="655.4" y="542.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.07%)</title><rect x="653.0" y="531.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="656.0" y="542.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="653.8" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="656.8" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (13 samples, 0.31%)</title><rect x="654.1" y="531.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="657.1" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="655.0" y="515.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="658.0" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.21%)</title><rect x="655.2" y="515.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="658.2" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.19%)</title><rect x="655.5" y="499.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.5" y="510.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.19%)</title><rect x="655.5" y="483.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="658.5" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.19%)</title><rect x="655.5" y="467.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="658.5" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="657.8" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="660.8" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="658.3" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="661.3" y="542.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="658.3" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="658.6" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="661.6" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="658.6" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="661.6" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="658.9" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.9" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.07%)</title><rect x="659.2" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="662.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.07%)</title><rect x="659.2" y="563.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="662.2" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="659.4" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="662.4" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="659.7" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="662.7" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.14%)</title><rect x="660.0" y="627.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="663.0" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.12%)</title><rect x="660.3" y="611.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.3" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.12%)</title><rect x="660.3" y="595.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.3" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (3 samples, 0.07%)</title><rect x="660.9" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="663.9" y="590.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.05%)</title><rect x="661.1" y="563.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="664.1" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.33%)</title><rect x="661.7" y="643.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="664.7" y="654.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.21%)</title><rect x="662.3" y="627.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.21%)</title><rect x="662.3" y="611.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="665.3" y="622.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.21%)</title><rect x="662.3" y="595.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="665.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="664.8" y="627.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="667.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 0.50%)</title><rect x="665.6" y="803.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.33%)</title><rect x="667.6" y="787.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.33%)</title><rect x="667.6" y="771.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (14 samples, 0.33%)</title><rect x="667.6" y="755.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (14 samples, 0.33%)</title><rect x="667.6" y="739.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.6" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (14 samples, 0.33%)</title><rect x="667.6" y="723.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.6" y="734.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.10%)</title><rect x="669.3" y="707.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="672.3" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.10%)</title><rect x="670.4" y="707.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="673.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.10%)</title><rect x="670.4" y="691.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="673.4" y="702.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="670.7" y="675.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="673.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (196 samples, 4.66%)</title><rect x="671.5" y="819.0" width="55.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.5" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/nio/charset/Charset.decode (3 samples, 0.07%)</title><rect x="671.5" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.5" y="814.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (2 samples, 0.05%)</title><rect x="671.5" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="674.5" y="798.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (2 samples, 0.05%)</title><rect x="671.5" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (2 samples, 0.05%)</title><rect x="671.5" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (1 samples, 0.02%)</title><rect x="672.1" y="787.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (1 samples, 0.02%)</title><rect x="672.1" y="771.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.1" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="672.1" y="755.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.02%)</title><rect x="672.1" y="739.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.1" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (189 samples, 4.49%)</title><rect x="672.3" y="803.0" width="53.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.3" y="814.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (189 samples, 4.49%)</title><rect x="672.3" y="787.0" width="53.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.3" y="798.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (178 samples, 4.23%)</title><rect x="672.9" y="771.0" width="49.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="675.9" y="782.0">Java_..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.05%)</title><rect x="673.2" y="755.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="676.2" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="673.7" y="755.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="676.7" y="766.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.05%)</title><rect x="674.0" y="755.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="677.0" y="766.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="674.6" y="755.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="677.6" y="766.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="674.9" y="755.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="677.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="675.2" y="755.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="678.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="675.4" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="678.4" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (168 samples, 3.99%)</title><rect x="675.7" y="755.0" width="47.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="678.7" y="766.0">rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.10%)</title><rect x="676.3" y="739.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="679.3" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="677.4" y="739.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="680.4" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="677.7" y="739.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="680.7" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="677.7" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="680.7" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="678.0" y="739.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="681.0" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="678.2" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="681.2" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="678.5" y="723.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="681.5" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.05%)</title><rect x="678.8" y="739.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="681.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (129 samples, 3.07%)</title><rect x="679.4" y="739.0" width="36.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="682.4" y="750.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.02%)</title><rect x="679.9" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="682.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.02%)</title><rect x="680.2" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="683.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (125 samples, 2.97%)</title><rect x="680.5" y="723.0" width="35.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="683.5" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (124 samples, 2.95%)</title><rect x="680.8" y="707.0" width="34.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="683.8" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (123 samples, 2.92%)</title><rect x="681.0" y="691.0" width="34.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="684.0" y="702.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="681.3" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="684.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (3 samples, 0.07%)</title><rect x="681.6" y="675.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="684.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.05%)</title><rect x="682.4" y="675.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="685.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (110 samples, 2.61%)</title><rect x="683.0" y="675.0" width="30.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="686.0" y="686.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="684.7" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="687.7" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="685.2" y="659.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="688.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (8 samples, 0.19%)</title><rect x="685.5" y="659.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="688.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="686.9" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="689.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="687.2" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="690.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="687.2" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="690.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="687.5" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="690.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="687.5" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="690.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.02%)</title><rect x="687.8" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="690.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (83 samples, 1.97%)</title><rect x="688.1" y="659.0" width="23.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="691.1" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (4 samples, 0.10%)</title><rect x="688.6" y="643.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="691.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (76 samples, 1.81%)</title><rect x="689.7" y="643.0" width="21.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="692.7" y="654.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (72 samples, 1.71%)</title><rect x="690.6" y="627.0" width="20.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="693.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (1 samples, 0.02%)</title><rect x="690.6" y="611.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="693.6" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="690.9" y="611.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="693.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (65 samples, 1.54%)</title><rect x="691.1" y="611.0" width="18.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="694.1" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (2 samples, 0.05%)</title><rect x="700.1" y="595.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="703.1" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.12%)</title><rect x="700.7" y="595.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="703.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="702.1" y="595.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="705.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (24 samples, 0.57%)</title><rect x="702.6" y="595.0" width="6.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="705.6" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (4 samples, 0.10%)</title><rect x="704.6" y="579.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="707.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.24%)</title><rect x="705.7" y="579.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="708.7" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="708.5" y="579.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="711.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="709.1" y="579.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="712.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="709.4" y="611.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="712.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.02%)</title><rect x="710.5" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="713.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="710.8" y="627.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.8" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="710.8" y="611.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="713.8" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="710.8" y="595.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="711.0" y="643.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="714.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (3 samples, 0.07%)</title><rect x="711.3" y="659.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="714.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="712.2" y="659.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="715.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.02%)</title><rect x="712.4" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="715.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="712.7" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="715.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="713.0" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="716.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.05%)</title><rect x="713.3" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="716.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="713.8" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="716.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.07%)</title><rect x="714.1" y="675.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="717.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.02%)</title><rect x="715.0" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="715.3" y="675.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="718.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.02%)</title><rect x="715.5" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="718.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (23 samples, 0.55%)</title><rect x="715.8" y="739.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="718.8" y="750.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.02%)</title><rect x="715.8" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="718.8" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.07%)</title><rect x="716.1" y="723.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="719.1" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.05%)</title><rect x="716.4" y="707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="719.4" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (16 samples, 0.38%)</title><rect x="716.9" y="723.0" width="4.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="719.9" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="717.8" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="720.8" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.02%)</title><rect x="718.1" y="707.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="721.1" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="718.3" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="721.3" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.24%)</title><rect x="718.6" y="707.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="721.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.14%)</title><rect x="719.5" y="691.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="722.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.10%)</title><rect x="719.5" y="675.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="722.5" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="719.7" y="659.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="722.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="720.0" y="659.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="723.0" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="720.6" y="675.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="723.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="721.1" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="724.1" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="721.4" y="723.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="724.4" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="721.4" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="721.7" y="707.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="724.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="722.3" y="739.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="725.3" y="750.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="722.5" y="739.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="725.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="722.8" y="771.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="725.8" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="722.8" y="755.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="725.8" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="723.4" y="755.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="726.4" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.07%)</title><rect x="723.7" y="771.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="726.7" y="782.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="724.5" y="771.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="727.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.02%)</title><rect x="724.8" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="727.8" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.02%)</title><rect x="725.1" y="771.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="728.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (4 samples, 0.10%)</title><rect x="725.3" y="803.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.3" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="725.9" y="787.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="728.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="726.2" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="729.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (2 samples, 0.05%)</title><rect x="726.5" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="726.5" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="726.5" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="726.5" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="726.5" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.5" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="726.5" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="726.5" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="726.5" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (17 samples, 0.40%)</title><rect x="727.0" y="899.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.40%)</title><rect x="727.0" y="883.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.40%)</title><rect x="727.0" y="867.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.17%)</title><rect x="729.8" y="851.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (160 samples, 3.80%)</title><rect x="731.8" y="899.0" width="44.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.8" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (160 samples, 3.80%)</title><rect x="731.8" y="883.0" width="44.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.8" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (78 samples, 1.85%)</title><rect x="734.3" y="867.0" width="21.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.3" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="734.3" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="734.3" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="734.3" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="734.3" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.3" y="787.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="737.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="734.3" y="771.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="737.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (17 samples, 0.40%)</title><rect x="734.6" y="851.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.40%)</title><rect x="734.6" y="835.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.40%)</title><rect x="734.6" y="819.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.40%)</title><rect x="734.6" y="803.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="734.6" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.38%)</title><rect x="734.9" y="787.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.9" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="734.9" y="771.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="737.9" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="734.9" y="755.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="737.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.36%)</title><rect x="735.2" y="771.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="738.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.33%)</title><rect x="735.4" y="755.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="738.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.33%)</title><rect x="735.4" y="739.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.33%)</title><rect x="735.4" y="723.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="738.4" y="734.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.33%)</title><rect x="735.4" y="707.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="738.4" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="735.4" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="738.4" y="702.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.29%)</title><rect x="735.7" y="691.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="738.7" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="735.7" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.7" y="686.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="735.7" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.7" y="670.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="736.0" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.0" y="686.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.24%)</title><rect x="736.3" y="675.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="739.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.24%)</title><rect x="736.3" y="659.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="739.3" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.24%)</title><rect x="736.3" y="643.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="739.3" y="654.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="739.1" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="739.4" y="851.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="739.4" y="835.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (58 samples, 1.38%)</title><rect x="739.6" y="851.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 1.38%)</title><rect x="739.6" y="835.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.6" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.55%)</title><rect x="739.6" y="819.0" width="6.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="742.6" y="830.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="739.9" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="742.9" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="740.2" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="743.2" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.10%)</title><rect x="740.5" y="803.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="743.5" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="741.1" y="787.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="744.1" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="741.3" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="744.3" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="741.6" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="744.6" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="741.9" y="803.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="744.9" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (11 samples, 0.26%)</title><rect x="742.5" y="803.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="745.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="743.6" y="787.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="746.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="743.6" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="746.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.14%)</title><rect x="743.9" y="771.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="744.7" y="755.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.7" y="766.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="744.7" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="745.0" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="748.0" y="734.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="745.3" y="707.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.3" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="745.3" y="691.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="748.3" y="702.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="745.5" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="748.5" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="745.8" y="803.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="748.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.83%)</title><rect x="746.1" y="819.0" width="9.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="749.1" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.10%)</title><rect x="746.1" y="803.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="749.1" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (23 samples, 0.55%)</title><rect x="747.2" y="803.0" width="6.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="750.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.29%)</title><rect x="750.3" y="787.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="753.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.29%)</title><rect x="750.3" y="771.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.24%)</title><rect x="750.9" y="755.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.9" y="766.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.24%)</title><rect x="750.9" y="739.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="753.9" y="750.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.24%)</title><rect x="750.9" y="723.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.9" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="751.1" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="754.1" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.10%)</title><rect x="751.4" y="707.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.4" y="718.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.10%)</title><rect x="751.4" y="691.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="754.4" y="702.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.07%)</title><rect x="751.7" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="754.7" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.07%)</title><rect x="751.7" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="754.7" y="670.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="752.3" y="643.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="755.3" y="654.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="752.3" y="627.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.3" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="752.3" y="611.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.3" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="752.3" y="595.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="755.3" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.07%)</title><rect x="752.5" y="707.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.5" y="718.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="753.1" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.1" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="753.4" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="756.4" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="753.7" y="803.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="756.7" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.07%)</title><rect x="754.5" y="803.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="757.5" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="755.4" y="803.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="758.4" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="755.6" y="803.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="758.6" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="755.9" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="758.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="755.9" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="755.9" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="758.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.17%)</title><rect x="756.2" y="867.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.17%)</title><rect x="756.2" y="851.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.17%)</title><rect x="756.2" y="835.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.12%)</title><rect x="756.5" y="819.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.12%)</title><rect x="756.5" y="803.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.12%)</title><rect x="756.5" y="787.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.07%)</title><rect x="756.5" y="771.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="759.5" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="756.5" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="759.5" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="756.5" y="739.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="759.5" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="756.8" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="759.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="756.8" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="759.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="756.8" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="757.0" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.0" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="757.0" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="760.0" y="702.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="757.0" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="760.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="757.3" y="771.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="760.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="757.3" y="755.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="760.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="757.3" y="739.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="760.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="757.3" y="723.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="760.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="757.3" y="707.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="760.3" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="757.3" y="691.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="760.3" y="702.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="757.6" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="760.6" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="757.6" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="760.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="757.9" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="757.9" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="757.9" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (66 samples, 1.57%)</title><rect x="758.2" y="867.0" width="18.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (66 samples, 1.57%)</title><rect x="758.2" y="851.0" width="18.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (66 samples, 1.57%)</title><rect x="758.2" y="835.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (66 samples, 1.57%)</title><rect x="758.2" y="819.0" width="18.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (54 samples, 1.28%)</title><rect x="761.2" y="803.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.2" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="761.8" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="764.8" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.14%)</title><rect x="762.1" y="787.0" width="1.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="765.1" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="762.4" y="771.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="765.4" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="762.6" y="771.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="765.6" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="763.2" y="771.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="766.2" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="763.5" y="771.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="766.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 1.05%)</title><rect x="763.8" y="787.0" width="12.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="766.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.97%)</title><rect x="764.6" y="771.0" width="11.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="767.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.97%)</title><rect x="764.6" y="755.0" width="11.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="767.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 0.95%)</title><rect x="764.9" y="739.0" width="11.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="767.9" y="750.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.95%)</title><rect x="764.9" y="723.0" width="11.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="767.9" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="764.9" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.93%)</title><rect x="765.2" y="707.0" width="10.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="768.2" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="766.3" y="691.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="769.3" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="766.8" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="769.8" y="686.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="767.1" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="770.1" y="702.0"></text>
</g>
<g>
<title>wake_up_q (31 samples, 0.74%)</title><rect x="767.4" y="691.0" width="8.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="770.4" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.71%)</title><rect x="767.7" y="675.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="770.7" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 0.71%)</title><rect x="767.7" y="659.0" width="8.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="770.7" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="776.1" y="787.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="779.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="776.4" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="776.4" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="776.4" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.4" y="782.0"></text>
</g>
<g>
<title>[async_worker-2 tid=4587] (735 samples, 17.47%)</title><rect x="776.7" y="963.0" width="206.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="779.7" y="974.0">[async_worker-2 tid=4587]</text>
</g>
<g>
<title>java/lang/Thread.run (735 samples, 17.47%)</title><rect x="776.7" y="947.0" width="206.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.7" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (735 samples, 17.47%)</title><rect x="776.7" y="931.0" width="206.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.7" y="942.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (735 samples, 17.47%)</title><rect x="776.7" y="915.0" width="206.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.7" y="926.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (574 samples, 13.64%)</title><rect x="776.9" y="899.0" width="161.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.9" y="910.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (573 samples, 13.62%)</title><rect x="777.2" y="883.0" width="160.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.2" y="894.0">java/util/concurrent..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (573 samples, 13.62%)</title><rect x="777.2" y="867.0" width="160.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.2" y="878.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (573 samples, 13.62%)</title><rect x="777.2" y="851.0" width="160.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="862.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="777.2" y="835.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="777.2" y="819.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.2" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="777.5" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="780.5" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="777.5" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="780.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (1 samples, 0.02%)</title><rect x="777.8" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (568 samples, 13.50%)</title><rect x="778.1" y="835.0" width="159.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.1" y="846.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (370 samples, 8.79%)</title><rect x="778.6" y="819.0" width="103.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.6" y="830.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (359 samples, 8.53%)</title><rect x="779.7" y="803.0" width="100.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.7" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 0.43%)</title><rect x="779.7" y="787.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.19%)</title><rect x="782.6" y="771.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="785.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.19%)</title><rect x="782.6" y="755.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.19%)</title><rect x="782.6" y="739.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="785.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="784.5" y="723.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="787.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (341 samples, 8.10%)</title><rect x="784.8" y="787.0" width="95.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.8" y="798.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (341 samples, 8.10%)</title><rect x="784.8" y="771.0" width="95.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.8" y="782.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (341 samples, 8.10%)</title><rect x="784.8" y="755.0" width="95.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.8" y="766.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="785.4" y="739.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (338 samples, 8.03%)</title><rect x="785.6" y="739.0" width="94.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.6" y="750.0">one/nio/net..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="786.8" y="723.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="789.8" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.19%)</title><rect x="787.6" y="723.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="790.6" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="788.7" y="707.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="791.7" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="788.7" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="791.7" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="789.0" y="691.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="792.0" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="789.6" y="707.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="792.6" y="718.0"></text>
</g>
<g>
<title>send (323 samples, 7.68%)</title><rect x="789.8" y="723.0" width="90.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="792.8" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (320 samples, 7.60%)</title><rect x="790.7" y="707.0" width="89.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="793.7" y="718.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (320 samples, 7.60%)</title><rect x="790.7" y="691.0" width="89.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="793.7" y="702.0">do_syscall..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.02%)</title><rect x="792.4" y="675.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="795.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (312 samples, 7.41%)</title><rect x="792.6" y="675.0" width="87.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="795.6" y="686.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (311 samples, 7.39%)</title><rect x="792.6" y="659.0" width="87.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="795.6" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="792.6" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="795.6" y="654.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="792.9" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="795.9" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (302 samples, 7.18%)</title><rect x="793.2" y="643.0" width="84.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="796.2" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="793.2" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="796.2" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (299 samples, 7.11%)</title><rect x="793.5" y="627.0" width="83.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.5" y="638.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (299 samples, 7.11%)</title><rect x="793.5" y="611.0" width="83.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="796.5" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="794.0" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="797.0" y="606.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="794.3" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="797.3" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="794.6" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.6" y="606.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="794.9" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="797.9" y="606.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.05%)</title><rect x="795.2" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="798.2" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="795.7" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="798.7" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="796.0" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (288 samples, 6.84%)</title><rect x="796.3" y="595.0" width="80.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="799.3" y="606.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="797.1" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.1" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="797.1" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="800.1" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="797.4" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="800.4" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.10%)</title><rect x="797.7" y="579.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="800.7" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.07%)</title><rect x="797.7" y="563.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.7" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="798.5" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="801.5" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="798.8" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="801.8" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="798.8" y="563.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="801.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (27 samples, 0.64%)</title><rect x="799.4" y="579.0" width="7.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="802.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (26 samples, 0.62%)</title><rect x="799.7" y="563.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="802.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (14 samples, 0.33%)</title><rect x="799.7" y="547.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="802.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.19%)</title><rect x="799.7" y="531.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="802.7" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.10%)</title><rect x="800.5" y="515.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="803.5" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="801.6" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="804.6" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="801.6" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="804.6" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="801.6" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="804.6" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="801.6" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="804.6" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="801.6" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="804.6" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="801.6" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="804.6" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="801.6" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="804.6" y="430.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="801.9" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="804.9" y="542.0"></text>
</g>
<g>
<title>memset (5 samples, 0.12%)</title><rect x="802.2" y="531.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="805.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.19%)</title><rect x="803.6" y="547.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.6" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="805.3" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="808.3" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="805.8" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="808.8" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.02%)</title><rect x="805.8" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="808.8" y="542.0"></text>
</g>
<g>
<title>memset (3 samples, 0.07%)</title><rect x="806.1" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="809.1" y="558.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="806.9" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="809.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (247 samples, 5.87%)</title><rect x="807.5" y="579.0" width="69.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="810.5" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (247 samples, 5.87%)</title><rect x="807.5" y="563.0" width="69.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="810.5" y="574.0">__tcp_p..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="807.5" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="810.5" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="807.8" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.8" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (244 samples, 5.80%)</title><rect x="808.4" y="547.0" width="68.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="811.4" y="558.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (227 samples, 5.39%)</title><rect x="808.6" y="531.0" width="63.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="811.6" y="542.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="810.0" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="813.0" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (216 samples, 5.13%)</title><rect x="810.3" y="515.0" width="60.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.3" y="526.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (216 samples, 5.13%)</title><rect x="810.3" y="499.0" width="60.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="813.3" y="510.0">__ip_q..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="810.6" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="813.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (213 samples, 5.06%)</title><rect x="810.9" y="483.0" width="59.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="813.9" y="494.0">ip_loc..</text>
</g>
<g>
<title>ip_output (213 samples, 5.06%)</title><rect x="810.9" y="467.0" width="59.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="813.9" y="478.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (210 samples, 4.99%)</title><rect x="811.7" y="451.0" width="58.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="814.7" y="462.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="811.7" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="814.7" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (207 samples, 4.92%)</title><rect x="812.3" y="435.0" width="58.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.3" y="446.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (206 samples, 4.90%)</title><rect x="812.6" y="419.0" width="57.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="815.6" y="430.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (182 samples, 4.33%)</title><rect x="813.7" y="403.0" width="51.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="816.7" y="414.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (182 samples, 4.33%)</title><rect x="813.7" y="387.0" width="51.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="816.7" y="398.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (179 samples, 4.25%)</title><rect x="814.5" y="371.0" width="50.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="817.5" y="382.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (179 samples, 4.25%)</title><rect x="814.5" y="355.0" width="50.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="817.5" y="366.0">__sof..</text>
</g>
<g>
<title>net_rx_action (174 samples, 4.13%)</title><rect x="815.4" y="339.0" width="48.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="818.4" y="350.0">net_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="816.5" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="819.5" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="816.8" y="323.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="819.8" y="334.0"></text>
</g>
<g>
<title>process_backlog (168 samples, 3.99%)</title><rect x="817.0" y="323.0" width="47.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="820.0" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (161 samples, 3.83%)</title><rect x="818.7" y="307.0" width="45.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="821.7" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (160 samples, 3.80%)</title><rect x="819.0" y="291.0" width="44.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="822.0" y="302.0">__ne..</text>
</g>
<g>
<title>ip_rcv (160 samples, 3.80%)</title><rect x="819.0" y="275.0" width="44.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="822.0" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.07%)</title><rect x="819.3" y="259.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="822.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (156 samples, 3.71%)</title><rect x="820.1" y="259.0" width="43.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="823.1" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (154 samples, 3.66%)</title><rect x="820.1" y="243.0" width="43.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="823.1" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (154 samples, 3.66%)</title><rect x="820.1" y="227.0" width="43.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="823.1" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (153 samples, 3.64%)</title><rect x="820.1" y="211.0" width="42.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="823.1" y="222.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="820.1" y="195.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="823.1" y="206.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="820.4" y="195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="823.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (151 samples, 3.59%)</title><rect x="820.7" y="195.0" width="42.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.7" y="206.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.19%)</title><rect x="821.8" y="179.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="824.8" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="823.8" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="826.8" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="824.1" y="179.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="827.1" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="824.6" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="827.6" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="824.6" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="827.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (136 samples, 3.23%)</title><rect x="824.9" y="179.0" width="38.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="827.9" y="190.0">tcp..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="824.9" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.9" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="825.2" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="828.2" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="825.5" y="163.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="828.5" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="825.7" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="828.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (132 samples, 3.14%)</title><rect x="826.0" y="163.0" width="37.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.0" y="174.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.21%)</title><rect x="827.4" y="147.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="830.4" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.21%)</title><rect x="827.4" y="131.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="830.4" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="827.7" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="830.7" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.17%)</title><rect x="828.0" y="115.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="831.0" y="126.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.17%)</title><rect x="828.0" y="99.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="831.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.17%)</title><rect x="828.0" y="83.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="831.0" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="829.9" y="147.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="832.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack (26 samples, 0.62%)</title><rect x="830.2" y="147.0" width="7.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="833.2" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="831.3" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="834.3" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="831.6" y="131.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="834.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (18 samples, 0.43%)</title><rect x="831.9" y="131.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="834.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.26%)</title><rect x="832.5" y="115.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.05%)</title><rect x="832.5" y="99.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="832.5" y="83.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="835.5" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="832.7" y="67.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="835.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.21%)</title><rect x="833.0" y="99.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.19%)</title><rect x="833.0" y="83.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.12%)</title><rect x="833.9" y="67.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.9" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.10%)</title><rect x="834.1" y="51.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="837.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="834.7" y="35.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="837.7" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="835.3" y="83.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="838.3" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="835.6" y="115.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.6" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="835.8" y="115.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="838.8" y="126.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="836.1" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="839.1" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.05%)</title><rect x="836.4" y="115.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.4" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="837.0" y="131.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="840.0" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="837.2" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="840.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="837.5" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.5" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (85 samples, 2.02%)</title><rect x="837.8" y="147.0" width="23.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.8" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (85 samples, 2.02%)</title><rect x="837.8" y="131.0" width="23.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.8" y="142.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (83 samples, 1.97%)</title><rect x="838.4" y="115.0" width="23.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="841.4" y="126.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (83 samples, 1.97%)</title><rect x="838.4" y="99.0" width="23.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="841.4" y="110.0">_..</text>
</g>
<g>
<title>__lock_text_start (81 samples, 1.92%)</title><rect x="838.6" y="83.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="841.6" y="94.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="861.3" y="83.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.3" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="861.6" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="864.6" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="861.6" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="864.6" y="142.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="861.9" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="864.9" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="862.2" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="865.2" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="862.5" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="865.5" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="862.8" y="147.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="863.0" y="211.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="866.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.05%)</title><rect x="863.3" y="243.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="866.3" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="863.9" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="866.9" y="318.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="864.2" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.2" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.48%)</title><rect x="864.7" y="403.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="867.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.45%)</title><rect x="864.7" y="387.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="867.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.21%)</title><rect x="866.7" y="371.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.21%)</title><rect x="866.7" y="355.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="869.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="867.2" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="870.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="867.5" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="870.5" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="867.5" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.5" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="867.5" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.5" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="867.8" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="870.8" y="350.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="868.1" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="871.1" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="868.6" y="339.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="871.6" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="869.2" y="371.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.2" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="869.8" y="355.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="872.8" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="869.8" y="339.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="872.8" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="870.0" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="873.0" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="870.3" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.3" y="446.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="870.6" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="873.6" y="494.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.07%)</title><rect x="870.9" y="515.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.9" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="871.2" y="499.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="874.2" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="871.4" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="874.4" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="871.7" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="874.7" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="872.3" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="875.3" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="872.6" y="531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="875.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.29%)</title><rect x="872.8" y="531.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="875.8" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="873.7" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.7" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.19%)</title><rect x="874.0" y="515.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="877.0" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.19%)</title><rect x="874.0" y="499.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="877.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.19%)</title><rect x="874.0" y="483.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.0" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.14%)</title><rect x="874.2" y="467.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="877.2" y="478.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="875.9" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="878.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="875.9" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="878.9" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="876.2" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="879.2" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="876.5" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="879.5" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="876.5" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.5" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="876.8" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="879.8" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="876.8" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="879.8" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="876.8" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="879.8" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="877.1" y="595.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.1" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.05%)</title><rect x="877.3" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.05%)</title><rect x="877.3" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.3" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="877.3" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.3" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.05%)</title><rect x="877.3" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="880.3" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.17%)</title><rect x="877.9" y="643.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="880.9" y="654.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.12%)</title><rect x="878.2" y="627.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.12%)</title><rect x="878.2" y="611.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="881.2" y="622.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.12%)</title><rect x="878.2" y="595.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="881.2" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="879.6" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="882.6" y="638.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="879.9" y="659.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="880.1" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="883.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.17%)</title><rect x="880.4" y="803.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="881.3" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="881.3" y="771.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.10%)</title><rect x="881.3" y="755.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.10%)</title><rect x="881.3" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.3" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.10%)</title><rect x="881.3" y="723.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="881.8" y="707.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="884.8" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="882.1" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="885.1" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="882.1" y="691.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="885.1" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="882.1" y="675.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="885.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (196 samples, 4.66%)</title><rect x="882.4" y="819.0" width="54.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.4" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/nio/charset/Charset.decode (5 samples, 0.12%)</title><rect x="882.4" y="803.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.4" y="814.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (4 samples, 0.10%)</title><rect x="882.4" y="787.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.4" y="798.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (4 samples, 0.10%)</title><rect x="882.4" y="771.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (4 samples, 0.10%)</title><rect x="882.4" y="755.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (1 samples, 0.02%)</title><rect x="883.5" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (1 samples, 0.02%)</title><rect x="883.5" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="883.5" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.5" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="883.5" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="886.5" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (187 samples, 4.44%)</title><rect x="883.8" y="803.0" width="52.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.8" y="814.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (187 samples, 4.44%)</title><rect x="883.8" y="787.0" width="52.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.8" y="798.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (173 samples, 4.11%)</title><rect x="884.3" y="771.0" width="48.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="887.3" y="782.0">Java..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (1 samples, 0.02%)</title><rect x="884.9" y="755.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="887.9" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="885.2" y="755.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="888.2" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="885.5" y="755.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="888.5" y="766.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.02%)</title><rect x="885.7" y="755.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="888.7" y="766.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="886.0" y="755.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="889.0" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.05%)</title><rect x="886.3" y="755.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="889.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="886.9" y="755.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="889.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="887.1" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="890.1" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (154 samples, 3.66%)</title><rect x="887.4" y="755.0" width="43.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="890.4" y="766.0">rock..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="887.7" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="890.7" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.07%)</title><rect x="888.0" y="739.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="891.0" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="888.6" y="723.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="891.6" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="888.8" y="739.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="891.8" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="888.8" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="891.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="889.1" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="892.1" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="889.4" y="739.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="892.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (122 samples, 2.90%)</title><rect x="889.7" y="739.0" width="34.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="892.7" y="750.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (121 samples, 2.88%)</title><rect x="890.0" y="723.0" width="33.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="893.0" y="734.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (120 samples, 2.85%)</title><rect x="890.2" y="707.0" width="33.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="893.2" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (118 samples, 2.80%)</title><rect x="890.2" y="691.0" width="33.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="893.2" y="702.0">ro..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="890.5" y="675.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="893.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.05%)</title><rect x="891.1" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="894.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.07%)</title><rect x="891.6" y="675.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="894.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.02%)</title><rect x="892.5" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="895.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (104 samples, 2.47%)</title><rect x="892.8" y="675.0" width="29.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="895.8" y="686.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="895.8" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="898.8" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="896.1" y="659.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="899.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.07%)</title><rect x="897.0" y="659.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="900.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (6 samples, 0.14%)</title><rect x="897.8" y="659.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="900.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.07%)</title><rect x="897.8" y="643.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="900.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="898.1" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="901.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="898.1" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="901.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="898.4" y="627.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="901.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (3 samples, 0.07%)</title><rect x="898.6" y="643.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="901.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.05%)</title><rect x="899.5" y="659.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="902.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (75 samples, 1.78%)</title><rect x="900.0" y="659.0" width="21.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="903.0" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (1 samples, 0.02%)</title><rect x="900.3" y="643.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="903.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (71 samples, 1.69%)</title><rect x="900.6" y="643.0" width="19.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.6" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (71 samples, 1.69%)</title><rect x="900.6" y="627.0" width="19.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="903.6" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="900.6" y="611.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="903.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (59 samples, 1.40%)</title><rect x="900.9" y="611.0" width="16.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="903.9" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (8 samples, 0.19%)</title><rect x="908.7" y="595.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="911.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.10%)</title><rect x="911.0" y="595.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="914.0" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="912.1" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="915.1" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="912.1" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="915.1" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="912.1" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.1" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="912.1" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.1" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="912.1" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="915.1" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="912.1" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="915.1" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="912.1" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="915.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 0.43%)</title><rect x="912.4" y="595.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="915.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (1 samples, 0.02%)</title><rect x="914.6" y="579.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="917.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.10%)</title><rect x="914.9" y="579.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="917.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="916.0" y="579.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="919.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="916.9" y="579.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="919.9" y="590.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="917.2" y="579.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="920.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="917.4" y="611.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="920.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.05%)</title><rect x="918.6" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="921.6" y="622.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (5 samples, 0.12%)</title><rect x="919.1" y="611.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="922.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.05%)</title><rect x="920.5" y="643.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="923.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.05%)</title><rect x="921.1" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="924.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="921.6" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="924.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.05%)</title><rect x="921.9" y="675.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="924.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.02%)</title><rect x="922.5" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="925.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.05%)</title><rect x="922.8" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="925.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (2 samples, 0.05%)</title><rect x="923.3" y="691.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="926.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (23 samples, 0.55%)</title><rect x="923.9" y="739.0" width="6.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="926.9" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="923.9" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="926.9" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.07%)</title><rect x="924.2" y="723.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="927.2" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="924.7" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="927.7" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (16 samples, 0.38%)</title><rect x="925.0" y="723.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="928.0" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="926.7" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="929.7" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.21%)</title><rect x="927.0" y="707.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="930.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.17%)</title><rect x="927.2" y="691.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="930.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="927.5" y="675.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="930.5" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="927.5" y="659.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="930.5" y="670.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="927.8" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="930.8" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="928.1" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="931.1" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="928.4" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="931.4" y="686.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="928.9" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="931.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="929.2" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.2" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="929.5" y="723.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="932.5" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="929.5" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="932.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="929.8" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="932.8" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="930.1" y="707.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="933.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="930.3" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="933.3" y="750.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (6 samples, 0.14%)</title><rect x="930.6" y="755.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="933.6" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.05%)</title><rect x="932.3" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="935.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="932.9" y="771.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="935.9" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="932.9" y="755.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="935.9" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="933.7" y="755.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="936.7" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="934.0" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="937.0" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.10%)</title><rect x="934.3" y="771.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="937.3" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="935.4" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.4" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="935.4" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.4" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="935.4" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="938.4" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="935.4" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.4" y="734.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="935.4" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.4" y="718.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="935.4" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="938.4" y="702.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="935.4" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.02%)</title><rect x="935.7" y="771.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="938.7" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.02%)</title><rect x="935.9" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="938.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (4 samples, 0.10%)</title><rect x="936.2" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (2 samples, 0.05%)</title><rect x="937.3" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.3" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="937.3" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="937.3" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.3" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="937.3" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="937.3" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="937.3" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="937.3" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="937.3" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (9 samples, 0.21%)</title><rect x="937.9" y="899.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.21%)</title><rect x="937.9" y="883.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.21%)</title><rect x="937.9" y="867.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="939.0" y="851.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (151 samples, 3.59%)</title><rect x="940.4" y="899.0" width="42.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.4" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (147 samples, 3.49%)</title><rect x="941.5" y="883.0" width="41.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.5" y="894.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (73 samples, 1.73%)</title><rect x="943.0" y="867.0" width="20.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="943.2" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="943.2" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="943.2" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="943.2" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="946.2" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="943.2" y="787.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="946.2" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="943.2" y="771.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="946.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (15 samples, 0.36%)</title><rect x="943.5" y="851.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.36%)</title><rect x="943.5" y="835.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.29%)</title><rect x="944.1" y="819.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.29%)</title><rect x="944.1" y="803.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.29%)</title><rect x="944.1" y="787.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.29%)</title><rect x="944.1" y="771.0" width="3.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="947.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.29%)</title><rect x="944.1" y="755.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.29%)</title><rect x="944.1" y="739.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="947.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.29%)</title><rect x="944.1" y="723.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="947.1" y="734.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.29%)</title><rect x="944.1" y="707.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="947.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.29%)</title><rect x="944.1" y="691.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.1" y="702.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.05%)</title><rect x="944.1" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.24%)</title><rect x="944.6" y="675.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.6" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.24%)</title><rect x="944.6" y="659.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="947.6" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.21%)</title><rect x="944.9" y="643.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="947.4" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.05%)</title><rect x="947.7" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.05%)</title><rect x="947.7" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (54 samples, 1.28%)</title><rect x="948.3" y="851.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (54 samples, 1.28%)</title><rect x="948.3" y="835.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.3" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (30 samples, 0.71%)</title><rect x="948.8" y="819.0" width="8.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="951.8" y="830.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.07%)</title><rect x="949.1" y="803.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="952.1" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.29%)</title><rect x="950.0" y="803.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="953.0" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="951.9" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="954.9" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="952.5" y="787.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="955.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="953.3" y="803.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="956.3" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (12 samples, 0.29%)</title><rect x="953.6" y="803.0" width="3.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="956.6" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.24%)</title><rect x="954.2" y="787.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="957.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.24%)</title><rect x="954.2" y="771.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.19%)</title><rect x="954.7" y="755.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="957.7" y="766.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.19%)</title><rect x="954.7" y="739.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="957.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.14%)</title><rect x="955.3" y="723.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="958.3" y="734.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="955.9" y="707.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="958.9" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.05%)</title><rect x="956.1" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="959.1" y="702.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="956.7" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="959.7" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="957.0" y="803.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="960.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.50%)</title><rect x="957.3" y="819.0" width="5.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="960.3" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="957.3" y="803.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="960.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (17 samples, 0.40%)</title><rect x="957.5" y="803.0" width="4.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="960.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.21%)</title><rect x="959.8" y="787.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="962.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.21%)</title><rect x="959.8" y="771.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="962.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.14%)</title><rect x="960.6" y="755.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.6" y="766.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.14%)</title><rect x="960.6" y="739.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="963.6" y="750.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.12%)</title><rect x="960.6" y="723.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="963.6" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.12%)</title><rect x="960.6" y="707.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="963.6" y="718.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.10%)</title><rect x="960.9" y="691.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="963.9" y="702.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.10%)</title><rect x="960.9" y="675.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="963.9" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="961.7" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="964.7" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="962.0" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="965.0" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="962.3" y="803.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="965.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="963.1" y="819.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.1" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="963.1" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="966.1" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="963.1" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.17%)</title><rect x="963.4" y="867.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.17%)</title><rect x="963.4" y="851.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="963.4" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="963.4" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.4" y="830.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.02%)</title><rect x="963.4" y="803.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="966.4" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="963.4" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="966.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.14%)</title><rect x="963.7" y="835.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="963.7" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.10%)</title><rect x="964.0" y="819.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.10%)</title><rect x="964.0" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="964.0" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.02%)</title><rect x="964.3" y="787.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="964.5" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="964.5" y="771.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="967.5" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="964.5" y="755.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="967.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="965.1" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="965.1" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (62 samples, 1.47%)</title><rect x="965.4" y="867.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (62 samples, 1.47%)</title><rect x="965.4" y="851.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (62 samples, 1.47%)</title><rect x="965.4" y="835.0" width="17.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (62 samples, 1.47%)</title><rect x="965.4" y="819.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.4" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="968.2" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="971.2" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="968.2" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="971.2" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="968.2" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="971.2" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="968.2" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.2" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="968.2" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="971.2" y="750.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="968.2" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="971.2" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="968.2" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="971.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 1.21%)</title><rect x="968.5" y="803.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.5" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="968.5" y="787.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="971.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.24%)</title><rect x="968.7" y="787.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="971.7" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="969.0" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="972.0" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="969.3" y="771.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="972.3" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="969.9" y="771.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="972.9" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.12%)</title><rect x="970.2" y="771.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="973.2" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (39 samples, 0.93%)</title><rect x="971.6" y="787.0" width="10.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="974.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.88%)</title><rect x="972.1" y="771.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="975.1" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="972.1" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="975.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.86%)</title><rect x="972.4" y="755.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="975.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (35 samples, 0.83%)</title><rect x="972.7" y="739.0" width="9.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="975.7" y="750.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.83%)</title><rect x="972.7" y="723.0" width="9.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="975.7" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="973.0" y="707.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.0" y="718.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.76%)</title><rect x="973.2" y="707.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.2" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="973.5" y="691.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="976.5" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="973.8" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.8" y="686.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="974.1" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.1" y="702.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.67%)</title><rect x="974.4" y="691.0" width="7.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="977.4" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.67%)</title><rect x="974.4" y="675.0" width="7.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.4" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.64%)</title><rect x="974.4" y="659.0" width="7.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="977.4" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="981.9" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="984.9" y="670.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="982.2" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="985.2" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="982.5" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="985.5" y="798.0"></text>
</g>
<g>
<title>[async_worker-3 tid=4586] (739 samples, 17.56%)</title><rect x="982.8" y="963.0" width="207.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="985.8" y="974.0">[async_worker-3 tid=4586]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="982.8" y="947.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="985.8" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="982.8" y="931.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="985.8" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="982.8" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="985.8" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="982.8" y="899.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="985.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="982.8" y="883.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="985.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="982.8" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="985.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="982.8" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="985.8" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="982.8" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="985.8" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="982.8" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="985.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (738 samples, 17.54%)</title><rect x="983.1" y="947.0" width="206.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.1" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (738 samples, 17.54%)</title><rect x="983.1" y="931.0" width="206.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.1" y="942.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (738 samples, 17.54%)</title><rect x="983.1" y="915.0" width="206.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.1" y="926.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (556 samples, 13.21%)</title><rect x="983.1" y="899.0" width="155.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.1" y="910.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (556 samples, 13.21%)</title><rect x="983.1" y="883.0" width="155.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.1" y="894.0">java/util/concurrent..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl$$Lambda$66/1308466430.run (556 samples, 13.21%)</title><rect x="983.1" y="867.0" width="155.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.1" y="878.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.lambda$entity$1 (556 samples, 13.21%)</title><rect x="983.1" y="851.0" width="155.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.1" y="862.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="983.1" y="835.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="983.1" y="819.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.get (551 samples, 13.09%)</title><rect x="983.3" y="835.0" width="154.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.3" y="846.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (322 samples, 7.65%)</title><rect x="983.9" y="819.0" width="90.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="986.9" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (302 samples, 7.18%)</title><rect x="984.5" y="803.0" width="84.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.5" y="814.0">one/nio/ht..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="984.5" y="787.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.5" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="984.5" y="771.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.5" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="984.5" y="755.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="987.5" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="984.5" y="739.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="987.5" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="984.5" y="723.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="987.5" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="984.5" y="707.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.5" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="984.5" y="691.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="987.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.31%)</title><rect x="984.7" y="787.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.12%)</title><rect x="987.0" y="771.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.12%)</title><rect x="987.0" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.12%)</title><rect x="987.0" y="739.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.0" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="987.8" y="723.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="990.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (288 samples, 6.84%)</title><rect x="988.4" y="787.0" width="80.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.4" y="798.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (288 samples, 6.84%)</title><rect x="988.4" y="771.0" width="80.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="991.4" y="782.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (288 samples, 6.84%)</title><rect x="988.4" y="755.0" width="80.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.4" y="766.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="988.4" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (287 samples, 6.82%)</title><rect x="988.7" y="739.0" width="80.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.7" y="750.0">one/nio/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="990.1" y="723.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="993.1" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.19%)</title><rect x="990.9" y="723.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="993.9" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="992.3" y="707.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="995.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="992.6" y="707.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="995.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="992.6" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="995.6" y="702.0"></text>
</g>
<g>
<title>send (271 samples, 6.44%)</title><rect x="993.1" y="723.0" width="76.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="996.1" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (264 samples, 6.27%)</title><rect x="995.1" y="707.0" width="74.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="998.1" y="718.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.05%)</title><rect x="995.1" y="691.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="998.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (262 samples, 6.23%)</title><rect x="995.7" y="691.0" width="73.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.7" y="702.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (260 samples, 6.18%)</title><rect x="996.0" y="675.0" width="72.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="999.0" y="686.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (259 samples, 6.15%)</title><rect x="996.0" y="659.0" width="72.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.0" y="670.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (252 samples, 5.99%)</title><rect x="996.5" y="643.0" width="70.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="999.5" y="654.0">sock_sen..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.10%)</title><rect x="996.8" y="627.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="999.8" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (241 samples, 5.73%)</title><rect x="997.9" y="627.0" width="67.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.9" y="638.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (241 samples, 5.73%)</title><rect x="997.9" y="611.0" width="67.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.9" y="622.0">tcp_sen..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="997.9" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1000.9" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.19%)</title><rect x="998.2" y="595.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.2" y="606.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.05%)</title><rect x="1000.4" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.4" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.05%)</title><rect x="1001.0" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1004.0" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1001.6" y="595.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1004.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (227 samples, 5.39%)</title><rect x="1001.8" y="595.0" width="63.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1004.8" y="606.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1003.2" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1006.2" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1003.2" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1006.2" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.12%)</title><rect x="1003.5" y="579.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1006.5" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.10%)</title><rect x="1003.8" y="563.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1006.8" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="1004.9" y="579.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1007.9" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="1004.9" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1007.9" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (28 samples, 0.67%)</title><rect x="1005.5" y="579.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1008.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (27 samples, 0.64%)</title><rect x="1005.5" y="563.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1008.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1005.8" y="547.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1008.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (18 samples, 0.43%)</title><rect x="1006.0" y="547.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1009.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.31%)</title><rect x="1006.0" y="531.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1009.0" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="1009.1" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.1" y="526.0"></text>
</g>
<g>
<title>memset (5 samples, 0.12%)</title><rect x="1009.7" y="531.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.7" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.10%)</title><rect x="1011.1" y="547.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1014.1" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="1012.2" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1015.2" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="1012.5" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1015.5" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="1012.8" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1015.8" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="1013.1" y="563.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.1" y="574.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="1013.3" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.3" y="590.0"></text>
</g>
<g>
<title>tcp_push (183 samples, 4.35%)</title><rect x="1013.6" y="579.0" width="51.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1016.6" y="590.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (183 samples, 4.35%)</title><rect x="1013.6" y="563.0" width="51.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1016.6" y="574.0">__tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1013.6" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (182 samples, 4.33%)</title><rect x="1013.9" y="547.0" width="51.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1016.9" y="558.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (171 samples, 4.06%)</title><rect x="1014.5" y="531.0" width="47.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1017.5" y="542.0">__tc..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="1015.3" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1018.3" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (167 samples, 3.97%)</title><rect x="1015.6" y="515.0" width="46.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1018.6" y="526.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (167 samples, 3.97%)</title><rect x="1015.6" y="499.0" width="46.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1018.6" y="510.0">__ip..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.07%)</title><rect x="1016.1" y="483.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1019.1" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.07%)</title><rect x="1016.1" y="467.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1019.1" y="478.0"></text>
</g>
<g>
<title>ip_local_out (162 samples, 3.85%)</title><rect x="1017.0" y="483.0" width="45.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.0" y="494.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="1017.0" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1020.0" y="478.0"></text>
</g>
<g>
<title>ip_output (161 samples, 3.83%)</title><rect x="1017.3" y="467.0" width="45.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1020.3" y="478.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (160 samples, 3.80%)</title><rect x="1017.5" y="451.0" width="44.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.5" y="462.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (160 samples, 3.80%)</title><rect x="1017.5" y="435.0" width="44.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1020.5" y="446.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (159 samples, 3.78%)</title><rect x="1017.8" y="419.0" width="44.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1020.8" y="430.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (143 samples, 3.40%)</title><rect x="1018.4" y="403.0" width="40.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1021.4" y="414.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (142 samples, 3.37%)</title><rect x="1018.7" y="387.0" width="39.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1021.7" y="398.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (141 samples, 3.35%)</title><rect x="1018.9" y="371.0" width="39.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1021.9" y="382.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (141 samples, 3.35%)</title><rect x="1018.9" y="355.0" width="39.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1021.9" y="366.0">__s..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="1019.5" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1022.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (137 samples, 3.26%)</title><rect x="1019.8" y="339.0" width="38.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1022.8" y="350.0">net..</text>
</g>
<g>
<title>process_backlog (132 samples, 3.14%)</title><rect x="1021.2" y="323.0" width="37.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1024.2" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (130 samples, 3.09%)</title><rect x="1021.7" y="307.0" width="36.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1024.7" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (128 samples, 3.04%)</title><rect x="1022.3" y="291.0" width="35.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1025.3" y="302.0">__n..</text>
</g>
<g>
<title>ip_rcv (128 samples, 3.04%)</title><rect x="1022.3" y="275.0" width="35.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.3" y="286.0">ip_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1022.3" y="259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1025.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1022.6" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1025.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (126 samples, 2.99%)</title><rect x="1022.9" y="259.0" width="35.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1025.9" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (126 samples, 2.99%)</title><rect x="1022.9" y="243.0" width="35.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.9" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (126 samples, 2.99%)</title><rect x="1022.9" y="227.0" width="35.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1025.9" y="238.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (126 samples, 2.99%)</title><rect x="1022.9" y="211.0" width="35.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.9" y="222.0">ip_..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="1023.2" y="195.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1026.2" y="206.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.05%)</title><rect x="1023.4" y="195.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1026.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (122 samples, 2.90%)</title><rect x="1024.0" y="195.0" width="34.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1027.0" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.12%)</title><rect x="1024.6" y="179.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1027.6" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1026.0" y="179.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1029.0" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1026.2" y="179.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1029.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (112 samples, 2.66%)</title><rect x="1026.5" y="179.0" width="31.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1029.5" y="190.0">tc..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="1026.5" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1029.5" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.02%)</title><rect x="1026.8" y="163.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1029.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (110 samples, 2.61%)</title><rect x="1027.1" y="163.0" width="30.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.1" y="174.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.14%)</title><rect x="1027.6" y="147.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1030.6" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.14%)</title><rect x="1027.6" y="131.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1030.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.14%)</title><rect x="1027.6" y="115.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1030.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.14%)</title><rect x="1027.6" y="99.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1030.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.10%)</title><rect x="1027.9" y="83.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1030.9" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="1029.0" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1032.0" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1029.3" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1032.3" y="158.0"></text>
</g>
<g>
<title>tcp_ack (29 samples, 0.69%)</title><rect x="1029.6" y="147.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1032.6" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="1031.3" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1034.3" y="142.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.05%)</title><rect x="1031.8" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1034.8" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (18 samples, 0.43%)</title><rect x="1032.4" y="131.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1035.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.36%)</title><rect x="1032.7" y="115.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1035.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.14%)</title><rect x="1032.7" y="99.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1035.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.12%)</title><rect x="1033.0" y="83.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1036.0" y="94.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="1033.5" y="67.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1036.5" y="78.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.21%)</title><rect x="1034.4" y="99.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1037.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.21%)</title><rect x="1034.4" y="83.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.10%)</title><rect x="1035.8" y="67.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1038.8" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.10%)</title><rect x="1035.8" y="51.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1038.8" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="1036.1" y="35.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1039.1" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="1036.9" y="115.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1039.9" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="1037.5" y="131.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.5" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (65 samples, 1.54%)</title><rect x="1037.7" y="147.0" width="18.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (65 samples, 1.54%)</title><rect x="1037.7" y="131.0" width="18.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1040.7" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1037.7" y="115.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1040.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (64 samples, 1.52%)</title><rect x="1038.0" y="115.0" width="18.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1041.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (64 samples, 1.52%)</title><rect x="1038.0" y="99.0" width="18.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1041.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (64 samples, 1.52%)</title><rect x="1038.0" y="83.0" width="18.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1041.0" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="1056.0" y="147.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1059.0" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="1056.2" y="131.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1059.2" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.10%)</title><rect x="1056.8" y="147.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1059.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="1057.9" y="179.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1060.9" y="190.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="1058.2" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1061.2" y="350.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="1058.2" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.2" y="334.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="1058.2" y="307.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1061.2" y="318.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="1058.2" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1061.2" y="302.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="1058.2" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.2" y="286.0"></text>
</g>
<g>
<title>ieee80211_accept_frame?[mac80211] (1 samples, 0.02%)</title><rect x="1058.2" y="259.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1061.2" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.33%)</title><rect x="1058.5" y="403.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.33%)</title><rect x="1058.5" y="387.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1061.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.24%)</title><rect x="1059.3" y="371.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1062.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.19%)</title><rect x="1059.3" y="355.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1062.3" y="366.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.10%)</title><rect x="1059.9" y="339.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1062.9" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="1059.9" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1062.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="1060.2" y="323.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1063.2" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="1060.2" y="307.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1063.2" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="1061.0" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1064.0" y="350.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="1061.3" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1064.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="1061.6" y="355.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1064.6" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="1061.8" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.8" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="1062.1" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1065.1" y="382.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1062.4" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1065.4" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.17%)</title><rect x="1062.7" y="531.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1065.7" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.17%)</title><rect x="1062.7" y="515.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1065.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.17%)</title><rect x="1062.7" y="499.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1065.7" y="510.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.17%)</title><rect x="1062.7" y="483.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1065.7" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.14%)</title><rect x="1062.7" y="467.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.7" y="478.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="1064.4" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1064.4" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1067.4" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="1064.7" y="531.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1067.7" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1064.7" y="515.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.7" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="1064.7" y="499.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1067.7" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="1064.9" y="579.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1067.9" y="590.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1064.9" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1065.2" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1068.2" y="574.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.02%)</title><rect x="1065.5" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.5" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.12%)</title><rect x="1065.8" y="627.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1068.8" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.10%)</title><rect x="1066.1" y="611.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.1" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (1 samples, 0.02%)</title><rect x="1066.1" y="595.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.1" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.07%)</title><rect x="1066.3" y="595.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1069.3" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.0 (2 samples, 0.05%)</title><rect x="1066.6" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1069.6" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.12%)</title><rect x="1067.2" y="643.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.2" y="654.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.07%)</title><rect x="1067.5" y="627.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1070.5" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="1067.5" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.5" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="1067.5" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1070.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1068.3" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1071.3" y="638.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="1068.6" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1068.9" y="675.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1071.9" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1068.9" y="659.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.9" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="1068.9" y="643.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.9" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1068.9" y="627.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.43%)</title><rect x="1069.1" y="803.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.33%)</title><rect x="1070.3" y="787.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.33%)</title><rect x="1070.3" y="771.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (14 samples, 0.33%)</title><rect x="1070.3" y="755.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (14 samples, 0.33%)</title><rect x="1070.3" y="739.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.3" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (14 samples, 0.33%)</title><rect x="1070.3" y="723.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="1072.5" y="707.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1075.5" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="1073.3" y="707.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.3" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="1073.6" y="691.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1076.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1073.6" y="675.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1076.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/DAOImpl.get (227 samples, 5.39%)</title><rect x="1074.2" y="819.0" width="63.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.2" y="830.0">ru/mail..</text>
</g>
<g>
<title>java/nio/charset/Charset.decode (8 samples, 0.19%)</title><rect x="1074.2" y="803.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.2" y="814.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (6 samples, 0.14%)</title><rect x="1074.2" y="787.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.2" y="798.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (6 samples, 0.14%)</title><rect x="1074.2" y="771.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (6 samples, 0.14%)</title><rect x="1074.2" y="755.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.2" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1075.6" y="739.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1078.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders.decoderFor (2 samples, 0.05%)</title><rect x="1075.9" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/cs/ThreadLocalCoders$Cache.forName (2 samples, 0.05%)</title><rect x="1075.9" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.9" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="1075.9" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.9" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (216 samples, 5.13%)</title><rect x="1076.4" y="803.0" width="60.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.4" y="814.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (216 samples, 5.13%)</title><rect x="1076.4" y="787.0" width="60.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.4" y="798.0">org/ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.02%)</title><rect x="1077.6" y="771.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1080.6" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (207 samples, 4.92%)</title><rect x="1077.8" y="771.0" width="58.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1080.8" y="782.0">Java_o..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (4 samples, 0.10%)</title><rect x="1078.1" y="755.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1081.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="1079.2" y="755.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1082.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (4 samples, 0.10%)</title><rect x="1079.5" y="755.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1082.5" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="1080.6" y="755.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1083.6" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.05%)</title><rect x="1080.9" y="755.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1083.9" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="1081.5" y="755.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1084.5" y="766.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1081.8" y="755.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1084.8" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.02%)</title><rect x="1082.0" y="755.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1085.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="1082.3" y="755.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1085.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="1082.6" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1085.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="1082.9" y="755.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.9" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (187 samples, 4.44%)</title><rect x="1083.2" y="755.0" width="52.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.2" y="766.0">rocks..</text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.10%)</title><rect x="1083.7" y="739.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1086.7" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="1084.6" y="723.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1087.6" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.17%)</title><rect x="1084.8" y="739.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1087.8" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="1085.7" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1088.7" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="1086.2" y="723.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.2" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.10%)</title><rect x="1086.8" y="739.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1089.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="1087.9" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (150 samples, 3.56%)</title><rect x="1088.2" y="739.0" width="42.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1091.2" y="750.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.02%)</title><rect x="1088.5" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1091.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.02%)</title><rect x="1088.8" y="723.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1091.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (146 samples, 3.47%)</title><rect x="1089.0" y="723.0" width="41.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1092.0" y="734.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (144 samples, 3.42%)</title><rect x="1089.6" y="707.0" width="40.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1092.6" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (144 samples, 3.42%)</title><rect x="1089.6" y="691.0" width="40.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1092.6" y="702.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1089.6" y="675.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1092.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.02%)</title><rect x="1089.9" y="675.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1092.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.02%)</title><rect x="1090.2" y="675.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.05%)</title><rect x="1090.5" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1093.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.02%)</title><rect x="1091.0" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (134 samples, 3.18%)</title><rect x="1091.3" y="675.0" width="37.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1094.3" y="686.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.02%)</title><rect x="1094.4" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1097.4" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.12%)</title><rect x="1094.7" y="659.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1097.7" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="1096.1" y="659.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1099.1" y="670.0"></text>
</g>
<g>
<title>memcpy (4 samples, 0.10%)</title><rect x="1096.3" y="659.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1099.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (7 samples, 0.17%)</title><rect x="1097.5" y="659.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1100.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="1098.0" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1101.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (4 samples, 0.10%)</title><rect x="1098.3" y="643.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1101.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="1099.1" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1102.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (8 samples, 0.19%)</title><rect x="1099.4" y="659.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1102.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (5 samples, 0.12%)</title><rect x="1099.7" y="643.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="1099.7" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1102.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.10%)</title><rect x="1100.0" y="627.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="1100.8" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1103.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1101.1" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1104.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1101.4" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1104.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.10%)</title><rect x="1101.7" y="659.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1104.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.05%)</title><rect x="1102.8" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1105.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (87 samples, 2.07%)</title><rect x="1103.4" y="659.0" width="24.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1106.4" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (2 samples, 0.05%)</title><rect x="1104.8" y="643.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1107.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (78 samples, 1.85%)</title><rect x="1105.3" y="643.0" width="21.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.3" y="654.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (76 samples, 1.81%)</title><rect x="1105.6" y="627.0" width="21.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1108.6" y="638.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (1 samples, 0.02%)</title><rect x="1105.9" y="611.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1108.9" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.05%)</title><rect x="1106.2" y="611.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1109.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (70 samples, 1.66%)</title><rect x="1106.7" y="611.0" width="19.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1109.7" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (3 samples, 0.07%)</title><rect x="1114.0" y="595.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1117.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1114.8" y="595.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1117.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (39 samples, 0.93%)</title><rect x="1115.4" y="595.0" width="10.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17076383957276731973.so (4 samples, 0.10%)</title><rect x="1119.6" y="579.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1122.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (18 samples, 0.43%)</title><rect x="1120.7" y="579.0" width="5.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1123.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1125.8" y="579.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1128.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1126.1" y="563.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1129.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1126.1" y="547.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1126.1" y="531.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1129.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="1126.3" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.3" y="622.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="1126.6" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.02%)</title><rect x="1126.9" y="627.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1129.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.05%)</title><rect x="1127.2" y="643.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.02%)</title><rect x="1127.7" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="1128.0" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="1128.3" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="1128.6" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.02%)</title><rect x="1128.9" y="675.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.02%)</title><rect x="1129.1" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.02%)</title><rect x="1129.4" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="1129.7" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.02%)</title><rect x="1130.0" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (19 samples, 0.45%)</title><rect x="1130.3" y="739.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.3" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="1130.3" y="723.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1133.3" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (15 samples, 0.36%)</title><rect x="1131.1" y="723.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1134.1" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="1132.0" y="707.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1132.2" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1135.2" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.24%)</title><rect x="1132.5" y="707.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1135.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.14%)</title><rect x="1133.6" y="691.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.10%)</title><rect x="1133.6" y="675.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1136.6" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="1133.6" y="659.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1136.6" y="670.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="1134.5" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.5" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1134.8" y="675.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.8" y="686.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1135.0" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="1135.3" y="723.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1138.3" y="734.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.02%)</title><rect x="1135.6" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1135.9" y="771.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1138.9" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="1135.9" y="755.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1138.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1136.2" y="755.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1139.2" y="766.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="1136.2" y="739.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.2" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="1136.4" y="771.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1139.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/manikhin/ByteConvertor.toUnsignedArray (3 samples, 0.07%)</title><rect x="1137.0" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.0" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1137.6" y="787.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1140.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/manikhin/AsyncServiceImpl.put (4 samples, 0.10%)</title><rect x="1137.8" y="835.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="1137.8" y="819.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="1137.8" y="803.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.8" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1137.8" y="787.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1137.8" y="771.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.8" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="1137.8" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="1137.8" y="739.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.10%)</title><rect x="1137.8" y="723.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.8" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1138.7" y="707.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1141.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (15 samples, 0.36%)</title><rect x="1139.0" y="899.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.36%)</title><rect x="1139.0" y="883.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.36%)</title><rect x="1139.0" y="867.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.02%)</title><rect x="1141.5" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="1141.8" y="851.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (167 samples, 3.97%)</title><rect x="1143.2" y="899.0" width="46.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.2" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (163 samples, 3.87%)</title><rect x="1144.3" y="883.0" width="45.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1147.3" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (90 samples, 2.14%)</title><rect x="1145.4" y="867.0" width="25.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.4" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="1145.4" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1148.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.02%)</title><rect x="1145.4" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="1145.7" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="1145.7" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="1145.7" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1145.7" y="787.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1148.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1145.7" y="771.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1148.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (20 samples, 0.48%)</title><rect x="1146.0" y="851.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.48%)</title><rect x="1146.0" y="835.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.43%)</title><rect x="1146.3" y="819.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.43%)</title><rect x="1146.3" y="803.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="1146.3" y="787.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.40%)</title><rect x="1146.5" y="787.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.07%)</title><rect x="1146.5" y="771.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1149.5" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="1146.5" y="755.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1149.5" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="1147.1" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1150.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.33%)</title><rect x="1147.4" y="771.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1150.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.33%)</title><rect x="1147.4" y="755.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1150.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.33%)</title><rect x="1147.4" y="739.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1150.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.33%)</title><rect x="1147.4" y="723.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.4" y="734.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.33%)</title><rect x="1147.4" y="707.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1150.4" y="718.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.33%)</title><rect x="1147.4" y="691.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.4" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="1147.7" y="675.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1150.7" y="686.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="1147.9" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1150.9" y="686.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.26%)</title><rect x="1148.2" y="675.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1151.2" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.26%)</title><rect x="1148.2" y="659.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.2" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.26%)</title><rect x="1148.2" y="643.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1151.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="1151.3" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="1151.6" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="1151.6" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (67 samples, 1.59%)</title><rect x="1151.9" y="851.0" width="18.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (66 samples, 1.57%)</title><rect x="1152.1" y="835.0" width="18.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.48%)</title><rect x="1153.8" y="819.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1156.8" y="830.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="1154.1" y="803.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.1" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="1154.7" y="803.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.7" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.12%)</title><rect x="1154.9" y="803.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.9" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1155.8" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1158.8" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1156.1" y="787.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1159.1" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1156.3" y="803.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.3" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="1156.6" y="803.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1159.6" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.17%)</title><rect x="1156.9" y="803.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1159.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="1157.8" y="787.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1160.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="1157.8" y="771.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="1158.0" y="755.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1161.0" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="1158.0" y="739.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.0" y="750.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="1158.0" y="723.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1161.0" y="734.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="1158.0" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.0" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="1158.3" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.3" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1158.6" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1161.6" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1158.9" y="803.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1161.9" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1159.2" y="803.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1162.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.86%)</title><rect x="1159.4" y="819.0" width="10.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1162.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (26 samples, 0.62%)</title><rect x="1159.4" y="803.0" width="7.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1162.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.29%)</title><rect x="1163.4" y="787.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.4" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1163.4" y="771.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1166.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.26%)</title><rect x="1163.6" y="771.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1166.6" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.21%)</title><rect x="1164.2" y="755.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.2" y="766.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.21%)</title><rect x="1164.2" y="739.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1167.2" y="750.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.14%)</title><rect x="1164.8" y="723.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1167.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1165.0" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1168.0" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.10%)</title><rect x="1165.3" y="707.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.3" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="1165.9" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1168.9" y="702.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="1165.9" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.9" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="1165.9" y="659.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.9" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="1166.4" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1169.4" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.21%)</title><rect x="1166.7" y="803.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1169.7" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1169.2" y="803.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1172.2" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.10%)</title><rect x="1169.5" y="819.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.14%)</title><rect x="1170.7" y="867.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1173.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.14%)</title><rect x="1170.7" y="851.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.12%)</title><rect x="1170.7" y="835.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1173.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="1170.9" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="1170.9" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="1170.9" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.9" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="1170.9" y="771.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1173.9" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="1170.9" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.9" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1170.9" y="739.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1173.9" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1171.2" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1174.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1171.2" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1174.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1171.2" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1174.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1171.2" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1174.2" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1171.2" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1174.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1171.2" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1174.2" y="686.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1171.2" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1171.5" y="771.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1174.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1171.5" y="755.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1174.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1171.5" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1174.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1171.5" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1174.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1171.5" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1174.5" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1171.5" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.5" y="702.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1171.5" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1174.5" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="1171.5" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1174.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="1171.8" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="1171.8" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1174.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="1171.8" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="1172.1" y="835.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="1172.1" y="819.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (63 samples, 1.50%)</title><rect x="1172.3" y="867.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (63 samples, 1.50%)</title><rect x="1172.3" y="851.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (63 samples, 1.50%)</title><rect x="1172.3" y="835.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (63 samples, 1.50%)</title><rect x="1172.3" y="819.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (55 samples, 1.31%)</title><rect x="1174.3" y="803.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.3" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="1174.3" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.3" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.12%)</title><rect x="1174.6" y="787.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1177.6" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="1175.1" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.1" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="1175.4" y="771.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1178.4" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (49 samples, 1.16%)</title><rect x="1176.0" y="787.0" width="13.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1179.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.97%)</title><rect x="1178.2" y="771.0" width="11.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.97%)</title><rect x="1178.2" y="755.0" width="11.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.2" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (41 samples, 0.97%)</title><rect x="1178.2" y="739.0" width="11.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.2" y="750.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.95%)</title><rect x="1178.2" y="723.0" width="11.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1181.2" y="734.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 0.95%)</title><rect x="1178.2" y="707.0" width="11.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1181.2" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="1179.1" y="691.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.1" y="702.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.86%)</title><rect x="1179.3" y="691.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.3" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.86%)</title><rect x="1179.3" y="675.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1182.3" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (36 samples, 0.86%)</title><rect x="1179.3" y="659.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1189.4" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1189.7" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.7" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1189.7" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1192.7" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1189.7" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.7" y="766.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.02%)</title><rect x="1189.7" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.7" y="750.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="1189.7" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.7" y="734.0"></text>
</g>
<g>
<title>ieee80211_tasklet_handler?[mac80211] (1 samples, 0.02%)</title><rect x="1189.7" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.7" y="718.0"></text>
</g>
<g>
<title>ieee80211_rx_napi?[mac80211] (1 samples, 0.02%)</title><rect x="1189.7" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.7" y="702.0"></text>
</g>
<g>
<title>ieee80211_prepare_and_rx_handle?[mac80211] (1 samples, 0.02%)</title><rect x="1189.7" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.7" y="686.0"></text>
</g>
<g>
<title>ieee80211_invoke_rx_handlers?[mac80211] (1 samples, 0.02%)</title><rect x="1189.7" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.7" y="670.0"></text>
</g>
<g>
<title>ieee80211_get_mmie_keyidx?[mac80211] (1 samples, 0.02%)</title><rect x="1189.7" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1192.7" y="654.0"></text>
</g>
</g>
</svg>
